ARM GAS  /tmp/ccxkMiox.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_rtc_ex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_RTCEx_SetTimeStamp,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_RTCEx_SetTimeStamp
  23              		.thumb
  24              		.thumb_func
  26              	HAL_RTCEx_SetTimeStamp:
  27              	.LFB123:
  28              		.file 1 "../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c"
   1:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
   2:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ******************************************************************************
   3:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @file    stm32f3xx_hal_rtc_ex.c
   4:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief   Extended RTC HAL module driver.
   6:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This file provides firmware functions to manage the following 
   7:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          functionalities of the Real Time Clock (RTC) Extended peripheral:
   8:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + RTC Time Stamp functions
   9:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + RTC Tamper functions 
  10:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + RTC Wake-up functions
  11:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + Extended Control functions
  12:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *           + Extended RTC features functions    
  13:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
  14:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   @verbatim
  15:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ==============================================================================
  16:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                   ##### How to use this driver #####
  17:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ==============================================================================
  18:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..] 
  19:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) Enable the RTC domain access.
  20:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour 
  21:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         format using the HAL_RTC_Init() function.
  22:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
  23:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *** RTC Wakeup configuration ***
  24:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ================================
  25:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..] 
  26:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To configure the RTC Wakeup Clock source and Counter use the HAL_RTCEx_SetWakeUpTimer()
  27:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function. You can also configure the RTC Wakeup timer with interrupt mode 
  28:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         using the HAL_RTCEx_SetWakeUpTimer_IT() function.
  29:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To read the RTC WakeUp Counter register, use the HAL_RTCEx_GetWakeUpTimer()
  30:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function.
ARM GAS  /tmp/ccxkMiox.s 			page 2


  31:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
  32:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *** TimeStamp configuration ***
  33:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ===============================
  34:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..]
  35:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         (+) Configure the RTC_AF trigger and enable the RTC TimeStamp using the 
  36:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTimeStamp() function. You can also configure the RTC TimeStamp with
  37:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         interrupt mode using the HAL_RTCEx_SetTimeStamp_IT() function.
  38:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To read the RTC TimeStamp Time and Date register, use the HAL_RTCEx_GetTimeStamp()
  39:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function.
  40:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) The TIMESTAMP alternate function is mapped to RTC_AF1 (PC13U).
  41:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
  42:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *** Tamper configuration ***
  43:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ============================
  44:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..]
  45:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         (+) Enable the RTC Tamper and configure the Tamper filter count, trigger Edge 
  46:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         or Level according to the Tamper filter (if equal to 0 Edge else Level) 
  47:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         value, sampling frequency, precharge or discharge and Pull-UP using the 
  48:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         HAL_RTCEx_SetTamper() function. You can configure RTC Tamper with interrupt
  49:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         mode using HAL_RTCEx_SetTamper_IT() function.
  50:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) The TAMPER1 alternate function is mapped to RTC_AF1 (PC13U).
  51:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  52:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *** Backup Data Registers configuration ***
  53:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ===========================================
  54:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   [..]
  55:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  56:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function.  
  57:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  58:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         function.
  59:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****      
  60:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    @endverbatim
  61:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ******************************************************************************
  62:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @attention
  63:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
  64:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  65:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
  66:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  67:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * are permitted provided that the following conditions are met:
  68:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  69:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer.
  70:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  71:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  72:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      and/or other materials provided with the distribution.
  73:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  74:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      may be used to endorse or promote products derived from this software
  75:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *      without specific prior written permission.
  76:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
  77:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  78:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  79:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  80:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  81:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  82:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  83:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  84:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  85:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  86:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  87:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
ARM GAS  /tmp/ccxkMiox.s 			page 3


  88:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   ******************************************************************************  
  89:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */ 
  90:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  91:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Includes ------------------------------------------------------------------*/
  92:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #include "stm32f3xx_hal.h"
  93:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  94:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup STM32F3xx_HAL_Driver
  95:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
  96:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
  97:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  98:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
  99:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx
 101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief RTC Extended HAL module driver
 102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
 103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #ifdef HAL_RTC_MODULE_ENABLED
 106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private typedef -----------------------------------------------------------*/
 108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private define ------------------------------------------------------------*/
 109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private macro -------------------------------------------------------------*/
 110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private variables ---------------------------------------------------------*/
 111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /* Exported functions ---------------------------------------------------------*/
 113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions
 115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
 116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group1
 120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  *  @brief   RTC TimeStamp and Tamper functions
 121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  *
 122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @verbatim   
 123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================
 124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                  ##### RTC TimeStamp and Tamper functions #####
 125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================  
 126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  
 127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure TimeStamp feature
 128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @endverbatim
 130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
 131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp.
 135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature. 
 136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is
 138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         activated.
 139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin specifies the RTC TimeStamp Pin.
ARM GAS  /tmp/ccxkMiox.s 			page 4


 145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32_t 
 150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
  29              		.loc 1 150 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 F860     		str	r0, [r7, #12]
  45 0008 B960     		str	r1, [r7, #8]
  46 000a 7A60     		str	r2, [r7, #4]
 151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
  47              		.loc 1 151 0
  48 000c 0023     		movs	r3, #0
  49 000e 7B61     		str	r3, [r7, #20]
 152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
  50              		.loc 1 158 0
  51 0010 FB68     		ldr	r3, [r7, #12]
  52 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
  53 0014 012B     		cmp	r3, #1
  54 0016 01D1     		bne	.L2
  55              		.loc 1 158 0 is_stmt 0 discriminator 1
  56 0018 0223     		movs	r3, #2
  57 001a 30E0     		b	.L3
  58              	.L2:
  59              		.loc 1 158 0 discriminator 2
  60 001c FB68     		ldr	r3, [r7, #12]
  61 001e 0122     		movs	r2, #1
  62 0020 1A77     		strb	r2, [r3, #28]
 159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
  63              		.loc 1 160 0 is_stmt 1 discriminator 2
  64 0022 FB68     		ldr	r3, [r7, #12]
  65 0024 0222     		movs	r2, #2
  66 0026 5A77     		strb	r2, [r3, #29]
 161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
ARM GAS  /tmp/ccxkMiox.s 			page 5


  67              		.loc 1 163 0 discriminator 2
  68 0028 FB68     		ldr	r3, [r7, #12]
  69 002a 1B68     		ldr	r3, [r3]
  70 002c 9B68     		ldr	r3, [r3, #8]
  71 002e 23F40063 		bic	r3, r3, #2048
  72 0032 23F00803 		bic	r3, r3, #8
  73 0036 7B61     		str	r3, [r7, #20]
 164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg|= TimeStampEdge;
  74              		.loc 1 165 0 discriminator 2
  75 0038 7A69     		ldr	r2, [r7, #20]
  76 003a BB68     		ldr	r3, [r7, #8]
  77 003c 1343     		orrs	r3, r3, r2
  78 003e 7B61     		str	r3, [r7, #20]
 166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  79              		.loc 1 168 0 discriminator 2
  80 0040 FB68     		ldr	r3, [r7, #12]
  81 0042 1B68     		ldr	r3, [r3]
  82 0044 CA22     		movs	r2, #202
  83 0046 5A62     		str	r2, [r3, #36]
  84 0048 FB68     		ldr	r3, [r7, #12]
  85 004a 1B68     		ldr	r3, [r3]
  86 004c 5322     		movs	r2, #83
  87 004e 5A62     		str	r2, [r3, #36]
 169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
  88              		.loc 1 171 0 discriminator 2
  89 0050 FB68     		ldr	r3, [r7, #12]
  90 0052 1B68     		ldr	r3, [r3]
  91 0054 7A69     		ldr	r2, [r7, #20]
  92 0056 9A60     		str	r2, [r3, #8]
 172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
  93              		.loc 1 173 0 discriminator 2
  94 0058 FB68     		ldr	r3, [r7, #12]
  95 005a 1B68     		ldr	r3, [r3]
  96 005c FA68     		ldr	r2, [r7, #12]
  97 005e 1268     		ldr	r2, [r2]
  98 0060 9268     		ldr	r2, [r2, #8]
  99 0062 42F40062 		orr	r2, r2, #2048
 100 0066 9A60     		str	r2, [r3, #8]
 174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 101              		.loc 1 176 0 discriminator 2
 102 0068 FB68     		ldr	r3, [r7, #12]
 103 006a 1B68     		ldr	r3, [r3]
 104 006c FF22     		movs	r2, #255
 105 006e 5A62     		str	r2, [r3, #36]
 177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 106              		.loc 1 179 0 discriminator 2
 107 0070 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccxkMiox.s 			page 6


 108 0072 0122     		movs	r2, #1
 109 0074 5A77     		strb	r2, [r3, #29]
 180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 110              		.loc 1 182 0 discriminator 2
 111 0076 FB68     		ldr	r3, [r7, #12]
 112 0078 0022     		movs	r2, #0
 113 007a 1A77     		strb	r2, [r3, #28]
 183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 114              		.loc 1 184 0 discriminator 2
 115 007c 0023     		movs	r3, #0
 116              	.L3:
 185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 117              		.loc 1 185 0
 118 007e 1846     		mov	r0, r3
 119 0080 1C37     		adds	r7, r7, #28
 120              	.LCFI3:
 121              		.cfi_def_cfa_offset 4
 122 0082 BD46     		mov	sp, r7
 123              	.LCFI4:
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 0084 5DF8047B 		ldr	r7, [sp], #4
 127              	.LCFI5:
 128              		.cfi_restore 7
 129              		.cfi_def_cfa_offset 0
 130 0088 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE123:
 134 008a 00BF     		.section	.text.HAL_RTCEx_SetTimeStamp_IT,"ax",%progbits
 135              		.align	2
 136              		.global	HAL_RTCEx_SetTimeStamp_IT
 137              		.thumb
 138              		.thumb_func
 140              	HAL_RTCEx_SetTimeStamp_IT:
 141              	.LFB124:
 186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set TimeStamp with Interrupt.
 189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   This API must be called before enabling the TimeStamp feature.
 191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  TimeStampEdge Specifies the pin edge on which the TimeStamp is 
 192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         activated.
 193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_RISING: the Time stamp event occurs on the  
 195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                        rising edge of the related pin.
 196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPEDGE_FALLING: the Time stamp event occurs on the 
 197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                         falling edge of the related pin.
 198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  RTC_TimeStampPin Specifies the RTC TimeStamp Pin.
 199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_TIMESTAMPPIN_DEFAULT: PC13 is selected as RTC TimeStamp Pin.
 201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTimeStamp_IT(RTC_HandleTypeDef *hrtc, uint32_t TimeStampEdge, uint32
 204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
ARM GAS  /tmp/ccxkMiox.s 			page 7


 142              		.loc 1 204 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 24
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147 0000 80B4     		push	{r7}
 148              	.LCFI6:
 149              		.cfi_def_cfa_offset 4
 150              		.cfi_offset 7, -4
 151 0002 87B0     		sub	sp, sp, #28
 152              	.LCFI7:
 153              		.cfi_def_cfa_offset 32
 154 0004 00AF     		add	r7, sp, #0
 155              	.LCFI8:
 156              		.cfi_def_cfa_register 7
 157 0006 F860     		str	r0, [r7, #12]
 158 0008 B960     		str	r1, [r7, #8]
 159 000a 7A60     		str	r2, [r7, #4]
 205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 160              		.loc 1 205 0
 161 000c 0023     		movs	r3, #0
 162 000e 7B61     		str	r3, [r7, #20]
 206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_TIMESTAMP_EDGE(TimeStampEdge));
 209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TIMESTAMP_PIN(RTC_TimeStampPin));
 210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */ 
 212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 163              		.loc 1 212 0
 164 0010 FB68     		ldr	r3, [r7, #12]
 165 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 166 0014 012B     		cmp	r3, #1
 167 0016 01D1     		bne	.L5
 168              		.loc 1 212 0 is_stmt 0 discriminator 1
 169 0018 0223     		movs	r3, #2
 170 001a 44E0     		b	.L6
 171              	.L5:
 172              		.loc 1 212 0 discriminator 2
 173 001c FB68     		ldr	r3, [r7, #12]
 174 001e 0122     		movs	r2, #1
 175 0020 1A77     		strb	r2, [r3, #28]
 213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 176              		.loc 1 214 0 is_stmt 1 discriminator 2
 177 0022 FB68     		ldr	r3, [r7, #12]
 178 0024 0222     		movs	r2, #2
 179 0026 5A77     		strb	r2, [r3, #29]
 215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 180              		.loc 1 217 0 discriminator 2
 181 0028 FB68     		ldr	r3, [r7, #12]
 182 002a 1B68     		ldr	r3, [r3]
 183 002c 9B68     		ldr	r3, [r3, #8]
 184 002e 23F40063 		bic	r3, r3, #2048
 185 0032 23F00803 		bic	r3, r3, #8
ARM GAS  /tmp/ccxkMiox.s 			page 8


 186 0036 7B61     		str	r3, [r7, #20]
 218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg |= TimeStampEdge;
 187              		.loc 1 219 0 discriminator 2
 188 0038 7A69     		ldr	r2, [r7, #20]
 189 003a BB68     		ldr	r3, [r7, #8]
 190 003c 1343     		orrs	r3, r3, r2
 191 003e 7B61     		str	r3, [r7, #20]
 220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 192              		.loc 1 222 0 discriminator 2
 193 0040 FB68     		ldr	r3, [r7, #12]
 194 0042 1B68     		ldr	r3, [r3]
 195 0044 CA22     		movs	r2, #202
 196 0046 5A62     		str	r2, [r3, #36]
 197 0048 FB68     		ldr	r3, [r7, #12]
 198 004a 1B68     		ldr	r3, [r3]
 199 004c 5322     		movs	r2, #83
 200 004e 5A62     		str	r2, [r3, #36]
 223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 201              		.loc 1 225 0 discriminator 2
 202 0050 FB68     		ldr	r3, [r7, #12]
 203 0052 1B68     		ldr	r3, [r3]
 204 0054 7A69     		ldr	r2, [r7, #20]
 205 0056 9A60     		str	r2, [r3, #8]
 226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE(hrtc);
 206              		.loc 1 227 0 discriminator 2
 207 0058 FB68     		ldr	r3, [r7, #12]
 208 005a 1B68     		ldr	r3, [r3]
 209 005c FA68     		ldr	r2, [r7, #12]
 210 005e 1268     		ldr	r2, [r2]
 211 0060 9268     		ldr	r2, [r2, #8]
 212 0062 42F40062 		orr	r2, r2, #2048
 213 0066 9A60     		str	r2, [r3, #8]
 228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable IT timestamp */
 230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_ENABLE_IT(hrtc,RTC_IT_TS);
 214              		.loc 1 230 0 discriminator 2
 215 0068 FB68     		ldr	r3, [r7, #12]
 216 006a 1B68     		ldr	r3, [r3]
 217 006c FA68     		ldr	r2, [r7, #12]
 218 006e 1268     		ldr	r2, [r2]
 219 0070 9268     		ldr	r2, [r2, #8]
 220 0072 42F40042 		orr	r2, r2, #32768
 221 0076 9A60     		str	r2, [r3, #8]
 231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* RTC timestamp Interrupt Configuration: EXTI configuration */
 233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 222              		.loc 1 233 0 discriminator 2
 223 0078 0E4A     		ldr	r2, .L7
 224 007a 0E4B     		ldr	r3, .L7
 225 007c 1B68     		ldr	r3, [r3]
 226 007e 43F40023 		orr	r3, r3, #524288
ARM GAS  /tmp/ccxkMiox.s 			page 9


 227 0082 1360     		str	r3, [r2]
 234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 228              		.loc 1 235 0 discriminator 2
 229 0084 0B4A     		ldr	r2, .L7
 230 0086 0B4B     		ldr	r3, .L7
 231 0088 9B68     		ldr	r3, [r3, #8]
 232 008a 43F40023 		orr	r3, r3, #524288
 233 008e 9360     		str	r3, [r2, #8]
 236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 234              		.loc 1 238 0 discriminator 2
 235 0090 FB68     		ldr	r3, [r7, #12]
 236 0092 1B68     		ldr	r3, [r3]
 237 0094 FF22     		movs	r2, #255
 238 0096 5A62     		str	r2, [r3, #36]
 239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 239              		.loc 1 240 0 discriminator 2
 240 0098 FB68     		ldr	r3, [r7, #12]
 241 009a 0122     		movs	r2, #1
 242 009c 5A77     		strb	r2, [r3, #29]
 241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 243              		.loc 1 243 0 discriminator 2
 244 009e FB68     		ldr	r3, [r7, #12]
 245 00a0 0022     		movs	r2, #0
 246 00a2 1A77     		strb	r2, [r3, #28]
 244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 247              		.loc 1 245 0 discriminator 2
 248 00a4 0023     		movs	r3, #0
 249              	.L6:
 246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 250              		.loc 1 246 0
 251 00a6 1846     		mov	r0, r3
 252 00a8 1C37     		adds	r7, r7, #28
 253              	.LCFI9:
 254              		.cfi_def_cfa_offset 4
 255 00aa BD46     		mov	sp, r7
 256              	.LCFI10:
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 00ac 5DF8047B 		ldr	r7, [sp], #4
 260              	.LCFI11:
 261              		.cfi_restore 7
 262              		.cfi_def_cfa_offset 0
 263 00b0 7047     		bx	lr
 264              	.L8:
 265 00b2 00BF     		.align	2
 266              	.L7:
 267 00b4 00040140 		.word	1073808384
 268              		.cfi_endproc
 269              	.LFE124:
 271              		.section	.text.HAL_RTCEx_DeactivateTimeStamp,"ax",%progbits
ARM GAS  /tmp/ccxkMiox.s 			page 10


 272              		.align	2
 273              		.global	HAL_RTCEx_DeactivateTimeStamp
 274              		.thumb
 275              		.thumb_func
 277              	HAL_RTCEx_DeactivateTimeStamp:
 278              	.LFB125:
 247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Deactivate TimeStamp.
 250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTimeStamp(RTC_HandleTypeDef *hrtc)
 254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 279              		.loc 1 254 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 16
 282              		@ frame_needed = 1, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284 0000 80B4     		push	{r7}
 285              	.LCFI12:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 7, -4
 288 0002 85B0     		sub	sp, sp, #20
 289              	.LCFI13:
 290              		.cfi_def_cfa_offset 24
 291 0004 00AF     		add	r7, sp, #0
 292              	.LCFI14:
 293              		.cfi_def_cfa_register 7
 294 0006 7860     		str	r0, [r7, #4]
 255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 295              		.loc 1 255 0
 296 0008 0023     		movs	r3, #0
 297 000a FB60     		str	r3, [r7, #12]
 256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 298              		.loc 1 258 0
 299 000c 7B68     		ldr	r3, [r7, #4]
 300 000e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 301 0010 012B     		cmp	r3, #1
 302 0012 01D1     		bne	.L10
 303              		.loc 1 258 0 is_stmt 0 discriminator 1
 304 0014 0223     		movs	r3, #2
 305 0016 2CE0     		b	.L11
 306              	.L10:
 307              		.loc 1 258 0 discriminator 2
 308 0018 7B68     		ldr	r3, [r7, #4]
 309 001a 0122     		movs	r2, #1
 310 001c 1A77     		strb	r2, [r3, #28]
 259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 311              		.loc 1 260 0 is_stmt 1 discriminator 2
 312 001e 7B68     		ldr	r3, [r7, #4]
 313 0020 0222     		movs	r2, #2
 314 0022 5A77     		strb	r2, [r3, #29]
 261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccxkMiox.s 			page 11


 262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 315              		.loc 1 263 0 discriminator 2
 316 0024 7B68     		ldr	r3, [r7, #4]
 317 0026 1B68     		ldr	r3, [r3]
 318 0028 CA22     		movs	r2, #202
 319 002a 5A62     		str	r2, [r3, #36]
 320 002c 7B68     		ldr	r3, [r7, #4]
 321 002e 1B68     		ldr	r3, [r3]
 322 0030 5322     		movs	r2, #83
 323 0032 5A62     		str	r2, [r3, #36]
 264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_DISABLE_IT(hrtc, RTC_IT_TS);
 324              		.loc 1 266 0 discriminator 2
 325 0034 7B68     		ldr	r3, [r7, #4]
 326 0036 1B68     		ldr	r3, [r3]
 327 0038 7A68     		ldr	r2, [r7, #4]
 328 003a 1268     		ldr	r2, [r2]
 329 003c 9268     		ldr	r2, [r2, #8]
 330 003e 22F40042 		bic	r2, r2, #32768
 331 0042 9A60     		str	r2, [r3, #8]
 267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the RTC_CR register and clear the bits to be configured */
 269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = (uint32_t)(hrtc->Instance->CR & (uint32_t)~(RTC_CR_TSEDGE | RTC_CR_TSE));
 332              		.loc 1 269 0 discriminator 2
 333 0044 7B68     		ldr	r3, [r7, #4]
 334 0046 1B68     		ldr	r3, [r3]
 335 0048 9B68     		ldr	r3, [r3, #8]
 336 004a 23F40063 		bic	r3, r3, #2048
 337 004e 23F00803 		bic	r3, r3, #8
 338 0052 FB60     		str	r3, [r7, #12]
 270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Time Stamp TSEDGE and Enable bits */
 272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR = (uint32_t)tmpreg;
 339              		.loc 1 272 0 discriminator 2
 340 0054 7B68     		ldr	r3, [r7, #4]
 341 0056 1B68     		ldr	r3, [r3]
 342 0058 FA68     		ldr	r2, [r7, #12]
 343 005a 9A60     		str	r2, [r3, #8]
 273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 344              		.loc 1 275 0 discriminator 2
 345 005c 7B68     		ldr	r3, [r7, #4]
 346 005e 1B68     		ldr	r3, [r3]
 347 0060 FF22     		movs	r2, #255
 348 0062 5A62     		str	r2, [r3, #36]
 276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 349              		.loc 1 277 0 discriminator 2
 350 0064 7B68     		ldr	r3, [r7, #4]
 351 0066 0122     		movs	r2, #1
 352 0068 5A77     		strb	r2, [r3, #29]
 278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/ccxkMiox.s 			page 12


 353              		.loc 1 280 0 discriminator 2
 354 006a 7B68     		ldr	r3, [r7, #4]
 355 006c 0022     		movs	r2, #0
 356 006e 1A77     		strb	r2, [r3, #28]
 281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 357              		.loc 1 282 0 discriminator 2
 358 0070 0023     		movs	r3, #0
 359              	.L11:
 283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 360              		.loc 1 283 0
 361 0072 1846     		mov	r0, r3
 362 0074 1437     		adds	r7, r7, #20
 363              	.LCFI15:
 364              		.cfi_def_cfa_offset 4
 365 0076 BD46     		mov	sp, r7
 366              	.LCFI16:
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0078 5DF8047B 		ldr	r7, [sp], #4
 370              	.LCFI17:
 371              		.cfi_restore 7
 372              		.cfi_def_cfa_offset 0
 373 007c 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE125:
 377 007e 00BF     		.section	.text.HAL_RTCEx_GetTimeStamp,"ax",%progbits
 378              		.align	2
 379              		.global	HAL_RTCEx_GetTimeStamp
 380              		.thumb
 381              		.thumb_func
 383              	HAL_RTCEx_GetTimeStamp:
 384              	.LFB126:
 284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Get the RTC TimeStamp value.
 287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  sTimeStamp Pointer to Time structure
 289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  sTimeStampDate Pointer to Date structure  
 290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Format specifies the format of the entered parameters.
 291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
 292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_GetTimeStamp(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef* sTimeStamp, RTC_
 297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 385              		.loc 1 297 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 24
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 80B5     		push	{r7, lr}
 390              	.LCFI18:
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccxkMiox.s 			page 13


 395              	.LCFI19:
 396              		.cfi_def_cfa_offset 32
 397 0004 00AF     		add	r7, sp, #0
 398              	.LCFI20:
 399              		.cfi_def_cfa_register 7
 400 0006 F860     		str	r0, [r7, #12]
 401 0008 B960     		str	r1, [r7, #8]
 402 000a 7A60     		str	r2, [r7, #4]
 403 000c 3B60     		str	r3, [r7]
 298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmptime = 0U, tmpdate = 0U;
 404              		.loc 1 298 0
 405 000e 0023     		movs	r3, #0
 406 0010 7B61     		str	r3, [r7, #20]
 407 0012 0023     		movs	r3, #0
 408 0014 3B61     		str	r3, [r7, #16]
 299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_FORMAT(Format));
 302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the TimeStamp time and date registers values */
 304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmptime = (uint32_t)(hrtc->Instance->TSTR & RTC_TR_RESERVED_MASK);
 409              		.loc 1 304 0
 410 0016 FB68     		ldr	r3, [r7, #12]
 411 0018 1B68     		ldr	r3, [r3]
 412 001a 1B6B     		ldr	r3, [r3, #48]
 413 001c 03F07F33 		and	r3, r3, #2139062143
 414 0020 23F0FE43 		bic	r3, r3, #2130706432
 415 0024 7B61     		str	r3, [r7, #20]
 305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpdate = (uint32_t)(hrtc->Instance->TSDR & RTC_DR_RESERVED_MASK);
 416              		.loc 1 305 0
 417 0026 FB68     		ldr	r3, [r7, #12]
 418 0028 1B68     		ldr	r3, [r3]
 419 002a 5B6B     		ldr	r3, [r3, #52]
 420 002c 23F07F43 		bic	r3, r3, #-16777216
 421 0030 23F0C003 		bic	r3, r3, #192
 422 0034 3B61     		str	r3, [r7, #16]
 306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Fill the Time structure fields with the read parameters */
 308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->Hours = (uint8_t)((tmptime & (RTC_TR_HT | RTC_TR_HU)) >> 16U);
 423              		.loc 1 308 0
 424 0036 7B69     		ldr	r3, [r7, #20]
 425 0038 03F47C13 		and	r3, r3, #4128768
 426 003c 1B0C     		lsrs	r3, r3, #16
 427 003e DAB2     		uxtb	r2, r3
 428 0040 BB68     		ldr	r3, [r7, #8]
 429 0042 1A70     		strb	r2, [r3]
 309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->Minutes = (uint8_t)((tmptime & (RTC_TR_MNT | RTC_TR_MNU)) >> 8U);
 430              		.loc 1 309 0
 431 0044 7B69     		ldr	r3, [r7, #20]
 432 0046 03F4FE43 		and	r3, r3, #32512
 433 004a 1B0A     		lsrs	r3, r3, #8
 434 004c DAB2     		uxtb	r2, r3
 435 004e BB68     		ldr	r3, [r7, #8]
 436 0050 5A70     		strb	r2, [r3, #1]
 310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->Seconds = (uint8_t)(tmptime & (RTC_TR_ST | RTC_TR_SU));
 437              		.loc 1 310 0
 438 0052 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccxkMiox.s 			page 14


 439 0054 DBB2     		uxtb	r3, r3
 440 0056 03F07F03 		and	r3, r3, #127
 441 005a DAB2     		uxtb	r2, r3
 442 005c BB68     		ldr	r3, [r7, #8]
 443 005e 9A70     		strb	r2, [r3, #2]
 311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->TimeFormat = (uint8_t)((tmptime & (RTC_TR_PM)) >> 16U);
 444              		.loc 1 311 0
 445 0060 7B69     		ldr	r3, [r7, #20]
 446 0062 03F48003 		and	r3, r3, #4194304
 447 0066 1B0C     		lsrs	r3, r3, #16
 448 0068 DAB2     		uxtb	r2, r3
 449 006a BB68     		ldr	r3, [r7, #8]
 450 006c DA70     		strb	r2, [r3, #3]
 312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStamp->SubSeconds = (uint32_t) hrtc->Instance->TSSSR;
 451              		.loc 1 312 0
 452 006e FB68     		ldr	r3, [r7, #12]
 453 0070 1B68     		ldr	r3, [r3]
 454 0072 9A6B     		ldr	r2, [r3, #56]
 455 0074 BB68     		ldr	r3, [r7, #8]
 456 0076 5A60     		str	r2, [r3, #4]
 313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Fill the Date structure fields with the read parameters */
 315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStampDate->Year = 0U;
 457              		.loc 1 315 0
 458 0078 7B68     		ldr	r3, [r7, #4]
 459 007a 0022     		movs	r2, #0
 460 007c DA70     		strb	r2, [r3, #3]
 316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStampDate->Month = (uint8_t)((tmpdate & (RTC_DR_MT | RTC_DR_MU)) >> 8U);
 461              		.loc 1 316 0
 462 007e 3B69     		ldr	r3, [r7, #16]
 463 0080 03F4F853 		and	r3, r3, #7936
 464 0084 1B0A     		lsrs	r3, r3, #8
 465 0086 DAB2     		uxtb	r2, r3
 466 0088 7B68     		ldr	r3, [r7, #4]
 467 008a 5A70     		strb	r2, [r3, #1]
 317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStampDate->Date = (uint8_t)(tmpdate & (RTC_DR_DT | RTC_DR_DU));
 468              		.loc 1 317 0
 469 008c 3B69     		ldr	r3, [r7, #16]
 470 008e DBB2     		uxtb	r3, r3
 471 0090 03F03F03 		and	r3, r3, #63
 472 0094 DAB2     		uxtb	r2, r3
 473 0096 7B68     		ldr	r3, [r7, #4]
 474 0098 9A70     		strb	r2, [r3, #2]
 318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   sTimeStampDate->WeekDay = (uint8_t)((tmpdate & (RTC_DR_WDU)) >> 13U);
 475              		.loc 1 318 0
 476 009a 3B69     		ldr	r3, [r7, #16]
 477 009c 03F46043 		and	r3, r3, #57344
 478 00a0 5B0B     		lsrs	r3, r3, #13
 479 00a2 DAB2     		uxtb	r2, r3
 480 00a4 7B68     		ldr	r3, [r7, #4]
 481 00a6 1A70     		strb	r2, [r3]
 319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the input parameters format */
 321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(Format == RTC_FORMAT_BIN)
 482              		.loc 1 321 0
 483 00a8 3B68     		ldr	r3, [r7]
 484 00aa 002B     		cmp	r3, #0
ARM GAS  /tmp/ccxkMiox.s 			page 15


 485 00ac 35D1     		bne	.L13
 322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Convert the TimeStamp structure parameters to Binary format */
 324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStamp->Hours = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Hours);
 486              		.loc 1 324 0
 487 00ae BB68     		ldr	r3, [r7, #8]
 488 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489 00b2 1846     		mov	r0, r3
 490 00b4 FFF7FEFF 		bl	RTC_Bcd2ToByte
 491 00b8 0346     		mov	r3, r0
 492 00ba 1A46     		mov	r2, r3
 493 00bc BB68     		ldr	r3, [r7, #8]
 494 00be 1A70     		strb	r2, [r3]
 325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStamp->Minutes = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Minutes);
 495              		.loc 1 325 0
 496 00c0 BB68     		ldr	r3, [r7, #8]
 497 00c2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 498 00c4 1846     		mov	r0, r3
 499 00c6 FFF7FEFF 		bl	RTC_Bcd2ToByte
 500 00ca 0346     		mov	r3, r0
 501 00cc 1A46     		mov	r2, r3
 502 00ce BB68     		ldr	r3, [r7, #8]
 503 00d0 5A70     		strb	r2, [r3, #1]
 326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStamp->Seconds = (uint8_t)RTC_Bcd2ToByte(sTimeStamp->Seconds);
 504              		.loc 1 326 0
 505 00d2 BB68     		ldr	r3, [r7, #8]
 506 00d4 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 507 00d6 1846     		mov	r0, r3
 508 00d8 FFF7FEFF 		bl	RTC_Bcd2ToByte
 509 00dc 0346     		mov	r3, r0
 510 00de 1A46     		mov	r2, r3
 511 00e0 BB68     		ldr	r3, [r7, #8]
 512 00e2 9A70     		strb	r2, [r3, #2]
 327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Convert the DateTimeStamp structure parameters to Binary format */
 329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStampDate->Month = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Month);
 513              		.loc 1 329 0
 514 00e4 7B68     		ldr	r3, [r7, #4]
 515 00e6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 516 00e8 1846     		mov	r0, r3
 517 00ea FFF7FEFF 		bl	RTC_Bcd2ToByte
 518 00ee 0346     		mov	r3, r0
 519 00f0 1A46     		mov	r2, r3
 520 00f2 7B68     		ldr	r3, [r7, #4]
 521 00f4 5A70     		strb	r2, [r3, #1]
 330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStampDate->Date = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->Date);
 522              		.loc 1 330 0
 523 00f6 7B68     		ldr	r3, [r7, #4]
 524 00f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 525 00fa 1846     		mov	r0, r3
 526 00fc FFF7FEFF 		bl	RTC_Bcd2ToByte
 527 0100 0346     		mov	r3, r0
 528 0102 1A46     		mov	r2, r3
 529 0104 7B68     		ldr	r3, [r7, #4]
 530 0106 9A70     		strb	r2, [r3, #2]
 331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTimeStampDate->WeekDay = (uint8_t)RTC_Bcd2ToByte(sTimeStampDate->WeekDay);
 531              		.loc 1 331 0
ARM GAS  /tmp/ccxkMiox.s 			page 16


 532 0108 7B68     		ldr	r3, [r7, #4]
 533 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 534 010c 1846     		mov	r0, r3
 535 010e FFF7FEFF 		bl	RTC_Bcd2ToByte
 536 0112 0346     		mov	r3, r0
 537 0114 1A46     		mov	r2, r3
 538 0116 7B68     		ldr	r3, [r7, #4]
 539 0118 1A70     		strb	r2, [r3]
 540              	.L13:
 332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the TIMESTAMP Flag */
 335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSF);
 541              		.loc 1 335 0
 542 011a FB68     		ldr	r3, [r7, #12]
 543 011c 1B68     		ldr	r3, [r3]
 544 011e FA68     		ldr	r2, [r7, #12]
 545 0120 1268     		ldr	r2, [r2]
 546 0122 D268     		ldr	r2, [r2, #12]
 547 0124 D2B2     		uxtb	r2, r2
 548 0126 62F40862 		orn	r2, r2, #2176
 549 012a DA60     		str	r2, [r3, #12]
 336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 550              		.loc 1 337 0
 551 012c 0023     		movs	r3, #0
 338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 552              		.loc 1 338 0
 553 012e 1846     		mov	r0, r3
 554 0130 1837     		adds	r7, r7, #24
 555              	.LCFI21:
 556              		.cfi_def_cfa_offset 8
 557 0132 BD46     		mov	sp, r7
 558              	.LCFI22:
 559              		.cfi_def_cfa_register 13
 560              		@ sp needed
 561 0134 80BD     		pop	{r7, pc}
 562              		.cfi_endproc
 563              	.LFE126:
 565 0136 00BF     		.section	.text.HAL_RTCEx_SetTamper,"ax",%progbits
 566              		.align	2
 567              		.global	HAL_RTCEx_SetTamper
 568              		.thumb
 569              		.thumb_func
 571              	HAL_RTCEx_SetTamper:
 572              	.LFB127:
 339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set Tamper
 342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   By calling this API we disable the tamper interrupt for all tampers. 
 343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to Tamper Structure.
 345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 573              		.loc 1 348 0
ARM GAS  /tmp/ccxkMiox.s 			page 17


 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 16
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 0000 80B4     		push	{r7}
 579              	.LCFI23:
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 7, -4
 582 0002 85B0     		sub	sp, sp, #20
 583              	.LCFI24:
 584              		.cfi_def_cfa_offset 24
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI25:
 587              		.cfi_def_cfa_register 7
 588 0006 7860     		str	r0, [r7, #4]
 589 0008 3960     		str	r1, [r7]
 349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 590              		.loc 1 349 0
 591 000a 0023     		movs	r3, #0
 592 000c FB60     		str	r3, [r7, #12]
 350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper));
 353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 593              		.loc 1 361 0
 594 000e 7B68     		ldr	r3, [r7, #4]
 595 0010 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 596 0012 012B     		cmp	r3, #1
 597 0014 01D1     		bne	.L16
 598              		.loc 1 361 0 is_stmt 0 discriminator 1
 599 0016 0223     		movs	r3, #2
 600 0018 44E0     		b	.L17
 601              	.L16:
 602              		.loc 1 361 0 discriminator 2
 603 001a 7B68     		ldr	r3, [r7, #4]
 604 001c 0122     		movs	r2, #1
 605 001e 1A77     		strb	r2, [r3, #28]
 362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 606              		.loc 1 363 0 is_stmt 1 discriminator 2
 607 0020 7B68     		ldr	r3, [r7, #4]
 608 0022 0222     		movs	r2, #2
 609 0024 5A77     		strb	r2, [r3, #29]
 364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 610              		.loc 1 365 0 discriminator 2
 611 0026 3B68     		ldr	r3, [r7]
 612 0028 5B68     		ldr	r3, [r3, #4]
 613 002a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccxkMiox.s 			page 18


 614 002c 04D0     		beq	.L18
 366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t)(sTamper->Tamper << 1U);
 615              		.loc 1 367 0
 616 002e 3B68     		ldr	r3, [r7]
 617 0030 1B68     		ldr	r3, [r3]
 618 0032 5A00     		lsls	r2, r3, #1
 619 0034 3B68     		ldr	r3, [r7]
 620 0036 5A60     		str	r2, [r3, #4]
 621              	.L18:
 368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger | (uint32_t)sTamper->Filter |\
 622              		.loc 1 370 0
 623 0038 3B68     		ldr	r3, [r7]
 624 003a 1A68     		ldr	r2, [r3]
 625 003c 3B68     		ldr	r3, [r7]
 626 003e 5B68     		ldr	r3, [r3, #4]
 627 0040 1A43     		orrs	r2, r2, r3
 628 0042 3B68     		ldr	r3, [r7]
 629 0044 9B68     		ldr	r3, [r3, #8]
 630 0046 1A43     		orrs	r2, r2, r3
 371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 631              		.loc 1 371 0
 632 0048 3B68     		ldr	r3, [r7]
 633 004a DB68     		ldr	r3, [r3, #12]
 370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 634              		.loc 1 370 0
 635 004c 1A43     		orrs	r2, r2, r3
 636              		.loc 1 371 0
 637 004e 3B68     		ldr	r3, [r7]
 638 0050 1B69     		ldr	r3, [r3, #16]
 639 0052 1A43     		orrs	r2, r2, r3
 372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->TamperPullUp | sTamper->TimeStampOnTamperDetection);
 640              		.loc 1 372 0
 641 0054 3B68     		ldr	r3, [r7]
 642 0056 5B69     		ldr	r3, [r3, #20]
 371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 643              		.loc 1 371 0
 644 0058 1A43     		orrs	r2, r2, r3
 645              		.loc 1 372 0
 646 005a 3B68     		ldr	r3, [r7]
 647 005c 9B69     		ldr	r3, [r3, #24]
 370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 648              		.loc 1 370 0
 649 005e 1343     		orrs	r3, r3, r2
 650 0060 FB60     		str	r3, [r7, #12]
 373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1U
 651              		.loc 1 374 0
 652 0062 7B68     		ldr	r3, [r7, #4]
 653 0064 1A68     		ldr	r2, [r3]
 654 0066 7B68     		ldr	r3, [r7, #4]
 655 0068 1B68     		ldr	r3, [r3]
 656 006a 196C     		ldr	r1, [r3, #64]
 657 006c 3B68     		ldr	r3, [r7]
 658 006e 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccxkMiox.s 			page 19


 659 0070 3B68     		ldr	r3, [r7]
 660 0072 1B68     		ldr	r3, [r3]
 661 0074 5B00     		lsls	r3, r3, #1
 662 0076 0343     		orrs	r3, r3, r0
 375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPPUDIS | (uint32_t)RTC_TAFCR_TAMPIE);
 663              		.loc 1 376 0
 664 0078 43F47F43 		orr	r3, r3, #65280
 665 007c 43F08403 		orr	r3, r3, #132
 374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 666              		.loc 1 374 0
 667 0080 DB43     		mvns	r3, r3
 668 0082 0B40     		ands	r3, r3, r1
 669 0084 1364     		str	r3, [r2, #64]
 377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= tmpreg;
 670              		.loc 1 378 0
 671 0086 7B68     		ldr	r3, [r7, #4]
 672 0088 1B68     		ldr	r3, [r3]
 673 008a 7A68     		ldr	r2, [r7, #4]
 674 008c 1268     		ldr	r2, [r2]
 675 008e 116C     		ldr	r1, [r2, #64]
 676 0090 FA68     		ldr	r2, [r7, #12]
 677 0092 0A43     		orrs	r2, r2, r1
 678 0094 1A64     		str	r2, [r3, #64]
 379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 679              		.loc 1 380 0
 680 0096 7B68     		ldr	r3, [r7, #4]
 681 0098 0122     		movs	r2, #1
 682 009a 5A77     		strb	r2, [r3, #29]
 381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 683              		.loc 1 383 0
 684 009c 7B68     		ldr	r3, [r7, #4]
 685 009e 0022     		movs	r2, #0
 686 00a0 1A77     		strb	r2, [r3, #28]
 384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 687              		.loc 1 385 0
 688 00a2 0023     		movs	r3, #0
 689              	.L17:
 386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 690              		.loc 1 386 0
 691 00a4 1846     		mov	r0, r3
 692 00a6 1437     		adds	r7, r7, #20
 693              	.LCFI26:
 694              		.cfi_def_cfa_offset 4
 695 00a8 BD46     		mov	sp, r7
 696              	.LCFI27:
 697              		.cfi_def_cfa_register 13
 698              		@ sp needed
 699 00aa 5DF8047B 		ldr	r7, [sp], #4
 700              	.LCFI28:
 701              		.cfi_restore 7
 702              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccxkMiox.s 			page 20


 703 00ae 7047     		bx	lr
 704              		.cfi_endproc
 705              	.LFE127:
 707              		.section	.text.HAL_RTCEx_SetTamper_IT,"ax",%progbits
 708              		.align	2
 709              		.global	HAL_RTCEx_SetTamper_IT
 710              		.thumb
 711              		.thumb_func
 713              	HAL_RTCEx_SetTamper_IT:
 714              	.LFB128:
 387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set Tamper with interrupt.
 390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   By calling this API we force the tamper interrupt for all tampers.
 391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  sTamper Pointer to RTC Tamper.
 393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetTamper_IT(RTC_HandleTypeDef *hrtc, RTC_TamperTypeDef* sTamper)
 396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 715              		.loc 1 396 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 16
 718              		@ frame_needed = 1, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720 0000 80B4     		push	{r7}
 721              	.LCFI29:
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
 724 0002 85B0     		sub	sp, sp, #20
 725              	.LCFI30:
 726              		.cfi_def_cfa_offset 24
 727 0004 00AF     		add	r7, sp, #0
 728              	.LCFI31:
 729              		.cfi_def_cfa_register 7
 730 0006 7860     		str	r0, [r7, #4]
 731 0008 3960     		str	r1, [r7]
 397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmpreg = 0U;
 732              		.loc 1 397 0
 733 000a 0023     		movs	r3, #0
 734 000c FB60     		str	r3, [r7, #12]
 398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(sTamper->Tamper)); 
 401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TRIGGER(sTamper->Trigger));
 402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_FILTER(sTamper->Filter));
 403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_SAMPLING_FREQ(sTamper->SamplingFrequency));
 404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PRECHARGE_DURATION(sTamper->PrechargeDuration));
 405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_PULLUP_STATE(sTamper->TamperPullUp));
 406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER_TIMESTAMPONTAMPER_DETECTION(sTamper->TimeStampOnTamperDetection));
 407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 735              		.loc 1 409 0
 736 000e 7B68     		ldr	r3, [r7, #4]
 737 0010 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 738 0012 012B     		cmp	r3, #1
ARM GAS  /tmp/ccxkMiox.s 			page 21


 739 0014 01D1     		bne	.L20
 740              		.loc 1 409 0 is_stmt 0 discriminator 1
 741 0016 0223     		movs	r3, #2
 742 0018 58E0     		b	.L21
 743              	.L20:
 744              		.loc 1 409 0 discriminator 2
 745 001a 7B68     		ldr	r3, [r7, #4]
 746 001c 0122     		movs	r2, #1
 747 001e 1A77     		strb	r2, [r3, #28]
 410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 748              		.loc 1 411 0 is_stmt 1 discriminator 2
 749 0020 7B68     		ldr	r3, [r7, #4]
 750 0022 0222     		movs	r2, #2
 751 0024 5A77     		strb	r2, [r3, #29]
 412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the tamper trigger */
 414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(sTamper->Trigger != RTC_TAMPERTRIGGER_RISINGEDGE)
 752              		.loc 1 414 0 discriminator 2
 753 0026 3B68     		ldr	r3, [r7]
 754 0028 5B68     		ldr	r3, [r3, #4]
 755 002a 002B     		cmp	r3, #0
 756 002c 04D0     		beq	.L22
 415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     sTamper->Trigger = (uint32_t) (sTamper->Tamper<<1U);
 757              		.loc 1 416 0
 758 002e 3B68     		ldr	r3, [r7]
 759 0030 1B68     		ldr	r3, [r3]
 760 0032 5A00     		lsls	r2, r3, #1
 761 0034 3B68     		ldr	r3, [r7]
 762 0036 5A60     		str	r2, [r3, #4]
 763              	.L22:
 417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmpreg = ((uint32_t)sTamper->Tamper | (uint32_t)sTamper->Trigger | (uint32_t)sTamper->Filter |\
 764              		.loc 1 419 0
 765 0038 3B68     		ldr	r3, [r7]
 766 003a 1A68     		ldr	r2, [r3]
 767 003c 3B68     		ldr	r3, [r7]
 768 003e 5B68     		ldr	r3, [r3, #4]
 769 0040 1A43     		orrs	r2, r2, r3
 770 0042 3B68     		ldr	r3, [r7]
 771 0044 9B68     		ldr	r3, [r3, #8]
 772 0046 1A43     		orrs	r2, r2, r3
 420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 773              		.loc 1 420 0
 774 0048 3B68     		ldr	r3, [r7]
 775 004a DB68     		ldr	r3, [r3, #12]
 419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 776              		.loc 1 419 0
 777 004c 1A43     		orrs	r2, r2, r3
 778              		.loc 1 420 0
 779 004e 3B68     		ldr	r3, [r7]
 780 0050 1B69     		ldr	r3, [r3, #16]
 781 0052 1A43     		orrs	r2, r2, r3
 421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->TamperPullUp | sTamper->TimeStampOnTamperDetection);
 782              		.loc 1 421 0
ARM GAS  /tmp/ccxkMiox.s 			page 22


 783 0054 3B68     		ldr	r3, [r7]
 784 0056 5B69     		ldr	r3, [r3, #20]
 420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 785              		.loc 1 420 0
 786 0058 1A43     		orrs	r2, r2, r3
 787              		.loc 1 421 0
 788 005a 3B68     		ldr	r3, [r7]
 789 005c 9B69     		ldr	r3, [r3, #24]
 419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             (uint32_t)sTamper->SamplingFrequency | (uint32_t)sTamper->PrechargeDuration |\
 790              		.loc 1 419 0
 791 005e 1343     		orrs	r3, r3, r2
 792 0060 FB60     		str	r3, [r7, #12]
 422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~((uint32_t)sTamper->Tamper | (uint32_t)(sTamper->Tamper << 1U
 793              		.loc 1 423 0
 794 0062 7B68     		ldr	r3, [r7, #4]
 795 0064 1A68     		ldr	r2, [r3]
 796 0066 7B68     		ldr	r3, [r7, #4]
 797 0068 1B68     		ldr	r3, [r3]
 798 006a 196C     		ldr	r1, [r3, #64]
 799 006c 3B68     		ldr	r3, [r7]
 800 006e 1868     		ldr	r0, [r3]
 801 0070 3B68     		ldr	r3, [r7]
 802 0072 1B68     		ldr	r3, [r3]
 803 0074 5B00     		lsls	r3, r3, #1
 804 0076 0343     		orrs	r3, r3, r0
 424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 805              		.loc 1 424 0
 806 0078 43F47F43 		orr	r3, r3, #65280
 807 007c 43F08003 		orr	r3, r3, #128
 423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPFREQ | (uint32_t)RTC_TAFCR_TAMPFLT |
 808              		.loc 1 423 0
 809 0080 DB43     		mvns	r3, r3
 810 0082 0B40     		ands	r3, r3, r1
 811 0084 1364     		str	r3, [r2, #64]
 425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                                        (uint32_t)RTC_TAFCR_TAMPPUDIS);
 426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= tmpreg;
 812              		.loc 1 427 0
 813 0086 7B68     		ldr	r3, [r7, #4]
 814 0088 1B68     		ldr	r3, [r3]
 815 008a 7A68     		ldr	r2, [r7, #4]
 816 008c 1268     		ldr	r2, [r2]
 817 008e 116C     		ldr	r1, [r2, #64]
 818 0090 FA68     		ldr	r2, [r7, #12]
 819 0092 0A43     		orrs	r2, r2, r1
 820 0094 1A64     		str	r2, [r3, #64]
 428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Tamper Interrupt in the RTC_TAFCR */
 430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR |= (uint32_t)RTC_TAFCR_TAMPIE;
 821              		.loc 1 430 0
 822 0096 7B68     		ldr	r3, [r7, #4]
 823 0098 1B68     		ldr	r3, [r3]
 824 009a 7A68     		ldr	r2, [r7, #4]
 825 009c 1268     		ldr	r2, [r2]
 826 009e 126C     		ldr	r2, [r2, #64]
 827 00a0 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccxkMiox.s 			page 23


 828 00a4 1A64     		str	r2, [r3, #64]
 431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* RTC Tamper Interrupt Configuration: EXTI configuration */
 433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_IT();
 829              		.loc 1 433 0
 830 00a6 0C4A     		ldr	r2, .L23
 831 00a8 0B4B     		ldr	r3, .L23
 832 00aa 1B68     		ldr	r3, [r3]
 833 00ac 43F40023 		orr	r3, r3, #524288
 834 00b0 1360     		str	r3, [r2]
 434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_ENABLE_RISING_EDGE();
 835              		.loc 1 435 0
 836 00b2 094A     		ldr	r2, .L23
 837 00b4 084B     		ldr	r3, .L23
 838 00b6 9B68     		ldr	r3, [r3, #8]
 839 00b8 43F40023 		orr	r3, r3, #524288
 840 00bc 9360     		str	r3, [r2, #8]
 436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 841              		.loc 1 437 0
 842 00be 7B68     		ldr	r3, [r7, #4]
 843 00c0 0122     		movs	r2, #1
 844 00c2 5A77     		strb	r2, [r3, #29]
 438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 845              		.loc 1 440 0
 846 00c4 7B68     		ldr	r3, [r7, #4]
 847 00c6 0022     		movs	r2, #0
 848 00c8 1A77     		strb	r2, [r3, #28]
 441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 849              		.loc 1 442 0
 850 00ca 0023     		movs	r3, #0
 851              	.L21:
 443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 852              		.loc 1 443 0
 853 00cc 1846     		mov	r0, r3
 854 00ce 1437     		adds	r7, r7, #20
 855              	.LCFI32:
 856              		.cfi_def_cfa_offset 4
 857 00d0 BD46     		mov	sp, r7
 858              	.LCFI33:
 859              		.cfi_def_cfa_register 13
 860              		@ sp needed
 861 00d2 5DF8047B 		ldr	r7, [sp], #4
 862              	.LCFI34:
 863              		.cfi_restore 7
 864              		.cfi_def_cfa_offset 0
 865 00d6 7047     		bx	lr
 866              	.L24:
 867              		.align	2
 868              	.L23:
 869 00d8 00040140 		.word	1073808384
 870              		.cfi_endproc
 871              	.LFE128:
ARM GAS  /tmp/ccxkMiox.s 			page 24


 873              		.section	.text.HAL_RTCEx_DeactivateTamper,"ax",%progbits
 874              		.align	2
 875              		.global	HAL_RTCEx_DeactivateTamper
 876              		.thumb
 877              		.thumb_func
 879              	HAL_RTCEx_DeactivateTamper:
 880              	.LFB129:
 444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Deactivate Tamper.
 447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Tamper Selected tamper pin.
 449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be any combination of RTC_TAMPER_1, RTC_TAMPER_2 and RTC_TAMPER_3 (
 450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   (*) RTC_TAMPER_3 not present on all the devices
 451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateTamper(RTC_HandleTypeDef *hrtc, uint32_t Tamper)
 454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 881              		.loc 1 454 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 8
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886 0000 80B4     		push	{r7}
 887              	.LCFI35:
 888              		.cfi_def_cfa_offset 4
 889              		.cfi_offset 7, -4
 890 0002 83B0     		sub	sp, sp, #12
 891              	.LCFI36:
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              	.LCFI37:
 895              		.cfi_def_cfa_register 7
 896 0006 7860     		str	r0, [r7, #4]
 897 0008 3960     		str	r1, [r7]
 455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_TAMPER(Tamper));
 456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 898              		.loc 1 458 0
 899 000a 7B68     		ldr	r3, [r7, #4]
 900 000c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 901 000e 012B     		cmp	r3, #1
 902 0010 01D1     		bne	.L26
 903              		.loc 1 458 0 is_stmt 0 discriminator 1
 904 0012 0223     		movs	r3, #2
 905 0014 15E0     		b	.L27
 906              	.L26:
 907              		.loc 1 458 0 discriminator 2
 908 0016 7B68     		ldr	r3, [r7, #4]
 909 0018 0122     		movs	r2, #1
 910 001a 1A77     		strb	r2, [r3, #28]
 459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 911              		.loc 1 460 0 is_stmt 1 discriminator 2
 912 001c 7B68     		ldr	r3, [r7, #4]
 913 001e 0222     		movs	r2, #2
ARM GAS  /tmp/ccxkMiox.s 			page 25


 914 0020 5A77     		strb	r2, [r3, #29]
 461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the selected Tamper pin */
 463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->TAFCR &= (uint32_t)~Tamper;
 915              		.loc 1 463 0 discriminator 2
 916 0022 7B68     		ldr	r3, [r7, #4]
 917 0024 1B68     		ldr	r3, [r3]
 918 0026 7A68     		ldr	r2, [r7, #4]
 919 0028 1268     		ldr	r2, [r2]
 920 002a 116C     		ldr	r1, [r2, #64]
 921 002c 3A68     		ldr	r2, [r7]
 922 002e D243     		mvns	r2, r2
 923 0030 0A40     		ands	r2, r2, r1
 924 0032 1A64     		str	r2, [r3, #64]
 464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 925              		.loc 1 465 0 discriminator 2
 926 0034 7B68     		ldr	r3, [r7, #4]
 927 0036 0122     		movs	r2, #1
 928 0038 5A77     		strb	r2, [r3, #29]
 466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 929              		.loc 1 468 0 discriminator 2
 930 003a 7B68     		ldr	r3, [r7, #4]
 931 003c 0022     		movs	r2, #0
 932 003e 1A77     		strb	r2, [r3, #28]
 469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 933              		.loc 1 470 0 discriminator 2
 934 0040 0023     		movs	r3, #0
 935              	.L27:
 471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 936              		.loc 1 471 0
 937 0042 1846     		mov	r0, r3
 938 0044 0C37     		adds	r7, r7, #12
 939              	.LCFI38:
 940              		.cfi_def_cfa_offset 4
 941 0046 BD46     		mov	sp, r7
 942              	.LCFI39:
 943              		.cfi_def_cfa_register 13
 944              		@ sp needed
 945 0048 5DF8047B 		ldr	r7, [sp], #4
 946              	.LCFI40:
 947              		.cfi_restore 7
 948              		.cfi_def_cfa_offset 0
 949 004c 7047     		bx	lr
 950              		.cfi_endproc
 951              	.LFE129:
 953 004e 00BF     		.section	.text.HAL_RTCEx_TamperTimeStampIRQHandler,"ax",%progbits
 954              		.align	2
 955              		.global	HAL_RTCEx_TamperTimeStampIRQHandler
 956              		.thumb
 957              		.thumb_func
 959              	HAL_RTCEx_TamperTimeStampIRQHandler:
 960              	.LFB130:
 472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccxkMiox.s 			page 26


 473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp interrupt request.
 475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** void HAL_RTCEx_TamperTimeStampIRQHandler(RTC_HandleTypeDef *hrtc)
 479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 961              		.loc 1 479 0
 962              		.cfi_startproc
 963              		@ args = 0, pretend = 0, frame = 8
 964              		@ frame_needed = 1, uses_anonymous_args = 0
 965 0000 80B5     		push	{r7, lr}
 966              	.LCFI41:
 967              		.cfi_def_cfa_offset 8
 968              		.cfi_offset 7, -8
 969              		.cfi_offset 14, -4
 970 0002 82B0     		sub	sp, sp, #8
 971              	.LCFI42:
 972              		.cfi_def_cfa_offset 16
 973 0004 00AF     		add	r7, sp, #0
 974              	.LCFI43:
 975              		.cfi_def_cfa_register 7
 976 0006 7860     		str	r0, [r7, #4]
 480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the TimeStamp interrupt source enable status */
 481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_TIMESTAMP_GET_IT_SOURCE(hrtc, RTC_IT_TS) != RESET)
 977              		.loc 1 481 0
 978 0008 7B68     		ldr	r3, [r7, #4]
 979 000a 1B68     		ldr	r3, [r3]
 980 000c 9B68     		ldr	r3, [r3, #8]
 981 000e 03F40043 		and	r3, r3, #32768
 982 0012 002B     		cmp	r3, #0
 983 0014 12D0     		beq	.L29
 482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Get the pending status of the TIMESTAMP Interrupt */
 484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) != RESET)
 984              		.loc 1 484 0
 985 0016 7B68     		ldr	r3, [r7, #4]
 986 0018 1B68     		ldr	r3, [r3]
 987 001a DB68     		ldr	r3, [r3, #12]
 988 001c 03F40063 		and	r3, r3, #2048
 989 0020 002B     		cmp	r3, #0
 990 0022 0BD0     		beq	.L29
 485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* TIMESTAMP callback */ 
 487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       HAL_RTCEx_TimeStampEventCallback(hrtc);
 991              		.loc 1 487 0
 992 0024 7868     		ldr	r0, [r7, #4]
 993 0026 FFF7FEFF 		bl	HAL_RTCEx_TimeStampEventCallback
 488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP interrupt pending bit */
 490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc,RTC_FLAG_TSF);
 994              		.loc 1 490 0
 995 002a 7B68     		ldr	r3, [r7, #4]
 996 002c 1B68     		ldr	r3, [r3]
 997 002e 7A68     		ldr	r2, [r7, #4]
 998 0030 1268     		ldr	r2, [r2]
 999 0032 D268     		ldr	r2, [r2, #12]
ARM GAS  /tmp/ccxkMiox.s 			page 27


 1000 0034 D2B2     		uxtb	r2, r2
 1001 0036 62F40862 		orn	r2, r2, #2176
 1002 003a DA60     		str	r2, [r3, #12]
 1003              	.L29:
 491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 1004              		.loc 1 495 0
 1005 003c 7B68     		ldr	r3, [r7, #4]
 1006 003e 1B68     		ldr	r3, [r3]
 1007 0040 1B6C     		ldr	r3, [r3, #64]
 1008 0042 03F00403 		and	r3, r3, #4
 1009 0046 002B     		cmp	r3, #0
 1010 0048 12D0     		beq	.L30
 496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper1 Interrupt */
 498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP1F) != RESET)
 1011              		.loc 1 498 0
 1012 004a 7B68     		ldr	r3, [r7, #4]
 1013 004c 1B68     		ldr	r3, [r3]
 1014 004e DB68     		ldr	r3, [r3, #12]
 1015 0050 03F40053 		and	r3, r3, #8192
 1016 0054 002B     		cmp	r3, #0
 1017 0056 0BD0     		beq	.L30
 499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Tamper1 callback */ 
 501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper1EventCallback(hrtc);
 1018              		.loc 1 501 0
 1019 0058 7868     		ldr	r0, [r7, #4]
 1020 005a FFF7FEFF 		bl	HAL_RTCEx_Tamper1EventCallback
 502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the Tamper1 interrupt pending bit */
 504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 1021              		.loc 1 504 0
 1022 005e 7B68     		ldr	r3, [r7, #4]
 1023 0060 1B68     		ldr	r3, [r3]
 1024 0062 7A68     		ldr	r2, [r7, #4]
 1025 0064 1268     		ldr	r2, [r2]
 1026 0066 D268     		ldr	r2, [r2, #12]
 1027 0068 D2B2     		uxtb	r2, r2
 1028 006a 62F40252 		orn	r2, r2, #8320
 1029 006e DA60     		str	r2, [r3, #12]
 1030              	.L30:
 505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 1031              		.loc 1 509 0
 1032 0070 7B68     		ldr	r3, [r7, #4]
 1033 0072 1B68     		ldr	r3, [r3]
 1034 0074 1B6C     		ldr	r3, [r3, #64]
 1035 0076 03F00403 		and	r3, r3, #4
 1036 007a 002B     		cmp	r3, #0
 1037 007c 12D0     		beq	.L31
ARM GAS  /tmp/ccxkMiox.s 			page 28


 510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper2 Interrupt */
 512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP2F) != RESET)
 1038              		.loc 1 512 0
 1039 007e 7B68     		ldr	r3, [r7, #4]
 1040 0080 1B68     		ldr	r3, [r3]
 1041 0082 DB68     		ldr	r3, [r3, #12]
 1042 0084 03F48043 		and	r3, r3, #16384
 1043 0088 002B     		cmp	r3, #0
 1044 008a 0BD0     		beq	.L31
 513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Tamper2 callback */ 
 515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper2EventCallback(hrtc);
 1045              		.loc 1 515 0
 1046 008c 7868     		ldr	r0, [r7, #4]
 1047 008e FFF7FEFF 		bl	HAL_RTCEx_Tamper2EventCallback
 516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the Tamper2 interrupt pending bit */
 518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP2F);
 1048              		.loc 1 518 0
 1049 0092 7B68     		ldr	r3, [r7, #4]
 1050 0094 1B68     		ldr	r3, [r3]
 1051 0096 7A68     		ldr	r2, [r7, #4]
 1052 0098 1268     		ldr	r2, [r2]
 1053 009a D268     		ldr	r2, [r2, #12]
 1054 009c D2B2     		uxtb	r2, r2
 1055 009e 62F48142 		orn	r2, r2, #16512
 1056 00a2 DA60     		str	r2, [r3, #12]
 1057              	.L31:
 519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
 523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the Tamper interrupts source enable status */
 524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_TAMPER_GET_IT_SOURCE(hrtc, RTC_IT_TAMP))
 525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Get the pending status of the Tamper3 Interrupt */
 527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TAMPER_GET_FLAG(hrtc, RTC_FLAG_TAMP3F) != RESET)
 528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Tamper3 callback */
 530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       HAL_RTCEx_Tamper3EventCallback(hrtc);
 531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the Tamper3 interrupt pending bit */
 533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc, RTC_FLAG_TAMP3F);
 534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
 537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the EXTI's Flag for RTC TimeStamp and Tamper */
 539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_TIMESTAMP_EXTI_CLEAR_FLAG();
 1058              		.loc 1 539 0
 1059 00a4 044B     		ldr	r3, .L32
 1060 00a6 4FF40022 		mov	r2, #524288
 1061 00aa 5A61     		str	r2, [r3, #20]
 540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
ARM GAS  /tmp/ccxkMiox.s 			page 29


 1062              		.loc 1 542 0
 1063 00ac 7B68     		ldr	r3, [r7, #4]
 1064 00ae 0122     		movs	r2, #1
 1065 00b0 5A77     		strb	r2, [r3, #29]
 543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1066              		.loc 1 543 0
 1067 00b2 0837     		adds	r7, r7, #8
 1068              	.LCFI44:
 1069              		.cfi_def_cfa_offset 8
 1070 00b4 BD46     		mov	sp, r7
 1071              	.LCFI45:
 1072              		.cfi_def_cfa_register 13
 1073              		@ sp needed
 1074 00b6 80BD     		pop	{r7, pc}
 1075              	.L33:
 1076              		.align	2
 1077              	.L32:
 1078 00b8 00040140 		.word	1073808384
 1079              		.cfi_endproc
 1080              	.LFE130:
 1082              		.section	.text.HAL_RTCEx_TimeStampEventCallback,"ax",%progbits
 1083              		.align	2
 1084              		.weak	HAL_RTCEx_TimeStampEventCallback
 1085              		.thumb
 1086              		.thumb_func
 1088              	HAL_RTCEx_TimeStampEventCallback:
 1089              	.LFB131:
 544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  TimeStamp callback. 
 547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_TimeStampEventCallback(RTC_HandleTypeDef *hrtc)
 551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1090              		.loc 1 551 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 8
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
 1095 0000 80B4     		push	{r7}
 1096              	.LCFI46:
 1097              		.cfi_def_cfa_offset 4
 1098              		.cfi_offset 7, -4
 1099 0002 83B0     		sub	sp, sp, #12
 1100              	.LCFI47:
 1101              		.cfi_def_cfa_offset 16
 1102 0004 00AF     		add	r7, sp, #0
 1103              	.LCFI48:
 1104              		.cfi_def_cfa_register 7
 1105 0006 7860     		str	r0, [r7, #4]
 552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_TimeStampEventCallback could be implemented in the user file
 557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
ARM GAS  /tmp/ccxkMiox.s 			page 30


 558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1106              		.loc 1 558 0
 1107 0008 0C37     		adds	r7, r7, #12
 1108              	.LCFI49:
 1109              		.cfi_def_cfa_offset 4
 1110 000a BD46     		mov	sp, r7
 1111              	.LCFI50:
 1112              		.cfi_def_cfa_register 13
 1113              		@ sp needed
 1114 000c 5DF8047B 		ldr	r7, [sp], #4
 1115              	.LCFI51:
 1116              		.cfi_restore 7
 1117              		.cfi_def_cfa_offset 0
 1118 0010 7047     		bx	lr
 1119              		.cfi_endproc
 1120              	.LFE131:
 1122 0012 00BF     		.section	.text.HAL_RTCEx_Tamper1EventCallback,"ax",%progbits
 1123              		.align	2
 1124              		.weak	HAL_RTCEx_Tamper1EventCallback
 1125              		.thumb
 1126              		.thumb_func
 1128              	HAL_RTCEx_Tamper1EventCallback:
 1129              	.LFB132:
 559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Tamper 1 callback. 
 562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper1EventCallback(RTC_HandleTypeDef *hrtc)
 566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1130              		.loc 1 566 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 8
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134              		@ link register save eliminated.
 1135 0000 80B4     		push	{r7}
 1136              	.LCFI52:
 1137              		.cfi_def_cfa_offset 4
 1138              		.cfi_offset 7, -4
 1139 0002 83B0     		sub	sp, sp, #12
 1140              	.LCFI53:
 1141              		.cfi_def_cfa_offset 16
 1142 0004 00AF     		add	r7, sp, #0
 1143              	.LCFI54:
 1144              		.cfi_def_cfa_register 7
 1145 0006 7860     		str	r0, [r7, #4]
 567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper1EventCallback could be implemented in the user file
 572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
 573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1146              		.loc 1 573 0
 1147 0008 0C37     		adds	r7, r7, #12
 1148              	.LCFI55:
ARM GAS  /tmp/ccxkMiox.s 			page 31


 1149              		.cfi_def_cfa_offset 4
 1150 000a BD46     		mov	sp, r7
 1151              	.LCFI56:
 1152              		.cfi_def_cfa_register 13
 1153              		@ sp needed
 1154 000c 5DF8047B 		ldr	r7, [sp], #4
 1155              	.LCFI57:
 1156              		.cfi_restore 7
 1157              		.cfi_def_cfa_offset 0
 1158 0010 7047     		bx	lr
 1159              		.cfi_endproc
 1160              	.LFE132:
 1162 0012 00BF     		.section	.text.HAL_RTCEx_Tamper2EventCallback,"ax",%progbits
 1163              		.align	2
 1164              		.weak	HAL_RTCEx_Tamper2EventCallback
 1165              		.thumb
 1166              		.thumb_func
 1168              	HAL_RTCEx_Tamper2EventCallback:
 1169              	.LFB133:
 574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Tamper 2 callback. 
 577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper2EventCallback(RTC_HandleTypeDef *hrtc)
 581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1170              		.loc 1 581 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 8
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 1175 0000 80B4     		push	{r7}
 1176              	.LCFI58:
 1177              		.cfi_def_cfa_offset 4
 1178              		.cfi_offset 7, -4
 1179 0002 83B0     		sub	sp, sp, #12
 1180              	.LCFI59:
 1181              		.cfi_def_cfa_offset 16
 1182 0004 00AF     		add	r7, sp, #0
 1183              	.LCFI60:
 1184              		.cfi_def_cfa_register 7
 1185 0006 7860     		str	r0, [r7, #4]
 582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper2EventCallback could be implemented in the user file
 587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
 588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1186              		.loc 1 588 0
 1187 0008 0C37     		adds	r7, r7, #12
 1188              	.LCFI61:
 1189              		.cfi_def_cfa_offset 4
 1190 000a BD46     		mov	sp, r7
 1191              	.LCFI62:
 1192              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccxkMiox.s 			page 32


 1193              		@ sp needed
 1194 000c 5DF8047B 		ldr	r7, [sp], #4
 1195              	.LCFI63:
 1196              		.cfi_restore 7
 1197              		.cfi_def_cfa_offset 0
 1198 0010 7047     		bx	lr
 1199              		.cfi_endproc
 1200              	.LFE133:
 1202 0012 00BF     		.section	.text.HAL_RTCEx_PollForTimeStampEvent,"ax",%progbits
 1203              		.align	2
 1204              		.global	HAL_RTCEx_PollForTimeStampEvent
 1205              		.thumb
 1206              		.thumb_func
 1208              	HAL_RTCEx_PollForTimeStampEvent:
 1209              	.LFB134:
 589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
 591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Tamper 3 callback. 
 593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
 595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_Tamper3EventCallback(RTC_HandleTypeDef *hrtc)
 597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
 600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_Tamper3EventCallback could be implemented in the user file
 603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
 604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
 606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle TimeStamp polling request.
 609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTimeStampEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1210              		.loc 1 614 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 16
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214 0000 80B5     		push	{r7, lr}
 1215              	.LCFI64:
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 84B0     		sub	sp, sp, #16
 1220              	.LCFI65:
 1221              		.cfi_def_cfa_offset 24
 1222 0004 00AF     		add	r7, sp, #0
 1223              	.LCFI66:
 1224              		.cfi_def_cfa_register 7
 1225 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccxkMiox.s 			page 33


 1226 0008 3960     		str	r1, [r7]
 615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1227              		.loc 1 615 0
 1228 000a FFF7FEFF 		bl	HAL_GetTick
 1229 000e F860     		str	r0, [r7, #12]
 616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSF) == RESET)
 1230              		.loc 1 617 0
 1231 0010 28E0     		b	.L38
 1232              	.L42:
 618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(__HAL_RTC_TIMESTAMP_GET_FLAG(hrtc, RTC_FLAG_TSOVF) != RESET)
 1233              		.loc 1 619 0
 1234 0012 7B68     		ldr	r3, [r7, #4]
 1235 0014 1B68     		ldr	r3, [r3]
 1236 0016 DB68     		ldr	r3, [r3, #12]
 1237 0018 03F48053 		and	r3, r3, #4096
 1238 001c 002B     		cmp	r3, #0
 1239 001e 0DD0     		beq	.L39
 620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Clear the TIMESTAMP OverRun Flag */
 622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_TIMESTAMP_CLEAR_FLAG(hrtc, RTC_FLAG_TSOVF);
 1240              		.loc 1 622 0
 1241 0020 7B68     		ldr	r3, [r7, #4]
 1242 0022 1B68     		ldr	r3, [r3]
 1243 0024 7A68     		ldr	r2, [r7, #4]
 1244 0026 1268     		ldr	r2, [r2]
 1245 0028 D268     		ldr	r2, [r2, #12]
 1246 002a D2B2     		uxtb	r2, r2
 1247 002c 62F48452 		orn	r2, r2, #4224
 1248 0030 DA60     		str	r2, [r3, #12]
 623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Change TIMESTAMP state */
 625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 1249              		.loc 1 625 0
 1250 0032 7B68     		ldr	r3, [r7, #4]
 1251 0034 0422     		movs	r2, #4
 1252 0036 5A77     		strb	r2, [r3, #29]
 626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_ERROR;
 1253              		.loc 1 627 0
 1254 0038 0123     		movs	r3, #1
 1255 003a 1EE0     		b	.L40
 1256              	.L39:
 628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1257              		.loc 1 630 0
 1258 003c 3B68     		ldr	r3, [r7]
 1259 003e B3F1FF3F 		cmp	r3, #-1
 1260 0042 0FD0     		beq	.L38
 631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1261              		.loc 1 632 0
 1262 0044 3B68     		ldr	r3, [r7]
 1263 0046 002B     		cmp	r3, #0
 1264 0048 07D0     		beq	.L41
ARM GAS  /tmp/ccxkMiox.s 			page 34


 1265              		.loc 1 632 0 is_stmt 0 discriminator 1
 1266 004a FFF7FEFF 		bl	HAL_GetTick
 1267 004e 0246     		mov	r2, r0
 1268 0050 FB68     		ldr	r3, [r7, #12]
 1269 0052 D21A     		subs	r2, r2, r3
 1270 0054 3B68     		ldr	r3, [r7]
 1271 0056 9A42     		cmp	r2, r3
 1272 0058 04D9     		bls	.L38
 1273              	.L41:
 633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1274              		.loc 1 634 0 is_stmt 1
 1275 005a 7B68     		ldr	r3, [r7, #4]
 1276 005c 0322     		movs	r2, #3
 1277 005e 5A77     		strb	r2, [r3, #29]
 635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1278              		.loc 1 635 0
 1279 0060 0323     		movs	r3, #3
 1280 0062 0AE0     		b	.L40
 1281              	.L38:
 617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1282              		.loc 1 617 0
 1283 0064 7B68     		ldr	r3, [r7, #4]
 1284 0066 1B68     		ldr	r3, [r3]
 1285 0068 DB68     		ldr	r3, [r3, #12]
 1286 006a 03F40063 		and	r3, r3, #2048
 1287 006e 002B     		cmp	r3, #0
 1288 0070 CFD0     		beq	.L42
 636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1289              		.loc 1 641 0
 1290 0072 7B68     		ldr	r3, [r7, #4]
 1291 0074 0122     		movs	r2, #1
 1292 0076 5A77     		strb	r2, [r3, #29]
 642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1293              		.loc 1 643 0
 1294 0078 0023     		movs	r3, #0
 1295              	.L40:
 644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1296              		.loc 1 644 0
 1297 007a 1846     		mov	r0, r3
 1298 007c 1037     		adds	r7, r7, #16
 1299              	.LCFI67:
 1300              		.cfi_def_cfa_offset 8
 1301 007e BD46     		mov	sp, r7
 1302              	.LCFI68:
 1303              		.cfi_def_cfa_register 13
 1304              		@ sp needed
 1305 0080 80BD     		pop	{r7, pc}
 1306              		.cfi_endproc
 1307              	.LFE134:
 1309 0082 00BF     		.section	.text.HAL_RTCEx_PollForTamper1Event,"ax",%progbits
ARM GAS  /tmp/ccxkMiox.s 			page 35


 1310              		.align	2
 1311              		.global	HAL_RTCEx_PollForTamper1Event
 1312              		.thumb
 1313              		.thumb_func
 1315              	HAL_RTCEx_PollForTamper1Event:
 1316              	.LFB135:
 645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 1 Polling.
 648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper1Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 1317              		.loc 1 653 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 16
 1320              		@ frame_needed = 1, uses_anonymous_args = 0
 1321 0000 80B5     		push	{r7, lr}
 1322              	.LCFI69:
 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 7, -8
 1325              		.cfi_offset 14, -4
 1326 0002 84B0     		sub	sp, sp, #16
 1327              	.LCFI70:
 1328              		.cfi_def_cfa_offset 24
 1329 0004 00AF     		add	r7, sp, #0
 1330              	.LCFI71:
 1331              		.cfi_def_cfa_register 7
 1332 0006 7860     		str	r0, [r7, #4]
 1333 0008 3960     		str	r1, [r7]
 654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1334              		.loc 1 654 0
 1335 000a FFF7FEFF 		bl	HAL_GetTick
 1336 000e F860     		str	r0, [r7, #12]
 655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP1F)== RESET)
 1337              		.loc 1 657 0
 1338 0010 13E0     		b	.L44
 1339              	.L47:
 658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1340              		.loc 1 659 0
 1341 0012 3B68     		ldr	r3, [r7]
 1342 0014 B3F1FF3F 		cmp	r3, #-1
 1343 0018 0FD0     		beq	.L44
 660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1344              		.loc 1 661 0
 1345 001a 3B68     		ldr	r3, [r7]
 1346 001c 002B     		cmp	r3, #0
 1347 001e 07D0     		beq	.L45
 1348              		.loc 1 661 0 is_stmt 0 discriminator 1
 1349 0020 FFF7FEFF 		bl	HAL_GetTick
 1350 0024 0246     		mov	r2, r0
ARM GAS  /tmp/ccxkMiox.s 			page 36


 1351 0026 FB68     		ldr	r3, [r7, #12]
 1352 0028 D21A     		subs	r2, r2, r3
 1353 002a 3B68     		ldr	r3, [r7]
 1354 002c 9A42     		cmp	r2, r3
 1355 002e 04D9     		bls	.L44
 1356              	.L45:
 662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1357              		.loc 1 663 0 is_stmt 1
 1358 0030 7B68     		ldr	r3, [r7, #4]
 1359 0032 0322     		movs	r2, #3
 1360 0034 5A77     		strb	r2, [r3, #29]
 664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1361              		.loc 1 664 0
 1362 0036 0323     		movs	r3, #3
 1363 0038 13E0     		b	.L46
 1364              	.L44:
 657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1365              		.loc 1 657 0
 1366 003a 7B68     		ldr	r3, [r7, #4]
 1367 003c 1B68     		ldr	r3, [r3]
 1368 003e DB68     		ldr	r3, [r3, #12]
 1369 0040 03F40053 		and	r3, r3, #8192
 1370 0044 002B     		cmp	r3, #0
 1371 0046 E4D0     		beq	.L47
 665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP1F);
 1372              		.loc 1 670 0
 1373 0048 7B68     		ldr	r3, [r7, #4]
 1374 004a 1B68     		ldr	r3, [r3]
 1375 004c 7A68     		ldr	r2, [r7, #4]
 1376 004e 1268     		ldr	r2, [r2]
 1377 0050 D268     		ldr	r2, [r2, #12]
 1378 0052 D2B2     		uxtb	r2, r2
 1379 0054 62F40252 		orn	r2, r2, #8320
 1380 0058 DA60     		str	r2, [r3, #12]
 671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1381              		.loc 1 673 0
 1382 005a 7B68     		ldr	r3, [r7, #4]
 1383 005c 0122     		movs	r2, #1
 1384 005e 5A77     		strb	r2, [r3, #29]
 674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1385              		.loc 1 675 0
 1386 0060 0023     		movs	r3, #0
 1387              	.L46:
 676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1388              		.loc 1 676 0
 1389 0062 1846     		mov	r0, r3
 1390 0064 1037     		adds	r7, r7, #16
 1391              	.LCFI72:
ARM GAS  /tmp/ccxkMiox.s 			page 37


 1392              		.cfi_def_cfa_offset 8
 1393 0066 BD46     		mov	sp, r7
 1394              	.LCFI73:
 1395              		.cfi_def_cfa_register 13
 1396              		@ sp needed
 1397 0068 80BD     		pop	{r7, pc}
 1398              		.cfi_endproc
 1399              	.LFE135:
 1401              		.section	.text.HAL_RTCEx_PollForTamper2Event,"ax",%progbits
 1402              		.align	2
 1403              		.global	HAL_RTCEx_PollForTamper2Event
 1404              		.thumb
 1405              		.thumb_func
 1407              	HAL_RTCEx_PollForTamper2Event:
 1408              	.LFB136:
 677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 2 Polling.
 680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper2Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 1409              		.loc 1 685 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 16
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413 0000 80B5     		push	{r7, lr}
 1414              	.LCFI74:
 1415              		.cfi_def_cfa_offset 8
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 84B0     		sub	sp, sp, #16
 1419              	.LCFI75:
 1420              		.cfi_def_cfa_offset 24
 1421 0004 00AF     		add	r7, sp, #0
 1422              	.LCFI76:
 1423              		.cfi_def_cfa_register 7
 1424 0006 7860     		str	r0, [r7, #4]
 1425 0008 3960     		str	r1, [r7]
 686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 1426              		.loc 1 686 0
 1427 000a FFF7FEFF 		bl	HAL_GetTick
 1428 000e F860     		str	r0, [r7, #12]
 687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP2F) == RESET)
 1429              		.loc 1 689 0
 1430 0010 13E0     		b	.L49
 1431              	.L52:
 690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1432              		.loc 1 691 0
 1433 0012 3B68     		ldr	r3, [r7]
 1434 0014 B3F1FF3F 		cmp	r3, #-1
 1435 0018 0FD0     		beq	.L49
ARM GAS  /tmp/ccxkMiox.s 			page 38


 692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1436              		.loc 1 693 0
 1437 001a 3B68     		ldr	r3, [r7]
 1438 001c 002B     		cmp	r3, #0
 1439 001e 07D0     		beq	.L50
 1440              		.loc 1 693 0 is_stmt 0 discriminator 1
 1441 0020 FFF7FEFF 		bl	HAL_GetTick
 1442 0024 0246     		mov	r2, r0
 1443 0026 FB68     		ldr	r3, [r7, #12]
 1444 0028 D21A     		subs	r2, r2, r3
 1445 002a 3B68     		ldr	r3, [r7]
 1446 002c 9A42     		cmp	r2, r3
 1447 002e 04D9     		bls	.L49
 1448              	.L50:
 694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1449              		.loc 1 695 0 is_stmt 1
 1450 0030 7B68     		ldr	r3, [r7, #4]
 1451 0032 0322     		movs	r2, #3
 1452 0034 5A77     		strb	r2, [r3, #29]
 696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 1453              		.loc 1 696 0
 1454 0036 0323     		movs	r3, #3
 1455 0038 13E0     		b	.L51
 1456              	.L49:
 689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1457              		.loc 1 689 0
 1458 003a 7B68     		ldr	r3, [r7, #4]
 1459 003c 1B68     		ldr	r3, [r3]
 1460 003e DB68     		ldr	r3, [r3, #12]
 1461 0040 03F48043 		and	r3, r3, #16384
 1462 0044 002B     		cmp	r3, #0
 1463 0046 E4D0     		beq	.L52
 697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP2F);
 1464              		.loc 1 702 0
 1465 0048 7B68     		ldr	r3, [r7, #4]
 1466 004a 1B68     		ldr	r3, [r3]
 1467 004c 7A68     		ldr	r2, [r7, #4]
 1468 004e 1268     		ldr	r2, [r2]
 1469 0050 D268     		ldr	r2, [r2, #12]
 1470 0052 D2B2     		uxtb	r2, r2
 1471 0054 62F48142 		orn	r2, r2, #16512
 1472 0058 DA60     		str	r2, [r3, #12]
 703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1473              		.loc 1 705 0
 1474 005a 7B68     		ldr	r3, [r7, #4]
 1475 005c 0122     		movs	r2, #1
 1476 005e 5A77     		strb	r2, [r3, #29]
 706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
ARM GAS  /tmp/ccxkMiox.s 			page 39


 707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1477              		.loc 1 707 0
 1478 0060 0023     		movs	r3, #0
 1479              	.L51:
 708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1480              		.loc 1 708 0
 1481 0062 1846     		mov	r0, r3
 1482 0064 1037     		adds	r7, r7, #16
 1483              	.LCFI77:
 1484              		.cfi_def_cfa_offset 8
 1485 0066 BD46     		mov	sp, r7
 1486              	.LCFI78:
 1487              		.cfi_def_cfa_register 13
 1488              		@ sp needed
 1489 0068 80BD     		pop	{r7, pc}
 1490              		.cfi_endproc
 1491              	.LFE136:
 1493              		.section	.text.HAL_RTCEx_SetWakeUpTimer,"ax",%progbits
 1494              		.align	2
 1495              		.global	HAL_RTCEx_SetWakeUpTimer
 1496              		.thumb
 1497              		.thumb_func
 1499              	HAL_RTCEx_SetWakeUpTimer:
 1500              	.LFB137:
 709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #if defined(RTC_TAMPER3_SUPPORT)
 711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle Tamper 3 Polling.
 713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
 715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForTamper3Event(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
 718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the status of the Interrupt */
 722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_TAMPER_GET_FLAG(hrtc,RTC_FLAG_TAMP3F) == RESET)
 723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Tamper Flag */
 735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_TAMPER_CLEAR_FLAG(hrtc,RTC_FLAG_TAMP3F);
 736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
 738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
ARM GAS  /tmp/ccxkMiox.s 			page 40


 742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** #endif /* RTC_TAMPER3_SUPPORT */
 743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @}
 746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
 748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group2
 749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief    RTC Wake-up functions
 750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
 751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @verbatim   
 752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================
 753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                         ##### RTC Wake-up functions #####
 754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================  
 755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  
 756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  [..] This section provides functions allowing to configure Wake-up feature
 757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @endverbatim
 759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
 760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set wake up timer.
 764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
 767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint32_
 770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1501              		.loc 1 770 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 24
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 80B5     		push	{r7, lr}
 1506              	.LCFI79:
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
 1510 0002 86B0     		sub	sp, sp, #24
 1511              	.LCFI80:
 1512              		.cfi_def_cfa_offset 32
 1513 0004 00AF     		add	r7, sp, #0
 1514              	.LCFI81:
 1515              		.cfi_def_cfa_register 7
 1516 0006 F860     		str	r0, [r7, #12]
 1517 0008 B960     		str	r1, [r7, #8]
 1518 000a 7A60     		str	r2, [r7, #4]
 771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 1519              		.loc 1 771 0
 1520 000c 0023     		movs	r3, #0
 1521 000e 7B61     		str	r3, [r7, #20]
 772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
ARM GAS  /tmp/ccxkMiox.s 			page 41


 778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1522              		.loc 1 778 0
 1523 0010 FB68     		ldr	r3, [r7, #12]
 1524 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1525 0014 012B     		cmp	r3, #1
 1526 0016 01D1     		bne	.L54
 1527              		.loc 1 778 0 is_stmt 0 discriminator 1
 1528 0018 0223     		movs	r3, #2
 1529 001a 81E0     		b	.L55
 1530              	.L54:
 1531              		.loc 1 778 0 discriminator 2
 1532 001c FB68     		ldr	r3, [r7, #12]
 1533 001e 0122     		movs	r2, #1
 1534 0020 1A77     		strb	r2, [r3, #28]
 779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1535              		.loc 1 780 0 is_stmt 1 discriminator 2
 1536 0022 FB68     		ldr	r3, [r7, #12]
 1537 0024 0222     		movs	r2, #2
 1538 0026 5A77     		strb	r2, [r3, #29]
 781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1539              		.loc 1 783 0 discriminator 2
 1540 0028 FB68     		ldr	r3, [r7, #12]
 1541 002a 1B68     		ldr	r3, [r3]
 1542 002c CA22     		movs	r2, #202
 1543 002e 5A62     		str	r2, [r3, #36]
 1544 0030 FB68     		ldr	r3, [r7, #12]
 1545 0032 1B68     		ldr	r3, [r3]
 1546 0034 5322     		movs	r2, #83
 1547 0036 5A62     		str	r2, [r3, #36]
 784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  
 785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET){
 1548              		.loc 1 786 0 discriminator 2
 1549 0038 FB68     		ldr	r3, [r7, #12]
 1550 003a 1B68     		ldr	r3, [r3]
 1551 003c 9B68     		ldr	r3, [r3, #8]
 1552 003e 03F48063 		and	r3, r3, #1024
 1553 0042 002B     		cmp	r3, #0
 1554 0044 1ED0     		beq	.L56
 787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 1555              		.loc 1 787 0
 1556 0046 FFF7FEFF 		bl	HAL_GetTick
 1557 004a 7861     		str	r0, [r7, #20]
 788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
 790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET)
 1558              		.loc 1 790 0
 1559 004c 13E0     		b	.L57
 1560              	.L58:
 791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    {
 792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 1561              		.loc 1 792 0
 1562 004e FFF7FEFF 		bl	HAL_GetTick
 1563 0052 0246     		mov	r2, r0
ARM GAS  /tmp/ccxkMiox.s 			page 42


 1564 0054 7B69     		ldr	r3, [r7, #20]
 1565 0056 D31A     		subs	r3, r2, r3
 1566 0058 B3F57A7F 		cmp	r3, #1000
 1567 005c 0BD9     		bls	.L57
 793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        /* Enable the write protection for RTC registers */
 795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1568              		.loc 1 795 0
 1569 005e FB68     		ldr	r3, [r7, #12]
 1570 0060 1B68     		ldr	r3, [r3]
 1571 0062 FF22     		movs	r2, #255
 1572 0064 5A62     		str	r2, [r3, #36]
 796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1573              		.loc 1 797 0
 1574 0066 FB68     		ldr	r3, [r7, #12]
 1575 0068 0322     		movs	r2, #3
 1576 006a 5A77     		strb	r2, [r3, #29]
 798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        /* Process Unlocked */ 
 800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        __HAL_UNLOCK(hrtc);
 1577              		.loc 1 800 0
 1578 006c FB68     		ldr	r3, [r7, #12]
 1579 006e 0022     		movs	r2, #0
 1580 0070 1A77     		strb	r2, [r3, #28]
 801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        return HAL_TIMEOUT;
 1581              		.loc 1 802 0
 1582 0072 0323     		movs	r3, #3
 1583 0074 54E0     		b	.L55
 1584              	.L57:
 790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    {
 1585              		.loc 1 790 0
 1586 0076 FB68     		ldr	r3, [r7, #12]
 1587 0078 1B68     		ldr	r3, [r3]
 1588 007a DB68     		ldr	r3, [r3, #12]
 1589 007c 03F00403 		and	r3, r3, #4
 1590 0080 002B     		cmp	r3, #0
 1591 0082 E4D1     		bne	.L58
 1592              	.L56:
 803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1593              		.loc 1 807 0
 1594 0084 FB68     		ldr	r3, [r7, #12]
 1595 0086 1B68     		ldr	r3, [r3]
 1596 0088 FA68     		ldr	r2, [r7, #12]
 1597 008a 1268     		ldr	r2, [r2]
 1598 008c 9268     		ldr	r2, [r2, #8]
 1599 008e 22F48062 		bic	r2, r2, #1024
 1600 0092 9A60     		str	r2, [r3, #8]
 808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****      
 809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1601              		.loc 1 809 0
 1602 0094 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccxkMiox.s 			page 43


 1603 0098 7861     		str	r0, [r7, #20]
 810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 1604              		.loc 1 812 0
 1605 009a 13E0     		b	.L59
 1606              	.L60:
 813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 1607              		.loc 1 814 0
 1608 009c FFF7FEFF 		bl	HAL_GetTick
 1609 00a0 0246     		mov	r2, r0
 1610 00a2 7B69     		ldr	r3, [r7, #20]
 1611 00a4 D31A     		subs	r3, r2, r3
 1612 00a6 B3F57A7F 		cmp	r3, #1000
 1613 00aa 0BD9     		bls	.L59
 815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1614              		.loc 1 817 0
 1615 00ac FB68     		ldr	r3, [r7, #12]
 1616 00ae 1B68     		ldr	r3, [r3]
 1617 00b0 FF22     		movs	r2, #255
 1618 00b2 5A62     		str	r2, [r3, #36]
 818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1619              		.loc 1 819 0
 1620 00b4 FB68     		ldr	r3, [r7, #12]
 1621 00b6 0322     		movs	r2, #3
 1622 00b8 5A77     		strb	r2, [r3, #29]
 820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Process Unlocked */
 822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 1623              		.loc 1 822 0
 1624 00ba FB68     		ldr	r3, [r7, #12]
 1625 00bc 0022     		movs	r2, #0
 1626 00be 1A77     		strb	r2, [r3, #28]
 823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 1627              		.loc 1 824 0
 1628 00c0 0323     		movs	r3, #3
 1629 00c2 2DE0     		b	.L55
 1630              	.L59:
 812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1631              		.loc 1 812 0
 1632 00c4 FB68     		ldr	r3, [r7, #12]
 1633 00c6 1B68     		ldr	r3, [r3]
 1634 00c8 DB68     		ldr	r3, [r3, #12]
 1635 00ca 03F00403 		and	r3, r3, #4
 1636 00ce 002B     		cmp	r3, #0
 1637 00d0 E4D0     		beq	.L60
 825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
 829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1638              		.loc 1 829 0
ARM GAS  /tmp/ccxkMiox.s 			page 44


 1639 00d2 FB68     		ldr	r3, [r7, #12]
 1640 00d4 1B68     		ldr	r3, [r3]
 1641 00d6 FA68     		ldr	r2, [r7, #12]
 1642 00d8 1268     		ldr	r2, [r2]
 1643 00da 9268     		ldr	r2, [r2, #8]
 1644 00dc 22F00702 		bic	r2, r2, #7
 1645 00e0 9A60     		str	r2, [r3, #8]
 830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the clock source */
 832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 1646              		.loc 1 832 0
 1647 00e2 FB68     		ldr	r3, [r7, #12]
 1648 00e4 1B68     		ldr	r3, [r3]
 1649 00e6 FA68     		ldr	r2, [r7, #12]
 1650 00e8 1268     		ldr	r2, [r2]
 1651 00ea 9168     		ldr	r1, [r2, #8]
 1652 00ec 7A68     		ldr	r2, [r7, #4]
 1653 00ee 0A43     		orrs	r2, r2, r1
 1654 00f0 9A60     		str	r2, [r3, #8]
 833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
 835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1655              		.loc 1 835 0
 1656 00f2 FB68     		ldr	r3, [r7, #12]
 1657 00f4 1B68     		ldr	r3, [r3]
 1658 00f6 BA68     		ldr	r2, [r7, #8]
 1659 00f8 5A61     		str	r2, [r3, #20]
 836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Enable the Wakeup Timer */
 838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1660              		.loc 1 838 0
 1661 00fa FB68     		ldr	r3, [r7, #12]
 1662 00fc 1B68     		ldr	r3, [r3]
 1663 00fe FA68     		ldr	r2, [r7, #12]
 1664 0100 1268     		ldr	r2, [r2]
 1665 0102 9268     		ldr	r2, [r2, #8]
 1666 0104 42F48062 		orr	r2, r2, #1024
 1667 0108 9A60     		str	r2, [r3, #8]
 839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1668              		.loc 1 841 0
 1669 010a FB68     		ldr	r3, [r7, #12]
 1670 010c 1B68     		ldr	r3, [r3]
 1671 010e FF22     		movs	r2, #255
 1672 0110 5A62     		str	r2, [r3, #36]
 842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1673              		.loc 1 843 0
 1674 0112 FB68     		ldr	r3, [r7, #12]
 1675 0114 0122     		movs	r2, #1
 1676 0116 5A77     		strb	r2, [r3, #29]
 844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1677              		.loc 1 846 0
 1678 0118 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccxkMiox.s 			page 45


 1679 011a 0022     		movs	r2, #0
 1680 011c 1A77     		strb	r2, [r3, #28]
 847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1681              		.loc 1 848 0
 1682 011e 0023     		movs	r3, #0
 1683              	.L55:
 849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 1684              		.loc 1 849 0
 1685 0120 1846     		mov	r0, r3
 1686 0122 1837     		adds	r7, r7, #24
 1687              	.LCFI82:
 1688              		.cfi_def_cfa_offset 8
 1689 0124 BD46     		mov	sp, r7
 1690              	.LCFI83:
 1691              		.cfi_def_cfa_register 13
 1692              		@ sp needed
 1693 0126 80BD     		pop	{r7, pc}
 1694              		.cfi_endproc
 1695              	.LFE137:
 1697              		.section	.text.HAL_RTCEx_SetWakeUpTimer_IT,"ax",%progbits
 1698              		.align	2
 1699              		.global	HAL_RTCEx_SetWakeUpTimer_IT
 1700              		.thumb
 1701              		.thumb_func
 1703              	HAL_RTCEx_SetWakeUpTimer_IT:
 1704              	.LFB138:
 850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set wake up timer with interrupt.
 853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
 854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  WakeUpCounter Wake up counter
 855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  WakeUpClock Wake up clock  
 856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetWakeUpTimer_IT(RTC_HandleTypeDef *hrtc, uint32_t WakeUpCounter, uint
 859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1705              		.loc 1 859 0
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 24
 1708              		@ frame_needed = 1, uses_anonymous_args = 0
 1709 0000 80B5     		push	{r7, lr}
 1710              	.LCFI84:
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 7, -8
 1713              		.cfi_offset 14, -4
 1714 0002 86B0     		sub	sp, sp, #24
 1715              	.LCFI85:
 1716              		.cfi_def_cfa_offset 32
 1717 0004 00AF     		add	r7, sp, #0
 1718              	.LCFI86:
 1719              		.cfi_def_cfa_register 7
 1720 0006 F860     		str	r0, [r7, #12]
 1721 0008 B960     		str	r1, [r7, #8]
 1722 000a 7A60     		str	r2, [r7, #4]
 860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 1723              		.loc 1 860 0
ARM GAS  /tmp/ccxkMiox.s 			page 46


 1724 000c 0023     		movs	r3, #0
 1725 000e 7B61     		str	r3, [r7, #20]
 861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
 863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_CLOCK(WakeUpClock));
 864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_WAKEUP_COUNTER(WakeUpCounter));
 865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1726              		.loc 1 867 0
 1727 0010 FB68     		ldr	r3, [r7, #12]
 1728 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1729 0014 012B     		cmp	r3, #1
 1730 0016 01D1     		bne	.L62
 1731              		.loc 1 867 0 is_stmt 0 discriminator 1
 1732 0018 0223     		movs	r3, #2
 1733 001a 9EE0     		b	.L63
 1734              	.L62:
 1735              		.loc 1 867 0 discriminator 2
 1736 001c FB68     		ldr	r3, [r7, #12]
 1737 001e 0122     		movs	r2, #1
 1738 0020 1A77     		strb	r2, [r3, #28]
 868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1739              		.loc 1 869 0 is_stmt 1 discriminator 2
 1740 0022 FB68     		ldr	r3, [r7, #12]
 1741 0024 0222     		movs	r2, #2
 1742 0026 5A77     		strb	r2, [r3, #29]
 870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1743              		.loc 1 872 0 discriminator 2
 1744 0028 FB68     		ldr	r3, [r7, #12]
 1745 002a 1B68     		ldr	r3, [r3]
 1746 002c CA22     		movs	r2, #202
 1747 002e 5A62     		str	r2, [r3, #36]
 1748 0030 FB68     		ldr	r3, [r7, #12]
 1749 0032 1B68     		ldr	r3, [r3]
 1750 0034 5322     		movs	r2, #83
 1751 0036 5A62     		str	r2, [r3, #36]
 873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /*Check RTC WUTWF flag is reset only when wake up timer enabled*/
 875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if((hrtc->Instance->CR & RTC_CR_WUTE) != RESET){
 1752              		.loc 1 875 0 discriminator 2
 1753 0038 FB68     		ldr	r3, [r7, #12]
 1754 003a 1B68     		ldr	r3, [r3]
 1755 003c 9B68     		ldr	r3, [r3, #8]
 1756 003e 03F48063 		and	r3, r3, #1024
 1757 0042 002B     		cmp	r3, #0
 1758 0044 1ED0     		beq	.L64
 876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 1759              		.loc 1 876 0
 1760 0046 FFF7FEFF 		bl	HAL_GetTick
 1761 004a 7861     		str	r0, [r7, #20]
 877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  
 878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Wait till RTC WUTWF flag is reset and if Time out is reached exit */
 879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == SET)
ARM GAS  /tmp/ccxkMiox.s 			page 47


 1762              		.loc 1 879 0
 1763 004c 13E0     		b	.L65
 1764              	.L66:
 880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    {
 881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick() - tickstart ) > RTC_TIMEOUT_VALUE)
 1765              		.loc 1 881 0
 1766 004e FFF7FEFF 		bl	HAL_GetTick
 1767 0052 0246     		mov	r2, r0
 1768 0054 7B69     		ldr	r3, [r7, #20]
 1769 0056 D31A     		subs	r3, r2, r3
 1770 0058 B3F57A7F 		cmp	r3, #1000
 1771 005c 0BD9     		bls	.L65
 882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
 883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        /* Enable the write protection for RTC registers */
 884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1772              		.loc 1 884 0
 1773 005e FB68     		ldr	r3, [r7, #12]
 1774 0060 1B68     		ldr	r3, [r3]
 1775 0062 FF22     		movs	r2, #255
 1776 0064 5A62     		str	r2, [r3, #36]
 885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1777              		.loc 1 886 0
 1778 0066 FB68     		ldr	r3, [r7, #12]
 1779 0068 0322     		movs	r2, #3
 1780 006a 5A77     		strb	r2, [r3, #29]
 887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        /* Process Unlocked */ 
 889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        __HAL_UNLOCK(hrtc);
 1781              		.loc 1 889 0
 1782 006c FB68     		ldr	r3, [r7, #12]
 1783 006e 0022     		movs	r2, #0
 1784 0070 1A77     		strb	r2, [r3, #28]
 890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****        return HAL_TIMEOUT;
 1785              		.loc 1 891 0
 1786 0072 0323     		movs	r3, #3
 1787 0074 71E0     		b	.L63
 1788              	.L65:
 879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    {
 1789              		.loc 1 879 0
 1790 0076 FB68     		ldr	r3, [r7, #12]
 1791 0078 1B68     		ldr	r3, [r3]
 1792 007a DB68     		ldr	r3, [r3, #12]
 1793 007c 03F00403 		and	r3, r3, #4
 1794 0080 002B     		cmp	r3, #0
 1795 0082 E4D1     		bne	.L66
 1796              	.L64:
 892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
 893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the Wake-Up timer */
 897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1797              		.loc 1 897 0
 1798 0084 FB68     		ldr	r3, [r7, #12]
 1799 0086 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccxkMiox.s 			page 48


 1800 0088 FA68     		ldr	r2, [r7, #12]
 1801 008a 1268     		ldr	r2, [r2]
 1802 008c 9268     		ldr	r2, [r2, #8]
 1803 008e 22F48062 		bic	r2, r2, #1024
 1804 0092 9A60     		str	r2, [r3, #8]
 898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear flag Wake-Up */
 900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 1805              		.loc 1 900 0
 1806 0094 FB68     		ldr	r3, [r7, #12]
 1807 0096 1B68     		ldr	r3, [r3]
 1808 0098 FA68     		ldr	r2, [r7, #12]
 1809 009a 1268     		ldr	r2, [r2]
 1810 009c D268     		ldr	r2, [r2, #12]
 1811 009e D2B2     		uxtb	r2, r2
 1812 00a0 62F49062 		orn	r2, r2, #1152
 1813 00a4 DA60     		str	r2, [r3, #12]
 901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 1814              		.loc 1 902 0
 1815 00a6 FFF7FEFF 		bl	HAL_GetTick
 1816 00aa 7861     		str	r0, [r7, #20]
 903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
 1817              		.loc 1 905 0
 1818 00ac 13E0     		b	.L67
 1819              	.L68:
 906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 1820              		.loc 1 907 0
 1821 00ae FFF7FEFF 		bl	HAL_GetTick
 1822 00b2 0246     		mov	r2, r0
 1823 00b4 7B69     		ldr	r3, [r7, #20]
 1824 00b6 D31A     		subs	r3, r2, r3
 1825 00b8 B3F57A7F 		cmp	r3, #1000
 1826 00bc 0BD9     		bls	.L67
 908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1827              		.loc 1 910 0
 1828 00be FB68     		ldr	r3, [r7, #12]
 1829 00c0 1B68     		ldr	r3, [r3]
 1830 00c2 FF22     		movs	r2, #255
 1831 00c4 5A62     		str	r2, [r3, #36]
 911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1832              		.loc 1 912 0
 1833 00c6 FB68     		ldr	r3, [r7, #12]
 1834 00c8 0322     		movs	r2, #3
 1835 00ca 5A77     		strb	r2, [r3, #29]
 913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Process Unlocked */
 915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 1836              		.loc 1 915 0
 1837 00cc FB68     		ldr	r3, [r7, #12]
 1838 00ce 0022     		movs	r2, #0
ARM GAS  /tmp/ccxkMiox.s 			page 49


 1839 00d0 1A77     		strb	r2, [r3, #28]
 916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 1840              		.loc 1 917 0
 1841 00d2 0323     		movs	r3, #3
 1842 00d4 41E0     		b	.L63
 1843              	.L67:
 905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 1844              		.loc 1 905 0
 1845 00d6 FB68     		ldr	r3, [r7, #12]
 1846 00d8 1B68     		ldr	r3, [r3]
 1847 00da DB68     		ldr	r3, [r3, #12]
 1848 00dc 03F00403 		and	r3, r3, #4
 1849 00e0 002B     		cmp	r3, #0
 1850 00e2 E4D0     		beq	.L68
 918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Wakeup Timer counter */
 922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->WUTR = (uint32_t)WakeUpCounter;
 1851              		.loc 1 922 0
 1852 00e4 FB68     		ldr	r3, [r7, #12]
 1853 00e6 1B68     		ldr	r3, [r3]
 1854 00e8 BA68     		ldr	r2, [r7, #8]
 1855 00ea 5A61     		str	r2, [r3, #20]
 923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Wakeup Timer clock source bits in CR register */
 925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
 1856              		.loc 1 925 0
 1857 00ec FB68     		ldr	r3, [r7, #12]
 1858 00ee 1B68     		ldr	r3, [r3]
 1859 00f0 FA68     		ldr	r2, [r7, #12]
 1860 00f2 1268     		ldr	r2, [r2]
 1861 00f4 9268     		ldr	r2, [r2, #8]
 1862 00f6 22F00702 		bic	r2, r2, #7
 1863 00fa 9A60     		str	r2, [r3, #8]
 926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the clock source */
 928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)WakeUpClock;
 1864              		.loc 1 928 0
 1865 00fc FB68     		ldr	r3, [r7, #12]
 1866 00fe 1B68     		ldr	r3, [r3]
 1867 0100 FA68     		ldr	r2, [r7, #12]
 1868 0102 1268     		ldr	r2, [r2]
 1869 0104 9168     		ldr	r1, [r2, #8]
 1870 0106 7A68     		ldr	r2, [r7, #4]
 1871 0108 0A43     		orrs	r2, r2, r1
 1872 010a 9A60     		str	r2, [r3, #8]
 929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
 931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
 1873              		.loc 1 931 0
 1874 010c 154A     		ldr	r2, .L69
 1875 010e 154B     		ldr	r3, .L69
 1876 0110 1B68     		ldr	r3, [r3]
 1877 0112 43F48013 		orr	r3, r3, #1048576
 1878 0116 1360     		str	r3, [r2]
ARM GAS  /tmp/ccxkMiox.s 			page 50


 932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
 1879              		.loc 1 933 0
 1880 0118 124A     		ldr	r2, .L69
 1881 011a 124B     		ldr	r3, .L69
 1882 011c 9B68     		ldr	r3, [r3, #8]
 1883 011e 43F48013 		orr	r3, r3, #1048576
 1884 0122 9360     		str	r3, [r2, #8]
 934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Interrupt in the RTC_CR register */
 936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE_IT(hrtc,RTC_IT_WUT);
 1885              		.loc 1 936 0
 1886 0124 FB68     		ldr	r3, [r7, #12]
 1887 0126 1B68     		ldr	r3, [r3]
 1888 0128 FA68     		ldr	r2, [r7, #12]
 1889 012a 1268     		ldr	r2, [r2]
 1890 012c 9268     		ldr	r2, [r2, #8]
 1891 012e 42F48042 		orr	r2, r2, #16384
 1892 0132 9A60     		str	r2, [r3, #8]
 937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the Wakeup Timer */
 939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_ENABLE(hrtc);
 1893              		.loc 1 939 0
 1894 0134 FB68     		ldr	r3, [r7, #12]
 1895 0136 1B68     		ldr	r3, [r3]
 1896 0138 FA68     		ldr	r2, [r7, #12]
 1897 013a 1268     		ldr	r2, [r2]
 1898 013c 9268     		ldr	r2, [r2, #8]
 1899 013e 42F48062 		orr	r2, r2, #1024
 1900 0142 9A60     		str	r2, [r3, #8]
 940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1901              		.loc 1 942 0
 1902 0144 FB68     		ldr	r3, [r7, #12]
 1903 0146 1B68     		ldr	r3, [r3]
 1904 0148 FF22     		movs	r2, #255
 1905 014a 5A62     		str	r2, [r3, #36]
 943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1906              		.loc 1 944 0
 1907 014c FB68     		ldr	r3, [r7, #12]
 1908 014e 0122     		movs	r2, #1
 1909 0150 5A77     		strb	r2, [r3, #29]
 945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 1910              		.loc 1 947 0
 1911 0152 FB68     		ldr	r3, [r7, #12]
 1912 0154 0022     		movs	r2, #0
 1913 0156 1A77     		strb	r2, [r3, #28]
 948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 1914              		.loc 1 949 0
 1915 0158 0023     		movs	r3, #0
 1916              	.L63:
 950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
ARM GAS  /tmp/ccxkMiox.s 			page 51


 1917              		.loc 1 950 0
 1918 015a 1846     		mov	r0, r3
 1919 015c 1837     		adds	r7, r7, #24
 1920              	.LCFI87:
 1921              		.cfi_def_cfa_offset 8
 1922 015e BD46     		mov	sp, r7
 1923              	.LCFI88:
 1924              		.cfi_def_cfa_register 13
 1925              		@ sp needed
 1926 0160 80BD     		pop	{r7, pc}
 1927              	.L70:
 1928 0162 00BF     		.align	2
 1929              	.L69:
 1930 0164 00040140 		.word	1073808384
 1931              		.cfi_endproc
 1932              	.LFE138:
 1934              		.section	.text.HAL_RTCEx_DeactivateWakeUpTimer,"ax",%progbits
 1935              		.align	2
 1936              		.global	HAL_RTCEx_DeactivateWakeUpTimer
 1937              		.thumb
 1938              		.thumb_func
 1940              	HAL_RTCEx_DeactivateWakeUpTimer:
 1941              	.LFB139:
 951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
 953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Deactivate wake up timer counter.
 954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
 955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
 956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
 957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_DeactivateWakeUpTimer(RTC_HandleTypeDef *hrtc)
 958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 1942              		.loc 1 958 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 16
 1945              		@ frame_needed = 1, uses_anonymous_args = 0
 1946 0000 80B5     		push	{r7, lr}
 1947              	.LCFI89:
 1948              		.cfi_def_cfa_offset 8
 1949              		.cfi_offset 7, -8
 1950              		.cfi_offset 14, -4
 1951 0002 84B0     		sub	sp, sp, #16
 1952              	.LCFI90:
 1953              		.cfi_def_cfa_offset 24
 1954 0004 00AF     		add	r7, sp, #0
 1955              	.LCFI91:
 1956              		.cfi_def_cfa_register 7
 1957 0006 7860     		str	r0, [r7, #4]
 959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 1958              		.loc 1 959 0
 1959 0008 0023     		movs	r3, #0
 1960 000a FB60     		str	r3, [r7, #12]
 960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
 962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 1961              		.loc 1 962 0
 1962 000c 7B68     		ldr	r3, [r7, #4]
 1963 000e 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
ARM GAS  /tmp/ccxkMiox.s 			page 52


 1964 0010 012B     		cmp	r3, #1
 1965 0012 01D1     		bne	.L72
 1966              		.loc 1 962 0 is_stmt 0 discriminator 1
 1967 0014 0223     		movs	r3, #2
 1968 0016 47E0     		b	.L73
 1969              	.L72:
 1970              		.loc 1 962 0 discriminator 2
 1971 0018 7B68     		ldr	r3, [r7, #4]
 1972 001a 0122     		movs	r2, #1
 1973 001c 1A77     		strb	r2, [r3, #28]
 963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1974              		.loc 1 964 0 is_stmt 1 discriminator 2
 1975 001e 7B68     		ldr	r3, [r7, #4]
 1976 0020 0222     		movs	r2, #2
 1977 0022 5A77     		strb	r2, [r3, #29]
 965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
 967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1978              		.loc 1 967 0 discriminator 2
 1979 0024 7B68     		ldr	r3, [r7, #4]
 1980 0026 1B68     		ldr	r3, [r3]
 1981 0028 CA22     		movs	r2, #202
 1982 002a 5A62     		str	r2, [r3, #36]
 1983 002c 7B68     		ldr	r3, [r7, #4]
 1984 002e 1B68     		ldr	r3, [r3]
 1985 0030 5322     		movs	r2, #83
 1986 0032 5A62     		str	r2, [r3, #36]
 968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the Wakeup Timer */
 970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE(hrtc);
 1987              		.loc 1 970 0 discriminator 2
 1988 0034 7B68     		ldr	r3, [r7, #4]
 1989 0036 1B68     		ldr	r3, [r3]
 1990 0038 7A68     		ldr	r2, [r7, #4]
 1991 003a 1268     		ldr	r2, [r2]
 1992 003c 9268     		ldr	r2, [r2, #8]
 1993 003e 22F48062 		bic	r2, r2, #1024
 1994 0042 9A60     		str	r2, [r3, #8]
 971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */
 973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_DISABLE_IT(hrtc,RTC_IT_WUT);
 1995              		.loc 1 973 0 discriminator 2
 1996 0044 7B68     		ldr	r3, [r7, #4]
 1997 0046 1B68     		ldr	r3, [r3]
 1998 0048 7A68     		ldr	r2, [r7, #4]
 1999 004a 1268     		ldr	r2, [r2]
 2000 004c 9268     		ldr	r2, [r2, #8]
 2001 004e 22F48042 		bic	r2, r2, #16384
 2002 0052 9A60     		str	r2, [r3, #8]
 974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tickstart = HAL_GetTick();
 2003              		.loc 1 975 0 discriminator 2
 2004 0054 FFF7FEFF 		bl	HAL_GetTick
 2005 0058 F860     		str	r0, [r7, #12]
 976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Wait till RTC WUTWF flag is set and if Time out is reached exit */
 977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTWF) == RESET)
ARM GAS  /tmp/ccxkMiox.s 			page 53


 2006              		.loc 1 977 0 discriminator 2
 2007 005a 13E0     		b	.L74
 2008              	.L75:
 978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 2009              		.loc 1 979 0
 2010 005c FFF7FEFF 		bl	HAL_GetTick
 2011 0060 0246     		mov	r2, r0
 2012 0062 FB68     		ldr	r3, [r7, #12]
 2013 0064 D31A     		subs	r3, r2, r3
 2014 0066 B3F57A7F 		cmp	r3, #1000
 2015 006a 0BD9     		bls	.L74
 980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
 982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2016              		.loc 1 982 0
 2017 006c 7B68     		ldr	r3, [r7, #4]
 2018 006e 1B68     		ldr	r3, [r3]
 2019 0070 FF22     		movs	r2, #255
 2020 0072 5A62     		str	r2, [r3, #36]
 983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2021              		.loc 1 984 0
 2022 0074 7B68     		ldr	r3, [r7, #4]
 2023 0076 0322     		movs	r2, #3
 2024 0078 5A77     		strb	r2, [r3, #29]
 985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Process Unlocked */
 987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2025              		.loc 1 987 0
 2026 007a 7B68     		ldr	r3, [r7, #4]
 2027 007c 0022     		movs	r2, #0
 2028 007e 1A77     		strb	r2, [r3, #28]
 988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_TIMEOUT;
 2029              		.loc 1 989 0
 2030 0080 0323     		movs	r3, #3
 2031 0082 11E0     		b	.L73
 2032              	.L74:
 977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 2033              		.loc 1 977 0
 2034 0084 7B68     		ldr	r3, [r7, #4]
 2035 0086 1B68     		ldr	r3, [r3]
 2036 0088 DB68     		ldr	r3, [r3, #12]
 2037 008a 03F00403 		and	r3, r3, #4
 2038 008e 002B     		cmp	r3, #0
 2039 0090 E4D0     		beq	.L75
 990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
 991:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
 992:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 993:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
 994:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2040              		.loc 1 994 0
 2041 0092 7B68     		ldr	r3, [r7, #4]
 2042 0094 1B68     		ldr	r3, [r3]
 2043 0096 FF22     		movs	r2, #255
 2044 0098 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccxkMiox.s 			page 54


 995:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 996:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2045              		.loc 1 996 0
 2046 009a 7B68     		ldr	r3, [r7, #4]
 2047 009c 0122     		movs	r2, #1
 2048 009e 5A77     		strb	r2, [r3, #29]
 997:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
 998:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
 999:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2049              		.loc 1 999 0
 2050 00a0 7B68     		ldr	r3, [r7, #4]
 2051 00a2 0022     		movs	r2, #0
 2052 00a4 1A77     		strb	r2, [r3, #28]
1000:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1001:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2053              		.loc 1 1001 0
 2054 00a6 0023     		movs	r3, #0
 2055              	.L73:
1002:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2056              		.loc 1 1002 0
 2057 00a8 1846     		mov	r0, r3
 2058 00aa 1037     		adds	r7, r7, #16
 2059              	.LCFI92:
 2060              		.cfi_def_cfa_offset 8
 2061 00ac BD46     		mov	sp, r7
 2062              	.LCFI93:
 2063              		.cfi_def_cfa_register 13
 2064              		@ sp needed
 2065 00ae 80BD     		pop	{r7, pc}
 2066              		.cfi_endproc
 2067              	.LFE139:
 2069              		.section	.text.HAL_RTCEx_GetWakeUpTimer,"ax",%progbits
 2070              		.align	2
 2071              		.global	HAL_RTCEx_GetWakeUpTimer
 2072              		.thumb
 2073              		.thumb_func
 2075              	HAL_RTCEx_GetWakeUpTimer:
 2076              	.LFB140:
1003:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1004:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Get wake up timer counter.
1006:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1007:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval Counter value
1008:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1009:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_GetWakeUpTimer(RTC_HandleTypeDef *hrtc)
1010:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2077              		.loc 1 1010 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 8
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081              		@ link register save eliminated.
 2082 0000 80B4     		push	{r7}
 2083              	.LCFI94:
 2084              		.cfi_def_cfa_offset 4
 2085              		.cfi_offset 7, -4
 2086 0002 83B0     		sub	sp, sp, #12
 2087              	.LCFI95:
ARM GAS  /tmp/ccxkMiox.s 			page 55


 2088              		.cfi_def_cfa_offset 16
 2089 0004 00AF     		add	r7, sp, #0
 2090              	.LCFI96:
 2091              		.cfi_def_cfa_register 7
 2092 0006 7860     		str	r0, [r7, #4]
1011:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the counter value */
1012:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return ((uint32_t)(hrtc->Instance->WUTR & RTC_WUTR_WUT));
 2093              		.loc 1 1012 0
 2094 0008 7B68     		ldr	r3, [r7, #4]
 2095 000a 1B68     		ldr	r3, [r3]
 2096 000c 5B69     		ldr	r3, [r3, #20]
 2097 000e 9BB2     		uxth	r3, r3
1013:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2098              		.loc 1 1013 0
 2099 0010 1846     		mov	r0, r3
 2100 0012 0C37     		adds	r7, r7, #12
 2101              	.LCFI97:
 2102              		.cfi_def_cfa_offset 4
 2103 0014 BD46     		mov	sp, r7
 2104              	.LCFI98:
 2105              		.cfi_def_cfa_register 13
 2106              		@ sp needed
 2107 0016 5DF8047B 		ldr	r7, [sp], #4
 2108              	.LCFI99:
 2109              		.cfi_restore 7
 2110              		.cfi_def_cfa_offset 0
 2111 001a 7047     		bx	lr
 2112              		.cfi_endproc
 2113              	.LFE140:
 2115              		.section	.text.HAL_RTCEx_WakeUpTimerIRQHandler,"ax",%progbits
 2116              		.align	2
 2117              		.global	HAL_RTCEx_WakeUpTimerIRQHandler
 2118              		.thumb
 2119              		.thumb_func
 2121              	HAL_RTCEx_WakeUpTimerIRQHandler:
 2122              	.LFB141:
1014:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1015:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Handle Wake Up Timer interrupt request.
1017:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1018:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
1019:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1020:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** void HAL_RTCEx_WakeUpTimerIRQHandler(RTC_HandleTypeDef *hrtc)
1021:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2123              		.loc 1 1021 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 8
 2126              		@ frame_needed = 1, uses_anonymous_args = 0
 2127 0000 80B5     		push	{r7, lr}
 2128              	.LCFI100:
 2129              		.cfi_def_cfa_offset 8
 2130              		.cfi_offset 7, -8
 2131              		.cfi_offset 14, -4
 2132 0002 82B0     		sub	sp, sp, #8
 2133              	.LCFI101:
 2134              		.cfi_def_cfa_offset 16
 2135 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccxkMiox.s 			page 56


 2136              	.LCFI102:
 2137              		.cfi_def_cfa_register 7
 2138 0006 7860     		str	r0, [r7, #4]
1022:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Get the pending status of the WAKEUPTIMER Interrupt */
1023:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) != RESET)
 2139              		.loc 1 1023 0
 2140 0008 7B68     		ldr	r3, [r7, #4]
 2141 000a 1B68     		ldr	r3, [r3]
 2142 000c DB68     		ldr	r3, [r3, #12]
 2143 000e 03F48063 		and	r3, r3, #1024
 2144 0012 002B     		cmp	r3, #0
 2145 0014 0BD0     		beq	.L79
1024:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1025:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* WAKEUPTIMER callback */
1026:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     HAL_RTCEx_WakeUpTimerEventCallback(hrtc);
 2146              		.loc 1 1026 0
 2147 0016 7868     		ldr	r0, [r7, #4]
 2148 0018 FFF7FEFF 		bl	HAL_RTCEx_WakeUpTimerEventCallback
1027:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     
1028:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Clear the WAKEUPTIMER interrupt pending bit */
1029:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2149              		.loc 1 1029 0
 2150 001c 7B68     		ldr	r3, [r7, #4]
 2151 001e 1B68     		ldr	r3, [r3]
 2152 0020 7A68     		ldr	r2, [r7, #4]
 2153 0022 1268     		ldr	r2, [r2]
 2154 0024 D268     		ldr	r2, [r2, #12]
 2155 0026 D2B2     		uxtb	r2, r2
 2156 0028 62F49062 		orn	r2, r2, #1152
 2157 002c DA60     		str	r2, [r3, #12]
 2158              	.L79:
1030:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1031:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1032:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the EXTI's line Flag for RTC WakeUpTimer */
1033:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_EXTI_CLEAR_FLAG();
 2159              		.loc 1 1033 0
 2160 002e 054B     		ldr	r3, .L80
 2161 0030 4FF48012 		mov	r2, #1048576
 2162 0034 5A61     		str	r2, [r3, #20]
1034:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1035:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1036:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2163              		.loc 1 1036 0
 2164 0036 7B68     		ldr	r3, [r7, #4]
 2165 0038 0122     		movs	r2, #1
 2166 003a 5A77     		strb	r2, [r3, #29]
1037:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2167              		.loc 1 1037 0
 2168 003c 0837     		adds	r7, r7, #8
 2169              	.LCFI103:
 2170              		.cfi_def_cfa_offset 8
 2171 003e BD46     		mov	sp, r7
 2172              	.LCFI104:
 2173              		.cfi_def_cfa_register 13
 2174              		@ sp needed
 2175 0040 80BD     		pop	{r7, pc}
 2176              	.L81:
ARM GAS  /tmp/ccxkMiox.s 			page 57


 2177 0042 00BF     		.align	2
 2178              	.L80:
 2179 0044 00040140 		.word	1073808384
 2180              		.cfi_endproc
 2181              	.LFE141:
 2183              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 2184              		.align	2
 2185              		.weak	HAL_RTCEx_WakeUpTimerEventCallback
 2186              		.thumb
 2187              		.thumb_func
 2189              	HAL_RTCEx_WakeUpTimerEventCallback:
 2190              	.LFB142:
1038:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1039:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1040:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Wake Up Timer callback.
1041:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1042:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
1043:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1044:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
1045:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2191              		.loc 1 1045 0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 8
 2194              		@ frame_needed = 1, uses_anonymous_args = 0
 2195              		@ link register save eliminated.
 2196 0000 80B4     		push	{r7}
 2197              	.LCFI105:
 2198              		.cfi_def_cfa_offset 4
 2199              		.cfi_offset 7, -4
 2200 0002 83B0     		sub	sp, sp, #12
 2201              	.LCFI106:
 2202              		.cfi_def_cfa_offset 16
 2203 0004 00AF     		add	r7, sp, #0
 2204              	.LCFI107:
 2205              		.cfi_def_cfa_register 7
 2206 0006 7860     		str	r0, [r7, #4]
1046:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1047:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1048:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1049:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1050:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_WakeUpTimerEventCallback could be implemented in the user file
1051:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
1052:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2207              		.loc 1 1052 0
 2208 0008 0C37     		adds	r7, r7, #12
 2209              	.LCFI108:
 2210              		.cfi_def_cfa_offset 4
 2211 000a BD46     		mov	sp, r7
 2212              	.LCFI109:
 2213              		.cfi_def_cfa_register 13
 2214              		@ sp needed
 2215 000c 5DF8047B 		ldr	r7, [sp], #4
 2216              	.LCFI110:
 2217              		.cfi_restore 7
 2218              		.cfi_def_cfa_offset 0
 2219 0010 7047     		bx	lr
 2220              		.cfi_endproc
ARM GAS  /tmp/ccxkMiox.s 			page 58


 2221              	.LFE142:
 2223 0012 00BF     		.section	.text.HAL_RTCEx_PollForWakeUpTimerEvent,"ax",%progbits
 2224              		.align	2
 2225              		.global	HAL_RTCEx_PollForWakeUpTimerEvent
 2226              		.thumb
 2227              		.thumb_func
 2229              	HAL_RTCEx_PollForWakeUpTimerEvent:
 2230              	.LFB143:
1053:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1054:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1055:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  * @brief  Handle Wake Up Timer Polling.
1056:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1057:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1058:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1059:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1060:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForWakeUpTimerEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1061:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2231              		.loc 1 1061 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 16
 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235 0000 80B5     		push	{r7, lr}
 2236              	.LCFI111:
 2237              		.cfi_def_cfa_offset 8
 2238              		.cfi_offset 7, -8
 2239              		.cfi_offset 14, -4
 2240 0002 84B0     		sub	sp, sp, #16
 2241              	.LCFI112:
 2242              		.cfi_def_cfa_offset 24
 2243 0004 00AF     		add	r7, sp, #0
 2244              	.LCFI113:
 2245              		.cfi_def_cfa_register 7
 2246 0006 7860     		str	r0, [r7, #4]
 2247 0008 3960     		str	r1, [r7]
1062:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 2248              		.loc 1 1062 0
 2249 000a FFF7FEFF 		bl	HAL_GetTick
 2250 000e F860     		str	r0, [r7, #12]
1063:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(hrtc, RTC_FLAG_WUTF) == RESET)
 2251              		.loc 1 1064 0
 2252 0010 13E0     		b	.L84
 2253              	.L87:
1065:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1066:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 2254              		.loc 1 1066 0
 2255 0012 3B68     		ldr	r3, [r7]
 2256 0014 B3F1FF3F 		cmp	r3, #-1
 2257 0018 0FD0     		beq	.L84
1067:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1068:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 2258              		.loc 1 1068 0
 2259 001a 3B68     		ldr	r3, [r7]
 2260 001c 002B     		cmp	r3, #0
 2261 001e 07D0     		beq	.L85
 2262              		.loc 1 1068 0 is_stmt 0 discriminator 1
 2263 0020 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccxkMiox.s 			page 59


 2264 0024 0246     		mov	r2, r0
 2265 0026 FB68     		ldr	r3, [r7, #12]
 2266 0028 D21A     		subs	r2, r2, r3
 2267 002a 3B68     		ldr	r3, [r7]
 2268 002c 9A42     		cmp	r2, r3
 2269 002e 04D9     		bls	.L84
 2270              	.L85:
1069:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1070:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2271              		.loc 1 1070 0 is_stmt 1
 2272 0030 7B68     		ldr	r3, [r7, #4]
 2273 0032 0322     		movs	r2, #3
 2274 0034 5A77     		strb	r2, [r3, #29]
1071:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       
1072:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2275              		.loc 1 1072 0
 2276 0036 0323     		movs	r3, #3
 2277 0038 13E0     		b	.L86
 2278              	.L84:
1064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 2279              		.loc 1 1064 0
 2280 003a 7B68     		ldr	r3, [r7, #4]
 2281 003c 1B68     		ldr	r3, [r3]
 2282 003e DB68     		ldr	r3, [r3, #12]
 2283 0040 03F48063 		and	r3, r3, #1024
 2284 0044 002B     		cmp	r3, #0
 2285 0046 E4D0     		beq	.L87
1073:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1074:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1075:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1076:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the WAKEUPTIMER Flag */
1078:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(hrtc, RTC_FLAG_WUTF);
 2286              		.loc 1 1078 0
 2287 0048 7B68     		ldr	r3, [r7, #4]
 2288 004a 1B68     		ldr	r3, [r3]
 2289 004c 7A68     		ldr	r2, [r7, #4]
 2290 004e 1268     		ldr	r2, [r2]
 2291 0050 D268     		ldr	r2, [r2, #12]
 2292 0052 D2B2     		uxtb	r2, r2
 2293 0054 62F49062 		orn	r2, r2, #1152
 2294 0058 DA60     		str	r2, [r3, #12]
1079:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1080:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1081:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2295              		.loc 1 1081 0
 2296 005a 7B68     		ldr	r3, [r7, #4]
 2297 005c 0122     		movs	r2, #1
 2298 005e 5A77     		strb	r2, [r3, #29]
1082:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1083:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2299              		.loc 1 1083 0
 2300 0060 0023     		movs	r3, #0
 2301              	.L86:
1084:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2302              		.loc 1 1084 0
 2303 0062 1846     		mov	r0, r3
ARM GAS  /tmp/ccxkMiox.s 			page 60


 2304 0064 1037     		adds	r7, r7, #16
 2305              	.LCFI114:
 2306              		.cfi_def_cfa_offset 8
 2307 0066 BD46     		mov	sp, r7
 2308              	.LCFI115:
 2309              		.cfi_def_cfa_register 13
 2310              		@ sp needed
 2311 0068 80BD     		pop	{r7, pc}
 2312              		.cfi_endproc
 2313              	.LFE143:
 2315              		.section	.text.HAL_RTCEx_BKUPWrite,"ax",%progbits
 2316              		.align	2
 2317              		.global	HAL_RTCEx_BKUPWrite
 2318              		.thumb
 2319              		.thumb_func
 2321              	HAL_RTCEx_BKUPWrite:
 2322              	.LFB144:
1085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1086:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1087:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @}
1088:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1089:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1090:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1091:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group3
1092:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief    Extended Peripheral Control functions
1093:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
1094:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @verbatim   
1095:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================
1096:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****               ##### Extended Peripheral Control functions #####
1097:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================  
1098:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     [..]
1099:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     This subsection provides functions allowing to
1100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Write a data in a specified RTC Backup data register
1101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Read a data in a specified RTC Backup data register
1102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Set the Coarse calibration parameters.
1103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Deactivate the Coarse calibration parameters
1104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Set the Smooth calibration parameters.
1105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Configure the Synchronization Shift Control Settings.
1106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Enable the RTC reference clock detection.
1109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Disable the RTC reference clock detection.
1110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Enable the Bypass Shadow feature.
1111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) Disable the Bypass Shadow feature.
1112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @endverbatim
1114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
1115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Write a data in a specified RTC Backup data register.
1119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                 specify the register.
1123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Data Data to be written in the specified RTC Backup data register.                     
1124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
ARM GAS  /tmp/ccxkMiox.s 			page 61


1125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** void HAL_RTCEx_BKUPWrite(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister, uint32_t Data)
1127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2323              		.loc 1 1127 0
 2324              		.cfi_startproc
 2325              		@ args = 0, pretend = 0, frame = 24
 2326              		@ frame_needed = 1, uses_anonymous_args = 0
 2327              		@ link register save eliminated.
 2328 0000 80B4     		push	{r7}
 2329              	.LCFI116:
 2330              		.cfi_def_cfa_offset 4
 2331              		.cfi_offset 7, -4
 2332 0002 87B0     		sub	sp, sp, #28
 2333              	.LCFI117:
 2334              		.cfi_def_cfa_offset 32
 2335 0004 00AF     		add	r7, sp, #0
 2336              	.LCFI118:
 2337              		.cfi_def_cfa_register 7
 2338 0006 F860     		str	r0, [r7, #12]
 2339 0008 B960     		str	r1, [r7, #8]
 2340 000a 7A60     		str	r2, [r7, #4]
1128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmp = 0U;
 2341              		.loc 1 1128 0
 2342 000c 0023     		movs	r3, #0
 2343 000e 7B61     		str	r3, [r7, #20]
1129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 2344              		.loc 1 1133 0
 2345 0010 FB68     		ldr	r3, [r7, #12]
 2346 0012 1B68     		ldr	r3, [r3]
 2347 0014 5033     		adds	r3, r3, #80
 2348 0016 7B61     		str	r3, [r7, #20]
1134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
 2349              		.loc 1 1134 0
 2350 0018 BB68     		ldr	r3, [r7, #8]
 2351 001a 9B00     		lsls	r3, r3, #2
 2352 001c 7A69     		ldr	r2, [r7, #20]
 2353 001e 1344     		add	r3, r3, r2
 2354 0020 7B61     		str	r3, [r7, #20]
1135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Write the specified register */
1137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
 2355              		.loc 1 1137 0
 2356 0022 7B69     		ldr	r3, [r7, #20]
 2357 0024 7A68     		ldr	r2, [r7, #4]
 2358 0026 1A60     		str	r2, [r3]
1138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2359              		.loc 1 1138 0
 2360 0028 1C37     		adds	r7, r7, #28
 2361              	.LCFI119:
 2362              		.cfi_def_cfa_offset 4
 2363 002a BD46     		mov	sp, r7
 2364              	.LCFI120:
 2365              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccxkMiox.s 			page 62


 2366              		@ sp needed
 2367 002c 5DF8047B 		ldr	r7, [sp], #4
 2368              	.LCFI121:
 2369              		.cfi_restore 7
 2370              		.cfi_def_cfa_offset 0
 2371 0030 7047     		bx	lr
 2372              		.cfi_endproc
 2373              	.LFE144:
 2375 0032 00BF     		.section	.text.HAL_RTCEx_BKUPRead,"ax",%progbits
 2376              		.align	2
 2377              		.global	HAL_RTCEx_BKUPRead
 2378              		.thumb
 2379              		.thumb_func
 2381              	HAL_RTCEx_BKUPRead:
 2382              	.LFB145:
1139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Reads data from the specified RTC Backup data Register.
1142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle 
1143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  BackupRegister RTC Backup data Register number.
1144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be: RTC_BKP_DRx where x can be from 0 to 19 to 
1145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *                                 specify the register.                   
1146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval Read value
1147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** uint32_t HAL_RTCEx_BKUPRead(RTC_HandleTypeDef *hrtc, uint32_t BackupRegister)
1149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2383              		.loc 1 1149 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 16
 2386              		@ frame_needed = 1, uses_anonymous_args = 0
 2387              		@ link register save eliminated.
 2388 0000 80B4     		push	{r7}
 2389              	.LCFI122:
 2390              		.cfi_def_cfa_offset 4
 2391              		.cfi_offset 7, -4
 2392 0002 85B0     		sub	sp, sp, #20
 2393              	.LCFI123:
 2394              		.cfi_def_cfa_offset 24
 2395 0004 00AF     		add	r7, sp, #0
 2396              	.LCFI124:
 2397              		.cfi_def_cfa_register 7
 2398 0006 7860     		str	r0, [r7, #4]
 2399 0008 3960     		str	r1, [r7]
1150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tmp = 0U;
 2400              		.loc 1 1150 0
 2401 000a 0023     		movs	r3, #0
 2402 000c FB60     		str	r3, [r7, #12]
1151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_BKP(BackupRegister));
1154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmp = (uint32_t)&(hrtc->Instance->BKP0R);
 2403              		.loc 1 1155 0
 2404 000e 7B68     		ldr	r3, [r7, #4]
 2405 0010 1B68     		ldr	r3, [r3]
 2406 0012 5033     		adds	r3, r3, #80
 2407 0014 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccxkMiox.s 			page 63


1156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   tmp += (BackupRegister * 4U);
 2408              		.loc 1 1156 0
 2409 0016 3B68     		ldr	r3, [r7]
 2410 0018 9B00     		lsls	r3, r3, #2
 2411 001a FA68     		ldr	r2, [r7, #12]
 2412 001c 1344     		add	r3, r3, r2
 2413 001e FB60     		str	r3, [r7, #12]
1157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Read the specified register */
1159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return (*(__IO uint32_t *)tmp);
 2414              		.loc 1 1159 0
 2415 0020 FB68     		ldr	r3, [r7, #12]
 2416 0022 1B68     		ldr	r3, [r3]
1160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2417              		.loc 1 1160 0
 2418 0024 1846     		mov	r0, r3
 2419 0026 1437     		adds	r7, r7, #20
 2420              	.LCFI125:
 2421              		.cfi_def_cfa_offset 4
 2422 0028 BD46     		mov	sp, r7
 2423              	.LCFI126:
 2424              		.cfi_def_cfa_register 13
 2425              		@ sp needed
 2426 002a 5DF8047B 		ldr	r7, [sp], #4
 2427              	.LCFI127:
 2428              		.cfi_restore 7
 2429              		.cfi_def_cfa_offset 0
 2430 002e 7047     		bx	lr
 2431              		.cfi_endproc
 2432              	.LFE145:
 2434              		.section	.text.HAL_RTCEx_SetSmoothCalib,"ax",%progbits
 2435              		.align	2
 2436              		.global	HAL_RTCEx_SetSmoothCalib
 2437              		.thumb
 2438              		.thumb_func
 2440              	HAL_RTCEx_SetSmoothCalib:
 2441              	.LFB146:
1161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Set the Smooth calibration parameters.
1164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle  
1165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  SmoothCalibPeriod Select the Smooth Calibration Period.
1166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be can be one of the following values :
1167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_32SEC: The smooth calibration period is 32s.
1168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_16SEC: The smooth calibration period is 16s.
1169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PERIOD_8SEC: The smooth calibration period is 8s.
1170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  SmoothCalibPlusPulses Select to Set or reset the CALP bit.
1171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_SET: Add one RTCCLK pulse every 2*11 pulses.
1173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SMOOTHCALIB_PLUSPULSES_RESET: No RTCCLK pulses are added.
1174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  SmoothCalibMinusPulsesValue Select the value of CALM[8:0] bits.
1175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x000001FF.
1176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   To deactivate the smooth calibration, the field SmoothCalibPlusPulses 
1177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         must be equal to SMOOTHCALIB_PLUSPULSES_RESET and the field 
1178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         SmoothCalibMinusPulsesValue mut be equal to 0.
1179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
ARM GAS  /tmp/ccxkMiox.s 			page 64


1181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSmoothCalib(RTC_HandleTypeDef* hrtc, uint32_t SmoothCalibPeriod, uin
1182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2442              		.loc 1 1182 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 24
 2445              		@ frame_needed = 1, uses_anonymous_args = 0
 2446 0000 80B5     		push	{r7, lr}
 2447              	.LCFI128:
 2448              		.cfi_def_cfa_offset 8
 2449              		.cfi_offset 7, -8
 2450              		.cfi_offset 14, -4
 2451 0002 86B0     		sub	sp, sp, #24
 2452              	.LCFI129:
 2453              		.cfi_def_cfa_offset 32
 2454 0004 00AF     		add	r7, sp, #0
 2455              	.LCFI130:
 2456              		.cfi_def_cfa_register 7
 2457 0006 F860     		str	r0, [r7, #12]
 2458 0008 B960     		str	r1, [r7, #8]
 2459 000a 7A60     		str	r2, [r7, #4]
 2460 000c 3B60     		str	r3, [r7]
1183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 2461              		.loc 1 1183 0
 2462 000e 0023     		movs	r3, #0
 2463 0010 7B61     		str	r3, [r7, #20]
1184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PERIOD(SmoothCalibPeriod));
1187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_PLUS(SmoothCalibPlusPulses));
1188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SMOOTH_CALIB_MINUS(SmoothCalibMinusPulsesValue));
1189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2464              		.loc 1 1191 0
 2465 0012 FB68     		ldr	r3, [r7, #12]
 2466 0014 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2467 0016 012B     		cmp	r3, #1
 2468 0018 01D1     		bne	.L92
 2469              		.loc 1 1191 0 is_stmt 0 discriminator 1
 2470 001a 0223     		movs	r3, #2
 2471 001c 46E0     		b	.L93
 2472              	.L92:
 2473              		.loc 1 1191 0 discriminator 2
 2474 001e FB68     		ldr	r3, [r7, #12]
 2475 0020 0122     		movs	r2, #1
 2476 0022 1A77     		strb	r2, [r3, #28]
1192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2477              		.loc 1 1193 0 is_stmt 1 discriminator 2
 2478 0024 FB68     		ldr	r3, [r7, #12]
 2479 0026 0222     		movs	r2, #2
 2480 0028 5A77     		strb	r2, [r3, #29]
1194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2481              		.loc 1 1196 0 discriminator 2
 2482 002a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccxkMiox.s 			page 65


 2483 002c 1B68     		ldr	r3, [r3]
 2484 002e CA22     		movs	r2, #202
 2485 0030 5A62     		str	r2, [r3, #36]
 2486 0032 FB68     		ldr	r3, [r7, #12]
 2487 0034 1B68     		ldr	r3, [r3]
 2488 0036 5322     		movs	r2, #83
 2489 0038 5A62     		str	r2, [r3, #36]
1197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* check if a calibration is pending*/
1199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 2490              		.loc 1 1199 0 discriminator 2
 2491 003a FB68     		ldr	r3, [r7, #12]
 2492 003c 1B68     		ldr	r3, [r3]
 2493 003e DB68     		ldr	r3, [r3, #12]
 2494 0040 03F48033 		and	r3, r3, #65536
 2495 0044 002B     		cmp	r3, #0
 2496 0046 1ED0     		beq	.L94
1200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 2497              		.loc 1 1201 0
 2498 0048 FFF7FEFF 		bl	HAL_GetTick
 2499 004c 7861     		str	r0, [r7, #20]
1202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* check if a calibration is pending*/
1204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_RECALPF) != RESET)
 2500              		.loc 1 1204 0
 2501 004e 13E0     		b	.L95
 2502              	.L96:
1205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 2503              		.loc 1 1206 0
 2504 0050 FFF7FEFF 		bl	HAL_GetTick
 2505 0054 0246     		mov	r2, r0
 2506 0056 7B69     		ldr	r3, [r7, #20]
 2507 0058 D31A     		subs	r3, r2, r3
 2508 005a B3F57A7F 		cmp	r3, #1000
 2509 005e 0BD9     		bls	.L95
1207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2510              		.loc 1 1209 0
 2511 0060 FB68     		ldr	r3, [r7, #12]
 2512 0062 1B68     		ldr	r3, [r3]
 2513 0064 FF22     		movs	r2, #255
 2514 0066 5A62     		str	r2, [r3, #36]
1210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Change RTC state */
1212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2515              		.loc 1 1212 0
 2516 0068 FB68     		ldr	r3, [r7, #12]
 2517 006a 0322     		movs	r2, #3
 2518 006c 5A77     		strb	r2, [r3, #29]
1213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Process Unlocked */
1215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2519              		.loc 1 1215 0
 2520 006e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccxkMiox.s 			page 66


 2521 0070 0022     		movs	r2, #0
 2522 0072 1A77     		strb	r2, [r3, #28]
1216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2523              		.loc 1 1217 0
 2524 0074 0323     		movs	r3, #3
 2525 0076 19E0     		b	.L93
 2526              	.L95:
1204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 2527              		.loc 1 1204 0
 2528 0078 FB68     		ldr	r3, [r7, #12]
 2529 007a 1B68     		ldr	r3, [r3]
 2530 007c DB68     		ldr	r3, [r3, #12]
 2531 007e 03F48033 		and	r3, r3, #65536
 2532 0082 002B     		cmp	r3, #0
 2533 0084 E4D1     		bne	.L96
 2534              	.L94:
1218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the Smooth calibration settings */
1223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CALR = (uint32_t)((uint32_t)SmoothCalibPeriod | (uint32_t)SmoothCalibPlusPulses |
 2535              		.loc 1 1223 0
 2536 0086 FB68     		ldr	r3, [r7, #12]
 2537 0088 1B68     		ldr	r3, [r3]
 2538 008a B968     		ldr	r1, [r7, #8]
 2539 008c 7A68     		ldr	r2, [r7, #4]
 2540 008e 1143     		orrs	r1, r1, r2
 2541 0090 3A68     		ldr	r2, [r7]
 2542 0092 0A43     		orrs	r2, r2, r1
 2543 0094 DA63     		str	r2, [r3, #60]
1224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2544              		.loc 1 1226 0
 2545 0096 FB68     		ldr	r3, [r7, #12]
 2546 0098 1B68     		ldr	r3, [r3]
 2547 009a FF22     		movs	r2, #255
 2548 009c 5A62     		str	r2, [r3, #36]
1227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2549              		.loc 1 1229 0
 2550 009e FB68     		ldr	r3, [r7, #12]
 2551 00a0 0122     		movs	r2, #1
 2552 00a2 5A77     		strb	r2, [r3, #29]
1230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2553              		.loc 1 1232 0
 2554 00a4 FB68     		ldr	r3, [r7, #12]
 2555 00a6 0022     		movs	r2, #0
 2556 00a8 1A77     		strb	r2, [r3, #28]
1233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2557              		.loc 1 1234 0
ARM GAS  /tmp/ccxkMiox.s 			page 67


 2558 00aa 0023     		movs	r3, #0
 2559              	.L93:
1235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2560              		.loc 1 1235 0
 2561 00ac 1846     		mov	r0, r3
 2562 00ae 1837     		adds	r7, r7, #24
 2563              	.LCFI131:
 2564              		.cfi_def_cfa_offset 8
 2565 00b0 BD46     		mov	sp, r7
 2566              	.LCFI132:
 2567              		.cfi_def_cfa_register 13
 2568              		@ sp needed
 2569 00b2 80BD     		pop	{r7, pc}
 2570              		.cfi_endproc
 2571              	.LFE146:
 2573              		.section	.text.HAL_RTCEx_SetSynchroShift,"ax",%progbits
 2574              		.align	2
 2575              		.global	HAL_RTCEx_SetSynchroShift
 2576              		.thumb
 2577              		.thumb_func
 2579              	HAL_RTCEx_SetSynchroShift:
 2580              	.LFB147:
1236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Configure the Synchronization Shift Control Settings.
1239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   When REFCKON is set, firmware must not write to Shift control register. 
1240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle    
1241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  ShiftAdd1S: Select to add or not 1 second to the time calendar.
1242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values :
1243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_SET: Add one second to the clock calendar. 
1244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_SHIFTADD1S_RESET: No effect.
1245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  ShiftSubFS Select the number of Second Fractions to substitute.
1246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one any value from 0 to 0x7FFF.
1247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetSynchroShift(RTC_HandleTypeDef* hrtc, uint32_t ShiftAdd1S, uint32_t 
1250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2581              		.loc 1 1250 0
 2582              		.cfi_startproc
 2583              		@ args = 0, pretend = 0, frame = 24
 2584              		@ frame_needed = 1, uses_anonymous_args = 0
 2585 0000 80B5     		push	{r7, lr}
 2586              	.LCFI133:
 2587              		.cfi_def_cfa_offset 8
 2588              		.cfi_offset 7, -8
 2589              		.cfi_offset 14, -4
 2590 0002 86B0     		sub	sp, sp, #24
 2591              	.LCFI134:
 2592              		.cfi_def_cfa_offset 32
 2593 0004 00AF     		add	r7, sp, #0
 2594              	.LCFI135:
 2595              		.cfi_def_cfa_register 7
 2596 0006 F860     		str	r0, [r7, #12]
 2597 0008 B960     		str	r1, [r7, #8]
 2598 000a 7A60     		str	r2, [r7, #4]
1251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = 0U;
 2599              		.loc 1 1251 0
ARM GAS  /tmp/ccxkMiox.s 			page 68


 2600 000c 0023     		movs	r3, #0
 2601 000e 7B61     		str	r3, [r7, #20]
1252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_ADD1S(ShiftAdd1S));
1255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_SHIFT_SUBFS(ShiftSubFS));
1256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2602              		.loc 1 1258 0
 2603 0010 FB68     		ldr	r3, [r7, #12]
 2604 0012 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2605 0014 012B     		cmp	r3, #1
 2606 0016 01D1     		bne	.L98
 2607              		.loc 1 1258 0 is_stmt 0 discriminator 1
 2608 0018 0223     		movs	r3, #2
 2609 001a 69E0     		b	.L99
 2610              	.L98:
 2611              		.loc 1 1258 0 discriminator 2
 2612 001c FB68     		ldr	r3, [r7, #12]
 2613 001e 0122     		movs	r2, #1
 2614 0020 1A77     		strb	r2, [r3, #28]
1259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2615              		.loc 1 1260 0 is_stmt 1 discriminator 2
 2616 0022 FB68     		ldr	r3, [r7, #12]
 2617 0024 0222     		movs	r2, #2
 2618 0026 5A77     		strb	r2, [r3, #29]
1261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2619              		.loc 1 1263 0 discriminator 2
 2620 0028 FB68     		ldr	r3, [r7, #12]
 2621 002a 1B68     		ldr	r3, [r3]
 2622 002c CA22     		movs	r2, #202
 2623 002e 5A62     		str	r2, [r3, #36]
 2624 0030 FB68     		ldr	r3, [r7, #12]
 2625 0032 1B68     		ldr	r3, [r3]
 2626 0034 5322     		movs	r2, #83
 2627 0036 5A62     		str	r2, [r3, #36]
1264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     tickstart = HAL_GetTick();
 2628              		.loc 1 1265 0 discriminator 2
 2629 0038 FFF7FEFF 		bl	HAL_GetTick
 2630 003c 7861     		str	r0, [r7, #20]
1266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Wait until the shift is completed*/
1268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     while((hrtc->Instance->ISR & RTC_ISR_SHPF) != RESET)
 2631              		.loc 1 1268 0 discriminator 2
 2632 003e 13E0     		b	.L100
 2633              	.L101:
1269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((HAL_GetTick()-tickstart) > RTC_TIMEOUT_VALUE)
 2634              		.loc 1 1270 0
 2635 0040 FFF7FEFF 		bl	HAL_GetTick
 2636 0044 0246     		mov	r2, r0
 2637 0046 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccxkMiox.s 			page 69


 2638 0048 D31A     		subs	r3, r2, r3
 2639 004a B3F57A7F 		cmp	r3, #1000
 2640 004e 0BD9     		bls	.L100
1271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Enable the write protection for RTC registers */
1273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2641              		.loc 1 1273 0
 2642 0050 FB68     		ldr	r3, [r7, #12]
 2643 0052 1B68     		ldr	r3, [r3]
 2644 0054 FF22     		movs	r2, #255
 2645 0056 5A62     		str	r2, [r3, #36]
1274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2646              		.loc 1 1275 0
 2647 0058 FB68     		ldr	r3, [r7, #12]
 2648 005a 0322     		movs	r2, #3
 2649 005c 5A77     		strb	r2, [r3, #29]
1276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         /* Process Unlocked */
1278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         __HAL_UNLOCK(hrtc);
 2650              		.loc 1 1278 0
 2651 005e FB68     		ldr	r3, [r7, #12]
 2652 0060 0022     		movs	r2, #0
 2653 0062 1A77     		strb	r2, [r3, #28]
1279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 2654              		.loc 1 1280 0
 2655 0064 0323     		movs	r3, #3
 2656 0066 43E0     		b	.L99
 2657              	.L100:
1268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
 2658              		.loc 1 1268 0
 2659 0068 FB68     		ldr	r3, [r7, #12]
 2660 006a 1B68     		ldr	r3, [r3]
 2661 006c DB68     		ldr	r3, [r3, #12]
 2662 006e 03F00803 		and	r3, r3, #8
 2663 0072 002B     		cmp	r3, #0
 2664 0074 E4D1     		bne	.L101
1281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Check if the reference clock detection is disabled */
1285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if((hrtc->Instance->CR & RTC_CR_REFCKON) == RESET)
 2665              		.loc 1 1285 0
 2666 0076 FB68     		ldr	r3, [r7, #12]
 2667 0078 1B68     		ldr	r3, [r3]
 2668 007a 9B68     		ldr	r3, [r3, #8]
 2669 007c 03F01003 		and	r3, r3, #16
 2670 0080 002B     		cmp	r3, #0
 2671 0082 1ED1     		bne	.L102
1286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Configure the Shift settings */
1288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->Instance->SHIFTR = (uint32_t)(uint32_t)(ShiftSubFS) | (uint32_t)(ShiftAdd1S);
 2672              		.loc 1 1288 0
 2673 0084 FB68     		ldr	r3, [r7, #12]
 2674 0086 1B68     		ldr	r3, [r3]
 2675 0088 7968     		ldr	r1, [r7, #4]
ARM GAS  /tmp/ccxkMiox.s 			page 70


 2676 008a BA68     		ldr	r2, [r7, #8]
 2677 008c 0A43     		orrs	r2, r2, r1
 2678 008e DA62     		str	r2, [r3, #44]
1289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* If  RTC_CR_BYPSHAD bit = 0U, wait for synchro else this check is not needed */
1291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((hrtc->Instance->CR & RTC_CR_BYPSHAD) == RESET)
 2679              		.loc 1 1291 0
 2680 0090 FB68     		ldr	r3, [r7, #12]
 2681 0092 1B68     		ldr	r3, [r3]
 2682 0094 9B68     		ldr	r3, [r3, #8]
 2683 0096 03F02003 		and	r3, r3, #32
 2684 009a 002B     		cmp	r3, #0
 2685 009c 1DD1     		bne	.L103
1292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 2686              		.loc 1 1293 0
 2687 009e F868     		ldr	r0, [r7, #12]
 2688 00a0 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2689 00a4 0346     		mov	r3, r0
 2690 00a6 002B     		cmp	r3, #0
 2691 00a8 17D0     		beq	.L103
1294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         {
1295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           /* Enable the write protection for RTC registers */
1296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2692              		.loc 1 1296 0
 2693 00aa FB68     		ldr	r3, [r7, #12]
 2694 00ac 1B68     		ldr	r3, [r3]
 2695 00ae FF22     		movs	r2, #255
 2696 00b0 5A62     		str	r2, [r3, #36]
1297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 2697              		.loc 1 1298 0
 2698 00b2 FB68     		ldr	r3, [r7, #12]
 2699 00b4 0422     		movs	r2, #4
 2700 00b6 5A77     		strb	r2, [r3, #29]
1299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           /* Process Unlocked */
1301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           __HAL_UNLOCK(hrtc);
 2701              		.loc 1 1301 0
 2702 00b8 FB68     		ldr	r3, [r7, #12]
 2703 00ba 0022     		movs	r2, #0
 2704 00bc 1A77     		strb	r2, [r3, #28]
1302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****           return HAL_ERROR;
 2705              		.loc 1 1303 0
 2706 00be 0123     		movs	r3, #1
 2707 00c0 16E0     		b	.L99
 2708              	.L102:
1304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         }
1305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     else
1308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Enable the write protection for RTC registers */
1310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2709              		.loc 1 1310 0
 2710 00c2 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccxkMiox.s 			page 71


 2711 00c4 1B68     		ldr	r3, [r3]
 2712 00c6 FF22     		movs	r2, #255
 2713 00c8 5A62     		str	r2, [r3, #36]
1311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Change RTC state */
1313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 2714              		.loc 1 1313 0
 2715 00ca FB68     		ldr	r3, [r7, #12]
 2716 00cc 0422     		movs	r2, #4
 2717 00ce 5A77     		strb	r2, [r3, #29]
1314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       /* Process Unlocked */
1316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       __HAL_UNLOCK(hrtc);
 2718              		.loc 1 1316 0
 2719 00d0 FB68     		ldr	r3, [r7, #12]
 2720 00d2 0022     		movs	r2, #0
 2721 00d4 1A77     		strb	r2, [r3, #28]
1317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       return HAL_ERROR;
 2722              		.loc 1 1318 0
 2723 00d6 0123     		movs	r3, #1
 2724 00d8 0AE0     		b	.L99
 2725              	.L103:
1319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2726              		.loc 1 1322 0
 2727 00da FB68     		ldr	r3, [r7, #12]
 2728 00dc 1B68     		ldr	r3, [r3]
 2729 00de FF22     		movs	r2, #255
 2730 00e0 5A62     		str	r2, [r3, #36]
1323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2731              		.loc 1 1325 0
 2732 00e2 FB68     		ldr	r3, [r7, #12]
 2733 00e4 0122     		movs	r2, #1
 2734 00e6 5A77     		strb	r2, [r3, #29]
1326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2735              		.loc 1 1328 0
 2736 00e8 FB68     		ldr	r3, [r7, #12]
 2737 00ea 0022     		movs	r2, #0
 2738 00ec 1A77     		strb	r2, [r3, #28]
1329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2739              		.loc 1 1330 0
 2740 00ee 0023     		movs	r3, #0
 2741              	.L99:
1331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2742              		.loc 1 1331 0
 2743 00f0 1846     		mov	r0, r3
 2744 00f2 1837     		adds	r7, r7, #24
 2745              	.LCFI136:
 2746              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccxkMiox.s 			page 72


 2747 00f4 BD46     		mov	sp, r7
 2748              	.LCFI137:
 2749              		.cfi_def_cfa_register 13
 2750              		@ sp needed
 2751 00f6 80BD     		pop	{r7, pc}
 2752              		.cfi_endproc
 2753              	.LFE147:
 2755              		.section	.text.HAL_RTCEx_SetCalibrationOutPut,"ax",%progbits
 2756              		.align	2
 2757              		.global	HAL_RTCEx_SetCalibrationOutPut
 2758              		.thumb
 2759              		.thumb_func
 2761              	HAL_RTCEx_SetCalibrationOutPut:
 2762              	.LFB148:
1332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Configure the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  CalibOutput Select the Calibration output Selection .
1337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *          This parameter can be one of the following values:
1338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_512HZ: A signal has a regular waveform at 512Hz. 
1339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *             @arg RTC_CALIBOUTPUT_1HZ: A signal has a regular waveform at 1Hz.
1340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetCalibrationOutPut(RTC_HandleTypeDef* hrtc, uint32_t CalibOutput)
1343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2763              		.loc 1 1343 0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 8
 2766              		@ frame_needed = 1, uses_anonymous_args = 0
 2767              		@ link register save eliminated.
 2768 0000 80B4     		push	{r7}
 2769              	.LCFI138:
 2770              		.cfi_def_cfa_offset 4
 2771              		.cfi_offset 7, -4
 2772 0002 83B0     		sub	sp, sp, #12
 2773              	.LCFI139:
 2774              		.cfi_def_cfa_offset 16
 2775 0004 00AF     		add	r7, sp, #0
 2776              	.LCFI140:
 2777              		.cfi_def_cfa_register 7
 2778 0006 7860     		str	r0, [r7, #4]
 2779 0008 3960     		str	r1, [r7]
1344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Check the parameters */
1345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   assert_param(IS_RTC_CALIB_OUTPUT(CalibOutput));
1346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2780              		.loc 1 1348 0
 2781 000a 7B68     		ldr	r3, [r7, #4]
 2782 000c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2783 000e 012B     		cmp	r3, #1
 2784 0010 01D1     		bne	.L105
 2785              		.loc 1 1348 0 is_stmt 0 discriminator 1
 2786 0012 0223     		movs	r3, #2
 2787 0014 30E0     		b	.L106
 2788              	.L105:
ARM GAS  /tmp/ccxkMiox.s 			page 73


 2789              		.loc 1 1348 0 discriminator 2
 2790 0016 7B68     		ldr	r3, [r7, #4]
 2791 0018 0122     		movs	r2, #1
 2792 001a 1A77     		strb	r2, [r3, #28]
1349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2793              		.loc 1 1350 0 is_stmt 1 discriminator 2
 2794 001c 7B68     		ldr	r3, [r7, #4]
 2795 001e 0222     		movs	r2, #2
 2796 0020 5A77     		strb	r2, [r3, #29]
1351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2797              		.loc 1 1353 0 discriminator 2
 2798 0022 7B68     		ldr	r3, [r7, #4]
 2799 0024 1B68     		ldr	r3, [r3]
 2800 0026 CA22     		movs	r2, #202
 2801 0028 5A62     		str	r2, [r3, #36]
 2802 002a 7B68     		ldr	r3, [r7, #4]
 2803 002c 1B68     		ldr	r3, [r3]
 2804 002e 5322     		movs	r2, #83
 2805 0030 5A62     		str	r2, [r3, #36]
1354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear flags before config */
1356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= (uint32_t)~RTC_CR_COSEL;
 2806              		.loc 1 1356 0 discriminator 2
 2807 0032 7B68     		ldr	r3, [r7, #4]
 2808 0034 1B68     		ldr	r3, [r3]
 2809 0036 7A68     		ldr	r2, [r7, #4]
 2810 0038 1268     		ldr	r2, [r2]
 2811 003a 9268     		ldr	r2, [r2, #8]
 2812 003c 22F40022 		bic	r2, r2, #524288
 2813 0040 9A60     		str	r2, [r3, #8]
1357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Configure the RTC_CR register */
1359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint32_t)CalibOutput;
 2814              		.loc 1 1359 0 discriminator 2
 2815 0042 7B68     		ldr	r3, [r7, #4]
 2816 0044 1B68     		ldr	r3, [r3]
 2817 0046 7A68     		ldr	r2, [r7, #4]
 2818 0048 1268     		ldr	r2, [r2]
 2819 004a 9168     		ldr	r1, [r2, #8]
 2820 004c 3A68     		ldr	r2, [r7]
 2821 004e 0A43     		orrs	r2, r2, r1
 2822 0050 9A60     		str	r2, [r3, #8]
1360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_ENABLE(hrtc);
 2823              		.loc 1 1361 0 discriminator 2
 2824 0052 7B68     		ldr	r3, [r7, #4]
 2825 0054 1B68     		ldr	r3, [r3]
 2826 0056 7A68     		ldr	r2, [r7, #4]
 2827 0058 1268     		ldr	r2, [r2]
 2828 005a 9268     		ldr	r2, [r2, #8]
 2829 005c 42F40002 		orr	r2, r2, #8388608
 2830 0060 9A60     		str	r2, [r3, #8]
1362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
ARM GAS  /tmp/ccxkMiox.s 			page 74


1364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2831              		.loc 1 1364 0 discriminator 2
 2832 0062 7B68     		ldr	r3, [r7, #4]
 2833 0064 1B68     		ldr	r3, [r3]
 2834 0066 FF22     		movs	r2, #255
 2835 0068 5A62     		str	r2, [r3, #36]
1365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2836              		.loc 1 1367 0 discriminator 2
 2837 006a 7B68     		ldr	r3, [r7, #4]
 2838 006c 0122     		movs	r2, #1
 2839 006e 5A77     		strb	r2, [r3, #29]
1368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2840              		.loc 1 1370 0 discriminator 2
 2841 0070 7B68     		ldr	r3, [r7, #4]
 2842 0072 0022     		movs	r2, #0
 2843 0074 1A77     		strb	r2, [r3, #28]
1371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2844              		.loc 1 1372 0 discriminator 2
 2845 0076 0023     		movs	r3, #0
 2846              	.L106:
1373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2847              		.loc 1 1373 0
 2848 0078 1846     		mov	r0, r3
 2849 007a 0C37     		adds	r7, r7, #12
 2850              	.LCFI141:
 2851              		.cfi_def_cfa_offset 4
 2852 007c BD46     		mov	sp, r7
 2853              	.LCFI142:
 2854              		.cfi_def_cfa_register 13
 2855              		@ sp needed
 2856 007e 5DF8047B 		ldr	r7, [sp], #4
 2857              	.LCFI143:
 2858              		.cfi_restore 7
 2859              		.cfi_def_cfa_offset 0
 2860 0082 7047     		bx	lr
 2861              		.cfi_endproc
 2862              	.LFE148:
 2864              		.section	.text.HAL_RTCEx_DeactivateCalibrationOutPut,"ax",%progbits
 2865              		.align	2
 2866              		.global	HAL_RTCEx_DeactivateCalibrationOutPut
 2867              		.thumb
 2868              		.thumb_func
 2870              	HAL_RTCEx_DeactivateCalibrationOutPut:
 2871              	.LFB149:
1374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Deactivate the Calibration Pinout (RTC_CALIB) Selection (1Hz or 512Hz).
1377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateCalibrationOutPut(RTC_HandleTypeDef* hrtc)
1381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
ARM GAS  /tmp/ccxkMiox.s 			page 75


 2872              		.loc 1 1381 0
 2873              		.cfi_startproc
 2874              		@ args = 0, pretend = 0, frame = 8
 2875              		@ frame_needed = 1, uses_anonymous_args = 0
 2876              		@ link register save eliminated.
 2877 0000 80B4     		push	{r7}
 2878              	.LCFI144:
 2879              		.cfi_def_cfa_offset 4
 2880              		.cfi_offset 7, -4
 2881 0002 83B0     		sub	sp, sp, #12
 2882              	.LCFI145:
 2883              		.cfi_def_cfa_offset 16
 2884 0004 00AF     		add	r7, sp, #0
 2885              	.LCFI146:
 2886              		.cfi_def_cfa_register 7
 2887 0006 7860     		str	r0, [r7, #4]
1382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2888              		.loc 1 1383 0
 2889 0008 7B68     		ldr	r3, [r7, #4]
 2890 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2891 000c 012B     		cmp	r3, #1
 2892 000e 01D1     		bne	.L108
 2893              		.loc 1 1383 0 is_stmt 0 discriminator 1
 2894 0010 0223     		movs	r3, #2
 2895 0012 20E0     		b	.L109
 2896              	.L108:
 2897              		.loc 1 1383 0 discriminator 2
 2898 0014 7B68     		ldr	r3, [r7, #4]
 2899 0016 0122     		movs	r2, #1
 2900 0018 1A77     		strb	r2, [r3, #28]
1384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2901              		.loc 1 1385 0 is_stmt 1 discriminator 2
 2902 001a 7B68     		ldr	r3, [r7, #4]
 2903 001c 0222     		movs	r2, #2
 2904 001e 5A77     		strb	r2, [r3, #29]
1386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2905              		.loc 1 1388 0 discriminator 2
 2906 0020 7B68     		ldr	r3, [r7, #4]
 2907 0022 1B68     		ldr	r3, [r3]
 2908 0024 CA22     		movs	r2, #202
 2909 0026 5A62     		str	r2, [r3, #36]
 2910 0028 7B68     		ldr	r3, [r7, #4]
 2911 002a 1B68     		ldr	r3, [r3]
 2912 002c 5322     		movs	r2, #83
 2913 002e 5A62     		str	r2, [r3, #36]
1389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_CALIBRATION_OUTPUT_DISABLE(hrtc);
 2914              		.loc 1 1390 0 discriminator 2
 2915 0030 7B68     		ldr	r3, [r7, #4]
 2916 0032 1B68     		ldr	r3, [r3]
 2917 0034 7A68     		ldr	r2, [r7, #4]
 2918 0036 1268     		ldr	r2, [r2]
 2919 0038 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/ccxkMiox.s 			page 76


 2920 003a 22F40002 		bic	r2, r2, #8388608
 2921 003e 9A60     		str	r2, [r3, #8]
1391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2922              		.loc 1 1393 0 discriminator 2
 2923 0040 7B68     		ldr	r3, [r7, #4]
 2924 0042 1B68     		ldr	r3, [r3]
 2925 0044 FF22     		movs	r2, #255
 2926 0046 5A62     		str	r2, [r3, #36]
1394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2927              		.loc 1 1396 0 discriminator 2
 2928 0048 7B68     		ldr	r3, [r7, #4]
 2929 004a 0122     		movs	r2, #1
 2930 004c 5A77     		strb	r2, [r3, #29]
1397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 2931              		.loc 1 1399 0 discriminator 2
 2932 004e 7B68     		ldr	r3, [r7, #4]
 2933 0050 0022     		movs	r2, #0
 2934 0052 1A77     		strb	r2, [r3, #28]
1400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 2935              		.loc 1 1401 0 discriminator 2
 2936 0054 0023     		movs	r3, #0
 2937              	.L109:
1402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 2938              		.loc 1 1402 0
 2939 0056 1846     		mov	r0, r3
 2940 0058 0C37     		adds	r7, r7, #12
 2941              	.LCFI147:
 2942              		.cfi_def_cfa_offset 4
 2943 005a BD46     		mov	sp, r7
 2944              	.LCFI148:
 2945              		.cfi_def_cfa_register 13
 2946              		@ sp needed
 2947 005c 5DF8047B 		ldr	r7, [sp], #4
 2948              	.LCFI149:
 2949              		.cfi_restore 7
 2950              		.cfi_def_cfa_offset 0
 2951 0060 7047     		bx	lr
 2952              		.cfi_endproc
 2953              	.LFE149:
 2955 0062 00BF     		.section	.text.HAL_RTCEx_SetRefClock,"ax",%progbits
 2956              		.align	2
 2957              		.global	HAL_RTCEx_SetRefClock
 2958              		.thumb
 2959              		.thumb_func
 2961              	HAL_RTCEx_SetRefClock:
 2962              	.LFB150:
1403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Enable the RTC reference clock detection.
1406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
ARM GAS  /tmp/ccxkMiox.s 			page 77


1407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_SetRefClock(RTC_HandleTypeDef* hrtc)
1410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 2963              		.loc 1 1410 0
 2964              		.cfi_startproc
 2965              		@ args = 0, pretend = 0, frame = 8
 2966              		@ frame_needed = 1, uses_anonymous_args = 0
 2967 0000 80B5     		push	{r7, lr}
 2968              	.LCFI150:
 2969              		.cfi_def_cfa_offset 8
 2970              		.cfi_offset 7, -8
 2971              		.cfi_offset 14, -4
 2972 0002 82B0     		sub	sp, sp, #8
 2973              	.LCFI151:
 2974              		.cfi_def_cfa_offset 16
 2975 0004 00AF     		add	r7, sp, #0
 2976              	.LCFI152:
 2977              		.cfi_def_cfa_register 7
 2978 0006 7860     		str	r0, [r7, #4]
1411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 2979              		.loc 1 1412 0
 2980 0008 7B68     		ldr	r3, [r7, #4]
 2981 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 2982 000c 012B     		cmp	r3, #1
 2983 000e 01D1     		bne	.L111
 2984              		.loc 1 1412 0 is_stmt 0 discriminator 1
 2985 0010 0223     		movs	r3, #2
 2986 0012 3AE0     		b	.L112
 2987              	.L111:
 2988              		.loc 1 1412 0 discriminator 2
 2989 0014 7B68     		ldr	r3, [r7, #4]
 2990 0016 0122     		movs	r2, #1
 2991 0018 1A77     		strb	r2, [r3, #28]
1413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2992              		.loc 1 1414 0 is_stmt 1 discriminator 2
 2993 001a 7B68     		ldr	r3, [r7, #4]
 2994 001c 0222     		movs	r2, #2
 2995 001e 5A77     		strb	r2, [r3, #29]
1415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2996              		.loc 1 1417 0 discriminator 2
 2997 0020 7B68     		ldr	r3, [r7, #4]
 2998 0022 1B68     		ldr	r3, [r3]
 2999 0024 CA22     		movs	r2, #202
 3000 0026 5A62     		str	r2, [r3, #36]
 3001 0028 7B68     		ldr	r3, [r7, #4]
 3002 002a 1B68     		ldr	r3, [r3]
 3003 002c 5322     		movs	r2, #83
 3004 002e 5A62     		str	r2, [r3, #36]
1418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 3005              		.loc 1 1420 0 discriminator 2
ARM GAS  /tmp/ccxkMiox.s 			page 78


 3006 0030 7868     		ldr	r0, [r7, #4]
 3007 0032 FFF7FEFF 		bl	RTC_EnterInitMode
 3008 0036 0346     		mov	r3, r0
 3009 0038 002B     		cmp	r3, #0
 3010 003a 0BD0     		beq	.L113
1421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3011              		.loc 1 1423 0
 3012 003c 7B68     		ldr	r3, [r7, #4]
 3013 003e 1B68     		ldr	r3, [r3]
 3014 0040 FF22     		movs	r2, #255
 3015 0042 5A62     		str	r2, [r3, #36]
1424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Set RTC state*/
1426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 3016              		.loc 1 1426 0
 3017 0044 7B68     		ldr	r3, [r7, #4]
 3018 0046 0422     		movs	r2, #4
 3019 0048 5A77     		strb	r2, [r3, #29]
1427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Process Unlocked */
1429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 3020              		.loc 1 1429 0
 3021 004a 7B68     		ldr	r3, [r7, #4]
 3022 004c 0022     		movs	r2, #0
 3023 004e 1A77     		strb	r2, [r3, #28]
1430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     return HAL_ERROR;
 3024              		.loc 1 1431 0
 3025 0050 0123     		movs	r3, #1
 3026 0052 1AE0     		b	.L112
 3027              	.L113:
1432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   else
1434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_ENABLE(hrtc);
 3028              		.loc 1 1435 0
 3029 0054 7B68     		ldr	r3, [r7, #4]
 3030 0056 1B68     		ldr	r3, [r3]
 3031 0058 7A68     		ldr	r2, [r7, #4]
 3032 005a 1268     		ldr	r2, [r2]
 3033 005c 9268     		ldr	r2, [r2, #8]
 3034 005e 42F01002 		orr	r2, r2, #16
 3035 0062 9A60     		str	r2, [r3, #8]
1436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 3036              		.loc 1 1438 0
 3037 0064 7B68     		ldr	r3, [r7, #4]
 3038 0066 1B68     		ldr	r3, [r3]
 3039 0068 7A68     		ldr	r2, [r7, #4]
 3040 006a 1268     		ldr	r2, [r2]
 3041 006c D268     		ldr	r2, [r2, #12]
 3042 006e 22F08002 		bic	r2, r2, #128
 3043 0072 DA60     		str	r2, [r3, #12]
1439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
ARM GAS  /tmp/ccxkMiox.s 			page 79


1440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3044              		.loc 1 1442 0
 3045 0074 7B68     		ldr	r3, [r7, #4]
 3046 0076 1B68     		ldr	r3, [r3]
 3047 0078 FF22     		movs	r2, #255
 3048 007a 5A62     		str	r2, [r3, #36]
1443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    /* Change RTC state */
1445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3049              		.loc 1 1445 0
 3050 007c 7B68     		ldr	r3, [r7, #4]
 3051 007e 0122     		movs	r2, #1
 3052 0080 5A77     		strb	r2, [r3, #29]
1446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3053              		.loc 1 1448 0
 3054 0082 7B68     		ldr	r3, [r7, #4]
 3055 0084 0022     		movs	r2, #0
 3056 0086 1A77     		strb	r2, [r3, #28]
1449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 3057              		.loc 1 1450 0
 3058 0088 0023     		movs	r3, #0
 3059              	.L112:
1451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 3060              		.loc 1 1451 0
 3061 008a 1846     		mov	r0, r3
 3062 008c 0837     		adds	r7, r7, #8
 3063              	.LCFI153:
 3064              		.cfi_def_cfa_offset 8
 3065 008e BD46     		mov	sp, r7
 3066              	.LCFI154:
 3067              		.cfi_def_cfa_register 13
 3068              		@ sp needed
 3069 0090 80BD     		pop	{r7, pc}
 3070              		.cfi_endproc
 3071              	.LFE150:
 3073 0092 00BF     		.section	.text.HAL_RTCEx_DeactivateRefClock,"ax",%progbits
 3074              		.align	2
 3075              		.global	HAL_RTCEx_DeactivateRefClock
 3076              		.thumb
 3077              		.thumb_func
 3079              	HAL_RTCEx_DeactivateRefClock:
 3080              	.LFB151:
1452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Disable the RTC reference clock detection.
1455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DeactivateRefClock(RTC_HandleTypeDef* hrtc)
1459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 3081              		.loc 1 1459 0
 3082              		.cfi_startproc
ARM GAS  /tmp/ccxkMiox.s 			page 80


 3083              		@ args = 0, pretend = 0, frame = 8
 3084              		@ frame_needed = 1, uses_anonymous_args = 0
 3085 0000 80B5     		push	{r7, lr}
 3086              	.LCFI155:
 3087              		.cfi_def_cfa_offset 8
 3088              		.cfi_offset 7, -8
 3089              		.cfi_offset 14, -4
 3090 0002 82B0     		sub	sp, sp, #8
 3091              	.LCFI156:
 3092              		.cfi_def_cfa_offset 16
 3093 0004 00AF     		add	r7, sp, #0
 3094              	.LCFI157:
 3095              		.cfi_def_cfa_register 7
 3096 0006 7860     		str	r0, [r7, #4]
1460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3097              		.loc 1 1461 0
 3098 0008 7B68     		ldr	r3, [r7, #4]
 3099 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3100 000c 012B     		cmp	r3, #1
 3101 000e 01D1     		bne	.L115
 3102              		.loc 1 1461 0 is_stmt 0 discriminator 1
 3103 0010 0223     		movs	r3, #2
 3104 0012 3AE0     		b	.L116
 3105              	.L115:
 3106              		.loc 1 1461 0 discriminator 2
 3107 0014 7B68     		ldr	r3, [r7, #4]
 3108 0016 0122     		movs	r2, #1
 3109 0018 1A77     		strb	r2, [r3, #28]
1462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3110              		.loc 1 1463 0 is_stmt 1 discriminator 2
 3111 001a 7B68     		ldr	r3, [r7, #4]
 3112 001c 0222     		movs	r2, #2
 3113 001e 5A77     		strb	r2, [r3, #29]
1464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3114              		.loc 1 1466 0 discriminator 2
 3115 0020 7B68     		ldr	r3, [r7, #4]
 3116 0022 1B68     		ldr	r3, [r3]
 3117 0024 CA22     		movs	r2, #202
 3118 0026 5A62     		str	r2, [r3, #36]
 3119 0028 7B68     		ldr	r3, [r7, #4]
 3120 002a 1B68     		ldr	r3, [r3]
 3121 002c 5322     		movs	r2, #83
 3122 002e 5A62     		str	r2, [r3, #36]
1467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Set Initialization mode */
1469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 3123              		.loc 1 1469 0 discriminator 2
 3124 0030 7868     		ldr	r0, [r7, #4]
 3125 0032 FFF7FEFF 		bl	RTC_EnterInitMode
 3126 0036 0346     		mov	r3, r0
 3127 0038 002B     		cmp	r3, #0
 3128 003a 0BD0     		beq	.L117
1470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
ARM GAS  /tmp/ccxkMiox.s 			page 81


1471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Enable the write protection for RTC registers */
1472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3129              		.loc 1 1472 0
 3130 003c 7B68     		ldr	r3, [r7, #4]
 3131 003e 1B68     		ldr	r3, [r3]
 3132 0040 FF22     		movs	r2, #255
 3133 0042 5A62     		str	r2, [r3, #36]
1473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Set RTC state*/
1475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 3134              		.loc 1 1475 0
 3135 0044 7B68     		ldr	r3, [r7, #4]
 3136 0046 0422     		movs	r2, #4
 3137 0048 5A77     		strb	r2, [r3, #29]
1476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Process Unlocked */
1478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_UNLOCK(hrtc);
 3138              		.loc 1 1478 0
 3139 004a 7B68     		ldr	r3, [r7, #4]
 3140 004c 0022     		movs	r2, #0
 3141 004e 1A77     		strb	r2, [r3, #28]
1479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     return HAL_ERROR;
 3142              		.loc 1 1480 0
 3143 0050 0123     		movs	r3, #1
 3144 0052 1AE0     		b	.L116
 3145              	.L117:
1481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   else
1483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     __HAL_RTC_CLOCKREF_DETECTION_DISABLE(hrtc);
 3146              		.loc 1 1484 0
 3147 0054 7B68     		ldr	r3, [r7, #4]
 3148 0056 1B68     		ldr	r3, [r3]
 3149 0058 7A68     		ldr	r2, [r7, #4]
 3150 005a 1268     		ldr	r2, [r2]
 3151 005c 9268     		ldr	r2, [r2, #8]
 3152 005e 22F01002 		bic	r2, r2, #16
 3153 0062 9A60     		str	r2, [r3, #8]
1485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     /* Exit Initialization mode */
1487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     hrtc->Instance->ISR &= (uint32_t)~RTC_ISR_INIT;
 3154              		.loc 1 1487 0
 3155 0064 7B68     		ldr	r3, [r7, #4]
 3156 0066 1B68     		ldr	r3, [r3]
 3157 0068 7A68     		ldr	r2, [r7, #4]
 3158 006a 1268     		ldr	r2, [r2]
 3159 006c D268     		ldr	r2, [r2, #12]
 3160 006e 22F08002 		bic	r2, r2, #128
 3161 0072 DA60     		str	r2, [r3, #12]
1488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3162              		.loc 1 1491 0
 3163 0074 7B68     		ldr	r3, [r7, #4]
 3164 0076 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccxkMiox.s 			page 82


 3165 0078 FF22     		movs	r2, #255
 3166 007a 5A62     		str	r2, [r3, #36]
1492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3167              		.loc 1 1494 0
 3168 007c 7B68     		ldr	r3, [r7, #4]
 3169 007e 0122     		movs	r2, #1
 3170 0080 5A77     		strb	r2, [r3, #29]
1495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3171              		.loc 1 1497 0
 3172 0082 7B68     		ldr	r3, [r7, #4]
 3173 0084 0022     		movs	r2, #0
 3174 0086 1A77     		strb	r2, [r3, #28]
1498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 3175              		.loc 1 1499 0
 3176 0088 0023     		movs	r3, #0
 3177              	.L116:
1500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 3178              		.loc 1 1500 0
 3179 008a 1846     		mov	r0, r3
 3180 008c 0837     		adds	r7, r7, #8
 3181              	.LCFI158:
 3182              		.cfi_def_cfa_offset 8
 3183 008e BD46     		mov	sp, r7
 3184              	.LCFI159:
 3185              		.cfi_def_cfa_register 13
 3186              		@ sp needed
 3187 0090 80BD     		pop	{r7, pc}
 3188              		.cfi_endproc
 3189              	.LFE151:
 3191 0092 00BF     		.section	.text.HAL_RTCEx_EnableBypassShadow,"ax",%progbits
 3192              		.align	2
 3193              		.global	HAL_RTCEx_EnableBypassShadow
 3194              		.thumb
 3195              		.thumb_func
 3197              	HAL_RTCEx_EnableBypassShadow:
 3198              	.LFB152:
1501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Enable the Bypass Shadow feature.
1504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken 
1506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_EnableBypassShadow(RTC_HandleTypeDef* hrtc)
1510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 3199              		.loc 1 1510 0
 3200              		.cfi_startproc
 3201              		@ args = 0, pretend = 0, frame = 8
 3202              		@ frame_needed = 1, uses_anonymous_args = 0
 3203              		@ link register save eliminated.
 3204 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccxkMiox.s 			page 83


 3205              	.LCFI160:
 3206              		.cfi_def_cfa_offset 4
 3207              		.cfi_offset 7, -4
 3208 0002 83B0     		sub	sp, sp, #12
 3209              	.LCFI161:
 3210              		.cfi_def_cfa_offset 16
 3211 0004 00AF     		add	r7, sp, #0
 3212              	.LCFI162:
 3213              		.cfi_def_cfa_register 7
 3214 0006 7860     		str	r0, [r7, #4]
1511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3215              		.loc 1 1512 0
 3216 0008 7B68     		ldr	r3, [r7, #4]
 3217 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3218 000c 012B     		cmp	r3, #1
 3219 000e 01D1     		bne	.L119
 3220              		.loc 1 1512 0 is_stmt 0 discriminator 1
 3221 0010 0223     		movs	r3, #2
 3222 0012 20E0     		b	.L120
 3223              	.L119:
 3224              		.loc 1 1512 0 discriminator 2
 3225 0014 7B68     		ldr	r3, [r7, #4]
 3226 0016 0122     		movs	r2, #1
 3227 0018 1A77     		strb	r2, [r3, #28]
1513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3228              		.loc 1 1514 0 is_stmt 1 discriminator 2
 3229 001a 7B68     		ldr	r3, [r7, #4]
 3230 001c 0222     		movs	r2, #2
 3231 001e 5A77     		strb	r2, [r3, #29]
1515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3232              		.loc 1 1517 0 discriminator 2
 3233 0020 7B68     		ldr	r3, [r7, #4]
 3234 0022 1B68     		ldr	r3, [r3]
 3235 0024 CA22     		movs	r2, #202
 3236 0026 5A62     		str	r2, [r3, #36]
 3237 0028 7B68     		ldr	r3, [r7, #4]
 3238 002a 1B68     		ldr	r3, [r3]
 3239 002c 5322     		movs	r2, #83
 3240 002e 5A62     		str	r2, [r3, #36]
1518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Set the BYPSHAD bit */
1520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR |= (uint8_t)RTC_CR_BYPSHAD;
 3241              		.loc 1 1520 0 discriminator 2
 3242 0030 7B68     		ldr	r3, [r7, #4]
 3243 0032 1B68     		ldr	r3, [r3]
 3244 0034 7A68     		ldr	r2, [r7, #4]
 3245 0036 1268     		ldr	r2, [r2]
 3246 0038 9268     		ldr	r2, [r2, #8]
 3247 003a 42F02002 		orr	r2, r2, #32
 3248 003e 9A60     		str	r2, [r3, #8]
1521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/ccxkMiox.s 			page 84


 3249              		.loc 1 1523 0 discriminator 2
 3250 0040 7B68     		ldr	r3, [r7, #4]
 3251 0042 1B68     		ldr	r3, [r3]
 3252 0044 FF22     		movs	r2, #255
 3253 0046 5A62     		str	r2, [r3, #36]
1524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3254              		.loc 1 1526 0 discriminator 2
 3255 0048 7B68     		ldr	r3, [r7, #4]
 3256 004a 0122     		movs	r2, #1
 3257 004c 5A77     		strb	r2, [r3, #29]
1527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3258              		.loc 1 1529 0 discriminator 2
 3259 004e 7B68     		ldr	r3, [r7, #4]
 3260 0050 0022     		movs	r2, #0
 3261 0052 1A77     		strb	r2, [r3, #28]
1530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 3262              		.loc 1 1531 0 discriminator 2
 3263 0054 0023     		movs	r3, #0
 3264              	.L120:
1532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 3265              		.loc 1 1532 0
 3266 0056 1846     		mov	r0, r3
 3267 0058 0C37     		adds	r7, r7, #12
 3268              	.LCFI163:
 3269              		.cfi_def_cfa_offset 4
 3270 005a BD46     		mov	sp, r7
 3271              	.LCFI164:
 3272              		.cfi_def_cfa_register 13
 3273              		@ sp needed
 3274 005c 5DF8047B 		ldr	r7, [sp], #4
 3275              	.LCFI165:
 3276              		.cfi_restore 7
 3277              		.cfi_def_cfa_offset 0
 3278 0060 7047     		bx	lr
 3279              		.cfi_endproc
 3280              	.LFE152:
 3282 0062 00BF     		.section	.text.HAL_RTCEx_DisableBypassShadow,"ax",%progbits
 3283              		.align	2
 3284              		.global	HAL_RTCEx_DisableBypassShadow
 3285              		.thumb
 3286              		.thumb_func
 3288              	HAL_RTCEx_DisableBypassShadow:
 3289              	.LFB153:
1533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Disable the Bypass Shadow feature.
1536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @note   When the Bypass Shadow is enabled the calendar value are taken
1538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *         directly from the Calendar counter.
1539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_DisableBypassShadow(RTC_HandleTypeDef* hrtc)
ARM GAS  /tmp/ccxkMiox.s 			page 85


1542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 3290              		.loc 1 1542 0
 3291              		.cfi_startproc
 3292              		@ args = 0, pretend = 0, frame = 8
 3293              		@ frame_needed = 1, uses_anonymous_args = 0
 3294              		@ link register save eliminated.
 3295 0000 80B4     		push	{r7}
 3296              	.LCFI166:
 3297              		.cfi_def_cfa_offset 4
 3298              		.cfi_offset 7, -4
 3299 0002 83B0     		sub	sp, sp, #12
 3300              	.LCFI167:
 3301              		.cfi_def_cfa_offset 16
 3302 0004 00AF     		add	r7, sp, #0
 3303              	.LCFI168:
 3304              		.cfi_def_cfa_register 7
 3305 0006 7860     		str	r0, [r7, #4]
1543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Locked */
1544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_LOCK(hrtc);
 3306              		.loc 1 1544 0
 3307 0008 7B68     		ldr	r3, [r7, #4]
 3308 000a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 3309 000c 012B     		cmp	r3, #1
 3310 000e 01D1     		bne	.L122
 3311              		.loc 1 1544 0 is_stmt 0 discriminator 1
 3312 0010 0223     		movs	r3, #2
 3313 0012 20E0     		b	.L123
 3314              	.L122:
 3315              		.loc 1 1544 0 discriminator 2
 3316 0014 7B68     		ldr	r3, [r7, #4]
 3317 0016 0122     		movs	r2, #1
 3318 0018 1A77     		strb	r2, [r3, #28]
1545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 3319              		.loc 1 1546 0 is_stmt 1 discriminator 2
 3320 001a 7B68     		ldr	r3, [r7, #4]
 3321 001c 0222     		movs	r2, #2
 3322 001e 5A77     		strb	r2, [r3, #29]
1547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Disable the write protection for RTC registers */
1549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 3323              		.loc 1 1549 0 discriminator 2
 3324 0020 7B68     		ldr	r3, [r7, #4]
 3325 0022 1B68     		ldr	r3, [r3]
 3326 0024 CA22     		movs	r2, #202
 3327 0026 5A62     		str	r2, [r3, #36]
 3328 0028 7B68     		ldr	r3, [r7, #4]
 3329 002a 1B68     		ldr	r3, [r3]
 3330 002c 5322     		movs	r2, #83
 3331 002e 5A62     		str	r2, [r3, #36]
1550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Reset the BYPSHAD bit */
1552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->Instance->CR &= ((uint8_t)~RTC_CR_BYPSHAD);
 3332              		.loc 1 1552 0 discriminator 2
 3333 0030 7B68     		ldr	r3, [r7, #4]
 3334 0032 1B68     		ldr	r3, [r3]
 3335 0034 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccxkMiox.s 			page 86


 3336 0036 1268     		ldr	r2, [r2]
 3337 0038 9268     		ldr	r2, [r2, #8]
 3338 003a 02F0DF02 		and	r2, r2, #223
 3339 003e 9A60     		str	r2, [r3, #8]
1553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Enable the write protection for RTC registers */
1555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 3340              		.loc 1 1555 0 discriminator 2
 3341 0040 7B68     		ldr	r3, [r7, #4]
 3342 0042 1B68     		ldr	r3, [r3]
 3343 0044 FF22     		movs	r2, #255
 3344 0046 5A62     		str	r2, [r3, #36]
1556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY;
 3345              		.loc 1 1558 0 discriminator 2
 3346 0048 7B68     		ldr	r3, [r7, #4]
 3347 004a 0122     		movs	r2, #1
 3348 004c 5A77     		strb	r2, [r3, #29]
1559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Process Unlocked */
1561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_UNLOCK(hrtc);
 3349              		.loc 1 1561 0 discriminator 2
 3350 004e 7B68     		ldr	r3, [r7, #4]
 3351 0050 0022     		movs	r2, #0
 3352 0052 1A77     		strb	r2, [r3, #28]
1562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK;
 3353              		.loc 1 1563 0 discriminator 2
 3354 0054 0023     		movs	r3, #0
 3355              	.L123:
1564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 3356              		.loc 1 1564 0
 3357 0056 1846     		mov	r0, r3
 3358 0058 0C37     		adds	r7, r7, #12
 3359              	.LCFI169:
 3360              		.cfi_def_cfa_offset 4
 3361 005a BD46     		mov	sp, r7
 3362              	.LCFI170:
 3363              		.cfi_def_cfa_register 13
 3364              		@ sp needed
 3365 005c 5DF8047B 		ldr	r7, [sp], #4
 3366              	.LCFI171:
 3367              		.cfi_restore 7
 3368              		.cfi_def_cfa_offset 0
 3369 0060 7047     		bx	lr
 3370              		.cfi_endproc
 3371              	.LFE153:
 3373 0062 00BF     		.section	.text.HAL_RTCEx_AlarmBEventCallback,"ax",%progbits
 3374              		.align	2
 3375              		.weak	HAL_RTCEx_AlarmBEventCallback
 3376              		.thumb
 3377              		.thumb_func
 3379              	HAL_RTCEx_AlarmBEventCallback:
 3380              	.LFB154:
1565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
ARM GAS  /tmp/ccxkMiox.s 			page 87


1567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @}
1568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /** @addtogroup RTCEx_Exported_Functions_Group4 Extended features functions
1571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief    Extended features functions
1572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   *
1573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @verbatim   
1574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================
1575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                  ##### Extended features functions #####
1576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****  ===============================================================================  
1577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     [..]  This section provides functions allowing to:
1578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) RTC Alram B callback
1579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       (+) RTC Poll for Alarm B request
1580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****                
1581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** @endverbatim
1582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @{
1583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  Alarm B callback.
1587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval None
1589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** __weak void HAL_RTCEx_AlarmBEventCallback(RTC_HandleTypeDef *hrtc)
1591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {
 3381              		.loc 1 1591 0
 3382              		.cfi_startproc
 3383              		@ args = 0, pretend = 0, frame = 8
 3384              		@ frame_needed = 1, uses_anonymous_args = 0
 3385              		@ link register save eliminated.
 3386 0000 80B4     		push	{r7}
 3387              	.LCFI172:
 3388              		.cfi_def_cfa_offset 4
 3389              		.cfi_offset 7, -4
 3390 0002 83B0     		sub	sp, sp, #12
 3391              	.LCFI173:
 3392              		.cfi_def_cfa_offset 16
 3393 0004 00AF     		add	r7, sp, #0
 3394              	.LCFI174:
 3395              		.cfi_def_cfa_register 7
 3396 0006 7860     		str	r0, [r7, #4]
1592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   UNUSED(hrtc);
1594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****             the HAL_RTCEx_AlarmBEventCallback could be implemented in the user file
1597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****    */
1598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 3397              		.loc 1 1598 0
 3398 0008 0C37     		adds	r7, r7, #12
 3399              	.LCFI175:
 3400              		.cfi_def_cfa_offset 4
 3401 000a BD46     		mov	sp, r7
 3402              	.LCFI176:
 3403              		.cfi_def_cfa_register 13
 3404              		@ sp needed
 3405 000c 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccxkMiox.s 			page 88


 3406              	.LCFI177:
 3407              		.cfi_restore 7
 3408              		.cfi_def_cfa_offset 0
 3409 0010 7047     		bx	lr
 3410              		.cfi_endproc
 3411              	.LFE154:
 3413 0012 00BF     		.section	.text.HAL_RTCEx_PollForAlarmBEvent,"ax",%progbits
 3414              		.align	2
 3415              		.global	HAL_RTCEx_PollForAlarmBEvent
 3416              		.thumb
 3417              		.thumb_func
 3419              	HAL_RTCEx_PollForAlarmBEvent:
 3420              	.LFB155:
1599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** 
1600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** /**
1601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @brief  This function handles AlarmB Polling request.
1602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  hrtc RTC handle
1603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @param  Timeout Timeout duration
1604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   * @retval HAL status
1605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   */
1606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** HAL_StatusTypeDef HAL_RTCEx_PollForAlarmBEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** {  
 3421              		.loc 1 1607 0
 3422              		.cfi_startproc
 3423              		@ args = 0, pretend = 0, frame = 16
 3424              		@ frame_needed = 1, uses_anonymous_args = 0
 3425 0000 80B5     		push	{r7, lr}
 3426              	.LCFI178:
 3427              		.cfi_def_cfa_offset 8
 3428              		.cfi_offset 7, -8
 3429              		.cfi_offset 14, -4
 3430 0002 84B0     		sub	sp, sp, #16
 3431              	.LCFI179:
 3432              		.cfi_def_cfa_offset 24
 3433 0004 00AF     		add	r7, sp, #0
 3434              	.LCFI180:
 3435              		.cfi_def_cfa_register 7
 3436 0006 7860     		str	r0, [r7, #4]
 3437 0008 3960     		str	r1, [r7]
1608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   uint32_t tickstart = HAL_GetTick();
 3438              		.loc 1 1608 0
 3439 000a FFF7FEFF 		bl	HAL_GetTick
 3440 000e F860     		str	r0, [r7, #12]
1609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) == RESET)
 3441              		.loc 1 1610 0
 3442 0010 13E0     		b	.L126
 3443              	.L129:
1611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
1612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 3444              		.loc 1 1612 0
 3445 0012 3B68     		ldr	r3, [r7]
 3446 0014 B3F1FF3F 		cmp	r3, #-1
 3447 0018 0FD0     		beq	.L126
1613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     {
1614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 3448              		.loc 1 1614 0
ARM GAS  /tmp/ccxkMiox.s 			page 89


 3449 001a 3B68     		ldr	r3, [r7]
 3450 001c 002B     		cmp	r3, #0
 3451 001e 07D0     		beq	.L127
 3452              		.loc 1 1614 0 is_stmt 0 discriminator 1
 3453 0020 FFF7FEFF 		bl	HAL_GetTick
 3454 0024 0246     		mov	r2, r0
 3455 0026 FB68     		ldr	r3, [r7, #12]
 3456 0028 D21A     		subs	r2, r2, r3
 3457 002a 3B68     		ldr	r3, [r7]
 3458 002c 9A42     		cmp	r2, r3
 3459 002e 04D9     		bls	.L126
 3460              	.L127:
1615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       {
1616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3461              		.loc 1 1616 0 is_stmt 1
 3462 0030 7B68     		ldr	r3, [r7, #4]
 3463 0032 0322     		movs	r2, #3
 3464 0034 5A77     		strb	r2, [r3, #29]
1617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****         return HAL_TIMEOUT;
 3465              		.loc 1 1617 0
 3466 0036 0323     		movs	r3, #3
 3467 0038 13E0     		b	.L128
 3468              	.L126:
1610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   {
 3469              		.loc 1 1610 0
 3470 003a 7B68     		ldr	r3, [r7, #4]
 3471 003c 1B68     		ldr	r3, [r3]
 3472 003e DB68     		ldr	r3, [r3, #12]
 3473 0040 03F40073 		and	r3, r3, #512
 3474 0044 002B     		cmp	r3, #0
 3475 0046 E4D0     		beq	.L129
1618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****       }
1619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****     }
1620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   }
1621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Clear the Alarm Flag */
1623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 3476              		.loc 1 1623 0
 3477 0048 7B68     		ldr	r3, [r7, #4]
 3478 004a 1B68     		ldr	r3, [r3]
 3479 004c 7A68     		ldr	r2, [r7, #4]
 3480 004e 1268     		ldr	r2, [r2]
 3481 0050 D268     		ldr	r2, [r2, #12]
 3482 0052 D2B2     		uxtb	r2, r2
 3483 0054 62F42072 		orn	r2, r2, #640
 3484 0058 DA60     		str	r2, [r3, #12]
1624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   /* Change RTC state */
1626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   hrtc->State = HAL_RTC_STATE_READY; 
 3485              		.loc 1 1626 0
 3486 005a 7B68     		ldr	r3, [r7, #4]
 3487 005c 0122     		movs	r2, #1
 3488 005e 5A77     		strb	r2, [r3, #29]
1627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   
1628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c ****   return HAL_OK; 
 3489              		.loc 1 1628 0
 3490 0060 0023     		movs	r3, #0
ARM GAS  /tmp/ccxkMiox.s 			page 90


 3491              	.L128:
1629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rtc_ex.c **** }
 3492              		.loc 1 1629 0
 3493 0062 1846     		mov	r0, r3
 3494 0064 1037     		adds	r7, r7, #16
 3495              	.LCFI181:
 3496              		.cfi_def_cfa_offset 8
 3497 0066 BD46     		mov	sp, r7
 3498              	.LCFI182:
 3499              		.cfi_def_cfa_register 13
 3500              		@ sp needed
 3501 0068 80BD     		pop	{r7, pc}
 3502              		.cfi_endproc
 3503              	.LFE155:
 3505              		.text
 3506              	.Letext0:
 3507              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3508              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3509              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 3510              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 3511              		.file 6 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 3512              		.file 7 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc.h"
 3513              		.file 8 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc_ex.h"
 3514              		.file 9 "../../Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccxkMiox.s 			page 91


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_rtc_ex.c
     /tmp/ccxkMiox.s:21     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 $t
     /tmp/ccxkMiox.s:26     .text.HAL_RTCEx_SetTimeStamp:0000000000000000 HAL_RTCEx_SetTimeStamp
     /tmp/ccxkMiox.s:135    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 $t
     /tmp/ccxkMiox.s:140    .text.HAL_RTCEx_SetTimeStamp_IT:0000000000000000 HAL_RTCEx_SetTimeStamp_IT
     /tmp/ccxkMiox.s:267    .text.HAL_RTCEx_SetTimeStamp_IT:00000000000000b4 $d
     /tmp/ccxkMiox.s:272    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 $t
     /tmp/ccxkMiox.s:277    .text.HAL_RTCEx_DeactivateTimeStamp:0000000000000000 HAL_RTCEx_DeactivateTimeStamp
     /tmp/ccxkMiox.s:378    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 $t
     /tmp/ccxkMiox.s:383    .text.HAL_RTCEx_GetTimeStamp:0000000000000000 HAL_RTCEx_GetTimeStamp
     /tmp/ccxkMiox.s:566    .text.HAL_RTCEx_SetTamper:0000000000000000 $t
     /tmp/ccxkMiox.s:571    .text.HAL_RTCEx_SetTamper:0000000000000000 HAL_RTCEx_SetTamper
     /tmp/ccxkMiox.s:708    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 $t
     /tmp/ccxkMiox.s:713    .text.HAL_RTCEx_SetTamper_IT:0000000000000000 HAL_RTCEx_SetTamper_IT
     /tmp/ccxkMiox.s:869    .text.HAL_RTCEx_SetTamper_IT:00000000000000d8 $d
     /tmp/ccxkMiox.s:874    .text.HAL_RTCEx_DeactivateTamper:0000000000000000 $t
     /tmp/ccxkMiox.s:879    .text.HAL_RTCEx_DeactivateTamper:0000000000000000 HAL_RTCEx_DeactivateTamper
     /tmp/ccxkMiox.s:954    .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 $t
     /tmp/ccxkMiox.s:959    .text.HAL_RTCEx_TamperTimeStampIRQHandler:0000000000000000 HAL_RTCEx_TamperTimeStampIRQHandler
     /tmp/ccxkMiox.s:1088   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 HAL_RTCEx_TimeStampEventCallback
     /tmp/ccxkMiox.s:1128   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 HAL_RTCEx_Tamper1EventCallback
     /tmp/ccxkMiox.s:1168   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 HAL_RTCEx_Tamper2EventCallback
     /tmp/ccxkMiox.s:1078   .text.HAL_RTCEx_TamperTimeStampIRQHandler:00000000000000b8 $d
     /tmp/ccxkMiox.s:1083   .text.HAL_RTCEx_TimeStampEventCallback:0000000000000000 $t
     /tmp/ccxkMiox.s:1123   .text.HAL_RTCEx_Tamper1EventCallback:0000000000000000 $t
     /tmp/ccxkMiox.s:1163   .text.HAL_RTCEx_Tamper2EventCallback:0000000000000000 $t
     /tmp/ccxkMiox.s:1203   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 $t
     /tmp/ccxkMiox.s:1208   .text.HAL_RTCEx_PollForTimeStampEvent:0000000000000000 HAL_RTCEx_PollForTimeStampEvent
     /tmp/ccxkMiox.s:1310   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 $t
     /tmp/ccxkMiox.s:1315   .text.HAL_RTCEx_PollForTamper1Event:0000000000000000 HAL_RTCEx_PollForTamper1Event
     /tmp/ccxkMiox.s:1402   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 $t
     /tmp/ccxkMiox.s:1407   .text.HAL_RTCEx_PollForTamper2Event:0000000000000000 HAL_RTCEx_PollForTamper2Event
     /tmp/ccxkMiox.s:1494   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 $t
     /tmp/ccxkMiox.s:1499   .text.HAL_RTCEx_SetWakeUpTimer:0000000000000000 HAL_RTCEx_SetWakeUpTimer
     /tmp/ccxkMiox.s:1698   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 $t
     /tmp/ccxkMiox.s:1703   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000000 HAL_RTCEx_SetWakeUpTimer_IT
     /tmp/ccxkMiox.s:1930   .text.HAL_RTCEx_SetWakeUpTimer_IT:0000000000000164 $d
     /tmp/ccxkMiox.s:1935   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 $t
     /tmp/ccxkMiox.s:1940   .text.HAL_RTCEx_DeactivateWakeUpTimer:0000000000000000 HAL_RTCEx_DeactivateWakeUpTimer
     /tmp/ccxkMiox.s:2070   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 $t
     /tmp/ccxkMiox.s:2075   .text.HAL_RTCEx_GetWakeUpTimer:0000000000000000 HAL_RTCEx_GetWakeUpTimer
     /tmp/ccxkMiox.s:2116   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 $t
     /tmp/ccxkMiox.s:2121   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000000 HAL_RTCEx_WakeUpTimerIRQHandler
     /tmp/ccxkMiox.s:2189   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
     /tmp/ccxkMiox.s:2179   .text.HAL_RTCEx_WakeUpTimerIRQHandler:0000000000000044 $d
     /tmp/ccxkMiox.s:2184   .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
     /tmp/ccxkMiox.s:2224   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 $t
     /tmp/ccxkMiox.s:2229   .text.HAL_RTCEx_PollForWakeUpTimerEvent:0000000000000000 HAL_RTCEx_PollForWakeUpTimerEvent
     /tmp/ccxkMiox.s:2316   .text.HAL_RTCEx_BKUPWrite:0000000000000000 $t
     /tmp/ccxkMiox.s:2321   .text.HAL_RTCEx_BKUPWrite:0000000000000000 HAL_RTCEx_BKUPWrite
     /tmp/ccxkMiox.s:2376   .text.HAL_RTCEx_BKUPRead:0000000000000000 $t
     /tmp/ccxkMiox.s:2381   .text.HAL_RTCEx_BKUPRead:0000000000000000 HAL_RTCEx_BKUPRead
     /tmp/ccxkMiox.s:2435   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 $t
     /tmp/ccxkMiox.s:2440   .text.HAL_RTCEx_SetSmoothCalib:0000000000000000 HAL_RTCEx_SetSmoothCalib
     /tmp/ccxkMiox.s:2574   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 $t
     /tmp/ccxkMiox.s:2579   .text.HAL_RTCEx_SetSynchroShift:0000000000000000 HAL_RTCEx_SetSynchroShift
ARM GAS  /tmp/ccxkMiox.s 			page 92


     /tmp/ccxkMiox.s:2756   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 $t
     /tmp/ccxkMiox.s:2761   .text.HAL_RTCEx_SetCalibrationOutPut:0000000000000000 HAL_RTCEx_SetCalibrationOutPut
     /tmp/ccxkMiox.s:2865   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 $t
     /tmp/ccxkMiox.s:2870   .text.HAL_RTCEx_DeactivateCalibrationOutPut:0000000000000000 HAL_RTCEx_DeactivateCalibrationOutPut
     /tmp/ccxkMiox.s:2956   .text.HAL_RTCEx_SetRefClock:0000000000000000 $t
     /tmp/ccxkMiox.s:2961   .text.HAL_RTCEx_SetRefClock:0000000000000000 HAL_RTCEx_SetRefClock
     /tmp/ccxkMiox.s:3074   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 $t
     /tmp/ccxkMiox.s:3079   .text.HAL_RTCEx_DeactivateRefClock:0000000000000000 HAL_RTCEx_DeactivateRefClock
     /tmp/ccxkMiox.s:3192   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 $t
     /tmp/ccxkMiox.s:3197   .text.HAL_RTCEx_EnableBypassShadow:0000000000000000 HAL_RTCEx_EnableBypassShadow
     /tmp/ccxkMiox.s:3283   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 $t
     /tmp/ccxkMiox.s:3288   .text.HAL_RTCEx_DisableBypassShadow:0000000000000000 HAL_RTCEx_DisableBypassShadow
     /tmp/ccxkMiox.s:3374   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 $t
     /tmp/ccxkMiox.s:3379   .text.HAL_RTCEx_AlarmBEventCallback:0000000000000000 HAL_RTCEx_AlarmBEventCallback
     /tmp/ccxkMiox.s:3414   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 $t
     /tmp/ccxkMiox.s:3419   .text.HAL_RTCEx_PollForAlarmBEvent:0000000000000000 HAL_RTCEx_PollForAlarmBEvent
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RTC_Bcd2ToByte
HAL_GetTick
HAL_RTC_WaitForSynchro
RTC_EnterInitMode
