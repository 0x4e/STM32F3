ARM GAS  /tmp/cclaaHiH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.arm_clarke_f32,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	arm_clarke_f32:
  26              	.LFB133:
  27              		.file 1 "../../Drivers/CMSIS/Include/arm_math.h"
   1:../../Drivers/CMSIS/Include/arm_math.h **** /* ----------------------------------------------------------------------
   2:../../Drivers/CMSIS/Include/arm_math.h **** * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
   3:../../Drivers/CMSIS/Include/arm_math.h **** *
   4:../../Drivers/CMSIS/Include/arm_math.h **** * $Date:        20. October 2015
   5:../../Drivers/CMSIS/Include/arm_math.h **** * $Revision:    V1.4.5 b
   6:../../Drivers/CMSIS/Include/arm_math.h **** *
   7:../../Drivers/CMSIS/Include/arm_math.h **** * Project:      CMSIS DSP Library
   8:../../Drivers/CMSIS/Include/arm_math.h **** * Title:        arm_math.h
   9:../../Drivers/CMSIS/Include/arm_math.h **** *
  10:../../Drivers/CMSIS/Include/arm_math.h **** * Description:  Public header file for CMSIS DSP Library
  11:../../Drivers/CMSIS/Include/arm_math.h **** *
  12:../../Drivers/CMSIS/Include/arm_math.h **** * Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0
  13:../../Drivers/CMSIS/Include/arm_math.h **** *
  14:../../Drivers/CMSIS/Include/arm_math.h **** * Redistribution and use in source and binary forms, with or without
  15:../../Drivers/CMSIS/Include/arm_math.h **** * modification, are permitted provided that the following conditions
  16:../../Drivers/CMSIS/Include/arm_math.h **** * are met:
  17:../../Drivers/CMSIS/Include/arm_math.h **** *   - Redistributions of source code must retain the above copyright
  18:../../Drivers/CMSIS/Include/arm_math.h **** *     notice, this list of conditions and the following disclaimer.
  19:../../Drivers/CMSIS/Include/arm_math.h **** *   - Redistributions in binary form must reproduce the above copyright
  20:../../Drivers/CMSIS/Include/arm_math.h **** *     notice, this list of conditions and the following disclaimer in
  21:../../Drivers/CMSIS/Include/arm_math.h **** *     the documentation and/or other materials provided with the
  22:../../Drivers/CMSIS/Include/arm_math.h **** *     distribution.
  23:../../Drivers/CMSIS/Include/arm_math.h **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../../Drivers/CMSIS/Include/arm_math.h **** *     may be used to endorse or promote products derived from this
  25:../../Drivers/CMSIS/Include/arm_math.h **** *     software without specific prior written permission.
  26:../../Drivers/CMSIS/Include/arm_math.h **** *
  27:../../Drivers/CMSIS/Include/arm_math.h **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../../Drivers/CMSIS/Include/arm_math.h **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../../Drivers/CMSIS/Include/arm_math.h **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../../Drivers/CMSIS/Include/arm_math.h **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:../../Drivers/CMSIS/Include/arm_math.h **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
ARM GAS  /tmp/cclaaHiH.s 			page 2


  32:../../Drivers/CMSIS/Include/arm_math.h **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../../Drivers/CMSIS/Include/arm_math.h **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../../Drivers/CMSIS/Include/arm_math.h **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../../Drivers/CMSIS/Include/arm_math.h **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../../Drivers/CMSIS/Include/arm_math.h **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../../Drivers/CMSIS/Include/arm_math.h **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../../Drivers/CMSIS/Include/arm_math.h **** * POSSIBILITY OF SUCH DAMAGE.
  39:../../Drivers/CMSIS/Include/arm_math.h ****  * -------------------------------------------------------------------- */
  40:../../Drivers/CMSIS/Include/arm_math.h **** 
  41:../../Drivers/CMSIS/Include/arm_math.h **** /**
  42:../../Drivers/CMSIS/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  43:../../Drivers/CMSIS/Include/arm_math.h ****    *
  44:../../Drivers/CMSIS/Include/arm_math.h ****    * Introduction
  45:../../Drivers/CMSIS/Include/arm_math.h ****    * ------------
  46:../../Drivers/CMSIS/Include/arm_math.h ****    *
  47:../../Drivers/CMSIS/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  48:../../Drivers/CMSIS/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  49:../../Drivers/CMSIS/Include/arm_math.h ****    *
  50:../../Drivers/CMSIS/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  51:../../Drivers/CMSIS/Include/arm_math.h ****    * - Basic math functions
  52:../../Drivers/CMSIS/Include/arm_math.h ****    * - Fast math functions
  53:../../Drivers/CMSIS/Include/arm_math.h ****    * - Complex math functions
  54:../../Drivers/CMSIS/Include/arm_math.h ****    * - Filters
  55:../../Drivers/CMSIS/Include/arm_math.h ****    * - Matrix functions
  56:../../Drivers/CMSIS/Include/arm_math.h ****    * - Transforms
  57:../../Drivers/CMSIS/Include/arm_math.h ****    * - Motor control functions
  58:../../Drivers/CMSIS/Include/arm_math.h ****    * - Statistical functions
  59:../../Drivers/CMSIS/Include/arm_math.h ****    * - Support functions
  60:../../Drivers/CMSIS/Include/arm_math.h ****    * - Interpolation functions
  61:../../Drivers/CMSIS/Include/arm_math.h ****    *
  62:../../Drivers/CMSIS/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  63:../../Drivers/CMSIS/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  64:../../Drivers/CMSIS/Include/arm_math.h ****    *
  65:../../Drivers/CMSIS/Include/arm_math.h ****    * Using the Library
  66:../../Drivers/CMSIS/Include/arm_math.h ****    * ------------
  67:../../Drivers/CMSIS/Include/arm_math.h ****    *
  68:../../Drivers/CMSIS/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  69:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Little endian and Double Precision Floating Point Unit on Cortex-
  70:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Big endian and Double Precision Floating Point Unit on Cortex-M7)
  71:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Little endian and Single Precision Floating Point Unit on Cortex-
  72:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Big endian and Single Precision Floating Point Unit on Cortex-M7)
  73:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Little endian on Cortex-M7)
  74:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Big endian on Cortex-M7)
  75:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Little endian and Floating Point Unit on Cortex-M4)
  76:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Big endian and Floating Point Unit on Cortex-M4)
  77:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Little endian on Cortex-M4)
  78:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Big endian on Cortex-M4)
  79:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Little endian on Cortex-M3)
  80:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Big endian on Cortex-M3)
  81:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Little endian on Cortex-M0 / CortexM0+)
  82:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Big endian on Cortex-M0 / CortexM0+)
  83:../../Drivers/CMSIS/Include/arm_math.h ****    *
  84:../../Drivers/CMSIS/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  85:../../Drivers/CMSIS/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  86:../../Drivers/CMSIS/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M7/M4/M3/M0/M0+ with little endian and 
  87:../../Drivers/CMSIS/Include/arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  88:../../Drivers/CMSIS/Include/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
ARM GAS  /tmp/cclaaHiH.s 			page 3


  89:../../Drivers/CMSIS/Include/arm_math.h ****    *
  90:../../Drivers/CMSIS/Include/arm_math.h ****    * Examples
  91:../../Drivers/CMSIS/Include/arm_math.h ****    * --------
  92:../../Drivers/CMSIS/Include/arm_math.h ****    *
  93:../../Drivers/CMSIS/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  94:../../Drivers/CMSIS/Include/arm_math.h ****    *
  95:../../Drivers/CMSIS/Include/arm_math.h ****    * Toolchain Support
  96:../../Drivers/CMSIS/Include/arm_math.h ****    * ------------
  97:../../Drivers/CMSIS/Include/arm_math.h ****    *
  98:../../Drivers/CMSIS/Include/arm_math.h ****    * The library has been developed and tested with MDK-ARM version 5.14.0.0
  99:../../Drivers/CMSIS/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
 100:../../Drivers/CMSIS/Include/arm_math.h ****    *
 101:../../Drivers/CMSIS/Include/arm_math.h ****    * Building the Library
 102:../../Drivers/CMSIS/Include/arm_math.h ****    * ------------
 103:../../Drivers/CMSIS/Include/arm_math.h ****    *
 104:../../Drivers/CMSIS/Include/arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 105:../../Drivers/CMSIS/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
 106:../../Drivers/CMSIS/Include/arm_math.h ****    *
 107:../../Drivers/CMSIS/Include/arm_math.h ****    *
 108:../../Drivers/CMSIS/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 109:../../Drivers/CMSIS/Include/arm_math.h ****    *
 110:../../Drivers/CMSIS/Include/arm_math.h ****    * Pre-processor Macros
 111:../../Drivers/CMSIS/Include/arm_math.h ****    * ------------
 112:../../Drivers/CMSIS/Include/arm_math.h ****    *
 113:../../Drivers/CMSIS/Include/arm_math.h ****    * Each library project have differant pre-processor macros.
 114:../../Drivers/CMSIS/Include/arm_math.h ****    *
 115:../../Drivers/CMSIS/Include/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 116:../../Drivers/CMSIS/Include/arm_math.h ****    *
 117:../../Drivers/CMSIS/Include/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 118:../../Drivers/CMSIS/Include/arm_math.h ****    *
 119:../../Drivers/CMSIS/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 120:../../Drivers/CMSIS/Include/arm_math.h ****    *
 121:../../Drivers/CMSIS/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 122:../../Drivers/CMSIS/Include/arm_math.h ****    *
 123:../../Drivers/CMSIS/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 124:../../Drivers/CMSIS/Include/arm_math.h ****    *
 125:../../Drivers/CMSIS/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 126:../../Drivers/CMSIS/Include/arm_math.h ****    *
 127:../../Drivers/CMSIS/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 128:../../Drivers/CMSIS/Include/arm_math.h ****    *
 129:../../Drivers/CMSIS/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 130:../../Drivers/CMSIS/Include/arm_math.h ****    *
 131:../../Drivers/CMSIS/Include/arm_math.h ****    * - ARM_MATH_CMx:
 132:../../Drivers/CMSIS/Include/arm_math.h ****    *
 133:../../Drivers/CMSIS/Include/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 134:../../Drivers/CMSIS/Include/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 135:../../Drivers/CMSIS/Include/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 136:../../Drivers/CMSIS/Include/arm_math.h ****    *
 137:../../Drivers/CMSIS/Include/arm_math.h ****    * - __FPU_PRESENT:
 138:../../Drivers/CMSIS/Include/arm_math.h ****    *
 139:../../Drivers/CMSIS/Include/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 140:../../Drivers/CMSIS/Include/arm_math.h ****    *
 141:../../Drivers/CMSIS/Include/arm_math.h ****    * <hr>
 142:../../Drivers/CMSIS/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 143:../../Drivers/CMSIS/Include/arm_math.h ****    * -----------------------------
 144:../../Drivers/CMSIS/Include/arm_math.h ****    *
 145:../../Drivers/CMSIS/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
ARM GAS  /tmp/cclaaHiH.s 			page 4


 146:../../Drivers/CMSIS/Include/arm_math.h ****    * |File/Folder                   |Content                                                       
 147:../../Drivers/CMSIS/Include/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 148:../../Drivers/CMSIS/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 149:../../Drivers/CMSIS/Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 150:../../Drivers/CMSIS/Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 151:../../Drivers/CMSIS/Include/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 152:../../Drivers/CMSIS/Include/arm_math.h ****    *
 153:../../Drivers/CMSIS/Include/arm_math.h ****    * <hr>
 154:../../Drivers/CMSIS/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 155:../../Drivers/CMSIS/Include/arm_math.h ****    * ------------
 156:../../Drivers/CMSIS/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 157:../../Drivers/CMSIS/Include/arm_math.h ****    *
 158:../../Drivers/CMSIS/Include/arm_math.h ****    * Copyright Notice
 159:../../Drivers/CMSIS/Include/arm_math.h ****    * ------------
 160:../../Drivers/CMSIS/Include/arm_math.h ****    *
 161:../../Drivers/CMSIS/Include/arm_math.h ****    * Copyright (C) 2010-2015 ARM Limited. All rights reserved.
 162:../../Drivers/CMSIS/Include/arm_math.h ****    */
 163:../../Drivers/CMSIS/Include/arm_math.h **** 
 164:../../Drivers/CMSIS/Include/arm_math.h **** 
 165:../../Drivers/CMSIS/Include/arm_math.h **** /**
 166:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 167:../../Drivers/CMSIS/Include/arm_math.h ****  */
 168:../../Drivers/CMSIS/Include/arm_math.h **** 
 169:../../Drivers/CMSIS/Include/arm_math.h **** /**
 170:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 171:../../Drivers/CMSIS/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 172:../../Drivers/CMSIS/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 173:../../Drivers/CMSIS/Include/arm_math.h ****  * operate on individual values and not arrays.
 174:../../Drivers/CMSIS/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 175:../../Drivers/CMSIS/Include/arm_math.h ****  *
 176:../../Drivers/CMSIS/Include/arm_math.h ****  */
 177:../../Drivers/CMSIS/Include/arm_math.h **** 
 178:../../Drivers/CMSIS/Include/arm_math.h **** /**
 179:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 180:../../Drivers/CMSIS/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 181:../../Drivers/CMSIS/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 182:../../Drivers/CMSIS/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 183:../../Drivers/CMSIS/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 184:../../Drivers/CMSIS/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 185:../../Drivers/CMSIS/Include/arm_math.h ****  * real values.
 186:../../Drivers/CMSIS/Include/arm_math.h ****  */
 187:../../Drivers/CMSIS/Include/arm_math.h **** 
 188:../../Drivers/CMSIS/Include/arm_math.h **** /**
 189:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 190:../../Drivers/CMSIS/Include/arm_math.h ****  */
 191:../../Drivers/CMSIS/Include/arm_math.h **** 
 192:../../Drivers/CMSIS/Include/arm_math.h **** /**
 193:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 194:../../Drivers/CMSIS/Include/arm_math.h ****  *
 195:../../Drivers/CMSIS/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 196:../../Drivers/CMSIS/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 197:../../Drivers/CMSIS/Include/arm_math.h ****  * the type
 198:../../Drivers/CMSIS/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 199:../../Drivers/CMSIS/Include/arm_math.h ****  * below:
 200:../../Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 201:../../Drivers/CMSIS/Include/arm_math.h ****  *     typedef struct
 202:../../Drivers/CMSIS/Include/arm_math.h ****  *     {
ARM GAS  /tmp/cclaaHiH.s 			page 5


 203:../../Drivers/CMSIS/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 204:../../Drivers/CMSIS/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 205:../../Drivers/CMSIS/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 206:../../Drivers/CMSIS/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 207:../../Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 208:../../Drivers/CMSIS/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 209:../../Drivers/CMSIS/Include/arm_math.h ****  *
 210:../../Drivers/CMSIS/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 211:../../Drivers/CMSIS/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 212:../../Drivers/CMSIS/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 213:../../Drivers/CMSIS/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 214:../../Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 215:../../Drivers/CMSIS/Include/arm_math.h ****  *     pData[i*numCols + j]
 216:../../Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 217:../../Drivers/CMSIS/Include/arm_math.h ****  *
 218:../../Drivers/CMSIS/Include/arm_math.h ****  * \par Init Functions
 219:../../Drivers/CMSIS/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 220:../../Drivers/CMSIS/Include/arm_math.h ****  * data structure.
 221:../../Drivers/CMSIS/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 222:../../Drivers/CMSIS/Include/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 223:../../Drivers/CMSIS/Include/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 224:../../Drivers/CMSIS/Include/arm_math.h ****  *
 225:../../Drivers/CMSIS/Include/arm_math.h ****  * \par
 226:../../Drivers/CMSIS/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 227:../../Drivers/CMSIS/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 228:../../Drivers/CMSIS/Include/arm_math.h ****  * To place the instance structure in a const data
 229:../../Drivers/CMSIS/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 230:../../Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 231:../../Drivers/CMSIS/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 232:../../Drivers/CMSIS/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 233:../../Drivers/CMSIS/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 234:../../Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 235:../../Drivers/CMSIS/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 236:../../Drivers/CMSIS/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 237:../../Drivers/CMSIS/Include/arm_math.h ****  * data array.
 238:../../Drivers/CMSIS/Include/arm_math.h ****  *
 239:../../Drivers/CMSIS/Include/arm_math.h ****  * \par Size Checking
 240:../../Drivers/CMSIS/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 241:../../Drivers/CMSIS/Include/arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 242:../../Drivers/CMSIS/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 243:../../Drivers/CMSIS/Include/arm_math.h ****  * columns.  If the size check fails the functions return:
 244:../../Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 245:../../Drivers/CMSIS/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 246:../../Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 247:../../Drivers/CMSIS/Include/arm_math.h ****  * Otherwise the functions return
 248:../../Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 249:../../Drivers/CMSIS/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 250:../../Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 251:../../Drivers/CMSIS/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 252:../../Drivers/CMSIS/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 253:../../Drivers/CMSIS/Include/arm_math.h ****  * <pre>
 254:../../Drivers/CMSIS/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 255:../../Drivers/CMSIS/Include/arm_math.h ****  * </pre>
 256:../../Drivers/CMSIS/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 257:../../Drivers/CMSIS/Include/arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 258:../../Drivers/CMSIS/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 259:../../Drivers/CMSIS/Include/arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
ARM GAS  /tmp/cclaaHiH.s 			page 6


 260:../../Drivers/CMSIS/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 261:../../Drivers/CMSIS/Include/arm_math.h ****  */
 262:../../Drivers/CMSIS/Include/arm_math.h **** 
 263:../../Drivers/CMSIS/Include/arm_math.h **** /**
 264:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 265:../../Drivers/CMSIS/Include/arm_math.h ****  */
 266:../../Drivers/CMSIS/Include/arm_math.h **** 
 267:../../Drivers/CMSIS/Include/arm_math.h **** /**
 268:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 269:../../Drivers/CMSIS/Include/arm_math.h ****  */
 270:../../Drivers/CMSIS/Include/arm_math.h **** 
 271:../../Drivers/CMSIS/Include/arm_math.h **** /**
 272:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 273:../../Drivers/CMSIS/Include/arm_math.h ****  */
 274:../../Drivers/CMSIS/Include/arm_math.h **** /**
 275:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 276:../../Drivers/CMSIS/Include/arm_math.h ****  */
 277:../../Drivers/CMSIS/Include/arm_math.h **** 
 278:../../Drivers/CMSIS/Include/arm_math.h **** /**
 279:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 280:../../Drivers/CMSIS/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 281:../../Drivers/CMSIS/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 282:../../Drivers/CMSIS/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 283:../../Drivers/CMSIS/Include/arm_math.h ****  */
 284:../../Drivers/CMSIS/Include/arm_math.h **** 
 285:../../Drivers/CMSIS/Include/arm_math.h **** /**
 286:../../Drivers/CMSIS/Include/arm_math.h ****  * @defgroup groupExamples Examples
 287:../../Drivers/CMSIS/Include/arm_math.h ****  */
 288:../../Drivers/CMSIS/Include/arm_math.h **** #ifndef _ARM_MATH_H
 289:../../Drivers/CMSIS/Include/arm_math.h **** #define _ARM_MATH_H
 290:../../Drivers/CMSIS/Include/arm_math.h **** 
 291:../../Drivers/CMSIS/Include/arm_math.h **** /* ignore some GCC warnings */
 292:../../Drivers/CMSIS/Include/arm_math.h **** #if defined ( __GNUC__ )
 293:../../Drivers/CMSIS/Include/arm_math.h **** #pragma GCC diagnostic push
 294:../../Drivers/CMSIS/Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 295:../../Drivers/CMSIS/Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 296:../../Drivers/CMSIS/Include/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 297:../../Drivers/CMSIS/Include/arm_math.h **** #endif
 298:../../Drivers/CMSIS/Include/arm_math.h **** 
 299:../../Drivers/CMSIS/Include/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 300:../../Drivers/CMSIS/Include/arm_math.h **** 
 301:../../Drivers/CMSIS/Include/arm_math.h **** #if defined(ARM_MATH_CM7)
 302:../../Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm7.h"
 303:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined (ARM_MATH_CM4)
 304:../../Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm4.h"
 305:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined (ARM_MATH_CM3)
 306:../../Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm3.h"
 307:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined (ARM_MATH_CM0)
 308:../../Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm0.h"
 309:../../Drivers/CMSIS/Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 310:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 311:../../Drivers/CMSIS/Include/arm_math.h ****   #include "core_cm0plus.h"
 312:../../Drivers/CMSIS/Include/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 313:../../Drivers/CMSIS/Include/arm_math.h **** #else
 314:../../Drivers/CMSIS/Include/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 315:../../Drivers/CMSIS/Include/arm_math.h **** #endif
 316:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 7


 317:../../Drivers/CMSIS/Include/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 318:../../Drivers/CMSIS/Include/arm_math.h **** #include "string.h"
 319:../../Drivers/CMSIS/Include/arm_math.h **** #include "math.h"
 320:../../Drivers/CMSIS/Include/arm_math.h **** #ifdef   __cplusplus
 321:../../Drivers/CMSIS/Include/arm_math.h **** extern "C"
 322:../../Drivers/CMSIS/Include/arm_math.h **** {
 323:../../Drivers/CMSIS/Include/arm_math.h **** #endif
 324:../../Drivers/CMSIS/Include/arm_math.h **** 
 325:../../Drivers/CMSIS/Include/arm_math.h **** 
 326:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 327:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 328:../../Drivers/CMSIS/Include/arm_math.h ****    */
 329:../../Drivers/CMSIS/Include/arm_math.h **** 
 330:../../Drivers/CMSIS/Include/arm_math.h **** #define DELTA_Q31          (0x100)
 331:../../Drivers/CMSIS/Include/arm_math.h **** #define DELTA_Q15          0x5
 332:../../Drivers/CMSIS/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 333:../../Drivers/CMSIS/Include/arm_math.h **** #ifndef PI
 334:../../Drivers/CMSIS/Include/arm_math.h **** #define PI                 3.14159265358979f
 335:../../Drivers/CMSIS/Include/arm_math.h **** #endif
 336:../../Drivers/CMSIS/Include/arm_math.h **** 
 337:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 338:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 339:../../Drivers/CMSIS/Include/arm_math.h ****    */
 340:../../Drivers/CMSIS/Include/arm_math.h **** 
 341:../../Drivers/CMSIS/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 342:../../Drivers/CMSIS/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 343:../../Drivers/CMSIS/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 344:../../Drivers/CMSIS/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 345:../../Drivers/CMSIS/Include/arm_math.h **** #define TABLE_SIZE  256
 346:../../Drivers/CMSIS/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 347:../../Drivers/CMSIS/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 348:../../Drivers/CMSIS/Include/arm_math.h **** 
 349:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 350:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 351:../../Drivers/CMSIS/Include/arm_math.h ****    */
 352:../../Drivers/CMSIS/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 353:../../Drivers/CMSIS/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 354:../../Drivers/CMSIS/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 355:../../Drivers/CMSIS/Include/arm_math.h **** 
 356:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 357:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Macro for Unaligned Support
 358:../../Drivers/CMSIS/Include/arm_math.h ****    */
 359:../../Drivers/CMSIS/Include/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 360:../../Drivers/CMSIS/Include/arm_math.h ****     #define ALIGN4
 361:../../Drivers/CMSIS/Include/arm_math.h **** #else
 362:../../Drivers/CMSIS/Include/arm_math.h ****   #if defined  (__GNUC__)
 363:../../Drivers/CMSIS/Include/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 364:../../Drivers/CMSIS/Include/arm_math.h ****   #else
 365:../../Drivers/CMSIS/Include/arm_math.h ****     #define ALIGN4 __align(4)
 366:../../Drivers/CMSIS/Include/arm_math.h ****   #endif
 367:../../Drivers/CMSIS/Include/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 368:../../Drivers/CMSIS/Include/arm_math.h **** 
 369:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 370:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 371:../../Drivers/CMSIS/Include/arm_math.h ****    */
 372:../../Drivers/CMSIS/Include/arm_math.h **** 
 373:../../Drivers/CMSIS/Include/arm_math.h ****   typedef enum
ARM GAS  /tmp/cclaaHiH.s 			page 8


 374:../../Drivers/CMSIS/Include/arm_math.h ****   {
 375:../../Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 376:../../Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 377:../../Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 378:../../Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 379:../../Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 380:../../Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 381:../../Drivers/CMSIS/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 382:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_status;
 383:../../Drivers/CMSIS/Include/arm_math.h **** 
 384:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 385:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 386:../../Drivers/CMSIS/Include/arm_math.h ****    */
 387:../../Drivers/CMSIS/Include/arm_math.h ****   typedef int8_t q7_t;
 388:../../Drivers/CMSIS/Include/arm_math.h **** 
 389:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 390:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 391:../../Drivers/CMSIS/Include/arm_math.h ****    */
 392:../../Drivers/CMSIS/Include/arm_math.h ****   typedef int16_t q15_t;
 393:../../Drivers/CMSIS/Include/arm_math.h **** 
 394:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 395:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 396:../../Drivers/CMSIS/Include/arm_math.h ****    */
 397:../../Drivers/CMSIS/Include/arm_math.h ****   typedef int32_t q31_t;
 398:../../Drivers/CMSIS/Include/arm_math.h **** 
 399:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 400:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 401:../../Drivers/CMSIS/Include/arm_math.h ****    */
 402:../../Drivers/CMSIS/Include/arm_math.h ****   typedef int64_t q63_t;
 403:../../Drivers/CMSIS/Include/arm_math.h **** 
 404:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 405:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 406:../../Drivers/CMSIS/Include/arm_math.h ****    */
 407:../../Drivers/CMSIS/Include/arm_math.h ****   typedef float float32_t;
 408:../../Drivers/CMSIS/Include/arm_math.h **** 
 409:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 410:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 411:../../Drivers/CMSIS/Include/arm_math.h ****    */
 412:../../Drivers/CMSIS/Include/arm_math.h ****   typedef double float64_t;
 413:../../Drivers/CMSIS/Include/arm_math.h **** 
 414:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 415:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 416:../../Drivers/CMSIS/Include/arm_math.h ****    */
 417:../../Drivers/CMSIS/Include/arm_math.h **** #if defined __CC_ARM
 418:../../Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 419:../../Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 420:../../Drivers/CMSIS/Include/arm_math.h **** 
 421:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 422:../../Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 423:../../Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 424:../../Drivers/CMSIS/Include/arm_math.h **** 
 425:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined __GNUC__
 426:../../Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:../../Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 428:../../Drivers/CMSIS/Include/arm_math.h **** 
 429:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined __ICCARM__
 430:../../Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
ARM GAS  /tmp/cclaaHiH.s 			page 9


 431:../../Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED
 432:../../Drivers/CMSIS/Include/arm_math.h **** 
 433:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined __CSMC__
 434:../../Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 435:../../Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED
 436:../../Drivers/CMSIS/Include/arm_math.h **** 
 437:../../Drivers/CMSIS/Include/arm_math.h **** #elif defined __TASKING__
 438:../../Drivers/CMSIS/Include/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 439:../../Drivers/CMSIS/Include/arm_math.h ****   #define CMSIS_UNUSED
 440:../../Drivers/CMSIS/Include/arm_math.h **** 
 441:../../Drivers/CMSIS/Include/arm_math.h **** #else
 442:../../Drivers/CMSIS/Include/arm_math.h ****   #error Unknown compiler
 443:../../Drivers/CMSIS/Include/arm_math.h **** #endif
 444:../../Drivers/CMSIS/Include/arm_math.h **** 
 445:../../Drivers/CMSIS/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 446:../../Drivers/CMSIS/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 447:../../Drivers/CMSIS/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 448:../../Drivers/CMSIS/Include/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 449:../../Drivers/CMSIS/Include/arm_math.h **** 
 450:../../Drivers/CMSIS/Include/arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 451:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 452:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 453:../../Drivers/CMSIS/Include/arm_math.h ****    */
 454:../../Drivers/CMSIS/Include/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0x0000FFFF) | \
 455:../../Drivers/CMSIS/Include/arm_math.h ****                                          (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 456:../../Drivers/CMSIS/Include/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0xFFFF0000) | \
 457:../../Drivers/CMSIS/Include/arm_math.h ****                                          (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 458:../../Drivers/CMSIS/Include/arm_math.h **** 
 459:../../Drivers/CMSIS/Include/arm_math.h **** #endif
 460:../../Drivers/CMSIS/Include/arm_math.h **** 
 461:../../Drivers/CMSIS/Include/arm_math.h **** 
 462:../../Drivers/CMSIS/Include/arm_math.h ****    /**
 463:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 464:../../Drivers/CMSIS/Include/arm_math.h ****    */
 465:../../Drivers/CMSIS/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 466:../../Drivers/CMSIS/Include/arm_math.h **** 
 467:../../Drivers/CMSIS/Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 468:../../Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 469:../../Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 470:../../Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 471:../../Drivers/CMSIS/Include/arm_math.h **** #else
 472:../../Drivers/CMSIS/Include/arm_math.h **** 
 473:../../Drivers/CMSIS/Include/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 474:../../Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 475:../../Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 476:../../Drivers/CMSIS/Include/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 477:../../Drivers/CMSIS/Include/arm_math.h **** 
 478:../../Drivers/CMSIS/Include/arm_math.h **** #endif
 479:../../Drivers/CMSIS/Include/arm_math.h **** 
 480:../../Drivers/CMSIS/Include/arm_math.h **** 
 481:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 482:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 483:../../Drivers/CMSIS/Include/arm_math.h ****    */
 484:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q31_t clip_q63_to_q31(
 485:../../Drivers/CMSIS/Include/arm_math.h ****   q63_t x)
 486:../../Drivers/CMSIS/Include/arm_math.h ****   {
 487:../../Drivers/CMSIS/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
ARM GAS  /tmp/cclaaHiH.s 			page 10


 488:../../Drivers/CMSIS/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 489:../../Drivers/CMSIS/Include/arm_math.h ****   }
 490:../../Drivers/CMSIS/Include/arm_math.h **** 
 491:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 492:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 493:../../Drivers/CMSIS/Include/arm_math.h ****    */
 494:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q15_t clip_q63_to_q15(
 495:../../Drivers/CMSIS/Include/arm_math.h ****   q63_t x)
 496:../../Drivers/CMSIS/Include/arm_math.h ****   {
 497:../../Drivers/CMSIS/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 498:../../Drivers/CMSIS/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 499:../../Drivers/CMSIS/Include/arm_math.h ****   }
 500:../../Drivers/CMSIS/Include/arm_math.h **** 
 501:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 502:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 503:../../Drivers/CMSIS/Include/arm_math.h ****    */
 504:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q7_t clip_q31_to_q7(
 505:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t x)
 506:../../Drivers/CMSIS/Include/arm_math.h ****   {
 507:../../Drivers/CMSIS/Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 508:../../Drivers/CMSIS/Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 509:../../Drivers/CMSIS/Include/arm_math.h ****   }
 510:../../Drivers/CMSIS/Include/arm_math.h **** 
 511:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 512:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 513:../../Drivers/CMSIS/Include/arm_math.h ****    */
 514:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q15_t clip_q31_to_q15(
 515:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t x)
 516:../../Drivers/CMSIS/Include/arm_math.h ****   {
 517:../../Drivers/CMSIS/Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 518:../../Drivers/CMSIS/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 519:../../Drivers/CMSIS/Include/arm_math.h ****   }
 520:../../Drivers/CMSIS/Include/arm_math.h **** 
 521:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 522:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 523:../../Drivers/CMSIS/Include/arm_math.h ****    */
 524:../../Drivers/CMSIS/Include/arm_math.h **** 
 525:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q63_t mult32x64(
 526:../../Drivers/CMSIS/Include/arm_math.h ****   q63_t x,
 527:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t y)
 528:../../Drivers/CMSIS/Include/arm_math.h ****   {
 529:../../Drivers/CMSIS/Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 530:../../Drivers/CMSIS/Include/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 531:../../Drivers/CMSIS/Include/arm_math.h ****   }
 532:../../Drivers/CMSIS/Include/arm_math.h **** 
 533:../../Drivers/CMSIS/Include/arm_math.h **** /*
 534:../../Drivers/CMSIS/Include/arm_math.h ****   #if defined (ARM_MATH_CM0_FAMILY) && defined ( __CC_ARM   )
 535:../../Drivers/CMSIS/Include/arm_math.h ****   #define __CLZ __clz
 536:../../Drivers/CMSIS/Include/arm_math.h ****   #endif
 537:../../Drivers/CMSIS/Include/arm_math.h ****  */
 538:../../Drivers/CMSIS/Include/arm_math.h **** /* note: function can be removed when all toolchain support __CLZ for Cortex-M0 */
 539:../../Drivers/CMSIS/Include/arm_math.h **** #if defined (ARM_MATH_CM0_FAMILY) && ((defined (__ICCARM__))  )
 540:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __CLZ(
 541:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t data);
 542:../../Drivers/CMSIS/Include/arm_math.h **** 
 543:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __CLZ(
 544:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t data)
ARM GAS  /tmp/cclaaHiH.s 			page 11


 545:../../Drivers/CMSIS/Include/arm_math.h ****   {
 546:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t count = 0;
 547:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t mask = 0x80000000;
 548:../../Drivers/CMSIS/Include/arm_math.h **** 
 549:../../Drivers/CMSIS/Include/arm_math.h ****     while((data & mask) == 0)
 550:../../Drivers/CMSIS/Include/arm_math.h ****     {
 551:../../Drivers/CMSIS/Include/arm_math.h ****       count += 1u;
 552:../../Drivers/CMSIS/Include/arm_math.h ****       mask = mask >> 1u;
 553:../../Drivers/CMSIS/Include/arm_math.h ****     }
 554:../../Drivers/CMSIS/Include/arm_math.h **** 
 555:../../Drivers/CMSIS/Include/arm_math.h ****     return (count);
 556:../../Drivers/CMSIS/Include/arm_math.h ****   }
 557:../../Drivers/CMSIS/Include/arm_math.h **** #endif
 558:../../Drivers/CMSIS/Include/arm_math.h **** 
 559:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 560:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 561:../../Drivers/CMSIS/Include/arm_math.h ****    */
 562:../../Drivers/CMSIS/Include/arm_math.h **** 
 563:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t arm_recip_q31(
 564:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t in,
 565:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * dst,
 566:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pRecipTable)
 567:../../Drivers/CMSIS/Include/arm_math.h ****   {
 568:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t out;
 569:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t tempVal;
 570:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t index, i;
 571:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t signBits;
 572:../../Drivers/CMSIS/Include/arm_math.h **** 
 573:../../Drivers/CMSIS/Include/arm_math.h ****     if(in > 0)
 574:../../Drivers/CMSIS/Include/arm_math.h ****     {
 575:../../Drivers/CMSIS/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 576:../../Drivers/CMSIS/Include/arm_math.h ****     }
 577:../../Drivers/CMSIS/Include/arm_math.h ****     else
 578:../../Drivers/CMSIS/Include/arm_math.h ****     {
 579:../../Drivers/CMSIS/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 580:../../Drivers/CMSIS/Include/arm_math.h ****     }
 581:../../Drivers/CMSIS/Include/arm_math.h **** 
 582:../../Drivers/CMSIS/Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 583:../../Drivers/CMSIS/Include/arm_math.h ****     in = (in << signBits);
 584:../../Drivers/CMSIS/Include/arm_math.h **** 
 585:../../Drivers/CMSIS/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 586:../../Drivers/CMSIS/Include/arm_math.h ****     index = (uint32_t)(in >> 24);
 587:../../Drivers/CMSIS/Include/arm_math.h ****     index = (index & INDEX_MASK);
 588:../../Drivers/CMSIS/Include/arm_math.h **** 
 589:../../Drivers/CMSIS/Include/arm_math.h ****     /* 1.31 with exp 1 */
 590:../../Drivers/CMSIS/Include/arm_math.h ****     out = pRecipTable[index];
 591:../../Drivers/CMSIS/Include/arm_math.h **** 
 592:../../Drivers/CMSIS/Include/arm_math.h ****     /* calculation of reciprocal value */
 593:../../Drivers/CMSIS/Include/arm_math.h ****     /* running approximation for two iterations */
 594:../../Drivers/CMSIS/Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 595:../../Drivers/CMSIS/Include/arm_math.h ****     {
 596:../../Drivers/CMSIS/Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 597:../../Drivers/CMSIS/Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 598:../../Drivers/CMSIS/Include/arm_math.h ****       /*      1.31 with exp 1 */
 599:../../Drivers/CMSIS/Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 600:../../Drivers/CMSIS/Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 601:../../Drivers/CMSIS/Include/arm_math.h ****     }
ARM GAS  /tmp/cclaaHiH.s 			page 12


 602:../../Drivers/CMSIS/Include/arm_math.h **** 
 603:../../Drivers/CMSIS/Include/arm_math.h ****     /* write output */
 604:../../Drivers/CMSIS/Include/arm_math.h ****     *dst = out;
 605:../../Drivers/CMSIS/Include/arm_math.h **** 
 606:../../Drivers/CMSIS/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 607:../../Drivers/CMSIS/Include/arm_math.h ****     return (signBits + 1u);
 608:../../Drivers/CMSIS/Include/arm_math.h ****   }
 609:../../Drivers/CMSIS/Include/arm_math.h **** 
 610:../../Drivers/CMSIS/Include/arm_math.h **** 
 611:../../Drivers/CMSIS/Include/arm_math.h ****   /**
 612:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 613:../../Drivers/CMSIS/Include/arm_math.h ****    */
 614:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t arm_recip_q15(
 615:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t in,
 616:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * dst,
 617:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pRecipTable)
 618:../../Drivers/CMSIS/Include/arm_math.h ****   {
 619:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t out = 0;
 620:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t tempVal = 0;
 621:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t index = 0, i = 0;
 622:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t signBits = 0;
 623:../../Drivers/CMSIS/Include/arm_math.h **** 
 624:../../Drivers/CMSIS/Include/arm_math.h ****     if(in > 0)
 625:../../Drivers/CMSIS/Include/arm_math.h ****     {
 626:../../Drivers/CMSIS/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 627:../../Drivers/CMSIS/Include/arm_math.h ****     }
 628:../../Drivers/CMSIS/Include/arm_math.h ****     else
 629:../../Drivers/CMSIS/Include/arm_math.h ****     {
 630:../../Drivers/CMSIS/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 631:../../Drivers/CMSIS/Include/arm_math.h ****     }
 632:../../Drivers/CMSIS/Include/arm_math.h **** 
 633:../../Drivers/CMSIS/Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 634:../../Drivers/CMSIS/Include/arm_math.h ****     in = (in << signBits);
 635:../../Drivers/CMSIS/Include/arm_math.h **** 
 636:../../Drivers/CMSIS/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 637:../../Drivers/CMSIS/Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 638:../../Drivers/CMSIS/Include/arm_math.h ****     index = (index & INDEX_MASK);
 639:../../Drivers/CMSIS/Include/arm_math.h **** 
 640:../../Drivers/CMSIS/Include/arm_math.h ****     /*      1.15 with exp 1  */
 641:../../Drivers/CMSIS/Include/arm_math.h ****     out = pRecipTable[index];
 642:../../Drivers/CMSIS/Include/arm_math.h **** 
 643:../../Drivers/CMSIS/Include/arm_math.h ****     /* calculation of reciprocal value */
 644:../../Drivers/CMSIS/Include/arm_math.h ****     /* running approximation for two iterations */
 645:../../Drivers/CMSIS/Include/arm_math.h ****     for (i = 0u; i < 2u; i++)
 646:../../Drivers/CMSIS/Include/arm_math.h ****     {
 647:../../Drivers/CMSIS/Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 648:../../Drivers/CMSIS/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 649:../../Drivers/CMSIS/Include/arm_math.h ****       /*      1.15 with exp 1 */
 650:../../Drivers/CMSIS/Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 651:../../Drivers/CMSIS/Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 652:../../Drivers/CMSIS/Include/arm_math.h ****     }
 653:../../Drivers/CMSIS/Include/arm_math.h **** 
 654:../../Drivers/CMSIS/Include/arm_math.h ****     /* write output */
 655:../../Drivers/CMSIS/Include/arm_math.h ****     *dst = out;
 656:../../Drivers/CMSIS/Include/arm_math.h **** 
 657:../../Drivers/CMSIS/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 658:../../Drivers/CMSIS/Include/arm_math.h ****     return (signBits + 1);
ARM GAS  /tmp/cclaaHiH.s 			page 13


 659:../../Drivers/CMSIS/Include/arm_math.h ****   }
 660:../../Drivers/CMSIS/Include/arm_math.h **** 
 661:../../Drivers/CMSIS/Include/arm_math.h **** 
 662:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 663:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined intrinisic function for only M0 processors
 664:../../Drivers/CMSIS/Include/arm_math.h ****    */
 665:../../Drivers/CMSIS/Include/arm_math.h **** #if defined(ARM_MATH_CM0_FAMILY)
 666:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q31_t __SSAT(
 667:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t x,
 668:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 669:../../Drivers/CMSIS/Include/arm_math.h ****   {
 670:../../Drivers/CMSIS/Include/arm_math.h ****     int32_t posMax, negMin;
 671:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t i;
 672:../../Drivers/CMSIS/Include/arm_math.h **** 
 673:../../Drivers/CMSIS/Include/arm_math.h ****     posMax = 1;
 674:../../Drivers/CMSIS/Include/arm_math.h ****     for (i = 0; i < (y - 1); i++)
 675:../../Drivers/CMSIS/Include/arm_math.h ****     {
 676:../../Drivers/CMSIS/Include/arm_math.h ****       posMax = posMax * 2;
 677:../../Drivers/CMSIS/Include/arm_math.h ****     }
 678:../../Drivers/CMSIS/Include/arm_math.h **** 
 679:../../Drivers/CMSIS/Include/arm_math.h ****     if(x > 0)
 680:../../Drivers/CMSIS/Include/arm_math.h ****     {
 681:../../Drivers/CMSIS/Include/arm_math.h ****       posMax = (posMax - 1);
 682:../../Drivers/CMSIS/Include/arm_math.h **** 
 683:../../Drivers/CMSIS/Include/arm_math.h ****       if(x > posMax)
 684:../../Drivers/CMSIS/Include/arm_math.h ****       {
 685:../../Drivers/CMSIS/Include/arm_math.h ****         x = posMax;
 686:../../Drivers/CMSIS/Include/arm_math.h ****       }
 687:../../Drivers/CMSIS/Include/arm_math.h ****     }
 688:../../Drivers/CMSIS/Include/arm_math.h ****     else
 689:../../Drivers/CMSIS/Include/arm_math.h ****     {
 690:../../Drivers/CMSIS/Include/arm_math.h ****       negMin = -posMax;
 691:../../Drivers/CMSIS/Include/arm_math.h **** 
 692:../../Drivers/CMSIS/Include/arm_math.h ****       if(x < negMin)
 693:../../Drivers/CMSIS/Include/arm_math.h ****       {
 694:../../Drivers/CMSIS/Include/arm_math.h ****         x = negMin;
 695:../../Drivers/CMSIS/Include/arm_math.h ****       }
 696:../../Drivers/CMSIS/Include/arm_math.h ****     }
 697:../../Drivers/CMSIS/Include/arm_math.h ****     return (x);
 698:../../Drivers/CMSIS/Include/arm_math.h ****   }
 699:../../Drivers/CMSIS/Include/arm_math.h **** #endif /* end of ARM_MATH_CM0_FAMILY */
 700:../../Drivers/CMSIS/Include/arm_math.h **** 
 701:../../Drivers/CMSIS/Include/arm_math.h **** 
 702:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 703:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined intrinsic function for M3 and M0 processors
 704:../../Drivers/CMSIS/Include/arm_math.h ****    */
 705:../../Drivers/CMSIS/Include/arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 706:../../Drivers/CMSIS/Include/arm_math.h **** 
 707:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 708:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 709:../../Drivers/CMSIS/Include/arm_math.h ****    */
 710:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QADD8(
 711:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 712:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 713:../../Drivers/CMSIS/Include/arm_math.h ****   {
 714:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s, t, u;
 715:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 14


 716:../../Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 717:../../Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 718:../../Drivers/CMSIS/Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 719:../../Drivers/CMSIS/Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 720:../../Drivers/CMSIS/Include/arm_math.h **** 
 721:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 722:../../Drivers/CMSIS/Include/arm_math.h ****   }
 723:../../Drivers/CMSIS/Include/arm_math.h **** 
 724:../../Drivers/CMSIS/Include/arm_math.h **** 
 725:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 726:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 727:../../Drivers/CMSIS/Include/arm_math.h ****    */
 728:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QSUB8(
 729:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 730:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 731:../../Drivers/CMSIS/Include/arm_math.h ****   {
 732:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s, t, u;
 733:../../Drivers/CMSIS/Include/arm_math.h **** 
 734:../../Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 735:../../Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 736:../../Drivers/CMSIS/Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 737:../../Drivers/CMSIS/Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 738:../../Drivers/CMSIS/Include/arm_math.h **** 
 739:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 740:../../Drivers/CMSIS/Include/arm_math.h ****   }
 741:../../Drivers/CMSIS/Include/arm_math.h **** 
 742:../../Drivers/CMSIS/Include/arm_math.h **** 
 743:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 744:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 745:../../Drivers/CMSIS/Include/arm_math.h ****    */
 746:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QADD16(
 747:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 748:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 749:../../Drivers/CMSIS/Include/arm_math.h ****   {
 750:../../Drivers/CMSIS/Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 751:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r = 0, s = 0;
 752:../../Drivers/CMSIS/Include/arm_math.h **** 
 753:../../Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 754:../../Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 755:../../Drivers/CMSIS/Include/arm_math.h **** 
 756:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 757:../../Drivers/CMSIS/Include/arm_math.h ****   }
 758:../../Drivers/CMSIS/Include/arm_math.h **** 
 759:../../Drivers/CMSIS/Include/arm_math.h **** 
 760:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 761:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 762:../../Drivers/CMSIS/Include/arm_math.h ****    */
 763:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SHADD16(
 764:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 765:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 766:../../Drivers/CMSIS/Include/arm_math.h ****   {
 767:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 768:../../Drivers/CMSIS/Include/arm_math.h **** 
 769:../../Drivers/CMSIS/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 770:../../Drivers/CMSIS/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 771:../../Drivers/CMSIS/Include/arm_math.h **** 
 772:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
ARM GAS  /tmp/cclaaHiH.s 			page 15


 773:../../Drivers/CMSIS/Include/arm_math.h ****   }
 774:../../Drivers/CMSIS/Include/arm_math.h **** 
 775:../../Drivers/CMSIS/Include/arm_math.h **** 
 776:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 777:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 778:../../Drivers/CMSIS/Include/arm_math.h ****    */
 779:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QSUB16(
 780:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 781:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 782:../../Drivers/CMSIS/Include/arm_math.h ****   {
 783:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 784:../../Drivers/CMSIS/Include/arm_math.h **** 
 785:../../Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 786:../../Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 787:../../Drivers/CMSIS/Include/arm_math.h **** 
 788:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 789:../../Drivers/CMSIS/Include/arm_math.h ****   }
 790:../../Drivers/CMSIS/Include/arm_math.h **** 
 791:../../Drivers/CMSIS/Include/arm_math.h **** 
 792:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 793:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 794:../../Drivers/CMSIS/Include/arm_math.h ****    */
 795:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SHSUB16(
 796:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 797:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 798:../../Drivers/CMSIS/Include/arm_math.h ****   {
 799:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 800:../../Drivers/CMSIS/Include/arm_math.h **** 
 801:../../Drivers/CMSIS/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 802:../../Drivers/CMSIS/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 803:../../Drivers/CMSIS/Include/arm_math.h **** 
 804:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 805:../../Drivers/CMSIS/Include/arm_math.h ****   }
 806:../../Drivers/CMSIS/Include/arm_math.h **** 
 807:../../Drivers/CMSIS/Include/arm_math.h **** 
 808:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 809:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 810:../../Drivers/CMSIS/Include/arm_math.h ****    */
 811:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QASX(
 812:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 813:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 814:../../Drivers/CMSIS/Include/arm_math.h ****   {
 815:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 816:../../Drivers/CMSIS/Include/arm_math.h **** 
 817:../../Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 818:../../Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 819:../../Drivers/CMSIS/Include/arm_math.h **** 
 820:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 821:../../Drivers/CMSIS/Include/arm_math.h ****   }
 822:../../Drivers/CMSIS/Include/arm_math.h **** 
 823:../../Drivers/CMSIS/Include/arm_math.h **** 
 824:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 825:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 826:../../Drivers/CMSIS/Include/arm_math.h ****    */
 827:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SHASX(
 828:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 829:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
ARM GAS  /tmp/cclaaHiH.s 			page 16


 830:../../Drivers/CMSIS/Include/arm_math.h ****   {
 831:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 832:../../Drivers/CMSIS/Include/arm_math.h **** 
 833:../../Drivers/CMSIS/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 834:../../Drivers/CMSIS/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 835:../../Drivers/CMSIS/Include/arm_math.h **** 
 836:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 837:../../Drivers/CMSIS/Include/arm_math.h ****   }
 838:../../Drivers/CMSIS/Include/arm_math.h **** 
 839:../../Drivers/CMSIS/Include/arm_math.h **** 
 840:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 841:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 842:../../Drivers/CMSIS/Include/arm_math.h ****    */
 843:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __QSAX(
 844:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 845:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 846:../../Drivers/CMSIS/Include/arm_math.h ****   {
 847:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 848:../../Drivers/CMSIS/Include/arm_math.h **** 
 849:../../Drivers/CMSIS/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 850:../../Drivers/CMSIS/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 851:../../Drivers/CMSIS/Include/arm_math.h **** 
 852:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 853:../../Drivers/CMSIS/Include/arm_math.h ****   }
 854:../../Drivers/CMSIS/Include/arm_math.h **** 
 855:../../Drivers/CMSIS/Include/arm_math.h **** 
 856:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 857:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 858:../../Drivers/CMSIS/Include/arm_math.h ****    */
 859:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SHSAX(
 860:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 861:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 862:../../Drivers/CMSIS/Include/arm_math.h ****   {
 863:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t r, s;
 864:../../Drivers/CMSIS/Include/arm_math.h **** 
 865:../../Drivers/CMSIS/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 866:../../Drivers/CMSIS/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 867:../../Drivers/CMSIS/Include/arm_math.h **** 
 868:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 869:../../Drivers/CMSIS/Include/arm_math.h ****   }
 870:../../Drivers/CMSIS/Include/arm_math.h **** 
 871:../../Drivers/CMSIS/Include/arm_math.h **** 
 872:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 873:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 874:../../Drivers/CMSIS/Include/arm_math.h ****    */
 875:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMUSDX(
 876:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 877:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 878:../../Drivers/CMSIS/Include/arm_math.h ****   {
 879:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 880:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 881:../../Drivers/CMSIS/Include/arm_math.h ****   }
 882:../../Drivers/CMSIS/Include/arm_math.h **** 
 883:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 884:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 885:../../Drivers/CMSIS/Include/arm_math.h ****    */
 886:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMUADX(
ARM GAS  /tmp/cclaaHiH.s 			page 17


 887:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 888:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 889:../../Drivers/CMSIS/Include/arm_math.h ****   {
 890:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 891:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 892:../../Drivers/CMSIS/Include/arm_math.h ****   }
 893:../../Drivers/CMSIS/Include/arm_math.h **** 
 894:../../Drivers/CMSIS/Include/arm_math.h **** 
 895:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 896:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 897:../../Drivers/CMSIS/Include/arm_math.h ****    */
 898:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE int32_t __QADD(
 899:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t x,
 900:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t y)
 901:../../Drivers/CMSIS/Include/arm_math.h ****   {
 902:../../Drivers/CMSIS/Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 903:../../Drivers/CMSIS/Include/arm_math.h ****   }
 904:../../Drivers/CMSIS/Include/arm_math.h **** 
 905:../../Drivers/CMSIS/Include/arm_math.h **** 
 906:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 907:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 908:../../Drivers/CMSIS/Include/arm_math.h ****    */
 909:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE int32_t __QSUB(
 910:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t x,
 911:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t y)
 912:../../Drivers/CMSIS/Include/arm_math.h ****   {
 913:../../Drivers/CMSIS/Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 914:../../Drivers/CMSIS/Include/arm_math.h ****   }
 915:../../Drivers/CMSIS/Include/arm_math.h **** 
 916:../../Drivers/CMSIS/Include/arm_math.h **** 
 917:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 918:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 919:../../Drivers/CMSIS/Include/arm_math.h ****    */
 920:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMLAD(
 921:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 922:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 923:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t sum)
 924:../../Drivers/CMSIS/Include/arm_math.h ****   {
 925:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 926:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 927:../../Drivers/CMSIS/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 928:../../Drivers/CMSIS/Include/arm_math.h ****   }
 929:../../Drivers/CMSIS/Include/arm_math.h **** 
 930:../../Drivers/CMSIS/Include/arm_math.h **** 
 931:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 932:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 933:../../Drivers/CMSIS/Include/arm_math.h ****    */
 934:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMLADX(
 935:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 936:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 937:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t sum)
 938:../../Drivers/CMSIS/Include/arm_math.h ****   {
 939:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 940:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 941:../../Drivers/CMSIS/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 942:../../Drivers/CMSIS/Include/arm_math.h ****   }
 943:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 18


 944:../../Drivers/CMSIS/Include/arm_math.h **** 
 945:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 946:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLSDX for M3 and M0 processors
 947:../../Drivers/CMSIS/Include/arm_math.h ****    */
 948:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMLSDX(
 949:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 950:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 951:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t sum)
 952:../../Drivers/CMSIS/Include/arm_math.h ****   {
 953:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 954:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 955:../../Drivers/CMSIS/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 956:../../Drivers/CMSIS/Include/arm_math.h ****   }
 957:../../Drivers/CMSIS/Include/arm_math.h **** 
 958:../../Drivers/CMSIS/Include/arm_math.h **** 
 959:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 960:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLALD for M3 and M0 processors
 961:../../Drivers/CMSIS/Include/arm_math.h ****    */
 962:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint64_t __SMLALD(
 963:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 964:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 965:../../Drivers/CMSIS/Include/arm_math.h ****   uint64_t sum)
 966:../../Drivers/CMSIS/Include/arm_math.h ****   {
 967:../../Drivers/CMSIS/Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
 968:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 969:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 970:../../Drivers/CMSIS/Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 971:../../Drivers/CMSIS/Include/arm_math.h ****   }
 972:../../Drivers/CMSIS/Include/arm_math.h **** 
 973:../../Drivers/CMSIS/Include/arm_math.h **** 
 974:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 975:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMLALDX for M3 and M0 processors
 976:../../Drivers/CMSIS/Include/arm_math.h ****    */
 977:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint64_t __SMLALDX(
 978:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 979:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y,
 980:../../Drivers/CMSIS/Include/arm_math.h ****   uint64_t sum)
 981:../../Drivers/CMSIS/Include/arm_math.h ****   {
 982:../../Drivers/CMSIS/Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
 983:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 984:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 985:../../Drivers/CMSIS/Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 986:../../Drivers/CMSIS/Include/arm_math.h ****   }
 987:../../Drivers/CMSIS/Include/arm_math.h **** 
 988:../../Drivers/CMSIS/Include/arm_math.h **** 
 989:../../Drivers/CMSIS/Include/arm_math.h ****   /*
 990:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMUAD for M3 and M0 processors
 991:../../Drivers/CMSIS/Include/arm_math.h ****    */
 992:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMUAD(
 993:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
 994:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
 995:../../Drivers/CMSIS/Include/arm_math.h ****   {
 996:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 997:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
 998:../../Drivers/CMSIS/Include/arm_math.h ****   }
 999:../../Drivers/CMSIS/Include/arm_math.h **** 
1000:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 19


1001:../../Drivers/CMSIS/Include/arm_math.h ****   /*
1002:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SMUSD for M3 and M0 processors
1003:../../Drivers/CMSIS/Include/arm_math.h ****    */
1004:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SMUSD(
1005:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x,
1006:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t y)
1007:../../Drivers/CMSIS/Include/arm_math.h ****   {
1008:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
1009:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1010:../../Drivers/CMSIS/Include/arm_math.h ****   }
1011:../../Drivers/CMSIS/Include/arm_math.h **** 
1012:../../Drivers/CMSIS/Include/arm_math.h **** 
1013:../../Drivers/CMSIS/Include/arm_math.h ****   /*
1014:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief C custom defined SXTB16 for M3 and M0 processors
1015:../../Drivers/CMSIS/Include/arm_math.h ****    */
1016:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE uint32_t __SXTB16(
1017:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t x)
1018:../../Drivers/CMSIS/Include/arm_math.h ****   {
1019:../../Drivers/CMSIS/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
1020:../../Drivers/CMSIS/Include/arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
1021:../../Drivers/CMSIS/Include/arm_math.h ****   }
1022:../../Drivers/CMSIS/Include/arm_math.h **** 
1023:../../Drivers/CMSIS/Include/arm_math.h **** #endif /* defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY) */
1024:../../Drivers/CMSIS/Include/arm_math.h **** 
1025:../../Drivers/CMSIS/Include/arm_math.h **** 
1026:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1027:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1028:../../Drivers/CMSIS/Include/arm_math.h ****    */
1029:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1030:../../Drivers/CMSIS/Include/arm_math.h ****   {
1031:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1032:../../Drivers/CMSIS/Include/arm_math.h ****     q7_t *pState;            /**< points to the state variable array. The array is of length numTap
1033:../../Drivers/CMSIS/Include/arm_math.h ****     q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*
1034:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_instance_q7;
1035:../../Drivers/CMSIS/Include/arm_math.h **** 
1036:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1037:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1038:../../Drivers/CMSIS/Include/arm_math.h ****    */
1039:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1040:../../Drivers/CMSIS/Include/arm_math.h ****   {
1041:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1042:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;            /**< points to the state variable array. The array is of length numTa
1043:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1044:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_instance_q15;
1045:../../Drivers/CMSIS/Include/arm_math.h **** 
1046:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1047:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1048:../../Drivers/CMSIS/Include/arm_math.h ****    */
1049:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1050:../../Drivers/CMSIS/Include/arm_math.h ****   {
1051:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1052:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;            /**< points to the state variable array. The array is of length numTa
1053:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1054:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_instance_q31;
1055:../../Drivers/CMSIS/Include/arm_math.h **** 
1056:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1057:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
ARM GAS  /tmp/cclaaHiH.s 			page 20


1058:../../Drivers/CMSIS/Include/arm_math.h ****    */
1059:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1060:../../Drivers/CMSIS/Include/arm_math.h ****   {
1061:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1062:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
1063:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
1064:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_instance_f32;
1065:../../Drivers/CMSIS/Include/arm_math.h **** 
1066:../../Drivers/CMSIS/Include/arm_math.h **** 
1067:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1068:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1069:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1070:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1071:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1072:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1073:../../Drivers/CMSIS/Include/arm_math.h ****    */
1074:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_q7(
1075:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q7 * S,
1076:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
1077:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
1078:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1079:../../Drivers/CMSIS/Include/arm_math.h **** 
1080:../../Drivers/CMSIS/Include/arm_math.h **** 
1081:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1082:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1083:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1084:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1085:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1086:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1087:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1088:../../Drivers/CMSIS/Include/arm_math.h ****    */
1089:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_init_q7(
1090:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_instance_q7 * S,
1091:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
1092:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pCoeffs,
1093:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pState,
1094:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1095:../../Drivers/CMSIS/Include/arm_math.h **** 
1096:../../Drivers/CMSIS/Include/arm_math.h **** 
1097:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1098:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1099:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1100:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1101:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1102:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1103:../../Drivers/CMSIS/Include/arm_math.h ****    */
1104:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_q15(
1105:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1106:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
1107:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1108:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1109:../../Drivers/CMSIS/Include/arm_math.h **** 
1110:../../Drivers/CMSIS/Include/arm_math.h **** 
1111:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1112:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
1113:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1114:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
ARM GAS  /tmp/cclaaHiH.s 			page 21


1115:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1116:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1117:../../Drivers/CMSIS/Include/arm_math.h ****    */
1118:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_fast_q15(
1119:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1120:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
1121:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1122:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1123:../../Drivers/CMSIS/Include/arm_math.h **** 
1124:../../Drivers/CMSIS/Include/arm_math.h **** 
1125:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1126:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1127:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1128:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1129:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1130:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1131:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1132:../../Drivers/CMSIS/Include/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARG
1133:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>numTaps</code> is not a supported value.
1134:../../Drivers/CMSIS/Include/arm_math.h ****    */
1135:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_init_q15(
1136:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_instance_q15 * S,
1137:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
1138:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
1139:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
1140:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1141:../../Drivers/CMSIS/Include/arm_math.h **** 
1142:../../Drivers/CMSIS/Include/arm_math.h **** 
1143:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1144:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1145:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1146:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1147:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1148:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1149:../../Drivers/CMSIS/Include/arm_math.h ****    */
1150:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_q31(
1151:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1152:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
1153:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1154:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1155:../../Drivers/CMSIS/Include/arm_math.h **** 
1156:../../Drivers/CMSIS/Include/arm_math.h **** 
1157:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1158:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
1159:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR structure.
1160:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1161:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1162:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1163:../../Drivers/CMSIS/Include/arm_math.h ****    */
1164:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_fast_q31(
1165:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1166:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
1167:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1168:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1169:../../Drivers/CMSIS/Include/arm_math.h **** 
1170:../../Drivers/CMSIS/Include/arm_math.h **** 
1171:../../Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/cclaaHiH.s 			page 22


1172:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1173:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1174:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1175:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1176:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1177:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1178:../../Drivers/CMSIS/Include/arm_math.h ****    */
1179:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_init_q31(
1180:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_instance_q31 * S,
1181:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
1182:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
1183:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
1184:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1185:../../Drivers/CMSIS/Include/arm_math.h **** 
1186:../../Drivers/CMSIS/Include/arm_math.h **** 
1187:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1188:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1189:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1190:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1191:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1192:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1193:../../Drivers/CMSIS/Include/arm_math.h ****    */
1194:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_f32(
1195:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_instance_f32 * S,
1196:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
1197:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
1198:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1199:../../Drivers/CMSIS/Include/arm_math.h **** 
1200:../../Drivers/CMSIS/Include/arm_math.h **** 
1201:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1202:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1203:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1204:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1205:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1206:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1207:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1208:../../Drivers/CMSIS/Include/arm_math.h ****    */
1209:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_init_f32(
1210:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_instance_f32 * S,
1211:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
1212:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
1213:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
1214:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1215:../../Drivers/CMSIS/Include/arm_math.h **** 
1216:../../Drivers/CMSIS/Include/arm_math.h **** 
1217:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1218:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1219:../../Drivers/CMSIS/Include/arm_math.h ****    */
1220:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1221:../../Drivers/CMSIS/Include/arm_math.h ****   {
1222:../../Drivers/CMSIS/Include/arm_math.h ****     int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*num
1223:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1224:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1225:../../Drivers/CMSIS/Include/arm_math.h ****     int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
1226:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1227:../../Drivers/CMSIS/Include/arm_math.h **** 
1228:../../Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/cclaaHiH.s 			page 23


1229:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1230:../../Drivers/CMSIS/Include/arm_math.h ****    */
1231:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1232:../../Drivers/CMSIS/Include/arm_math.h ****   {
1233:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1234:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1235:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1236:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
1237:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1238:../../Drivers/CMSIS/Include/arm_math.h **** 
1239:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1240:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1241:../../Drivers/CMSIS/Include/arm_math.h ****    */
1242:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1243:../../Drivers/CMSIS/Include/arm_math.h ****   {
1244:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1245:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;       /**< Points to the array of state coefficients.  The array is of lengt
1246:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*nu
1247:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1248:../../Drivers/CMSIS/Include/arm_math.h **** 
1249:../../Drivers/CMSIS/Include/arm_math.h **** 
1250:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1251:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1252:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1253:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1254:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1255:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1256:../../Drivers/CMSIS/Include/arm_math.h ****    */
1257:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_q15(
1258:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1259:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
1260:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1261:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1262:../../Drivers/CMSIS/Include/arm_math.h **** 
1263:../../Drivers/CMSIS/Include/arm_math.h **** 
1264:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1265:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1266:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1267:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1268:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1269:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1270:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1271:../../Drivers/CMSIS/Include/arm_math.h ****    */
1272:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1273:../../Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_casd_df1_inst_q15 * S,
1274:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
1275:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
1276:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
1277:../../Drivers/CMSIS/Include/arm_math.h ****   int8_t postShift);
1278:../../Drivers/CMSIS/Include/arm_math.h **** 
1279:../../Drivers/CMSIS/Include/arm_math.h **** 
1280:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1281:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1282:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1283:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1284:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1285:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
ARM GAS  /tmp/cclaaHiH.s 			page 24


1286:../../Drivers/CMSIS/Include/arm_math.h ****    */
1287:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1288:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1289:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
1290:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1291:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1292:../../Drivers/CMSIS/Include/arm_math.h **** 
1293:../../Drivers/CMSIS/Include/arm_math.h **** 
1294:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1295:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1296:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1297:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1298:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1299:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1300:../../Drivers/CMSIS/Include/arm_math.h ****    */
1301:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_q31(
1302:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1303:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
1304:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1305:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1306:../../Drivers/CMSIS/Include/arm_math.h **** 
1307:../../Drivers/CMSIS/Include/arm_math.h **** 
1308:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1309:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1310:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1311:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1312:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1313:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1314:../../Drivers/CMSIS/Include/arm_math.h ****    */
1315:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1316:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1317:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
1318:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1319:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1320:../../Drivers/CMSIS/Include/arm_math.h **** 
1321:../../Drivers/CMSIS/Include/arm_math.h **** 
1322:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1323:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1324:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1325:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1326:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1327:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1328:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1329:../../Drivers/CMSIS/Include/arm_math.h ****    */
1330:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1331:../../Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_casd_df1_inst_q31 * S,
1332:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
1333:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
1334:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
1335:../../Drivers/CMSIS/Include/arm_math.h ****   int8_t postShift);
1336:../../Drivers/CMSIS/Include/arm_math.h **** 
1337:../../Drivers/CMSIS/Include/arm_math.h **** 
1338:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1339:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1340:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1341:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1342:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
ARM GAS  /tmp/cclaaHiH.s 			page 25


1343:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1344:../../Drivers/CMSIS/Include/arm_math.h ****    */
1345:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_f32(
1346:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1347:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
1348:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
1349:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1350:../../Drivers/CMSIS/Include/arm_math.h **** 
1351:../../Drivers/CMSIS/Include/arm_math.h **** 
1352:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1353:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1354:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1355:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1356:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1357:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1358:../../Drivers/CMSIS/Include/arm_math.h ****    */
1359:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1360:../../Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_casd_df1_inst_f32 * S,
1361:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
1362:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
1363:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState);
1364:../../Drivers/CMSIS/Include/arm_math.h **** 
1365:../../Drivers/CMSIS/Include/arm_math.h **** 
1366:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1367:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1368:../../Drivers/CMSIS/Include/arm_math.h ****    */
1369:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1370:../../Drivers/CMSIS/Include/arm_math.h ****   {
1371:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1372:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1373:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1374:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_matrix_instance_f32;
1375:../../Drivers/CMSIS/Include/arm_math.h **** 
1376:../../Drivers/CMSIS/Include/arm_math.h **** 
1377:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1378:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1379:../../Drivers/CMSIS/Include/arm_math.h ****    */
1380:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1381:../../Drivers/CMSIS/Include/arm_math.h ****   {
1382:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1383:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1384:../../Drivers/CMSIS/Include/arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1385:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_matrix_instance_f64;
1386:../../Drivers/CMSIS/Include/arm_math.h **** 
1387:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1388:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1389:../../Drivers/CMSIS/Include/arm_math.h ****    */
1390:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1391:../../Drivers/CMSIS/Include/arm_math.h ****   {
1392:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1393:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1394:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1395:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_matrix_instance_q15;
1396:../../Drivers/CMSIS/Include/arm_math.h **** 
1397:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1398:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1399:../../Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/cclaaHiH.s 			page 26


1400:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1401:../../Drivers/CMSIS/Include/arm_math.h ****   {
1402:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1403:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1404:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1405:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_matrix_instance_q31;
1406:../../Drivers/CMSIS/Include/arm_math.h **** 
1407:../../Drivers/CMSIS/Include/arm_math.h **** 
1408:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1409:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix addition.
1410:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1411:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1412:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1413:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1414:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1415:../../Drivers/CMSIS/Include/arm_math.h ****    */
1416:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_add_f32(
1417:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1418:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1419:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1420:../../Drivers/CMSIS/Include/arm_math.h **** 
1421:../../Drivers/CMSIS/Include/arm_math.h **** 
1422:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1423:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix addition.
1424:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1425:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1426:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1427:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1428:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1429:../../Drivers/CMSIS/Include/arm_math.h ****    */
1430:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_add_q15(
1431:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1432:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1433:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1434:../../Drivers/CMSIS/Include/arm_math.h **** 
1435:../../Drivers/CMSIS/Include/arm_math.h **** 
1436:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1437:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix addition.
1438:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1439:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1440:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1441:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1442:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1443:../../Drivers/CMSIS/Include/arm_math.h ****    */
1444:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_add_q31(
1445:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1446:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1447:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1448:../../Drivers/CMSIS/Include/arm_math.h **** 
1449:../../Drivers/CMSIS/Include/arm_math.h **** 
1450:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1451:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1452:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1453:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1454:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1455:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1456:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
ARM GAS  /tmp/cclaaHiH.s 			page 27


1457:../../Drivers/CMSIS/Include/arm_math.h ****    */
1458:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_f32(
1459:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1460:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1461:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1462:../../Drivers/CMSIS/Include/arm_math.h **** 
1463:../../Drivers/CMSIS/Include/arm_math.h **** 
1464:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1465:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1466:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1467:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1468:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1469:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1470:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1471:../../Drivers/CMSIS/Include/arm_math.h ****    */
1472:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_q15(
1473:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1474:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1475:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1476:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch);
1477:../../Drivers/CMSIS/Include/arm_math.h **** 
1478:../../Drivers/CMSIS/Include/arm_math.h **** 
1479:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1480:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1481:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1482:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1483:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1484:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1485:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1486:../../Drivers/CMSIS/Include/arm_math.h ****    */
1487:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_cmplx_mult_q31(
1488:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1489:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1490:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1491:../../Drivers/CMSIS/Include/arm_math.h **** 
1492:../../Drivers/CMSIS/Include/arm_math.h **** 
1493:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1494:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix transpose.
1495:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1496:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1497:../../Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1498:../../Drivers/CMSIS/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1499:../../Drivers/CMSIS/Include/arm_math.h ****    */
1500:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_trans_f32(
1501:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1502:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1503:../../Drivers/CMSIS/Include/arm_math.h **** 
1504:../../Drivers/CMSIS/Include/arm_math.h **** 
1505:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1506:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix transpose.
1507:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1508:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1509:../../Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1510:../../Drivers/CMSIS/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1511:../../Drivers/CMSIS/Include/arm_math.h ****    */
1512:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_trans_q15(
1513:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
ARM GAS  /tmp/cclaaHiH.s 			page 28


1514:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1515:../../Drivers/CMSIS/Include/arm_math.h **** 
1516:../../Drivers/CMSIS/Include/arm_math.h **** 
1517:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1518:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix transpose.
1519:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1520:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1521:../../Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1522:../../Drivers/CMSIS/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1523:../../Drivers/CMSIS/Include/arm_math.h ****    */
1524:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_trans_q31(
1525:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1526:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1527:../../Drivers/CMSIS/Include/arm_math.h **** 
1528:../../Drivers/CMSIS/Include/arm_math.h **** 
1529:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1530:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix multiplication
1531:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1532:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1533:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1534:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1535:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1536:../../Drivers/CMSIS/Include/arm_math.h ****    */
1537:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_f32(
1538:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1539:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1540:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1541:../../Drivers/CMSIS/Include/arm_math.h **** 
1542:../../Drivers/CMSIS/Include/arm_math.h **** 
1543:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1544:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix multiplication
1545:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1546:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1547:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1548:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1549:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1550:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1551:../../Drivers/CMSIS/Include/arm_math.h ****    */
1552:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_q15(
1553:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1554:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1555:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1556:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState);
1557:../../Drivers/CMSIS/Include/arm_math.h **** 
1558:../../Drivers/CMSIS/Include/arm_math.h **** 
1559:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1560:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1561:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1562:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1563:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1564:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1565:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1566:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1567:../../Drivers/CMSIS/Include/arm_math.h ****    */
1568:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_fast_q15(
1569:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1570:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
ARM GAS  /tmp/cclaaHiH.s 			page 29


1571:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1572:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState);
1573:../../Drivers/CMSIS/Include/arm_math.h **** 
1574:../../Drivers/CMSIS/Include/arm_math.h **** 
1575:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1576:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix multiplication
1577:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1578:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1579:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1580:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1581:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1582:../../Drivers/CMSIS/Include/arm_math.h ****    */
1583:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_q31(
1584:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1585:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1586:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1587:../../Drivers/CMSIS/Include/arm_math.h **** 
1588:../../Drivers/CMSIS/Include/arm_math.h **** 
1589:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1590:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1591:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1592:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1593:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1594:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1595:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1596:../../Drivers/CMSIS/Include/arm_math.h ****    */
1597:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_mult_fast_q31(
1598:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1599:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1600:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1601:../../Drivers/CMSIS/Include/arm_math.h **** 
1602:../../Drivers/CMSIS/Include/arm_math.h **** 
1603:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1604:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix subtraction
1605:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1606:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1607:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1608:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1609:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1610:../../Drivers/CMSIS/Include/arm_math.h ****    */
1611:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_sub_f32(
1612:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1613:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1614:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1615:../../Drivers/CMSIS/Include/arm_math.h **** 
1616:../../Drivers/CMSIS/Include/arm_math.h **** 
1617:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1618:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix subtraction
1619:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1620:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1621:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1622:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1623:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1624:../../Drivers/CMSIS/Include/arm_math.h ****    */
1625:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_sub_q15(
1626:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1627:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
ARM GAS  /tmp/cclaaHiH.s 			page 30


1628:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1629:../../Drivers/CMSIS/Include/arm_math.h **** 
1630:../../Drivers/CMSIS/Include/arm_math.h **** 
1631:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1632:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix subtraction
1633:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1634:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1635:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1636:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1637:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1638:../../Drivers/CMSIS/Include/arm_math.h ****    */
1639:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_sub_q31(
1640:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1641:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1642:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1643:../../Drivers/CMSIS/Include/arm_math.h **** 
1644:../../Drivers/CMSIS/Include/arm_math.h **** 
1645:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1646:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix scaling.
1647:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1648:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scale  scale factor
1649:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst   points to the output matrix
1650:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1651:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1652:../../Drivers/CMSIS/Include/arm_math.h ****    */
1653:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_scale_f32(
1654:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1655:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t scale,
1656:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1657:../../Drivers/CMSIS/Include/arm_math.h **** 
1658:../../Drivers/CMSIS/Include/arm_math.h **** 
1659:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1660:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 matrix scaling.
1661:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1662:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1663:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1664:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to output matrix
1665:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1666:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1667:../../Drivers/CMSIS/Include/arm_math.h ****    */
1668:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_scale_q15(
1669:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1670:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t scaleFract,
1671:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t shift,
1672:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1673:../../Drivers/CMSIS/Include/arm_math.h **** 
1674:../../Drivers/CMSIS/Include/arm_math.h **** 
1675:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1676:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 matrix scaling.
1677:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1678:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1679:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1680:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to output matrix structure
1681:../../Drivers/CMSIS/Include/arm_math.h ****    * @return     The function returns either
1682:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1683:../../Drivers/CMSIS/Include/arm_math.h ****    */
1684:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_scale_q31(
ARM GAS  /tmp/cclaaHiH.s 			page 31


1685:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1686:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t scaleFract,
1687:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t shift,
1688:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1689:../../Drivers/CMSIS/Include/arm_math.h **** 
1690:../../Drivers/CMSIS/Include/arm_math.h **** 
1691:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1692:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q31 matrix initialization.
1693:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1694:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1695:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1696:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1697:../../Drivers/CMSIS/Include/arm_math.h ****    */
1698:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_mat_init_q31(
1699:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q31 * S,
1700:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t nRows,
1701:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t nColumns,
1702:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pData);
1703:../../Drivers/CMSIS/Include/arm_math.h **** 
1704:../../Drivers/CMSIS/Include/arm_math.h **** 
1705:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1706:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q15 matrix initialization.
1707:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1708:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1709:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1710:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1711:../../Drivers/CMSIS/Include/arm_math.h ****    */
1712:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_mat_init_q15(
1713:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_q15 * S,
1714:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t nRows,
1715:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t nColumns,
1716:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pData);
1717:../../Drivers/CMSIS/Include/arm_math.h **** 
1718:../../Drivers/CMSIS/Include/arm_math.h **** 
1719:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1720:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point matrix initialization.
1721:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1722:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1723:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1724:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1725:../../Drivers/CMSIS/Include/arm_math.h ****    */
1726:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_mat_init_f32(
1727:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * S,
1728:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t nRows,
1729:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t nColumns,
1730:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pData);
1731:../../Drivers/CMSIS/Include/arm_math.h **** 
1732:../../Drivers/CMSIS/Include/arm_math.h **** 
1733:../../Drivers/CMSIS/Include/arm_math.h **** 
1734:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1735:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1736:../../Drivers/CMSIS/Include/arm_math.h ****    */
1737:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1738:../../Drivers/CMSIS/Include/arm_math.h ****   {
1739:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1740:../../Drivers/CMSIS/Include/arm_math.h **** #ifdef ARM_MATH_CM0_FAMILY
1741:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t A1;
ARM GAS  /tmp/cclaaHiH.s 			page 32


1742:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t A2;
1743:../../Drivers/CMSIS/Include/arm_math.h **** #else
1744:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1745:../../Drivers/CMSIS/Include/arm_math.h **** #endif
1746:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t state[3];     /**< The state array of length 3. */
1747:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t Kp;           /**< The proportional gain. */
1748:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t Ki;           /**< The integral gain. */
1749:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t Kd;           /**< The derivative gain. */
1750:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_pid_instance_q15;
1751:../../Drivers/CMSIS/Include/arm_math.h **** 
1752:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1753:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1754:../../Drivers/CMSIS/Include/arm_math.h ****    */
1755:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1756:../../Drivers/CMSIS/Include/arm_math.h ****   {
1757:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1758:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1759:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t A2;            /**< The derived gain, A2 = Kd . */
1760:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t state[3];      /**< The state array of length 3. */
1761:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t Kp;            /**< The proportional gain. */
1762:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t Ki;            /**< The integral gain. */
1763:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t Kd;            /**< The derivative gain. */
1764:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_pid_instance_q31;
1765:../../Drivers/CMSIS/Include/arm_math.h **** 
1766:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1767:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1768:../../Drivers/CMSIS/Include/arm_math.h ****    */
1769:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1770:../../Drivers/CMSIS/Include/arm_math.h ****   {
1771:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1772:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1773:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t A2;          /**< The derived gain, A2 = Kd . */
1774:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t state[3];    /**< The state array of length 3. */
1775:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t Kp;          /**< The proportional gain. */
1776:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t Ki;          /**< The integral gain. */
1777:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t Kd;          /**< The derivative gain. */
1778:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_pid_instance_f32;
1779:../../Drivers/CMSIS/Include/arm_math.h **** 
1780:../../Drivers/CMSIS/Include/arm_math.h **** 
1781:../../Drivers/CMSIS/Include/arm_math.h **** 
1782:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1783:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1784:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1785:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1786:../../Drivers/CMSIS/Include/arm_math.h ****    */
1787:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_init_f32(
1788:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_f32 * S,
1789:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t resetStateFlag);
1790:../../Drivers/CMSIS/Include/arm_math.h **** 
1791:../../Drivers/CMSIS/Include/arm_math.h **** 
1792:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1793:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1794:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1795:../../Drivers/CMSIS/Include/arm_math.h ****    */
1796:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_reset_f32(
1797:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_f32 * S);
1798:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 33


1799:../../Drivers/CMSIS/Include/arm_math.h **** 
1800:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1801:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1802:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1803:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1804:../../Drivers/CMSIS/Include/arm_math.h ****    */
1805:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_init_q31(
1806:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q31 * S,
1807:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t resetStateFlag);
1808:../../Drivers/CMSIS/Include/arm_math.h **** 
1809:../../Drivers/CMSIS/Include/arm_math.h **** 
1810:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1811:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1812:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1813:../../Drivers/CMSIS/Include/arm_math.h ****    */
1814:../../Drivers/CMSIS/Include/arm_math.h **** 
1815:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_reset_q31(
1816:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q31 * S);
1817:../../Drivers/CMSIS/Include/arm_math.h **** 
1818:../../Drivers/CMSIS/Include/arm_math.h **** 
1819:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1820:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1821:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1822:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1823:../../Drivers/CMSIS/Include/arm_math.h ****    */
1824:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_init_q15(
1825:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q15 * S,
1826:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t resetStateFlag);
1827:../../Drivers/CMSIS/Include/arm_math.h **** 
1828:../../Drivers/CMSIS/Include/arm_math.h **** 
1829:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1830:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1831:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1832:../../Drivers/CMSIS/Include/arm_math.h ****    */
1833:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_pid_reset_q15(
1834:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q15 * S);
1835:../../Drivers/CMSIS/Include/arm_math.h **** 
1836:../../Drivers/CMSIS/Include/arm_math.h **** 
1837:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1838:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1839:../../Drivers/CMSIS/Include/arm_math.h ****    */
1840:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1841:../../Drivers/CMSIS/Include/arm_math.h ****   {
1842:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t nValues;           /**< nValues */
1843:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t x1;               /**< x1 */
1844:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t xSpacing;         /**< xSpacing */
1845:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pYData;          /**< pointer to the table of Y values */
1846:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_linear_interp_instance_f32;
1847:../../Drivers/CMSIS/Include/arm_math.h **** 
1848:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1849:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1850:../../Drivers/CMSIS/Include/arm_math.h ****    */
1851:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1852:../../Drivers/CMSIS/Include/arm_math.h ****   {
1853:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1854:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1855:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pData;   /**< points to the data table. */
ARM GAS  /tmp/cclaaHiH.s 			page 34


1856:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_bilinear_interp_instance_f32;
1857:../../Drivers/CMSIS/Include/arm_math.h **** 
1858:../../Drivers/CMSIS/Include/arm_math.h ****    /**
1859:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1860:../../Drivers/CMSIS/Include/arm_math.h ****    */
1861:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1862:../../Drivers/CMSIS/Include/arm_math.h ****   {
1863:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1864:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1865:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pData;       /**< points to the data table. */
1866:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_bilinear_interp_instance_q31;
1867:../../Drivers/CMSIS/Include/arm_math.h **** 
1868:../../Drivers/CMSIS/Include/arm_math.h ****    /**
1869:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1870:../../Drivers/CMSIS/Include/arm_math.h ****    */
1871:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1872:../../Drivers/CMSIS/Include/arm_math.h ****   {
1873:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1874:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1875:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pData;       /**< points to the data table. */
1876:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_bilinear_interp_instance_q15;
1877:../../Drivers/CMSIS/Include/arm_math.h **** 
1878:../../Drivers/CMSIS/Include/arm_math.h ****    /**
1879:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1880:../../Drivers/CMSIS/Include/arm_math.h ****    */
1881:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1882:../../Drivers/CMSIS/Include/arm_math.h ****   {
1883:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1884:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1885:../../Drivers/CMSIS/Include/arm_math.h ****     q7_t *pData;        /**< points to the data table. */
1886:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_bilinear_interp_instance_q7;
1887:../../Drivers/CMSIS/Include/arm_math.h **** 
1888:../../Drivers/CMSIS/Include/arm_math.h **** 
1889:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1890:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q7 vector multiplication.
1891:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1892:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1893:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1894:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1895:../../Drivers/CMSIS/Include/arm_math.h ****    */
1896:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_mult_q7(
1897:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
1898:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
1899:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
1900:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1901:../../Drivers/CMSIS/Include/arm_math.h **** 
1902:../../Drivers/CMSIS/Include/arm_math.h **** 
1903:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1904:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 vector multiplication.
1905:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1906:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1907:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1908:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1909:../../Drivers/CMSIS/Include/arm_math.h ****    */
1910:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_mult_q15(
1911:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
1912:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
ARM GAS  /tmp/cclaaHiH.s 			page 35


1913:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
1914:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1915:../../Drivers/CMSIS/Include/arm_math.h **** 
1916:../../Drivers/CMSIS/Include/arm_math.h **** 
1917:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1918:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 vector multiplication.
1919:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1920:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1921:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1922:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1923:../../Drivers/CMSIS/Include/arm_math.h ****    */
1924:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_mult_q31(
1925:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
1926:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
1927:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
1928:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1929:../../Drivers/CMSIS/Include/arm_math.h **** 
1930:../../Drivers/CMSIS/Include/arm_math.h **** 
1931:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1932:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point vector multiplication.
1933:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1934:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1935:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
1936:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1937:../../Drivers/CMSIS/Include/arm_math.h ****    */
1938:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_mult_f32(
1939:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
1940:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
1941:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
1942:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
1943:../../Drivers/CMSIS/Include/arm_math.h **** 
1944:../../Drivers/CMSIS/Include/arm_math.h **** 
1945:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1946:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1947:../../Drivers/CMSIS/Include/arm_math.h ****    */
1948:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1949:../../Drivers/CMSIS/Include/arm_math.h ****   {
1950:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1951:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1952:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1953:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
1954:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1955:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1956:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1957:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix2_instance_q15;
1958:../../Drivers/CMSIS/Include/arm_math.h **** 
1959:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
1960:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
1961:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix2_instance_q15 * S,
1962:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
1963:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
1964:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
1965:../../Drivers/CMSIS/Include/arm_math.h **** 
1966:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
1967:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix2_q15(
1968:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
1969:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc);
ARM GAS  /tmp/cclaaHiH.s 			page 36


1970:../../Drivers/CMSIS/Include/arm_math.h **** 
1971:../../Drivers/CMSIS/Include/arm_math.h **** 
1972:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1973:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1974:../../Drivers/CMSIS/Include/arm_math.h ****    */
1975:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
1976:../../Drivers/CMSIS/Include/arm_math.h ****   {
1977:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1978:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1979:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1980:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
1981:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1982:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1983:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1984:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix4_instance_q15;
1985:../../Drivers/CMSIS/Include/arm_math.h **** 
1986:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
1987:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
1988:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_q15 * S,
1989:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
1990:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
1991:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
1992:../../Drivers/CMSIS/Include/arm_math.h **** 
1993:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
1994:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix4_q15(
1995:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
1996:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc);
1997:../../Drivers/CMSIS/Include/arm_math.h **** 
1998:../../Drivers/CMSIS/Include/arm_math.h ****   /**
1999:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
2000:../../Drivers/CMSIS/Include/arm_math.h ****    */
2001:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2002:../../Drivers/CMSIS/Include/arm_math.h ****   {
2003:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2004:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2005:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2006:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
2007:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2008:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2009:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2010:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix2_instance_q31;
2011:../../Drivers/CMSIS/Include/arm_math.h **** 
2012:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2013:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
2014:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix2_instance_q31 * S,
2015:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
2016:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2017:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2018:../../Drivers/CMSIS/Include/arm_math.h **** 
2019:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2020:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix2_q31(
2021:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2022:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc);
2023:../../Drivers/CMSIS/Include/arm_math.h **** 
2024:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2025:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2026:../../Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/cclaaHiH.s 			page 37


2027:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2028:../../Drivers/CMSIS/Include/arm_math.h ****   {
2029:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2030:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2031:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2032:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2033:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2034:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2035:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2036:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix4_instance_q31;
2037:../../Drivers/CMSIS/Include/arm_math.h **** 
2038:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2039:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix4_q31(
2040:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2041:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc);
2042:../../Drivers/CMSIS/Include/arm_math.h **** 
2043:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2044:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2045:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_q31 * S,
2046:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
2047:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2048:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2049:../../Drivers/CMSIS/Include/arm_math.h **** 
2050:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2051:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2052:../../Drivers/CMSIS/Include/arm_math.h ****    */
2053:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2054:../../Drivers/CMSIS/Include/arm_math.h ****   {
2055:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2056:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2057:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2058:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2059:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2060:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2061:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2062:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2063:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix2_instance_f32;
2064:../../Drivers/CMSIS/Include/arm_math.h **** 
2065:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2066:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2067:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix2_instance_f32 * S,
2068:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
2069:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2070:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2071:../../Drivers/CMSIS/Include/arm_math.h **** 
2072:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2073:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix2_f32(
2074:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2075:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc);
2076:../../Drivers/CMSIS/Include/arm_math.h **** 
2077:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2078:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2079:../../Drivers/CMSIS/Include/arm_math.h ****    */
2080:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2081:../../Drivers/CMSIS/Include/arm_math.h ****   {
2082:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2083:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
ARM GAS  /tmp/cclaaHiH.s 			page 38


2084:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2085:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2086:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2087:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2088:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2089:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2090:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_radix4_instance_f32;
2091:../../Drivers/CMSIS/Include/arm_math.h **** 
2092:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2093:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2094:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S,
2095:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t fftLen,
2096:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2097:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2098:../../Drivers/CMSIS/Include/arm_math.h **** 
2099:../../Drivers/CMSIS/Include/arm_math.h **** /* Deprecated */
2100:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_radix4_f32(
2101:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2102:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc);
2103:../../Drivers/CMSIS/Include/arm_math.h **** 
2104:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2105:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2106:../../Drivers/CMSIS/Include/arm_math.h ****    */
2107:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2108:../../Drivers/CMSIS/Include/arm_math.h ****   {
2109:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2110:../../Drivers/CMSIS/Include/arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2111:../../Drivers/CMSIS/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2112:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2113:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_instance_q15;
2114:../../Drivers/CMSIS/Include/arm_math.h **** 
2115:../../Drivers/CMSIS/Include/arm_math.h **** void arm_cfft_q15(
2116:../../Drivers/CMSIS/Include/arm_math.h ****     const arm_cfft_instance_q15 * S,
2117:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t * p1,
2118:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag,
2119:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag);
2120:../../Drivers/CMSIS/Include/arm_math.h **** 
2121:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2122:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2123:../../Drivers/CMSIS/Include/arm_math.h ****    */
2124:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2125:../../Drivers/CMSIS/Include/arm_math.h ****   {
2126:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2127:../../Drivers/CMSIS/Include/arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2128:../../Drivers/CMSIS/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2129:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2130:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_instance_q31;
2131:../../Drivers/CMSIS/Include/arm_math.h **** 
2132:../../Drivers/CMSIS/Include/arm_math.h **** void arm_cfft_q31(
2133:../../Drivers/CMSIS/Include/arm_math.h ****     const arm_cfft_instance_q31 * S,
2134:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t * p1,
2135:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlag,
2136:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlag);
2137:../../Drivers/CMSIS/Include/arm_math.h **** 
2138:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2139:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2140:../../Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/cclaaHiH.s 			page 39


2141:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2142:../../Drivers/CMSIS/Include/arm_math.h ****   {
2143:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2144:../../Drivers/CMSIS/Include/arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2145:../../Drivers/CMSIS/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2146:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2147:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_cfft_instance_f32;
2148:../../Drivers/CMSIS/Include/arm_math.h **** 
2149:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cfft_f32(
2150:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_cfft_instance_f32 * S,
2151:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * p1,
2152:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag,
2153:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t bitReverseFlag);
2154:../../Drivers/CMSIS/Include/arm_math.h **** 
2155:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2156:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2157:../../Drivers/CMSIS/Include/arm_math.h ****    */
2158:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2159:../../Drivers/CMSIS/Include/arm_math.h ****   {
2160:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t fftLenReal;                      /**< length of the real FFT. */
2161:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inver
2162:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disable
2163:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports diffe
2164:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
2165:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
2166:../../Drivers/CMSIS/Include/arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2167:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_rfft_instance_q15;
2168:../../Drivers/CMSIS/Include/arm_math.h **** 
2169:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_rfft_init_q15(
2170:../../Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_q15 * S,
2171:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t fftLenReal,
2172:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t ifftFlagR,
2173:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t bitReverseFlag);
2174:../../Drivers/CMSIS/Include/arm_math.h **** 
2175:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_rfft_q15(
2176:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_rfft_instance_q15 * S,
2177:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2178:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst);
2179:../../Drivers/CMSIS/Include/arm_math.h **** 
2180:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2181:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2182:../../Drivers/CMSIS/Include/arm_math.h ****    */
2183:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2184:../../Drivers/CMSIS/Include/arm_math.h ****   {
2185:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2186:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2187:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2188:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports dif
2189:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
2190:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
2191:../../Drivers/CMSIS/Include/arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2192:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_rfft_instance_q31;
2193:../../Drivers/CMSIS/Include/arm_math.h **** 
2194:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_rfft_init_q31(
2195:../../Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_q31 * S,
2196:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t fftLenReal,
2197:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t ifftFlagR,
ARM GAS  /tmp/cclaaHiH.s 			page 40


2198:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t bitReverseFlag);
2199:../../Drivers/CMSIS/Include/arm_math.h **** 
2200:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_rfft_q31(
2201:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_rfft_instance_q31 * S,
2202:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2203:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
2204:../../Drivers/CMSIS/Include/arm_math.h **** 
2205:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2206:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2207:../../Drivers/CMSIS/Include/arm_math.h ****    */
2208:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2209:../../Drivers/CMSIS/Include/arm_math.h ****   {
2210:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2211:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2212:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2213:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2214:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports
2215:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
2216:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
2217:../../Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2218:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_rfft_instance_f32;
2219:../../Drivers/CMSIS/Include/arm_math.h **** 
2220:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_rfft_init_f32(
2221:../../Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_f32 * S,
2222:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2223:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t fftLenReal,
2224:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t ifftFlagR,
2225:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t bitReverseFlag);
2226:../../Drivers/CMSIS/Include/arm_math.h **** 
2227:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_rfft_f32(
2228:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_rfft_instance_f32 * S,
2229:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2230:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst);
2231:../../Drivers/CMSIS/Include/arm_math.h **** 
2232:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2233:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2234:../../Drivers/CMSIS/Include/arm_math.h ****    */
2235:../../Drivers/CMSIS/Include/arm_math.h **** typedef struct
2236:../../Drivers/CMSIS/Include/arm_math.h ****   {
2237:../../Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2238:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t fftLenRFFT;             /**< length of the real sequence */
2239:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2240:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2241:../../Drivers/CMSIS/Include/arm_math.h **** 
2242:../../Drivers/CMSIS/Include/arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2243:../../Drivers/CMSIS/Include/arm_math.h ****    arm_rfft_fast_instance_f32 * S,
2244:../../Drivers/CMSIS/Include/arm_math.h ****    uint16_t fftLen);
2245:../../Drivers/CMSIS/Include/arm_math.h **** 
2246:../../Drivers/CMSIS/Include/arm_math.h **** void arm_rfft_fast_f32(
2247:../../Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_fast_instance_f32 * S,
2248:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * p, float32_t * pOut,
2249:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t ifftFlag);
2250:../../Drivers/CMSIS/Include/arm_math.h **** 
2251:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2252:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2253:../../Drivers/CMSIS/Include/arm_math.h ****    */
2254:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
ARM GAS  /tmp/cclaaHiH.s 			page 41


2255:../../Drivers/CMSIS/Include/arm_math.h ****   {
2256:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2257:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2258:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t normalize;                 /**< normalizing factor. */
2259:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2260:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCosFactor;               /**< points to the cosFactor table. */
2261:../../Drivers/CMSIS/Include/arm_math.h ****     arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2262:../../Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2263:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_dct4_instance_f32;
2264:../../Drivers/CMSIS/Include/arm_math.h **** 
2265:../../Drivers/CMSIS/Include/arm_math.h **** 
2266:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2267:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2268:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2269:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2270:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2271:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2272:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2273:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2274:../../Drivers/CMSIS/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2275:../../Drivers/CMSIS/Include/arm_math.h ****    */
2276:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_dct4_init_f32(
2277:../../Drivers/CMSIS/Include/arm_math.h ****   arm_dct4_instance_f32 * S,
2278:../../Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_f32 * S_RFFT,
2279:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2280:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t N,
2281:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t Nby2,
2282:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t normalize);
2283:../../Drivers/CMSIS/Include/arm_math.h **** 
2284:../../Drivers/CMSIS/Include/arm_math.h **** 
2285:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2286:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2287:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2288:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2289:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2290:../../Drivers/CMSIS/Include/arm_math.h ****    */
2291:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_dct4_f32(
2292:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_dct4_instance_f32 * S,
2293:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
2294:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pInlineBuffer);
2295:../../Drivers/CMSIS/Include/arm_math.h **** 
2296:../../Drivers/CMSIS/Include/arm_math.h **** 
2297:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2298:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2299:../../Drivers/CMSIS/Include/arm_math.h ****    */
2300:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2301:../../Drivers/CMSIS/Include/arm_math.h ****   {
2302:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2303:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2304:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t normalize;                     /**< normalizing factor. */
2305:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2306:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2307:../../Drivers/CMSIS/Include/arm_math.h ****     arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2308:../../Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2309:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_dct4_instance_q31;
2310:../../Drivers/CMSIS/Include/arm_math.h **** 
2311:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 42


2312:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2313:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2314:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2315:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2316:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2317:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2318:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2319:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2320:../../Drivers/CMSIS/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2321:../../Drivers/CMSIS/Include/arm_math.h ****    */
2322:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_dct4_init_q31(
2323:../../Drivers/CMSIS/Include/arm_math.h ****   arm_dct4_instance_q31 * S,
2324:../../Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_q31 * S_RFFT,
2325:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_q31 * S_CFFT,
2326:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t N,
2327:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t Nby2,
2328:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t normalize);
2329:../../Drivers/CMSIS/Include/arm_math.h **** 
2330:../../Drivers/CMSIS/Include/arm_math.h **** 
2331:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2332:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2333:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2334:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2335:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2336:../../Drivers/CMSIS/Include/arm_math.h ****    */
2337:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_dct4_q31(
2338:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_dct4_instance_q31 * S,
2339:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
2340:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pInlineBuffer);
2341:../../Drivers/CMSIS/Include/arm_math.h **** 
2342:../../Drivers/CMSIS/Include/arm_math.h **** 
2343:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2344:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2345:../../Drivers/CMSIS/Include/arm_math.h ****    */
2346:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
2347:../../Drivers/CMSIS/Include/arm_math.h ****   {
2348:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2349:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2350:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t normalize;                     /**< normalizing factor. */
2351:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2352:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2353:../../Drivers/CMSIS/Include/arm_math.h ****     arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2354:../../Drivers/CMSIS/Include/arm_math.h ****     arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2355:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_dct4_instance_q15;
2356:../../Drivers/CMSIS/Include/arm_math.h **** 
2357:../../Drivers/CMSIS/Include/arm_math.h **** 
2358:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2359:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2360:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2361:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2362:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2363:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2364:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2365:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2366:../../Drivers/CMSIS/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2367:../../Drivers/CMSIS/Include/arm_math.h ****    */
2368:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_dct4_init_q15(
ARM GAS  /tmp/cclaaHiH.s 			page 43


2369:../../Drivers/CMSIS/Include/arm_math.h ****   arm_dct4_instance_q15 * S,
2370:../../Drivers/CMSIS/Include/arm_math.h ****   arm_rfft_instance_q15 * S_RFFT,
2371:../../Drivers/CMSIS/Include/arm_math.h ****   arm_cfft_radix4_instance_q15 * S_CFFT,
2372:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t N,
2373:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t Nby2,
2374:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t normalize);
2375:../../Drivers/CMSIS/Include/arm_math.h **** 
2376:../../Drivers/CMSIS/Include/arm_math.h **** 
2377:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2378:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2379:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2380:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2381:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2382:../../Drivers/CMSIS/Include/arm_math.h ****    */
2383:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_dct4_q15(
2384:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_dct4_instance_q15 * S,
2385:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
2386:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pInlineBuffer);
2387:../../Drivers/CMSIS/Include/arm_math.h **** 
2388:../../Drivers/CMSIS/Include/arm_math.h **** 
2389:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2390:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point vector addition.
2391:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2392:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2393:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2394:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2395:../../Drivers/CMSIS/Include/arm_math.h ****    */
2396:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_add_f32(
2397:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
2398:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
2399:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2400:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2401:../../Drivers/CMSIS/Include/arm_math.h **** 
2402:../../Drivers/CMSIS/Include/arm_math.h **** 
2403:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2404:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q7 vector addition.
2405:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2406:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2407:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2408:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2409:../../Drivers/CMSIS/Include/arm_math.h ****    */
2410:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_add_q7(
2411:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
2412:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
2413:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2414:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2415:../../Drivers/CMSIS/Include/arm_math.h **** 
2416:../../Drivers/CMSIS/Include/arm_math.h **** 
2417:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2418:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 vector addition.
2419:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2420:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2421:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2422:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2423:../../Drivers/CMSIS/Include/arm_math.h ****    */
2424:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_add_q15(
2425:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
ARM GAS  /tmp/cclaaHiH.s 			page 44


2426:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2427:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2428:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2429:../../Drivers/CMSIS/Include/arm_math.h **** 
2430:../../Drivers/CMSIS/Include/arm_math.h **** 
2431:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2432:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 vector addition.
2433:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2434:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2435:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2436:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2437:../../Drivers/CMSIS/Include/arm_math.h ****    */
2438:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_add_q31(
2439:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
2440:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
2441:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2442:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2443:../../Drivers/CMSIS/Include/arm_math.h **** 
2444:../../Drivers/CMSIS/Include/arm_math.h **** 
2445:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2446:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point vector subtraction.
2447:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2448:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2449:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2450:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2451:../../Drivers/CMSIS/Include/arm_math.h ****    */
2452:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_sub_f32(
2453:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
2454:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
2455:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2456:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2457:../../Drivers/CMSIS/Include/arm_math.h **** 
2458:../../Drivers/CMSIS/Include/arm_math.h **** 
2459:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2460:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q7 vector subtraction.
2461:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2462:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2463:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2464:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2465:../../Drivers/CMSIS/Include/arm_math.h ****    */
2466:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_sub_q7(
2467:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
2468:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
2469:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2470:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2471:../../Drivers/CMSIS/Include/arm_math.h **** 
2472:../../Drivers/CMSIS/Include/arm_math.h **** 
2473:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2474:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 vector subtraction.
2475:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2476:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2477:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2478:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2479:../../Drivers/CMSIS/Include/arm_math.h ****    */
2480:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_sub_q15(
2481:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2482:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
ARM GAS  /tmp/cclaaHiH.s 			page 45


2483:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2484:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2485:../../Drivers/CMSIS/Include/arm_math.h **** 
2486:../../Drivers/CMSIS/Include/arm_math.h **** 
2487:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2488:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 vector subtraction.
2489:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2490:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2491:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2492:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2493:../../Drivers/CMSIS/Include/arm_math.h ****    */
2494:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_sub_q31(
2495:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
2496:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
2497:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2498:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2499:../../Drivers/CMSIS/Include/arm_math.h **** 
2500:../../Drivers/CMSIS/Include/arm_math.h **** 
2501:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2502:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2503:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2504:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scale      scale factor to be applied
2505:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2506:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2507:../../Drivers/CMSIS/Include/arm_math.h ****    */
2508:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_scale_f32(
2509:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2510:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t scale,
2511:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2512:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2513:../../Drivers/CMSIS/Include/arm_math.h **** 
2514:../../Drivers/CMSIS/Include/arm_math.h **** 
2515:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2516:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2517:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2518:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2519:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2520:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2521:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2522:../../Drivers/CMSIS/Include/arm_math.h ****    */
2523:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_scale_q7(
2524:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2525:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t scaleFract,
2526:../../Drivers/CMSIS/Include/arm_math.h ****   int8_t shift,
2527:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2528:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2529:../../Drivers/CMSIS/Include/arm_math.h **** 
2530:../../Drivers/CMSIS/Include/arm_math.h **** 
2531:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2532:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2533:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2534:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2535:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2536:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2537:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2538:../../Drivers/CMSIS/Include/arm_math.h ****    */
2539:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_scale_q15(
ARM GAS  /tmp/cclaaHiH.s 			page 46


2540:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2541:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t scaleFract,
2542:../../Drivers/CMSIS/Include/arm_math.h ****   int8_t shift,
2543:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2544:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2545:../../Drivers/CMSIS/Include/arm_math.h **** 
2546:../../Drivers/CMSIS/Include/arm_math.h **** 
2547:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2548:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2549:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2550:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2551:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2552:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2553:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2554:../../Drivers/CMSIS/Include/arm_math.h ****    */
2555:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_scale_q31(
2556:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2557:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t scaleFract,
2558:../../Drivers/CMSIS/Include/arm_math.h ****   int8_t shift,
2559:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2560:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2561:../../Drivers/CMSIS/Include/arm_math.h **** 
2562:../../Drivers/CMSIS/Include/arm_math.h **** 
2563:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2564:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q7 vector absolute value.
2565:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2566:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2567:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2568:../../Drivers/CMSIS/Include/arm_math.h ****    */
2569:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_abs_q7(
2570:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2571:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2572:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2573:../../Drivers/CMSIS/Include/arm_math.h **** 
2574:../../Drivers/CMSIS/Include/arm_math.h **** 
2575:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2576:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point vector absolute value.
2577:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2578:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2579:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2580:../../Drivers/CMSIS/Include/arm_math.h ****    */
2581:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_abs_f32(
2582:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2583:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2584:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2585:../../Drivers/CMSIS/Include/arm_math.h **** 
2586:../../Drivers/CMSIS/Include/arm_math.h **** 
2587:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2588:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q15 vector absolute value.
2589:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2590:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2591:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2592:../../Drivers/CMSIS/Include/arm_math.h ****    */
2593:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_abs_q15(
2594:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2595:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2596:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
ARM GAS  /tmp/cclaaHiH.s 			page 47


2597:../../Drivers/CMSIS/Include/arm_math.h **** 
2598:../../Drivers/CMSIS/Include/arm_math.h **** 
2599:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2600:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Q31 vector absolute value.
2601:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2602:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2603:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2604:../../Drivers/CMSIS/Include/arm_math.h ****    */
2605:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_abs_q31(
2606:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2607:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2608:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2609:../../Drivers/CMSIS/Include/arm_math.h **** 
2610:../../Drivers/CMSIS/Include/arm_math.h **** 
2611:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2612:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Dot product of floating-point vectors.
2613:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2614:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2615:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2616:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] result     output result returned here
2617:../../Drivers/CMSIS/Include/arm_math.h ****    */
2618:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_dot_prod_f32(
2619:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
2620:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
2621:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
2622:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * result);
2623:../../Drivers/CMSIS/Include/arm_math.h **** 
2624:../../Drivers/CMSIS/Include/arm_math.h **** 
2625:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2626:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Dot product of Q7 vectors.
2627:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2628:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2629:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2630:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] result     output result returned here
2631:../../Drivers/CMSIS/Include/arm_math.h ****    */
2632:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_dot_prod_q7(
2633:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
2634:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
2635:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
2636:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * result);
2637:../../Drivers/CMSIS/Include/arm_math.h **** 
2638:../../Drivers/CMSIS/Include/arm_math.h **** 
2639:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2640:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Dot product of Q15 vectors.
2641:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2642:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2643:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2644:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] result     output result returned here
2645:../../Drivers/CMSIS/Include/arm_math.h ****    */
2646:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_dot_prod_q15(
2647:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2648:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2649:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
2650:../../Drivers/CMSIS/Include/arm_math.h ****   q63_t * result);
2651:../../Drivers/CMSIS/Include/arm_math.h **** 
2652:../../Drivers/CMSIS/Include/arm_math.h **** 
2653:../../Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/cclaaHiH.s 			page 48


2654:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Dot product of Q31 vectors.
2655:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2656:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2657:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2658:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] result     output result returned here
2659:../../Drivers/CMSIS/Include/arm_math.h ****    */
2660:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_dot_prod_q31(
2661:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
2662:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
2663:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
2664:../../Drivers/CMSIS/Include/arm_math.h ****   q63_t * result);
2665:../../Drivers/CMSIS/Include/arm_math.h **** 
2666:../../Drivers/CMSIS/Include/arm_math.h **** 
2667:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2668:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2669:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2670:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2671:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2672:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2673:../../Drivers/CMSIS/Include/arm_math.h ****    */
2674:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_shift_q7(
2675:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2676:../../Drivers/CMSIS/Include/arm_math.h ****   int8_t shiftBits,
2677:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2678:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2679:../../Drivers/CMSIS/Include/arm_math.h **** 
2680:../../Drivers/CMSIS/Include/arm_math.h **** 
2681:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2682:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2683:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2684:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2685:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2686:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2687:../../Drivers/CMSIS/Include/arm_math.h ****    */
2688:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_shift_q15(
2689:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2690:../../Drivers/CMSIS/Include/arm_math.h ****   int8_t shiftBits,
2691:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2692:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2693:../../Drivers/CMSIS/Include/arm_math.h **** 
2694:../../Drivers/CMSIS/Include/arm_math.h **** 
2695:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2696:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2697:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2698:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2699:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2700:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2701:../../Drivers/CMSIS/Include/arm_math.h ****    */
2702:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_shift_q31(
2703:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2704:../../Drivers/CMSIS/Include/arm_math.h ****   int8_t shiftBits,
2705:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2706:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2707:../../Drivers/CMSIS/Include/arm_math.h **** 
2708:../../Drivers/CMSIS/Include/arm_math.h **** 
2709:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2710:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
ARM GAS  /tmp/cclaaHiH.s 			page 49


2711:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2712:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2713:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2714:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2715:../../Drivers/CMSIS/Include/arm_math.h ****    */
2716:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_offset_f32(
2717:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2718:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t offset,
2719:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2720:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2721:../../Drivers/CMSIS/Include/arm_math.h **** 
2722:../../Drivers/CMSIS/Include/arm_math.h **** 
2723:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2724:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2725:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2726:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2727:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2728:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2729:../../Drivers/CMSIS/Include/arm_math.h ****    */
2730:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_offset_q7(
2731:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2732:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t offset,
2733:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2734:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2735:../../Drivers/CMSIS/Include/arm_math.h **** 
2736:../../Drivers/CMSIS/Include/arm_math.h **** 
2737:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2738:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2739:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2740:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2741:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2742:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2743:../../Drivers/CMSIS/Include/arm_math.h ****    */
2744:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_offset_q15(
2745:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2746:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t offset,
2747:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2748:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2749:../../Drivers/CMSIS/Include/arm_math.h **** 
2750:../../Drivers/CMSIS/Include/arm_math.h **** 
2751:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2752:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2753:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2754:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2755:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2756:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2757:../../Drivers/CMSIS/Include/arm_math.h ****    */
2758:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_offset_q31(
2759:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2760:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t offset,
2761:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2762:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2763:../../Drivers/CMSIS/Include/arm_math.h **** 
2764:../../Drivers/CMSIS/Include/arm_math.h **** 
2765:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2766:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2767:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
ARM GAS  /tmp/cclaaHiH.s 			page 50


2768:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2769:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2770:../../Drivers/CMSIS/Include/arm_math.h ****    */
2771:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_negate_f32(
2772:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2773:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2774:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2775:../../Drivers/CMSIS/Include/arm_math.h **** 
2776:../../Drivers/CMSIS/Include/arm_math.h **** 
2777:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2778:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2779:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2780:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2781:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2782:../../Drivers/CMSIS/Include/arm_math.h ****    */
2783:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_negate_q7(
2784:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2785:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2786:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2787:../../Drivers/CMSIS/Include/arm_math.h **** 
2788:../../Drivers/CMSIS/Include/arm_math.h **** 
2789:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2790:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2791:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2792:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2793:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2794:../../Drivers/CMSIS/Include/arm_math.h ****    */
2795:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_negate_q15(
2796:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2797:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2798:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2799:../../Drivers/CMSIS/Include/arm_math.h **** 
2800:../../Drivers/CMSIS/Include/arm_math.h **** 
2801:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2802:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2803:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2804:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2805:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2806:../../Drivers/CMSIS/Include/arm_math.h ****    */
2807:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_negate_q31(
2808:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2809:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2810:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2811:../../Drivers/CMSIS/Include/arm_math.h **** 
2812:../../Drivers/CMSIS/Include/arm_math.h **** 
2813:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2814:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2815:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2816:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2817:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2818:../../Drivers/CMSIS/Include/arm_math.h ****    */
2819:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_copy_f32(
2820:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
2821:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2822:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2823:../../Drivers/CMSIS/Include/arm_math.h **** 
2824:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 51


2825:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2826:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2827:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2828:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2829:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2830:../../Drivers/CMSIS/Include/arm_math.h ****    */
2831:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_copy_q7(
2832:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
2833:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
2834:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2835:../../Drivers/CMSIS/Include/arm_math.h **** 
2836:../../Drivers/CMSIS/Include/arm_math.h **** 
2837:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2838:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2839:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2840:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2841:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2842:../../Drivers/CMSIS/Include/arm_math.h ****    */
2843:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_copy_q15(
2844:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
2845:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2846:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2847:../../Drivers/CMSIS/Include/arm_math.h **** 
2848:../../Drivers/CMSIS/Include/arm_math.h **** 
2849:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2850:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2851:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2852:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2853:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2854:../../Drivers/CMSIS/Include/arm_math.h ****    */
2855:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_copy_q31(
2856:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
2857:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2858:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2859:../../Drivers/CMSIS/Include/arm_math.h **** 
2860:../../Drivers/CMSIS/Include/arm_math.h **** 
2861:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2862:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
2863:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  value      input value to be filled
2864:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2865:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2866:../../Drivers/CMSIS/Include/arm_math.h ****    */
2867:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fill_f32(
2868:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t value,
2869:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
2870:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2871:../../Drivers/CMSIS/Include/arm_math.h **** 
2872:../../Drivers/CMSIS/Include/arm_math.h **** 
2873:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2874:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
2875:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  value      input value to be filled
2876:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2877:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2878:../../Drivers/CMSIS/Include/arm_math.h ****    */
2879:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fill_q7(
2880:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t value,
2881:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
ARM GAS  /tmp/cclaaHiH.s 			page 52


2882:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2883:../../Drivers/CMSIS/Include/arm_math.h **** 
2884:../../Drivers/CMSIS/Include/arm_math.h **** 
2885:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2886:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
2887:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  value      input value to be filled
2888:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2889:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2890:../../Drivers/CMSIS/Include/arm_math.h ****    */
2891:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fill_q15(
2892:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t value,
2893:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2894:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2895:../../Drivers/CMSIS/Include/arm_math.h **** 
2896:../../Drivers/CMSIS/Include/arm_math.h **** 
2897:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2898:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
2899:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  value      input value to be filled
2900:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
2901:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2902:../../Drivers/CMSIS/Include/arm_math.h ****    */
2903:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fill_q31(
2904:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t value,
2905:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
2906:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
2907:../../Drivers/CMSIS/Include/arm_math.h **** 
2908:../../Drivers/CMSIS/Include/arm_math.h **** 
2909:../../Drivers/CMSIS/Include/arm_math.h **** /**
2910:../../Drivers/CMSIS/Include/arm_math.h ****  * @brief Convolution of floating-point sequences.
2911:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2912:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2913:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2914:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2915:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2916:../../Drivers/CMSIS/Include/arm_math.h ****  */
2917:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_f32(
2918:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
2919:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
2920:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
2921:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
2922:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst);
2923:../../Drivers/CMSIS/Include/arm_math.h **** 
2924:../../Drivers/CMSIS/Include/arm_math.h **** 
2925:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2926:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q15 sequences.
2927:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2928:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2929:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2930:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2931:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2932:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2933:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2934:../../Drivers/CMSIS/Include/arm_math.h ****    */
2935:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_opt_q15(
2936:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2937:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
2938:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
ARM GAS  /tmp/cclaaHiH.s 			page 53


2939:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
2940:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2941:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
2942:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
2943:../../Drivers/CMSIS/Include/arm_math.h **** 
2944:../../Drivers/CMSIS/Include/arm_math.h **** 
2945:../../Drivers/CMSIS/Include/arm_math.h **** /**
2946:../../Drivers/CMSIS/Include/arm_math.h ****  * @brief Convolution of Q15 sequences.
2947:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2948:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2949:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2950:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2951:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2952:../../Drivers/CMSIS/Include/arm_math.h ****  */
2953:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_q15(
2954:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2955:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
2956:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2957:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
2958:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst);
2959:../../Drivers/CMSIS/Include/arm_math.h **** 
2960:../../Drivers/CMSIS/Include/arm_math.h **** 
2961:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2962:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2963:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2964:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2965:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2966:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
2967:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
2968:../../Drivers/CMSIS/Include/arm_math.h ****    */
2969:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_fast_q15(
2970:../../Drivers/CMSIS/Include/arm_math.h ****           q15_t * pSrcA,
2971:../../Drivers/CMSIS/Include/arm_math.h ****           uint32_t srcALen,
2972:../../Drivers/CMSIS/Include/arm_math.h ****           q15_t * pSrcB,
2973:../../Drivers/CMSIS/Include/arm_math.h ****           uint32_t srcBLen,
2974:../../Drivers/CMSIS/Include/arm_math.h ****           q15_t * pDst);
2975:../../Drivers/CMSIS/Include/arm_math.h **** 
2976:../../Drivers/CMSIS/Include/arm_math.h **** 
2977:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2978:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2979:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2980:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2981:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2982:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2983:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2984:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2985:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2986:../../Drivers/CMSIS/Include/arm_math.h ****    */
2987:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_fast_opt_q15(
2988:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
2989:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
2990:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
2991:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
2992:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
2993:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
2994:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
2995:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 54


2996:../../Drivers/CMSIS/Include/arm_math.h **** 
2997:../../Drivers/CMSIS/Include/arm_math.h ****   /**
2998:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q31 sequences.
2999:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3000:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3001:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3002:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3003:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3004:../../Drivers/CMSIS/Include/arm_math.h ****    */
3005:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_q31(
3006:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
3007:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3008:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
3009:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3010:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
3011:../../Drivers/CMSIS/Include/arm_math.h **** 
3012:../../Drivers/CMSIS/Include/arm_math.h **** 
3013:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3014:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3015:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3016:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3017:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3018:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3019:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3020:../../Drivers/CMSIS/Include/arm_math.h ****    */
3021:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_fast_q31(
3022:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
3023:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3024:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
3025:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3026:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
3027:../../Drivers/CMSIS/Include/arm_math.h **** 
3028:../../Drivers/CMSIS/Include/arm_math.h **** 
3029:../../Drivers/CMSIS/Include/arm_math.h ****     /**
3030:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3031:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3032:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3033:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3034:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3035:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3036:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3037:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3038:../../Drivers/CMSIS/Include/arm_math.h ****    */
3039:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_opt_q7(
3040:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
3041:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3042:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
3043:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3044:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
3045:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
3046:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
3047:../../Drivers/CMSIS/Include/arm_math.h **** 
3048:../../Drivers/CMSIS/Include/arm_math.h **** 
3049:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3050:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3051:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3052:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
ARM GAS  /tmp/cclaaHiH.s 			page 55


3053:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3054:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3055:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3056:../../Drivers/CMSIS/Include/arm_math.h ****    */
3057:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_conv_q7(
3058:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
3059:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3060:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
3061:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3062:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst);
3063:../../Drivers/CMSIS/Include/arm_math.h **** 
3064:../../Drivers/CMSIS/Include/arm_math.h **** 
3065:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3066:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3067:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3068:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3069:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3070:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3071:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3072:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3073:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3074:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3075:../../Drivers/CMSIS/Include/arm_math.h ****    */
3076:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_f32(
3077:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
3078:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3079:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
3080:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3081:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3082:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3083:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3084:../../Drivers/CMSIS/Include/arm_math.h **** 
3085:../../Drivers/CMSIS/Include/arm_math.h **** 
3086:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3087:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3088:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3089:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3090:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3091:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3092:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3093:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3094:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3095:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3096:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3097:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3098:../../Drivers/CMSIS/Include/arm_math.h ****    */
3099:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3100:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
3101:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3102:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
3103:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3104:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3105:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3106:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints,
3107:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
3108:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
3109:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 56


3110:../../Drivers/CMSIS/Include/arm_math.h **** 
3111:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3112:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3113:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3114:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3115:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3116:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3117:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3118:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3119:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3120:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3121:../../Drivers/CMSIS/Include/arm_math.h ****    */
3122:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_q15(
3123:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
3124:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3125:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
3126:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3127:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3128:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3129:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3130:../../Drivers/CMSIS/Include/arm_math.h **** 
3131:../../Drivers/CMSIS/Include/arm_math.h **** 
3132:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3133:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3134:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3135:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3136:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3137:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3138:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3139:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3140:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3141:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3142:../../Drivers/CMSIS/Include/arm_math.h ****    */
3143:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3144:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
3145:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3146:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
3147:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3148:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3149:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3150:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3151:../../Drivers/CMSIS/Include/arm_math.h **** 
3152:../../Drivers/CMSIS/Include/arm_math.h **** 
3153:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3154:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3155:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3156:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3157:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3158:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3159:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3160:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3161:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3162:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3163:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3164:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3165:../../Drivers/CMSIS/Include/arm_math.h ****    */
3166:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
ARM GAS  /tmp/cclaaHiH.s 			page 57


3167:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
3168:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3169:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
3170:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3171:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3172:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3173:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints,
3174:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
3175:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
3176:../../Drivers/CMSIS/Include/arm_math.h **** 
3177:../../Drivers/CMSIS/Include/arm_math.h **** 
3178:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3179:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3180:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3181:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3182:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3183:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3184:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3185:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3186:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3187:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3188:../../Drivers/CMSIS/Include/arm_math.h ****    */
3189:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_q31(
3190:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
3191:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3192:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
3193:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3194:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3195:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3196:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3197:../../Drivers/CMSIS/Include/arm_math.h **** 
3198:../../Drivers/CMSIS/Include/arm_math.h **** 
3199:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3200:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3201:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3202:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3203:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3204:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3205:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3206:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3207:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3208:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3209:../../Drivers/CMSIS/Include/arm_math.h ****    */
3210:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3211:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
3212:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3213:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
3214:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3215:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3216:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3217:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3218:../../Drivers/CMSIS/Include/arm_math.h **** 
3219:../../Drivers/CMSIS/Include/arm_math.h **** 
3220:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3221:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences
3222:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3223:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
ARM GAS  /tmp/cclaaHiH.s 			page 58


3224:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3225:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3226:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3227:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3228:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3229:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3230:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3231:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3232:../../Drivers/CMSIS/Include/arm_math.h ****    */
3233:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3234:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
3235:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3236:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
3237:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3238:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
3239:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3240:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints,
3241:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
3242:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
3243:../../Drivers/CMSIS/Include/arm_math.h **** 
3244:../../Drivers/CMSIS/Include/arm_math.h **** 
3245:../../Drivers/CMSIS/Include/arm_math.h **** /**
3246:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3247:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3248:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3249:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3250:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3251:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3252:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3253:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3254:../../Drivers/CMSIS/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3255:../../Drivers/CMSIS/Include/arm_math.h ****    */
3256:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_conv_partial_q7(
3257:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
3258:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
3259:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
3260:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
3261:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
3262:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t firstIndex,
3263:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numPoints);
3264:../../Drivers/CMSIS/Include/arm_math.h **** 
3265:../../Drivers/CMSIS/Include/arm_math.h **** 
3266:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3267:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3268:../../Drivers/CMSIS/Include/arm_math.h ****    */
3269:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3270:../../Drivers/CMSIS/Include/arm_math.h ****   {
3271:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3272:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3273:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3274:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;              /**< points to the state variable array. The array is of length num
3275:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_decimate_instance_q15;
3276:../../Drivers/CMSIS/Include/arm_math.h **** 
3277:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3278:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3279:../../Drivers/CMSIS/Include/arm_math.h ****    */
3280:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
ARM GAS  /tmp/cclaaHiH.s 			page 59


3281:../../Drivers/CMSIS/Include/arm_math.h ****   {
3282:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3283:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3284:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3285:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;              /**< points to the state variable array. The array is of length num
3286:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_decimate_instance_q31;
3287:../../Drivers/CMSIS/Include/arm_math.h **** 
3288:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3289:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR decimator.
3290:../../Drivers/CMSIS/Include/arm_math.h ****    */
3291:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3292:../../Drivers/CMSIS/Include/arm_math.h ****   {
3293:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3294:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3295:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTap
3296:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;          /**< points to the state variable array. The array is of length num
3297:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_decimate_instance_f32;
3298:../../Drivers/CMSIS/Include/arm_math.h **** 
3299:../../Drivers/CMSIS/Include/arm_math.h **** 
3300:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3301:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR decimator.
3302:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
3303:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3304:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3305:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3306:../../Drivers/CMSIS/Include/arm_math.h ****    */
3307:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_f32(
3308:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3309:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3310:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3311:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3312:../../Drivers/CMSIS/Include/arm_math.h **** 
3313:../../Drivers/CMSIS/Include/arm_math.h **** 
3314:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3315:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR decimator.
3316:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
3317:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3318:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3319:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3320:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3321:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3322:../../Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3323:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3324:../../Drivers/CMSIS/Include/arm_math.h ****    */
3325:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_decimate_init_f32(
3326:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_decimate_instance_f32 * S,
3327:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3328:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t M,
3329:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3330:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
3331:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3332:../../Drivers/CMSIS/Include/arm_math.h **** 
3333:../../Drivers/CMSIS/Include/arm_math.h **** 
3334:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3335:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3336:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3337:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
ARM GAS  /tmp/cclaaHiH.s 			page 60


3338:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3339:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3340:../../Drivers/CMSIS/Include/arm_math.h ****    */
3341:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_q15(
3342:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3343:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3344:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3345:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3346:../../Drivers/CMSIS/Include/arm_math.h **** 
3347:../../Drivers/CMSIS/Include/arm_math.h **** 
3348:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3349:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3350:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3351:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3352:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3353:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3354:../../Drivers/CMSIS/Include/arm_math.h ****    */
3355:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_fast_q15(
3356:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3357:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3358:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3359:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3360:../../Drivers/CMSIS/Include/arm_math.h **** 
3361:../../Drivers/CMSIS/Include/arm_math.h **** 
3362:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3363:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3364:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3365:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3366:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3367:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3368:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3369:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3370:../../Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3371:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3372:../../Drivers/CMSIS/Include/arm_math.h ****    */
3373:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3374:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_decimate_instance_q15 * S,
3375:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3376:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t M,
3377:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
3378:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
3379:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3380:../../Drivers/CMSIS/Include/arm_math.h **** 
3381:../../Drivers/CMSIS/Include/arm_math.h **** 
3382:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3383:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3384:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3385:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3386:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst  points to the block of output data
3387:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3388:../../Drivers/CMSIS/Include/arm_math.h ****    */
3389:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_q31(
3390:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3391:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3392:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3393:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3394:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 61


3395:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3396:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3397:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3398:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3399:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3400:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3401:../../Drivers/CMSIS/Include/arm_math.h ****    */
3402:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_decimate_fast_q31(
3403:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3404:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3405:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3406:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3407:../../Drivers/CMSIS/Include/arm_math.h **** 
3408:../../Drivers/CMSIS/Include/arm_math.h **** 
3409:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3410:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3411:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3412:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3413:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3414:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3415:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3416:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3417:../../Drivers/CMSIS/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3418:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3419:../../Drivers/CMSIS/Include/arm_math.h ****    */
3420:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3421:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3422:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3423:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t M,
3424:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
3425:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
3426:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3427:../../Drivers/CMSIS/Include/arm_math.h **** 
3428:../../Drivers/CMSIS/Include/arm_math.h **** 
3429:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3430:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3431:../../Drivers/CMSIS/Include/arm_math.h ****    */
3432:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3433:../../Drivers/CMSIS/Include/arm_math.h ****   {
3434:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3435:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3436:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3437:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;                  /**< points to the state variable array. The array is of length
3438:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_interpolate_instance_q15;
3439:../../Drivers/CMSIS/Include/arm_math.h **** 
3440:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3441:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3442:../../Drivers/CMSIS/Include/arm_math.h ****    */
3443:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3444:../../Drivers/CMSIS/Include/arm_math.h ****   {
3445:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3446:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3447:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3448:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;                  /**< points to the state variable array. The array is of length
3449:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_interpolate_instance_q31;
3450:../../Drivers/CMSIS/Include/arm_math.h **** 
3451:../../Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/cclaaHiH.s 			page 62


3452:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3453:../../Drivers/CMSIS/Include/arm_math.h ****    */
3454:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3455:../../Drivers/CMSIS/Include/arm_math.h ****   {
3456:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t L;                     /**< upsample factor. */
3457:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t phaseLength;          /**< length of each polyphase filter component. */
3458:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*p
3459:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;             /**< points to the state variable array. The array is of length 
3460:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_interpolate_instance_f32;
3461:../../Drivers/CMSIS/Include/arm_math.h **** 
3462:../../Drivers/CMSIS/Include/arm_math.h **** 
3463:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3464:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3465:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3466:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3467:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3468:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3469:../../Drivers/CMSIS/Include/arm_math.h ****    */
3470:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_interpolate_q15(
3471:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3472:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3473:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3474:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3475:../../Drivers/CMSIS/Include/arm_math.h **** 
3476:../../Drivers/CMSIS/Include/arm_math.h **** 
3477:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3478:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3479:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3480:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3481:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3482:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3483:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3484:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3485:../../Drivers/CMSIS/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3486:../../Drivers/CMSIS/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3487:../../Drivers/CMSIS/Include/arm_math.h ****    */
3488:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3489:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_interpolate_instance_q15 * S,
3490:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t L,
3491:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3492:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
3493:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
3494:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3495:../../Drivers/CMSIS/Include/arm_math.h **** 
3496:../../Drivers/CMSIS/Include/arm_math.h **** 
3497:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3498:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3499:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3500:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3501:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3502:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3503:../../Drivers/CMSIS/Include/arm_math.h ****    */
3504:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_interpolate_q31(
3505:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3506:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3507:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3508:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
ARM GAS  /tmp/cclaaHiH.s 			page 63


3509:../../Drivers/CMSIS/Include/arm_math.h **** 
3510:../../Drivers/CMSIS/Include/arm_math.h **** 
3511:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3512:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3513:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3514:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3515:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3516:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3517:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3518:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3519:../../Drivers/CMSIS/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3520:../../Drivers/CMSIS/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3521:../../Drivers/CMSIS/Include/arm_math.h ****    */
3522:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3523:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_interpolate_instance_q31 * S,
3524:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t L,
3525:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3526:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
3527:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
3528:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3529:../../Drivers/CMSIS/Include/arm_math.h **** 
3530:../../Drivers/CMSIS/Include/arm_math.h **** 
3531:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3532:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3533:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3534:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3535:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3536:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3537:../../Drivers/CMSIS/Include/arm_math.h ****    */
3538:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_interpolate_f32(
3539:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3540:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3541:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3542:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3543:../../Drivers/CMSIS/Include/arm_math.h **** 
3544:../../Drivers/CMSIS/Include/arm_math.h **** 
3545:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3546:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3547:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3548:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3549:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3550:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3551:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3552:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3553:../../Drivers/CMSIS/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3554:../../Drivers/CMSIS/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3555:../../Drivers/CMSIS/Include/arm_math.h ****    */
3556:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3557:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_interpolate_instance_f32 * S,
3558:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t L,
3559:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
3560:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3561:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
3562:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3563:../../Drivers/CMSIS/Include/arm_math.h **** 
3564:../../Drivers/CMSIS/Include/arm_math.h **** 
3565:../../Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/cclaaHiH.s 			page 64


3566:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3567:../../Drivers/CMSIS/Include/arm_math.h ****    */
3568:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3569:../../Drivers/CMSIS/Include/arm_math.h ****   {
3570:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*num
3571:../../Drivers/CMSIS/Include/arm_math.h ****     q63_t *pState;           /**< points to the array of state coefficients.  The array is of lengt
3572:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*nu
3573:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
3574:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3575:../../Drivers/CMSIS/Include/arm_math.h **** 
3576:../../Drivers/CMSIS/Include/arm_math.h **** 
3577:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3578:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3579:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3580:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3581:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3582:../../Drivers/CMSIS/Include/arm_math.h ****    */
3583:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3584:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3585:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3586:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3587:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3588:../../Drivers/CMSIS/Include/arm_math.h **** 
3589:../../Drivers/CMSIS/Include/arm_math.h **** 
3590:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3591:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3592:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3593:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3594:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3595:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3596:../../Drivers/CMSIS/Include/arm_math.h ****    */
3597:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3598:../../Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_cas_df1_32x64_ins_q31 * S,
3599:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
3600:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
3601:../../Drivers/CMSIS/Include/arm_math.h ****   q63_t * pState,
3602:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t postShift);
3603:../../Drivers/CMSIS/Include/arm_math.h **** 
3604:../../Drivers/CMSIS/Include/arm_math.h **** 
3605:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3606:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3607:../../Drivers/CMSIS/Include/arm_math.h ****    */
3608:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3609:../../Drivers/CMSIS/Include/arm_math.h ****   {
3610:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3611:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3612:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3613:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3614:../../Drivers/CMSIS/Include/arm_math.h **** 
3615:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3616:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3617:../../Drivers/CMSIS/Include/arm_math.h ****    */
3618:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3619:../../Drivers/CMSIS/Include/arm_math.h ****   {
3620:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3621:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3622:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
ARM GAS  /tmp/cclaaHiH.s 			page 65


3623:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3624:../../Drivers/CMSIS/Include/arm_math.h **** 
3625:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3626:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3627:../../Drivers/CMSIS/Include/arm_math.h ****    */
3628:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3629:../../Drivers/CMSIS/Include/arm_math.h ****   {
3630:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3631:../../Drivers/CMSIS/Include/arm_math.h ****     float64_t *pState;         /**< points to the array of state coefficients.  The array is of len
3632:../../Drivers/CMSIS/Include/arm_math.h ****     float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3633:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3634:../../Drivers/CMSIS/Include/arm_math.h **** 
3635:../../Drivers/CMSIS/Include/arm_math.h **** 
3636:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3637:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3638:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3639:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3640:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3641:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3642:../../Drivers/CMSIS/Include/arm_math.h ****    */
3643:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3644:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3645:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3646:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3647:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3648:../../Drivers/CMSIS/Include/arm_math.h **** 
3649:../../Drivers/CMSIS/Include/arm_math.h **** 
3650:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3651:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3652:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3653:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3654:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3655:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3656:../../Drivers/CMSIS/Include/arm_math.h ****    */
3657:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3658:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3659:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3660:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3661:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3662:../../Drivers/CMSIS/Include/arm_math.h **** 
3663:../../Drivers/CMSIS/Include/arm_math.h **** 
3664:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3665:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3666:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3667:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3668:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3669:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3670:../../Drivers/CMSIS/Include/arm_math.h ****    */
3671:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3672:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3673:../../Drivers/CMSIS/Include/arm_math.h ****   float64_t * pSrc,
3674:../../Drivers/CMSIS/Include/arm_math.h ****   float64_t * pDst,
3675:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3676:../../Drivers/CMSIS/Include/arm_math.h **** 
3677:../../Drivers/CMSIS/Include/arm_math.h **** 
3678:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3679:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
ARM GAS  /tmp/cclaaHiH.s 			page 66


3680:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3681:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3682:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3683:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3684:../../Drivers/CMSIS/Include/arm_math.h ****    */
3685:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3686:../../Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3687:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
3688:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3689:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState);
3690:../../Drivers/CMSIS/Include/arm_math.h **** 
3691:../../Drivers/CMSIS/Include/arm_math.h **** 
3692:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3693:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3694:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3695:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3696:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3697:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3698:../../Drivers/CMSIS/Include/arm_math.h ****    */
3699:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3700:../../Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3701:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
3702:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3703:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState);
3704:../../Drivers/CMSIS/Include/arm_math.h **** 
3705:../../Drivers/CMSIS/Include/arm_math.h **** 
3706:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3707:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3708:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3709:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3710:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3711:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3712:../../Drivers/CMSIS/Include/arm_math.h ****    */
3713:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3714:../../Drivers/CMSIS/Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f64 * S,
3715:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t numStages,
3716:../../Drivers/CMSIS/Include/arm_math.h ****   float64_t * pCoeffs,
3717:../../Drivers/CMSIS/Include/arm_math.h ****   float64_t * pState);
3718:../../Drivers/CMSIS/Include/arm_math.h **** 
3719:../../Drivers/CMSIS/Include/arm_math.h **** 
3720:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3721:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3722:../../Drivers/CMSIS/Include/arm_math.h ****    */
3723:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3724:../../Drivers/CMSIS/Include/arm_math.h ****   {
3725:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3726:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3727:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3728:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_lattice_instance_q15;
3729:../../Drivers/CMSIS/Include/arm_math.h **** 
3730:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3731:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3732:../../Drivers/CMSIS/Include/arm_math.h ****    */
3733:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3734:../../Drivers/CMSIS/Include/arm_math.h ****   {
3735:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3736:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
ARM GAS  /tmp/cclaaHiH.s 			page 67


3737:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3738:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_lattice_instance_q31;
3739:../../Drivers/CMSIS/Include/arm_math.h **** 
3740:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3741:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3742:../../Drivers/CMSIS/Include/arm_math.h ****    */
3743:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3744:../../Drivers/CMSIS/Include/arm_math.h ****   {
3745:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3746:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3747:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of leng
3748:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_lattice_instance_f32;
3749:../../Drivers/CMSIS/Include/arm_math.h **** 
3750:../../Drivers/CMSIS/Include/arm_math.h **** 
3751:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3752:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3753:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3754:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3755:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3756:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3757:../../Drivers/CMSIS/Include/arm_math.h ****    */
3758:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_init_q15(
3759:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_lattice_instance_q15 * S,
3760:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3761:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
3762:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState);
3763:../../Drivers/CMSIS/Include/arm_math.h **** 
3764:../../Drivers/CMSIS/Include/arm_math.h **** 
3765:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3766:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3767:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3768:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3769:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3770:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3771:../../Drivers/CMSIS/Include/arm_math.h ****    */
3772:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_q15(
3773:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3774:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3775:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3776:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3777:../../Drivers/CMSIS/Include/arm_math.h **** 
3778:../../Drivers/CMSIS/Include/arm_math.h **** 
3779:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3780:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3781:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3782:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3783:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3784:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3785:../../Drivers/CMSIS/Include/arm_math.h ****    */
3786:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_init_q31(
3787:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_lattice_instance_q31 * S,
3788:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3789:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
3790:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState);
3791:../../Drivers/CMSIS/Include/arm_math.h **** 
3792:../../Drivers/CMSIS/Include/arm_math.h **** 
3793:../../Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/cclaaHiH.s 			page 68


3794:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3795:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3796:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3797:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3798:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3799:../../Drivers/CMSIS/Include/arm_math.h ****    */
3800:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_q31(
3801:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3802:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3803:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3804:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3805:../../Drivers/CMSIS/Include/arm_math.h **** 
3806:../../Drivers/CMSIS/Include/arm_math.h **** 
3807:../../Drivers/CMSIS/Include/arm_math.h **** /**
3808:../../Drivers/CMSIS/Include/arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3809:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3810:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] numStages  number of filter stages.
3811:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3812:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3813:../../Drivers/CMSIS/Include/arm_math.h ****  */
3814:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_init_f32(
3815:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_lattice_instance_f32 * S,
3816:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3817:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
3818:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState);
3819:../../Drivers/CMSIS/Include/arm_math.h **** 
3820:../../Drivers/CMSIS/Include/arm_math.h **** 
3821:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3822:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3823:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3824:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3825:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3826:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3827:../../Drivers/CMSIS/Include/arm_math.h ****    */
3828:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_lattice_f32(
3829:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3830:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3831:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3832:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3833:../../Drivers/CMSIS/Include/arm_math.h **** 
3834:../../Drivers/CMSIS/Include/arm_math.h **** 
3835:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3836:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3837:../../Drivers/CMSIS/Include/arm_math.h ****    */
3838:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3839:../../Drivers/CMSIS/Include/arm_math.h ****   {
3840:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3841:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3842:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3843:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3844:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_iir_lattice_instance_q15;
3845:../../Drivers/CMSIS/Include/arm_math.h **** 
3846:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3847:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3848:../../Drivers/CMSIS/Include/arm_math.h ****    */
3849:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3850:../../Drivers/CMSIS/Include/arm_math.h ****   {
ARM GAS  /tmp/cclaaHiH.s 			page 69


3851:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3852:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3853:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3854:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3855:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_iir_lattice_instance_q31;
3856:../../Drivers/CMSIS/Include/arm_math.h **** 
3857:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3858:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
3859:../../Drivers/CMSIS/Include/arm_math.h ****    */
3860:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3861:../../Drivers/CMSIS/Include/arm_math.h ****   {
3862:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3863:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3864:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array
3865:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is 
3866:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_iir_lattice_instance_f32;
3867:../../Drivers/CMSIS/Include/arm_math.h **** 
3868:../../Drivers/CMSIS/Include/arm_math.h **** 
3869:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3870:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
3871:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
3872:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3873:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3874:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3875:../../Drivers/CMSIS/Include/arm_math.h ****    */
3876:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_f32(
3877:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
3878:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3879:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
3880:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3881:../../Drivers/CMSIS/Include/arm_math.h **** 
3882:../../Drivers/CMSIS/Include/arm_math.h **** 
3883:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3884:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
3885:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
3886:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3887:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3888:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3889:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
3890:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3891:../../Drivers/CMSIS/Include/arm_math.h ****    */
3892:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_init_f32(
3893:../../Drivers/CMSIS/Include/arm_math.h ****   arm_iir_lattice_instance_f32 * S,
3894:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3895:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pkCoeffs,
3896:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pvCoeffs,
3897:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
3898:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3899:../../Drivers/CMSIS/Include/arm_math.h **** 
3900:../../Drivers/CMSIS/Include/arm_math.h **** 
3901:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3902:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
3903:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
3904:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3905:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3906:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3907:../../Drivers/CMSIS/Include/arm_math.h ****    */
ARM GAS  /tmp/cclaaHiH.s 			page 70


3908:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_q31(
3909:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
3910:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
3911:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
3912:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3913:../../Drivers/CMSIS/Include/arm_math.h **** 
3914:../../Drivers/CMSIS/Include/arm_math.h **** 
3915:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3916:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
3917:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
3918:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3919:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3920:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3921:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
3922:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3923:../../Drivers/CMSIS/Include/arm_math.h ****    */
3924:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_init_q31(
3925:../../Drivers/CMSIS/Include/arm_math.h ****   arm_iir_lattice_instance_q31 * S,
3926:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3927:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pkCoeffs,
3928:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pvCoeffs,
3929:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
3930:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3931:../../Drivers/CMSIS/Include/arm_math.h **** 
3932:../../Drivers/CMSIS/Include/arm_math.h **** 
3933:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3934:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
3935:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
3936:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3937:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3938:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3939:../../Drivers/CMSIS/Include/arm_math.h ****    */
3940:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_q15(
3941:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
3942:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
3943:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
3944:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3945:../../Drivers/CMSIS/Include/arm_math.h **** 
3946:../../Drivers/CMSIS/Include/arm_math.h **** 
3947:../../Drivers/CMSIS/Include/arm_math.h **** /**
3948:../../Drivers/CMSIS/Include/arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
3949:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
3950:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] numStages  number of stages in the filter.
3951:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
3952:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
3953:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
3954:../../Drivers/CMSIS/Include/arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
3955:../../Drivers/CMSIS/Include/arm_math.h ****  */
3956:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_iir_lattice_init_q15(
3957:../../Drivers/CMSIS/Include/arm_math.h ****   arm_iir_lattice_instance_q15 * S,
3958:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numStages,
3959:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pkCoeffs,
3960:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pvCoeffs,
3961:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
3962:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3963:../../Drivers/CMSIS/Include/arm_math.h **** 
3964:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 71


3965:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3966:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
3967:../../Drivers/CMSIS/Include/arm_math.h ****    */
3968:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
3969:../../Drivers/CMSIS/Include/arm_math.h ****   {
3970:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
3971:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+bl
3972:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
3973:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t mu;        /**< step size that controls filter coefficient updates. */
3974:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_instance_f32;
3975:../../Drivers/CMSIS/Include/arm_math.h **** 
3976:../../Drivers/CMSIS/Include/arm_math.h **** 
3977:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3978:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for floating-point LMS filter.
3979:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
3980:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3981:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
3982:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
3983:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
3984:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3985:../../Drivers/CMSIS/Include/arm_math.h ****    */
3986:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_f32(
3987:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_lms_instance_f32 * S,
3988:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
3989:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pRef,
3990:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pOut,
3991:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pErr,
3992:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
3993:../../Drivers/CMSIS/Include/arm_math.h **** 
3994:../../Drivers/CMSIS/Include/arm_math.h **** 
3995:../../Drivers/CMSIS/Include/arm_math.h ****   /**
3996:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
3997:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
3998:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
3999:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4000:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4001:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4002:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4003:../../Drivers/CMSIS/Include/arm_math.h ****    */
4004:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_init_f32(
4005:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_instance_f32 * S,
4006:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4007:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
4008:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
4009:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t mu,
4010:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4011:../../Drivers/CMSIS/Include/arm_math.h **** 
4012:../../Drivers/CMSIS/Include/arm_math.h **** 
4013:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4014:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
4015:../../Drivers/CMSIS/Include/arm_math.h ****    */
4016:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4017:../../Drivers/CMSIS/Include/arm_math.h ****   {
4018:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4019:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4020:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4021:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t mu;            /**< step size that controls filter coefficient updates. */
ARM GAS  /tmp/cclaaHiH.s 			page 72


4022:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4023:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_instance_q15;
4024:../../Drivers/CMSIS/Include/arm_math.h **** 
4025:../../Drivers/CMSIS/Include/arm_math.h **** 
4026:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4027:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4028:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4029:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4030:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4031:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.
4032:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4033:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4034:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4035:../../Drivers/CMSIS/Include/arm_math.h ****    */
4036:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_init_q15(
4037:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_instance_q15 * S,
4038:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4039:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
4040:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
4041:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t mu,
4042:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
4043:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t postShift);
4044:../../Drivers/CMSIS/Include/arm_math.h **** 
4045:../../Drivers/CMSIS/Include/arm_math.h **** 
4046:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4047:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4048:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4049:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4050:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4051:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4052:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4053:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4054:../../Drivers/CMSIS/Include/arm_math.h ****    */
4055:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_q15(
4056:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_lms_instance_q15 * S,
4057:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4058:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pRef,
4059:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pOut,
4060:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pErr,
4061:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4062:../../Drivers/CMSIS/Include/arm_math.h **** 
4063:../../Drivers/CMSIS/Include/arm_math.h **** 
4064:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4065:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4066:../../Drivers/CMSIS/Include/arm_math.h ****    */
4067:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4068:../../Drivers/CMSIS/Include/arm_math.h ****   {
4069:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4070:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4071:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4072:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t mu;            /**< step size that controls filter coefficient updates. */
4073:../../Drivers/CMSIS/Include/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4074:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_instance_q31;
4075:../../Drivers/CMSIS/Include/arm_math.h **** 
4076:../../Drivers/CMSIS/Include/arm_math.h **** 
4077:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4078:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for Q31 LMS filter.
ARM GAS  /tmp/cclaaHiH.s 			page 73


4079:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4080:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4081:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4082:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4083:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4084:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4085:../../Drivers/CMSIS/Include/arm_math.h ****    */
4086:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_q31(
4087:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_lms_instance_q31 * S,
4088:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4089:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pRef,
4090:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pOut,
4091:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pErr,
4092:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4093:../../Drivers/CMSIS/Include/arm_math.h **** 
4094:../../Drivers/CMSIS/Include/arm_math.h **** 
4095:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4096:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4097:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4098:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4099:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4100:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4101:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4102:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4103:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4104:../../Drivers/CMSIS/Include/arm_math.h ****    */
4105:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_init_q31(
4106:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_instance_q31 * S,
4107:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4108:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
4109:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
4110:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t mu,
4111:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
4112:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t postShift);
4113:../../Drivers/CMSIS/Include/arm_math.h **** 
4114:../../Drivers/CMSIS/Include/arm_math.h **** 
4115:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4116:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4117:../../Drivers/CMSIS/Include/arm_math.h ****    */
4118:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4119:../../Drivers/CMSIS/Include/arm_math.h ****   {
4120:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4121:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
4122:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
4123:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t mu;         /**< step size that control filter coefficient updates. */
4124:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t energy;     /**< saves previous frame energy. */
4125:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t x0;         /**< saves previous input sample. */
4126:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_norm_instance_f32;
4127:../../Drivers/CMSIS/Include/arm_math.h **** 
4128:../../Drivers/CMSIS/Include/arm_math.h **** 
4129:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4130:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4131:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4132:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4133:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4134:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4135:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
ARM GAS  /tmp/cclaaHiH.s 			page 74


4136:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4137:../../Drivers/CMSIS/Include/arm_math.h ****    */
4138:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_f32(
4139:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4140:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
4141:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pRef,
4142:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pOut,
4143:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pErr,
4144:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4145:../../Drivers/CMSIS/Include/arm_math.h **** 
4146:../../Drivers/CMSIS/Include/arm_math.h **** 
4147:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4148:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4149:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4150:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4151:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4152:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4153:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4154:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4155:../../Drivers/CMSIS/Include/arm_math.h ****    */
4156:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_init_f32(
4157:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4158:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4159:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
4160:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
4161:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t mu,
4162:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4163:../../Drivers/CMSIS/Include/arm_math.h **** 
4164:../../Drivers/CMSIS/Include/arm_math.h **** 
4165:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4166:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4167:../../Drivers/CMSIS/Include/arm_math.h ****    */
4168:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4169:../../Drivers/CMSIS/Include/arm_math.h ****   {
4170:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4171:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4172:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4173:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t mu;             /**< step size that controls filter coefficient updates. */
4174:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4175:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4176:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t energy;         /**< saves previous frame energy. */
4177:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t x0;             /**< saves previous input sample. */
4178:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_norm_instance_q31;
4179:../../Drivers/CMSIS/Include/arm_math.h **** 
4180:../../Drivers/CMSIS/Include/arm_math.h **** 
4181:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4182:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4183:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4184:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4185:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4186:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4187:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4188:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4189:../../Drivers/CMSIS/Include/arm_math.h ****    */
4190:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_q31(
4191:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4192:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
ARM GAS  /tmp/cclaaHiH.s 			page 75


4193:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pRef,
4194:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pOut,
4195:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pErr,
4196:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4197:../../Drivers/CMSIS/Include/arm_math.h **** 
4198:../../Drivers/CMSIS/Include/arm_math.h **** 
4199:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4200:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4201:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4202:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4203:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4204:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4205:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4206:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4207:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4208:../../Drivers/CMSIS/Include/arm_math.h ****    */
4209:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_init_q31(
4210:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4211:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4212:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
4213:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
4214:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t mu,
4215:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
4216:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t postShift);
4217:../../Drivers/CMSIS/Include/arm_math.h **** 
4218:../../Drivers/CMSIS/Include/arm_math.h **** 
4219:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4220:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4221:../../Drivers/CMSIS/Include/arm_math.h ****    */
4222:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4223:../../Drivers/CMSIS/Include/arm_math.h ****   {
4224:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;     /**< Number of coefficients in the filter. */
4225:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4226:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4227:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t mu;             /**< step size that controls filter coefficient updates. */
4228:../../Drivers/CMSIS/Include/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4229:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4230:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t energy;         /**< saves previous frame energy. */
4231:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t x0;             /**< saves previous input sample. */
4232:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_lms_norm_instance_q15;
4233:../../Drivers/CMSIS/Include/arm_math.h **** 
4234:../../Drivers/CMSIS/Include/arm_math.h **** 
4235:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4236:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4237:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4238:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4239:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4240:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4241:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4242:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4243:../../Drivers/CMSIS/Include/arm_math.h ****    */
4244:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_q15(
4245:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4246:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4247:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pRef,
4248:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pOut,
4249:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pErr,
ARM GAS  /tmp/cclaaHiH.s 			page 76


4250:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4251:../../Drivers/CMSIS/Include/arm_math.h **** 
4252:../../Drivers/CMSIS/Include/arm_math.h **** 
4253:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4254:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4255:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4256:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4257:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4258:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4259:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4260:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4261:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4262:../../Drivers/CMSIS/Include/arm_math.h ****    */
4263:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_lms_norm_init_q15(
4264:../../Drivers/CMSIS/Include/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4265:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4266:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
4267:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
4268:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t mu,
4269:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize,
4270:../../Drivers/CMSIS/Include/arm_math.h ****   uint8_t postShift);
4271:../../Drivers/CMSIS/Include/arm_math.h **** 
4272:../../Drivers/CMSIS/Include/arm_math.h **** 
4273:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4274:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of floating-point sequences.
4275:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4276:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4277:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4278:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4279:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4280:../../Drivers/CMSIS/Include/arm_math.h ****    */
4281:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_f32(
4282:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcA,
4283:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4284:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrcB,
4285:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4286:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst);
4287:../../Drivers/CMSIS/Include/arm_math.h **** 
4288:../../Drivers/CMSIS/Include/arm_math.h **** 
4289:../../Drivers/CMSIS/Include/arm_math.h ****    /**
4290:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q15 sequences
4291:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4292:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4293:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4294:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4295:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4296:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4297:../../Drivers/CMSIS/Include/arm_math.h ****    */
4298:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_opt_q15(
4299:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
4300:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4301:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
4302:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4303:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4304:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch);
4305:../../Drivers/CMSIS/Include/arm_math.h **** 
4306:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 77


4307:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4308:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q15 sequences.
4309:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4310:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4311:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4312:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4313:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4314:../../Drivers/CMSIS/Include/arm_math.h ****    */
4315:../../Drivers/CMSIS/Include/arm_math.h **** 
4316:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_q15(
4317:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
4318:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4319:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
4320:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4321:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst);
4322:../../Drivers/CMSIS/Include/arm_math.h **** 
4323:../../Drivers/CMSIS/Include/arm_math.h **** 
4324:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4325:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4326:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4327:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4328:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4329:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4330:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4331:../../Drivers/CMSIS/Include/arm_math.h ****    */
4332:../../Drivers/CMSIS/Include/arm_math.h **** 
4333:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_fast_q15(
4334:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
4335:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4336:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
4337:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4338:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst);
4339:../../Drivers/CMSIS/Include/arm_math.h **** 
4340:../../Drivers/CMSIS/Include/arm_math.h **** 
4341:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4342:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4343:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4344:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4345:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4346:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4347:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4348:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4349:../../Drivers/CMSIS/Include/arm_math.h ****    */
4350:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_fast_opt_q15(
4351:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcA,
4352:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4353:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrcB,
4354:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4355:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4356:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch);
4357:../../Drivers/CMSIS/Include/arm_math.h **** 
4358:../../Drivers/CMSIS/Include/arm_math.h **** 
4359:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4360:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q31 sequences.
4361:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4362:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4363:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
ARM GAS  /tmp/cclaaHiH.s 			page 78


4364:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4365:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4366:../../Drivers/CMSIS/Include/arm_math.h ****    */
4367:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_q31(
4368:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
4369:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4370:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
4371:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4372:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
4373:../../Drivers/CMSIS/Include/arm_math.h **** 
4374:../../Drivers/CMSIS/Include/arm_math.h **** 
4375:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4376:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
4377:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4378:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4379:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4380:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4381:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4382:../../Drivers/CMSIS/Include/arm_math.h ****    */
4383:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_fast_q31(
4384:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcA,
4385:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4386:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrcB,
4387:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4388:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst);
4389:../../Drivers/CMSIS/Include/arm_math.h **** 
4390:../../Drivers/CMSIS/Include/arm_math.h **** 
4391:../../Drivers/CMSIS/Include/arm_math.h ****  /**
4392:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4393:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4394:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4395:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4396:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4397:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4398:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4399:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4400:../../Drivers/CMSIS/Include/arm_math.h ****    */
4401:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_opt_q7(
4402:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
4403:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4404:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
4405:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4406:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
4407:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch1,
4408:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratch2);
4409:../../Drivers/CMSIS/Include/arm_math.h **** 
4410:../../Drivers/CMSIS/Include/arm_math.h **** 
4411:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4412:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4413:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4414:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4415:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4416:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4417:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4418:../../Drivers/CMSIS/Include/arm_math.h ****    */
4419:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_correlate_q7(
4420:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcA,
ARM GAS  /tmp/cclaaHiH.s 			page 79


4421:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcALen,
4422:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrcB,
4423:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t srcBLen,
4424:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst);
4425:../../Drivers/CMSIS/Include/arm_math.h **** 
4426:../../Drivers/CMSIS/Include/arm_math.h **** 
4427:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4428:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4429:../../Drivers/CMSIS/Include/arm_math.h ****    */
4430:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4431:../../Drivers/CMSIS/Include/arm_math.h ****   {
4432:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4433:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4434:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pState;            /**< points to the state buffer array. The array is of length max
4435:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numT
4436:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4437:../../Drivers/CMSIS/Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4438:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_sparse_instance_f32;
4439:../../Drivers/CMSIS/Include/arm_math.h **** 
4440:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4441:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4442:../../Drivers/CMSIS/Include/arm_math.h ****    */
4443:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4444:../../Drivers/CMSIS/Include/arm_math.h ****   {
4445:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4446:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4447:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pState;                /**< points to the state buffer array. The array is of length max
4448:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4449:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4450:../../Drivers/CMSIS/Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4451:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_sparse_instance_q31;
4452:../../Drivers/CMSIS/Include/arm_math.h **** 
4453:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4454:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4455:../../Drivers/CMSIS/Include/arm_math.h ****    */
4456:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4457:../../Drivers/CMSIS/Include/arm_math.h ****   {
4458:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4459:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4460:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pState;                /**< points to the state buffer array. The array is of length max
4461:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4462:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4463:../../Drivers/CMSIS/Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4464:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_sparse_instance_q15;
4465:../../Drivers/CMSIS/Include/arm_math.h **** 
4466:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4467:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4468:../../Drivers/CMSIS/Include/arm_math.h ****    */
4469:../../Drivers/CMSIS/Include/arm_math.h ****   typedef struct
4470:../../Drivers/CMSIS/Include/arm_math.h ****   {
4471:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4472:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4473:../../Drivers/CMSIS/Include/arm_math.h ****     q7_t *pState;                 /**< points to the state buffer array. The array is of length max
4474:../../Drivers/CMSIS/Include/arm_math.h ****     q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numT
4475:../../Drivers/CMSIS/Include/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4476:../../Drivers/CMSIS/Include/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4477:../../Drivers/CMSIS/Include/arm_math.h ****   } arm_fir_sparse_instance_q7;
ARM GAS  /tmp/cclaaHiH.s 			page 80


4478:../../Drivers/CMSIS/Include/arm_math.h **** 
4479:../../Drivers/CMSIS/Include/arm_math.h **** 
4480:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4481:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4482:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4483:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4484:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4485:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4486:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4487:../../Drivers/CMSIS/Include/arm_math.h ****    */
4488:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_f32(
4489:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4490:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
4491:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
4492:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pScratchIn,
4493:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4494:../../Drivers/CMSIS/Include/arm_math.h **** 
4495:../../Drivers/CMSIS/Include/arm_math.h **** 
4496:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4497:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4498:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4499:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4500:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4501:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4502:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4503:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4504:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4505:../../Drivers/CMSIS/Include/arm_math.h ****    */
4506:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_init_f32(
4507:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4508:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4509:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCoeffs,
4510:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pState,
4511:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t * pTapDelay,
4512:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t maxDelay,
4513:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4514:../../Drivers/CMSIS/Include/arm_math.h **** 
4515:../../Drivers/CMSIS/Include/arm_math.h **** 
4516:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4517:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4518:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4519:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4520:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4521:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4522:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4523:../../Drivers/CMSIS/Include/arm_math.h ****    */
4524:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_q31(
4525:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4526:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4527:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
4528:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pScratchIn,
4529:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4530:../../Drivers/CMSIS/Include/arm_math.h **** 
4531:../../Drivers/CMSIS/Include/arm_math.h **** 
4532:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4533:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4534:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
ARM GAS  /tmp/cclaaHiH.s 			page 81


4535:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4536:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4537:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4538:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4539:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4540:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4541:../../Drivers/CMSIS/Include/arm_math.h ****    */
4542:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_init_q31(
4543:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4544:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4545:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCoeffs,
4546:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pState,
4547:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t * pTapDelay,
4548:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t maxDelay,
4549:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4550:../../Drivers/CMSIS/Include/arm_math.h **** 
4551:../../Drivers/CMSIS/Include/arm_math.h **** 
4552:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4553:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4554:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4555:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4556:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4557:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4558:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4559:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4560:../../Drivers/CMSIS/Include/arm_math.h ****    */
4561:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_q15(
4562:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4563:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4564:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4565:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pScratchIn,
4566:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pScratchOut,
4567:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4568:../../Drivers/CMSIS/Include/arm_math.h **** 
4569:../../Drivers/CMSIS/Include/arm_math.h **** 
4570:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4571:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4572:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4573:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4574:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4575:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4576:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4577:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4578:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4579:../../Drivers/CMSIS/Include/arm_math.h ****    */
4580:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_init_q15(
4581:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4582:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4583:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pCoeffs,
4584:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pState,
4585:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t * pTapDelay,
4586:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t maxDelay,
4587:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4588:../../Drivers/CMSIS/Include/arm_math.h **** 
4589:../../Drivers/CMSIS/Include/arm_math.h **** 
4590:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4591:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
ARM GAS  /tmp/cclaaHiH.s 			page 82


4592:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4593:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4594:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4595:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4596:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4597:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4598:../../Drivers/CMSIS/Include/arm_math.h ****    */
4599:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_q7(
4600:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4601:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
4602:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pDst,
4603:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pScratchIn,
4604:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pScratchOut,
4605:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4606:../../Drivers/CMSIS/Include/arm_math.h **** 
4607:../../Drivers/CMSIS/Include/arm_math.h **** 
4608:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4609:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4610:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4611:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4612:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4613:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4614:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4615:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4616:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4617:../../Drivers/CMSIS/Include/arm_math.h ****    */
4618:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_fir_sparse_init_q7(
4619:../../Drivers/CMSIS/Include/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4620:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t numTaps,
4621:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pCoeffs,
4622:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pState,
4623:../../Drivers/CMSIS/Include/arm_math.h ****   int32_t * pTapDelay,
4624:../../Drivers/CMSIS/Include/arm_math.h ****   uint16_t maxDelay,
4625:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
4626:../../Drivers/CMSIS/Include/arm_math.h **** 
4627:../../Drivers/CMSIS/Include/arm_math.h **** 
4628:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4629:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point sin_cos function.
4630:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  theta   input value in degrees
4631:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4632:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4633:../../Drivers/CMSIS/Include/arm_math.h ****    */
4634:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_sin_cos_f32(
4635:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t theta,
4636:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSinVal,
4637:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pCosVal);
4638:../../Drivers/CMSIS/Include/arm_math.h **** 
4639:../../Drivers/CMSIS/Include/arm_math.h **** 
4640:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4641:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q31 sin_cos function.
4642:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4643:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4644:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4645:../../Drivers/CMSIS/Include/arm_math.h ****    */
4646:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_sin_cos_q31(
4647:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t theta,
4648:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSinVal,
ARM GAS  /tmp/cclaaHiH.s 			page 83


4649:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pCosVal);
4650:../../Drivers/CMSIS/Include/arm_math.h **** 
4651:../../Drivers/CMSIS/Include/arm_math.h **** 
4652:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4653:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point complex conjugate.
4654:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4655:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4656:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4657:../../Drivers/CMSIS/Include/arm_math.h ****    */
4658:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_conj_f32(
4659:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
4660:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
4661:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4662:../../Drivers/CMSIS/Include/arm_math.h **** 
4663:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4664:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q31 complex conjugate.
4665:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4666:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4667:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4668:../../Drivers/CMSIS/Include/arm_math.h ****    */
4669:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_conj_q31(
4670:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4671:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
4672:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4673:../../Drivers/CMSIS/Include/arm_math.h **** 
4674:../../Drivers/CMSIS/Include/arm_math.h **** 
4675:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4676:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q15 complex conjugate.
4677:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4678:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4679:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4680:../../Drivers/CMSIS/Include/arm_math.h ****    */
4681:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_conj_q15(
4682:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4683:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4684:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4685:../../Drivers/CMSIS/Include/arm_math.h **** 
4686:../../Drivers/CMSIS/Include/arm_math.h **** 
4687:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4688:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point complex magnitude squared
4689:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4690:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4691:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4692:../../Drivers/CMSIS/Include/arm_math.h ****    */
4693:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_mag_squared_f32(
4694:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pSrc,
4695:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
4696:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4697:../../Drivers/CMSIS/Include/arm_math.h **** 
4698:../../Drivers/CMSIS/Include/arm_math.h **** 
4699:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4700:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q31 complex magnitude squared
4701:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4702:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4703:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4704:../../Drivers/CMSIS/Include/arm_math.h ****    */
4705:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_mag_squared_q31(
ARM GAS  /tmp/cclaaHiH.s 			page 84


4706:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pSrc,
4707:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
4708:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4709:../../Drivers/CMSIS/Include/arm_math.h **** 
4710:../../Drivers/CMSIS/Include/arm_math.h **** 
4711:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4712:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Q15 complex magnitude squared
4713:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4714:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4715:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4716:../../Drivers/CMSIS/Include/arm_math.h ****    */
4717:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_cmplx_mag_squared_q15(
4718:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pSrc,
4719:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
4720:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t numSamples);
4721:../../Drivers/CMSIS/Include/arm_math.h **** 
4722:../../Drivers/CMSIS/Include/arm_math.h **** 
4723:../../Drivers/CMSIS/Include/arm_math.h ****  /**
4724:../../Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
4725:../../Drivers/CMSIS/Include/arm_math.h ****    */
4726:../../Drivers/CMSIS/Include/arm_math.h **** 
4727:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4728:../../Drivers/CMSIS/Include/arm_math.h ****    * @defgroup PID PID Motor Control
4729:../../Drivers/CMSIS/Include/arm_math.h ****    *
4730:../../Drivers/CMSIS/Include/arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4731:../../Drivers/CMSIS/Include/arm_math.h ****    * loop mechanism widely used in industrial control systems.
4732:../../Drivers/CMSIS/Include/arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4733:../../Drivers/CMSIS/Include/arm_math.h ****    *
4734:../../Drivers/CMSIS/Include/arm_math.h ****    * This set of functions implements (PID) controllers
4735:../../Drivers/CMSIS/Include/arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4736:../../Drivers/CMSIS/Include/arm_math.h ****    * of data and each call to the function returns a single processed value.
4737:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4738:../../Drivers/CMSIS/Include/arm_math.h ****    * is the input sample value. The functions return the output value.
4739:../../Drivers/CMSIS/Include/arm_math.h ****    *
4740:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm:
4741:../../Drivers/CMSIS/Include/arm_math.h ****    * <pre>
4742:../../Drivers/CMSIS/Include/arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4743:../../Drivers/CMSIS/Include/arm_math.h ****    *    A0 = Kp + Ki + Kd
4744:../../Drivers/CMSIS/Include/arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4745:../../Drivers/CMSIS/Include/arm_math.h ****    *    A2 = Kd  </pre>
4746:../../Drivers/CMSIS/Include/arm_math.h ****    *
4747:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
4748:../../Drivers/CMSIS/Include/arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4749:../../Drivers/CMSIS/Include/arm_math.h ****    *
4750:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
4751:../../Drivers/CMSIS/Include/arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4752:../../Drivers/CMSIS/Include/arm_math.h ****    *
4753:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
4754:../../Drivers/CMSIS/Include/arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4755:../../Drivers/CMSIS/Include/arm_math.h ****    * the measured output and the reference input.
4756:../../Drivers/CMSIS/Include/arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
4757:../../Drivers/CMSIS/Include/arm_math.h ****    * The proportional value determines the reaction to the current error,
4758:../../Drivers/CMSIS/Include/arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4759:../../Drivers/CMSIS/Include/arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4760:../../Drivers/CMSIS/Include/arm_math.h ****    *
4761:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Instance Structure
4762:../../Drivers/CMSIS/Include/arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
ARM GAS  /tmp/cclaaHiH.s 			page 85


4763:../../Drivers/CMSIS/Include/arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4764:../../Drivers/CMSIS/Include/arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4765:../../Drivers/CMSIS/Include/arm_math.h ****    *
4766:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Reset Functions
4767:../../Drivers/CMSIS/Include/arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4768:../../Drivers/CMSIS/Include/arm_math.h ****    *
4769:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Initialization Functions
4770:../../Drivers/CMSIS/Include/arm_math.h ****    * There is also an associated initialization function for each data type.
4771:../../Drivers/CMSIS/Include/arm_math.h ****    * The initialization function performs the following operations:
4772:../../Drivers/CMSIS/Include/arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4773:../../Drivers/CMSIS/Include/arm_math.h ****    * - Zeros out the values in the state buffer.
4774:../../Drivers/CMSIS/Include/arm_math.h ****    *
4775:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
4776:../../Drivers/CMSIS/Include/arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4777:../../Drivers/CMSIS/Include/arm_math.h ****    *
4778:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
4779:../../Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4780:../../Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4781:../../Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4782:../../Drivers/CMSIS/Include/arm_math.h ****    */
4783:../../Drivers/CMSIS/Include/arm_math.h **** 
4784:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4785:../../Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup PID
4786:../../Drivers/CMSIS/Include/arm_math.h ****    * @{
4787:../../Drivers/CMSIS/Include/arm_math.h ****    */
4788:../../Drivers/CMSIS/Include/arm_math.h **** 
4789:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4790:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the floating-point PID Control.
4791:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4792:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     in  input sample to process
4793:../../Drivers/CMSIS/Include/arm_math.h ****    * @return out processed output sample.
4794:../../Drivers/CMSIS/Include/arm_math.h ****    */
4795:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE float32_t arm_pid_f32(
4796:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_f32 * S,
4797:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t in)
4798:../../Drivers/CMSIS/Include/arm_math.h ****   {
4799:../../Drivers/CMSIS/Include/arm_math.h ****     float32_t out;
4800:../../Drivers/CMSIS/Include/arm_math.h **** 
4801:../../Drivers/CMSIS/Include/arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4802:../../Drivers/CMSIS/Include/arm_math.h ****     out = (S->A0 * in) +
4803:../../Drivers/CMSIS/Include/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
4804:../../Drivers/CMSIS/Include/arm_math.h **** 
4805:../../Drivers/CMSIS/Include/arm_math.h ****     /* Update state */
4806:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[1] = S->state[0];
4807:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[0] = in;
4808:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[2] = out;
4809:../../Drivers/CMSIS/Include/arm_math.h **** 
4810:../../Drivers/CMSIS/Include/arm_math.h ****     /* return to application */
4811:../../Drivers/CMSIS/Include/arm_math.h ****     return (out);
4812:../../Drivers/CMSIS/Include/arm_math.h **** 
4813:../../Drivers/CMSIS/Include/arm_math.h ****   }
4814:../../Drivers/CMSIS/Include/arm_math.h **** 
4815:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4816:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the Q31 PID Control.
4817:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S  points to an instance of the Q31 PID Control structure
4818:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     in  input sample to process
4819:../../Drivers/CMSIS/Include/arm_math.h ****    * @return out processed output sample.
ARM GAS  /tmp/cclaaHiH.s 			page 86


4820:../../Drivers/CMSIS/Include/arm_math.h ****    *
4821:../../Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4822:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
4823:../../Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 64-bit accumulator.
4824:../../Drivers/CMSIS/Include/arm_math.h ****    * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicat
4825:../../Drivers/CMSIS/Include/arm_math.h ****    * Thus, if the accumulator result overflows it wraps around rather than clip.
4826:../../Drivers/CMSIS/Include/arm_math.h ****    * In order to avoid overflows completely the input signal must be scaled down by 2 bits as there
4827:../../Drivers/CMSIS/Include/arm_math.h ****    * After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 format
4828:../../Drivers/CMSIS/Include/arm_math.h ****    */
4829:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q31_t arm_pid_q31(
4830:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q31 * S,
4831:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t in)
4832:../../Drivers/CMSIS/Include/arm_math.h ****   {
4833:../../Drivers/CMSIS/Include/arm_math.h ****     q63_t acc;
4834:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t out;
4835:../../Drivers/CMSIS/Include/arm_math.h **** 
4836:../../Drivers/CMSIS/Include/arm_math.h ****     /* acc = A0 * x[n]  */
4837:../../Drivers/CMSIS/Include/arm_math.h ****     acc = (q63_t) S->A0 * in;
4838:../../Drivers/CMSIS/Include/arm_math.h **** 
4839:../../Drivers/CMSIS/Include/arm_math.h ****     /* acc += A1 * x[n-1] */
4840:../../Drivers/CMSIS/Include/arm_math.h ****     acc += (q63_t) S->A1 * S->state[0];
4841:../../Drivers/CMSIS/Include/arm_math.h **** 
4842:../../Drivers/CMSIS/Include/arm_math.h ****     /* acc += A2 * x[n-2]  */
4843:../../Drivers/CMSIS/Include/arm_math.h ****     acc += (q63_t) S->A2 * S->state[1];
4844:../../Drivers/CMSIS/Include/arm_math.h **** 
4845:../../Drivers/CMSIS/Include/arm_math.h ****     /* convert output to 1.31 format to add y[n-1] */
4846:../../Drivers/CMSIS/Include/arm_math.h ****     out = (q31_t) (acc >> 31u);
4847:../../Drivers/CMSIS/Include/arm_math.h **** 
4848:../../Drivers/CMSIS/Include/arm_math.h ****     /* out += y[n-1] */
4849:../../Drivers/CMSIS/Include/arm_math.h ****     out += S->state[2];
4850:../../Drivers/CMSIS/Include/arm_math.h **** 
4851:../../Drivers/CMSIS/Include/arm_math.h ****     /* Update state */
4852:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[1] = S->state[0];
4853:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[0] = in;
4854:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[2] = out;
4855:../../Drivers/CMSIS/Include/arm_math.h **** 
4856:../../Drivers/CMSIS/Include/arm_math.h ****     /* return to application */
4857:../../Drivers/CMSIS/Include/arm_math.h ****     return (out);
4858:../../Drivers/CMSIS/Include/arm_math.h ****   }
4859:../../Drivers/CMSIS/Include/arm_math.h **** 
4860:../../Drivers/CMSIS/Include/arm_math.h **** 
4861:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4862:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Process function for the Q15 PID Control.
4863:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q15 PID Control structure
4864:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]     in  input sample to process
4865:../../Drivers/CMSIS/Include/arm_math.h ****    * @return out processed output sample.
4866:../../Drivers/CMSIS/Include/arm_math.h ****    *
4867:../../Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
4868:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
4869:../../Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using a 64-bit internal accumulator.
4870:../../Drivers/CMSIS/Include/arm_math.h ****    * Both Gains and state variables are represented in 1.15 format and multiplications yield a 2.30
4871:../../Drivers/CMSIS/Include/arm_math.h ****    * The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
4872:../../Drivers/CMSIS/Include/arm_math.h ****    * There is no risk of internal overflow with this approach and the full precision of intermediat
4873:../../Drivers/CMSIS/Include/arm_math.h ****    * After all additions have been performed, the accumulator is truncated to 34.15 format by disca
4874:../../Drivers/CMSIS/Include/arm_math.h ****    * Lastly, the accumulator is saturated to yield a result in 1.15 format.
4875:../../Drivers/CMSIS/Include/arm_math.h ****    */
4876:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE q15_t arm_pid_q15(
ARM GAS  /tmp/cclaaHiH.s 			page 87


4877:../../Drivers/CMSIS/Include/arm_math.h ****   arm_pid_instance_q15 * S,
4878:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t in)
4879:../../Drivers/CMSIS/Include/arm_math.h ****   {
4880:../../Drivers/CMSIS/Include/arm_math.h ****     q63_t acc;
4881:../../Drivers/CMSIS/Include/arm_math.h ****     q15_t out;
4882:../../Drivers/CMSIS/Include/arm_math.h **** 
4883:../../Drivers/CMSIS/Include/arm_math.h **** #ifndef ARM_MATH_CM0_FAMILY
4884:../../Drivers/CMSIS/Include/arm_math.h ****     __SIMD32_TYPE *vstate;
4885:../../Drivers/CMSIS/Include/arm_math.h **** 
4886:../../Drivers/CMSIS/Include/arm_math.h ****     /* Implementation of PID controller */
4887:../../Drivers/CMSIS/Include/arm_math.h **** 
4888:../../Drivers/CMSIS/Include/arm_math.h ****     /* acc = A0 * x[n]  */
4889:../../Drivers/CMSIS/Include/arm_math.h ****     acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
4890:../../Drivers/CMSIS/Include/arm_math.h **** 
4891:../../Drivers/CMSIS/Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4892:../../Drivers/CMSIS/Include/arm_math.h ****     vstate = __SIMD32_CONST(S->state);
4893:../../Drivers/CMSIS/Include/arm_math.h ****     acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)*vstate, (uint64_t)acc);
4894:../../Drivers/CMSIS/Include/arm_math.h **** #else
4895:../../Drivers/CMSIS/Include/arm_math.h ****     /* acc = A0 * x[n]  */
4896:../../Drivers/CMSIS/Include/arm_math.h ****     acc = ((q31_t) S->A0) * in;
4897:../../Drivers/CMSIS/Include/arm_math.h **** 
4898:../../Drivers/CMSIS/Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
4899:../../Drivers/CMSIS/Include/arm_math.h ****     acc += (q31_t) S->A1 * S->state[0];
4900:../../Drivers/CMSIS/Include/arm_math.h ****     acc += (q31_t) S->A2 * S->state[1];
4901:../../Drivers/CMSIS/Include/arm_math.h **** #endif
4902:../../Drivers/CMSIS/Include/arm_math.h **** 
4903:../../Drivers/CMSIS/Include/arm_math.h ****     /* acc += y[n-1] */
4904:../../Drivers/CMSIS/Include/arm_math.h ****     acc += (q31_t) S->state[2] << 15;
4905:../../Drivers/CMSIS/Include/arm_math.h **** 
4906:../../Drivers/CMSIS/Include/arm_math.h ****     /* saturate the output */
4907:../../Drivers/CMSIS/Include/arm_math.h ****     out = (q15_t) (__SSAT((acc >> 15), 16));
4908:../../Drivers/CMSIS/Include/arm_math.h **** 
4909:../../Drivers/CMSIS/Include/arm_math.h ****     /* Update state */
4910:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[1] = S->state[0];
4911:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[0] = in;
4912:../../Drivers/CMSIS/Include/arm_math.h ****     S->state[2] = out;
4913:../../Drivers/CMSIS/Include/arm_math.h **** 
4914:../../Drivers/CMSIS/Include/arm_math.h ****     /* return to application */
4915:../../Drivers/CMSIS/Include/arm_math.h ****     return (out);
4916:../../Drivers/CMSIS/Include/arm_math.h ****   }
4917:../../Drivers/CMSIS/Include/arm_math.h **** 
4918:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4919:../../Drivers/CMSIS/Include/arm_math.h ****    * @} end of PID group
4920:../../Drivers/CMSIS/Include/arm_math.h ****    */
4921:../../Drivers/CMSIS/Include/arm_math.h **** 
4922:../../Drivers/CMSIS/Include/arm_math.h **** 
4923:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4924:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix inverse.
4925:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4926:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4927:../../Drivers/CMSIS/Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4928:../../Drivers/CMSIS/Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4929:../../Drivers/CMSIS/Include/arm_math.h ****    */
4930:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_inverse_f32(
4931:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f32 * src,
4932:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f32 * dst);
4933:../../Drivers/CMSIS/Include/arm_math.h **** 
ARM GAS  /tmp/cclaaHiH.s 			page 88


4934:../../Drivers/CMSIS/Include/arm_math.h **** 
4935:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4936:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point matrix inverse.
4937:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
4938:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
4939:../../Drivers/CMSIS/Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
4940:../../Drivers/CMSIS/Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
4941:../../Drivers/CMSIS/Include/arm_math.h ****    */
4942:../../Drivers/CMSIS/Include/arm_math.h ****   arm_status arm_mat_inverse_f64(
4943:../../Drivers/CMSIS/Include/arm_math.h ****   const arm_matrix_instance_f64 * src,
4944:../../Drivers/CMSIS/Include/arm_math.h ****   arm_matrix_instance_f64 * dst);
4945:../../Drivers/CMSIS/Include/arm_math.h **** 
4946:../../Drivers/CMSIS/Include/arm_math.h **** 
4947:../../Drivers/CMSIS/Include/arm_math.h **** 
4948:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4949:../../Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
4950:../../Drivers/CMSIS/Include/arm_math.h ****    */
4951:../../Drivers/CMSIS/Include/arm_math.h **** 
4952:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4953:../../Drivers/CMSIS/Include/arm_math.h ****    * @defgroup clarke Vector Clarke Transform
4954:../../Drivers/CMSIS/Include/arm_math.h ****    * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time i
4955:../../Drivers/CMSIS/Include/arm_math.h ****    * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calcula
4956:../../Drivers/CMSIS/Include/arm_math.h ****    * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
4957:../../Drivers/CMSIS/Include/arm_math.h ****    * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
4958:../../Drivers/CMSIS/Include/arm_math.h ****    * \image html clarke.gif Stator current space vector and its components in (a,b).
4959:../../Drivers/CMSIS/Include/arm_math.h ****    * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code
4960:../../Drivers/CMSIS/Include/arm_math.h ****    * can be calculated using only <code>Ia</code> and <code>Ib</code>.
4961:../../Drivers/CMSIS/Include/arm_math.h ****    *
4962:../../Drivers/CMSIS/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
4963:../../Drivers/CMSIS/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
4964:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm
4965:../../Drivers/CMSIS/Include/arm_math.h ****    * \image html clarkeFormula.gif
4966:../../Drivers/CMSIS/Include/arm_math.h ****    * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
4967:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
4968:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
4969:../../Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
4970:../../Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
4971:../../Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4972:../../Drivers/CMSIS/Include/arm_math.h ****    */
4973:../../Drivers/CMSIS/Include/arm_math.h **** 
4974:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4975:../../Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup clarke
4976:../../Drivers/CMSIS/Include/arm_math.h ****    * @{
4977:../../Drivers/CMSIS/Include/arm_math.h ****    */
4978:../../Drivers/CMSIS/Include/arm_math.h **** 
4979:../../Drivers/CMSIS/Include/arm_math.h ****   /**
4980:../../Drivers/CMSIS/Include/arm_math.h ****    *
4981:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point Clarke transform
4982:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
4983:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
4984:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
4985:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
4986:../../Drivers/CMSIS/Include/arm_math.h ****    */
4987:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_clarke_f32(
4988:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t Ia,
4989:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t Ib,
4990:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIalpha,
ARM GAS  /tmp/cclaaHiH.s 			page 89


4991:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIbeta)
4992:../../Drivers/CMSIS/Include/arm_math.h ****   {
  28              		.loc 1 4992 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 87ED030A 		fsts	s0, [r7, #12]
  44 000a C7ED020A 		fsts	s1, [r7, #8]
  45 000e 7860     		str	r0, [r7, #4]
  46 0010 3960     		str	r1, [r7]
4993:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Ia */
4994:../../Drivers/CMSIS/Include/arm_math.h ****     *pIalpha = Ia;
  47              		.loc 1 4994 0
  48 0012 7B68     		ldr	r3, [r7, #4]
  49 0014 FA68     		ldr	r2, [r7, #12]	@ float
  50 0016 1A60     		str	r2, [r3]	@ float
4995:../../Drivers/CMSIS/Include/arm_math.h **** 
4996:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
4997:../../Drivers/CMSIS/Include/arm_math.h ****     *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
  51              		.loc 1 4997 0
  52 0018 D7ED037A 		flds	s15, [r7, #12]
  53 001c 9FED097A 		flds	s14, .L2
  54 0020 27EE877A 		fmuls	s14, s15, s14
  55 0024 D7ED027A 		flds	s15, [r7, #8]
  56 0028 DFED076A 		flds	s13, .L2+4
  57 002c 67EEA67A 		fmuls	s15, s15, s13
  58 0030 77EE277A 		fadds	s15, s14, s15
  59 0034 3B68     		ldr	r3, [r7]
  60 0036 C3ED007A 		fsts	s15, [r3]
4998:../../Drivers/CMSIS/Include/arm_math.h ****   }
  61              		.loc 1 4998 0
  62 003a 1437     		adds	r7, r7, #20
  63              	.LCFI3:
  64              		.cfi_def_cfa_offset 4
  65 003c BD46     		mov	sp, r7
  66              	.LCFI4:
  67              		.cfi_def_cfa_register 13
  68              		@ sp needed
  69 003e 5DF8047B 		ldr	r7, [sp], #4
  70              	.LCFI5:
  71              		.cfi_restore 7
  72              		.cfi_def_cfa_offset 0
  73 0042 7047     		bx	lr
  74              	.L3:
  75              		.align	2
  76              	.L2:
ARM GAS  /tmp/cclaaHiH.s 			page 90


  77 0044 3ACD133F 		.word	1058262330
  78 0048 3ACD933F 		.word	1066650938
  79              		.cfi_endproc
  80              	.LFE133:
  82              		.section	.text.arm_park_f32,"ax",%progbits
  83              		.align	2
  84              		.thumb
  85              		.thumb_func
  87              	arm_park_f32:
  88              	.LFB137:
4999:../../Drivers/CMSIS/Include/arm_math.h **** 
5000:../../Drivers/CMSIS/Include/arm_math.h **** 
5001:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5002:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Clarke transform for Q31 version
5003:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5004:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5005:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5006:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5007:../../Drivers/CMSIS/Include/arm_math.h ****    *
5008:../../Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5009:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
5010:../../Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5011:../../Drivers/CMSIS/Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5012:../../Drivers/CMSIS/Include/arm_math.h ****    * There is saturation on the addition, hence there is no risk of overflow.
5013:../../Drivers/CMSIS/Include/arm_math.h ****    */
5014:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_clarke_q31(
5015:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t Ia,
5016:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t Ib,
5017:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIalpha,
5018:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIbeta)
5019:../../Drivers/CMSIS/Include/arm_math.h ****   {
5020:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5021:../../Drivers/CMSIS/Include/arm_math.h **** 
5022:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculating pIalpha from Ia by equation pIalpha = Ia */
5023:../../Drivers/CMSIS/Include/arm_math.h ****     *pIalpha = Ia;
5024:../../Drivers/CMSIS/Include/arm_math.h **** 
5025:../../Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
5026:../../Drivers/CMSIS/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
5027:../../Drivers/CMSIS/Include/arm_math.h **** 
5028:../../Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
5029:../../Drivers/CMSIS/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
5030:../../Drivers/CMSIS/Include/arm_math.h **** 
5031:../../Drivers/CMSIS/Include/arm_math.h ****     /* pIbeta is calculated by adding the intermediate products */
5032:../../Drivers/CMSIS/Include/arm_math.h ****     *pIbeta = __QADD(product1, product2);
5033:../../Drivers/CMSIS/Include/arm_math.h ****   }
5034:../../Drivers/CMSIS/Include/arm_math.h **** 
5035:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5036:../../Drivers/CMSIS/Include/arm_math.h ****    * @} end of clarke group
5037:../../Drivers/CMSIS/Include/arm_math.h ****    */
5038:../../Drivers/CMSIS/Include/arm_math.h **** 
5039:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5040:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q31 vector.
5041:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
5042:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
5043:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
5044:../../Drivers/CMSIS/Include/arm_math.h ****    */
5045:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_q7_to_q31(
ARM GAS  /tmp/cclaaHiH.s 			page 91


5046:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
5047:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pDst,
5048:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
5049:../../Drivers/CMSIS/Include/arm_math.h **** 
5050:../../Drivers/CMSIS/Include/arm_math.h **** 
5051:../../Drivers/CMSIS/Include/arm_math.h **** 
5052:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5053:../../Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
5054:../../Drivers/CMSIS/Include/arm_math.h ****    */
5055:../../Drivers/CMSIS/Include/arm_math.h **** 
5056:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5057:../../Drivers/CMSIS/Include/arm_math.h ****    * @defgroup inv_clarke Vector Inverse Clarke Transform
5058:../../Drivers/CMSIS/Include/arm_math.h ****    * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous 
5059:../../Drivers/CMSIS/Include/arm_math.h ****    *
5060:../../Drivers/CMSIS/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5061:../../Drivers/CMSIS/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5062:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm
5063:../../Drivers/CMSIS/Include/arm_math.h ****    * \image html clarkeInvFormula.gif
5064:../../Drivers/CMSIS/Include/arm_math.h ****    * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
5065:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
5066:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
5067:../../Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5068:../../Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5069:../../Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5070:../../Drivers/CMSIS/Include/arm_math.h ****    */
5071:../../Drivers/CMSIS/Include/arm_math.h **** 
5072:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5073:../../Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup inv_clarke
5074:../../Drivers/CMSIS/Include/arm_math.h ****    * @{
5075:../../Drivers/CMSIS/Include/arm_math.h ****    */
5076:../../Drivers/CMSIS/Include/arm_math.h **** 
5077:../../Drivers/CMSIS/Include/arm_math.h ****    /**
5078:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point Inverse Clarke transform
5079:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5080:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5081:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5082:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5083:../../Drivers/CMSIS/Include/arm_math.h ****    */
5084:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_inv_clarke_f32(
5085:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t Ialpha,
5086:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t Ibeta,
5087:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIa,
5088:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIb)
5089:../../Drivers/CMSIS/Include/arm_math.h ****   {
5090:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5091:../../Drivers/CMSIS/Include/arm_math.h ****     *pIa = Ialpha;
5092:../../Drivers/CMSIS/Include/arm_math.h **** 
5093:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibet
5094:../../Drivers/CMSIS/Include/arm_math.h ****     *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
5095:../../Drivers/CMSIS/Include/arm_math.h ****   }
5096:../../Drivers/CMSIS/Include/arm_math.h **** 
5097:../../Drivers/CMSIS/Include/arm_math.h **** 
5098:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5099:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Inverse Clarke transform for Q31 version
5100:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5101:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5102:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
ARM GAS  /tmp/cclaaHiH.s 			page 92


5103:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5104:../../Drivers/CMSIS/Include/arm_math.h ****    *
5105:../../Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5106:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
5107:../../Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5108:../../Drivers/CMSIS/Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5109:../../Drivers/CMSIS/Include/arm_math.h ****    * There is saturation on the subtraction, hence there is no risk of overflow.
5110:../../Drivers/CMSIS/Include/arm_math.h ****    */
5111:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_inv_clarke_q31(
5112:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t Ialpha,
5113:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t Ibeta,
5114:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIa,
5115:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIb)
5116:../../Drivers/CMSIS/Include/arm_math.h ****   {
5117:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5118:../../Drivers/CMSIS/Include/arm_math.h **** 
5119:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5120:../../Drivers/CMSIS/Include/arm_math.h ****     *pIa = Ialpha;
5121:../../Drivers/CMSIS/Include/arm_math.h **** 
5122:../../Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
5123:../../Drivers/CMSIS/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
5124:../../Drivers/CMSIS/Include/arm_math.h **** 
5125:../../Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
5126:../../Drivers/CMSIS/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
5127:../../Drivers/CMSIS/Include/arm_math.h **** 
5128:../../Drivers/CMSIS/Include/arm_math.h ****     /* pIb is calculated by subtracting the products */
5129:../../Drivers/CMSIS/Include/arm_math.h ****     *pIb = __QSUB(product2, product1);
5130:../../Drivers/CMSIS/Include/arm_math.h ****   }
5131:../../Drivers/CMSIS/Include/arm_math.h **** 
5132:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5133:../../Drivers/CMSIS/Include/arm_math.h ****    * @} end of inv_clarke group
5134:../../Drivers/CMSIS/Include/arm_math.h ****    */
5135:../../Drivers/CMSIS/Include/arm_math.h **** 
5136:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5137:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to Q15 vector.
5138:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
5139:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       output pointer
5140:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
5141:../../Drivers/CMSIS/Include/arm_math.h ****    */
5142:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_q7_to_q15(
5143:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
5144:../../Drivers/CMSIS/Include/arm_math.h ****   q15_t * pDst,
5145:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
5146:../../Drivers/CMSIS/Include/arm_math.h **** 
5147:../../Drivers/CMSIS/Include/arm_math.h **** 
5148:../../Drivers/CMSIS/Include/arm_math.h **** 
5149:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5150:../../Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
5151:../../Drivers/CMSIS/Include/arm_math.h ****    */
5152:../../Drivers/CMSIS/Include/arm_math.h **** 
5153:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5154:../../Drivers/CMSIS/Include/arm_math.h ****    * @defgroup park Vector Park Transform
5155:../../Drivers/CMSIS/Include/arm_math.h ****    *
5156:../../Drivers/CMSIS/Include/arm_math.h ****    * Forward Park transform converts the input two-coordinate vector to flux and torque components.
5157:../../Drivers/CMSIS/Include/arm_math.h ****    * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and th
5158:../../Drivers/CMSIS/Include/arm_math.h ****    * from the stationary to the moving reference frame and control the spatial relationship between
5159:../../Drivers/CMSIS/Include/arm_math.h ****    * the stator vector current and rotor flux vector.
ARM GAS  /tmp/cclaaHiH.s 			page 93


5160:../../Drivers/CMSIS/Include/arm_math.h ****    * If we consider the d axis aligned with the rotor flux, the diagram below shows the
5161:../../Drivers/CMSIS/Include/arm_math.h ****    * current vector and the relationship from the two reference frames:
5162:../../Drivers/CMSIS/Include/arm_math.h ****    * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q ro
5163:../../Drivers/CMSIS/Include/arm_math.h ****    *
5164:../../Drivers/CMSIS/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5165:../../Drivers/CMSIS/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5166:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm
5167:../../Drivers/CMSIS/Include/arm_math.h ****    * \image html parkFormula.gif
5168:../../Drivers/CMSIS/Include/arm_math.h ****    * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
5169:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and 
5170:../../Drivers/CMSIS/Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5171:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
5172:../../Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5173:../../Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5174:../../Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5175:../../Drivers/CMSIS/Include/arm_math.h ****    */
5176:../../Drivers/CMSIS/Include/arm_math.h **** 
5177:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5178:../../Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup park
5179:../../Drivers/CMSIS/Include/arm_math.h ****    * @{
5180:../../Drivers/CMSIS/Include/arm_math.h ****    */
5181:../../Drivers/CMSIS/Include/arm_math.h **** 
5182:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5183:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief Floating-point Park transform
5184:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5185:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5186:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pId     points to output   rotor reference frame d
5187:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIq     points to output   rotor reference frame q
5188:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5189:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5190:../../Drivers/CMSIS/Include/arm_math.h ****    *
5191:../../Drivers/CMSIS/Include/arm_math.h ****    * The function implements the forward Park transform.
5192:../../Drivers/CMSIS/Include/arm_math.h ****    *
5193:../../Drivers/CMSIS/Include/arm_math.h ****    */
5194:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_park_f32(
5195:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t Ialpha,
5196:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t Ibeta,
5197:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pId,
5198:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIq,
5199:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t sinVal,
5200:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t cosVal)
5201:../../Drivers/CMSIS/Include/arm_math.h ****   {
  89              		.loc 1 5201 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 24
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94 0000 80B4     		push	{r7}
  95              	.LCFI6:
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 7, -4
  98 0002 87B0     		sub	sp, sp, #28
  99              	.LCFI7:
 100              		.cfi_def_cfa_offset 32
 101 0004 00AF     		add	r7, sp, #0
 102              	.LCFI8:
 103              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cclaaHiH.s 			page 94


 104 0006 87ED050A 		fsts	s0, [r7, #20]
 105 000a C7ED040A 		fsts	s1, [r7, #16]
 106 000e F860     		str	r0, [r7, #12]
 107 0010 B960     		str	r1, [r7, #8]
 108 0012 87ED011A 		fsts	s2, [r7, #4]
 109 0016 C7ED001A 		fsts	s3, [r7]
5202:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
5203:../../Drivers/CMSIS/Include/arm_math.h ****     *pId = Ialpha * cosVal + Ibeta * sinVal;
 110              		.loc 1 5203 0
 111 001a 97ED057A 		flds	s14, [r7, #20]
 112 001e D7ED007A 		flds	s15, [r7]
 113 0022 27EE277A 		fmuls	s14, s14, s15
 114 0026 D7ED046A 		flds	s13, [r7, #16]
 115 002a D7ED017A 		flds	s15, [r7, #4]
 116 002e 66EEA77A 		fmuls	s15, s13, s15
 117 0032 77EE277A 		fadds	s15, s14, s15
 118 0036 FB68     		ldr	r3, [r7, #12]
 119 0038 C3ED007A 		fsts	s15, [r3]
5204:../../Drivers/CMSIS/Include/arm_math.h **** 
5205:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
5206:../../Drivers/CMSIS/Include/arm_math.h ****     *pIq = -Ialpha * sinVal + Ibeta * cosVal;
 120              		.loc 1 5206 0
 121 003c D7ED057A 		flds	s15, [r7, #20]
 122 0040 B1EE677A 		fnegs	s14, s15
 123 0044 D7ED017A 		flds	s15, [r7, #4]
 124 0048 27EE277A 		fmuls	s14, s14, s15
 125 004c D7ED046A 		flds	s13, [r7, #16]
 126 0050 D7ED007A 		flds	s15, [r7]
 127 0054 66EEA77A 		fmuls	s15, s13, s15
 128 0058 77EE277A 		fadds	s15, s14, s15
 129 005c BB68     		ldr	r3, [r7, #8]
 130 005e C3ED007A 		fsts	s15, [r3]
5207:../../Drivers/CMSIS/Include/arm_math.h ****   }
 131              		.loc 1 5207 0
 132 0062 1C37     		adds	r7, r7, #28
 133              	.LCFI9:
 134              		.cfi_def_cfa_offset 4
 135 0064 BD46     		mov	sp, r7
 136              	.LCFI10:
 137              		.cfi_def_cfa_register 13
 138              		@ sp needed
 139 0066 5DF8047B 		ldr	r7, [sp], #4
 140              	.LCFI11:
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 006a 7047     		bx	lr
 144              		.cfi_endproc
 145              	.LFE137:
 147              		.section	.text.arm_inv_park_f32,"ax",%progbits
 148              		.align	2
 149              		.thumb
 150              		.thumb_func
 152              	arm_inv_park_f32:
 153              	.LFB139:
5208:../../Drivers/CMSIS/Include/arm_math.h **** 
5209:../../Drivers/CMSIS/Include/arm_math.h **** 
5210:../../Drivers/CMSIS/Include/arm_math.h ****   /**
ARM GAS  /tmp/cclaaHiH.s 			page 95


5211:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Park transform for Q31 version
5212:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5213:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5214:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pId     points to output rotor reference frame d
5215:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIq     points to output rotor reference frame q
5216:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5217:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5218:../../Drivers/CMSIS/Include/arm_math.h ****    *
5219:../../Drivers/CMSIS/Include/arm_math.h ****    * <b>Scaling and Overflow Behavior:</b>
5220:../../Drivers/CMSIS/Include/arm_math.h ****    * \par
5221:../../Drivers/CMSIS/Include/arm_math.h ****    * The function is implemented using an internal 32-bit accumulator.
5222:../../Drivers/CMSIS/Include/arm_math.h ****    * The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate multipli
5223:../../Drivers/CMSIS/Include/arm_math.h ****    * There is saturation on the addition and subtraction, hence there is no risk of overflow.
5224:../../Drivers/CMSIS/Include/arm_math.h ****    */
5225:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_park_q31(
5226:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t Ialpha,
5227:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t Ibeta,
5228:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pId,
5229:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t * pIq,
5230:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t sinVal,
5231:../../Drivers/CMSIS/Include/arm_math.h ****   q31_t cosVal)
5232:../../Drivers/CMSIS/Include/arm_math.h ****   {
5233:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5234:../../Drivers/CMSIS/Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5235:../../Drivers/CMSIS/Include/arm_math.h **** 
5236:../../Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * cosVal) */
5237:../../Drivers/CMSIS/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
5238:../../Drivers/CMSIS/Include/arm_math.h **** 
5239:../../Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * sinVal) */
5240:../../Drivers/CMSIS/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
5241:../../Drivers/CMSIS/Include/arm_math.h **** 
5242:../../Drivers/CMSIS/Include/arm_math.h **** 
5243:../../Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * sinVal) */
5244:../../Drivers/CMSIS/Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
5245:../../Drivers/CMSIS/Include/arm_math.h **** 
5246:../../Drivers/CMSIS/Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * cosVal) */
5247:../../Drivers/CMSIS/Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
5248:../../Drivers/CMSIS/Include/arm_math.h **** 
5249:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pId by adding the two intermediate products 1 and 2 */
5250:../../Drivers/CMSIS/Include/arm_math.h ****     *pId = __QADD(product1, product2);
5251:../../Drivers/CMSIS/Include/arm_math.h **** 
5252:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
5253:../../Drivers/CMSIS/Include/arm_math.h ****     *pIq = __QSUB(product4, product3);
5254:../../Drivers/CMSIS/Include/arm_math.h ****   }
5255:../../Drivers/CMSIS/Include/arm_math.h **** 
5256:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5257:../../Drivers/CMSIS/Include/arm_math.h ****    * @} end of park group
5258:../../Drivers/CMSIS/Include/arm_math.h ****    */
5259:../../Drivers/CMSIS/Include/arm_math.h **** 
5260:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5261:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Converts the elements of the Q7 vector to floating-point vector.
5262:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  pSrc       is input pointer
5263:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pDst       is output pointer
5264:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  blockSize  is the number of samples to process
5265:../../Drivers/CMSIS/Include/arm_math.h ****    */
5266:../../Drivers/CMSIS/Include/arm_math.h ****   void arm_q7_to_float(
5267:../../Drivers/CMSIS/Include/arm_math.h ****   q7_t * pSrc,
ARM GAS  /tmp/cclaaHiH.s 			page 96


5268:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pDst,
5269:../../Drivers/CMSIS/Include/arm_math.h ****   uint32_t blockSize);
5270:../../Drivers/CMSIS/Include/arm_math.h **** 
5271:../../Drivers/CMSIS/Include/arm_math.h **** 
5272:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5273:../../Drivers/CMSIS/Include/arm_math.h ****    * @ingroup groupController
5274:../../Drivers/CMSIS/Include/arm_math.h ****    */
5275:../../Drivers/CMSIS/Include/arm_math.h **** 
5276:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5277:../../Drivers/CMSIS/Include/arm_math.h ****    * @defgroup inv_park Vector Inverse Park transform
5278:../../Drivers/CMSIS/Include/arm_math.h ****    * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
5279:../../Drivers/CMSIS/Include/arm_math.h ****    *
5280:../../Drivers/CMSIS/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5281:../../Drivers/CMSIS/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5282:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Algorithm
5283:../../Drivers/CMSIS/Include/arm_math.h ****    * \image html parkInvFormula.gif
5284:../../Drivers/CMSIS/Include/arm_math.h ****    * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
5285:../../Drivers/CMSIS/Include/arm_math.h ****    * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <c
5286:../../Drivers/CMSIS/Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5287:../../Drivers/CMSIS/Include/arm_math.h ****    * \par Fixed-Point Behavior
5288:../../Drivers/CMSIS/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5289:../../Drivers/CMSIS/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5290:../../Drivers/CMSIS/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5291:../../Drivers/CMSIS/Include/arm_math.h ****    */
5292:../../Drivers/CMSIS/Include/arm_math.h **** 
5293:../../Drivers/CMSIS/Include/arm_math.h ****   /**
5294:../../Drivers/CMSIS/Include/arm_math.h ****    * @addtogroup inv_park
5295:../../Drivers/CMSIS/Include/arm_math.h ****    * @{
5296:../../Drivers/CMSIS/Include/arm_math.h ****    */
5297:../../Drivers/CMSIS/Include/arm_math.h **** 
5298:../../Drivers/CMSIS/Include/arm_math.h ****    /**
5299:../../Drivers/CMSIS/Include/arm_math.h ****    * @brief  Floating-point Inverse Park transform
5300:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5301:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5302:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5303:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5304:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5305:../../Drivers/CMSIS/Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
5306:../../Drivers/CMSIS/Include/arm_math.h ****    */
5307:../../Drivers/CMSIS/Include/arm_math.h ****   static __INLINE void arm_inv_park_f32(
5308:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t Id,
5309:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t Iq,
5310:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIalpha,
5311:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t * pIbeta,
5312:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t sinVal,
5313:../../Drivers/CMSIS/Include/arm_math.h ****   float32_t cosVal)
5314:../../Drivers/CMSIS/Include/arm_math.h ****   {
 154              		.loc 1 5314 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 24
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159 0000 80B4     		push	{r7}
 160              	.LCFI12:
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 7, -4
 163 0002 87B0     		sub	sp, sp, #28
ARM GAS  /tmp/cclaaHiH.s 			page 97


 164              	.LCFI13:
 165              		.cfi_def_cfa_offset 32
 166 0004 00AF     		add	r7, sp, #0
 167              	.LCFI14:
 168              		.cfi_def_cfa_register 7
 169 0006 87ED050A 		fsts	s0, [r7, #20]
 170 000a C7ED040A 		fsts	s1, [r7, #16]
 171 000e F860     		str	r0, [r7, #12]
 172 0010 B960     		str	r1, [r7, #8]
 173 0012 87ED011A 		fsts	s2, [r7, #4]
 174 0016 C7ED001A 		fsts	s3, [r7]
5315:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
5316:../../Drivers/CMSIS/Include/arm_math.h ****     *pIalpha = Id * cosVal - Iq * sinVal;
 175              		.loc 1 5316 0
 176 001a 97ED057A 		flds	s14, [r7, #20]
 177 001e D7ED007A 		flds	s15, [r7]
 178 0022 27EE277A 		fmuls	s14, s14, s15
 179 0026 D7ED046A 		flds	s13, [r7, #16]
 180 002a D7ED017A 		flds	s15, [r7, #4]
 181 002e 66EEA77A 		fmuls	s15, s13, s15
 182 0032 77EE677A 		fsubs	s15, s14, s15
 183 0036 FB68     		ldr	r3, [r7, #12]
 184 0038 C3ED007A 		fsts	s15, [r3]
5317:../../Drivers/CMSIS/Include/arm_math.h **** 
5318:../../Drivers/CMSIS/Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
5319:../../Drivers/CMSIS/Include/arm_math.h ****     *pIbeta = Id * sinVal + Iq * cosVal;
 185              		.loc 1 5319 0
 186 003c 97ED057A 		flds	s14, [r7, #20]
 187 0040 D7ED017A 		flds	s15, [r7, #4]
 188 0044 27EE277A 		fmuls	s14, s14, s15
 189 0048 D7ED046A 		flds	s13, [r7, #16]
 190 004c D7ED007A 		flds	s15, [r7]
 191 0050 66EEA77A 		fmuls	s15, s13, s15
 192 0054 77EE277A 		fadds	s15, s14, s15
 193 0058 BB68     		ldr	r3, [r7, #8]
 194 005a C3ED007A 		fsts	s15, [r3]
5320:../../Drivers/CMSIS/Include/arm_math.h ****   }
 195              		.loc 1 5320 0
 196 005e 1C37     		adds	r7, r7, #28
 197              	.LCFI15:
 198              		.cfi_def_cfa_offset 4
 199 0060 BD46     		mov	sp, r7
 200              	.LCFI16:
 201              		.cfi_def_cfa_register 13
 202              		@ sp needed
 203 0062 5DF8047B 		ldr	r7, [sp], #4
 204              	.LCFI17:
 205              		.cfi_restore 7
 206              		.cfi_def_cfa_offset 0
 207 0066 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE139:
 211              		.comm	hadc1,84,4
 212              		.comm	htim1,64,4
 213              		.comm	huart2,112,4
 214              		.global	U_alpha
 215              		.section	.data.U_alpha,"aw",%progbits
ARM GAS  /tmp/cclaaHiH.s 			page 98


 216              		.align	2
 219              	U_alpha:
 220 0000 00004843 		.word	1128792064
 221              		.global	U_beta
 222              		.section	.bss.U_beta,"aw",%nobits
 223              		.align	2
 226              	U_beta:
 227 0000 00000000 		.space	4
 228              		.global	Theta
 229              		.section	.bss.Theta,"aw",%nobits
 230              		.align	2
 233              	Theta:
 234 0000 00000000 		.space	4
 235              		.global	T_halfsample
 236              		.section	.data.T_halfsample,"aw",%progbits
 237              		.align	2
 240              	T_halfsample:
 241 0000 6F120338 		.word	939725423
 242              		.global	counterfrequency
 243              		.section	.data.counterfrequency,"aw",%progbits
 244              		.align	2
 247              	counterfrequency:
 248 0000 0024744C 		.word	1282679808
 249              		.global	sinevalue
 250              		.section	.bss.sinevalue,"aw",%nobits
 251              		.align	2
 254              	sinevalue:
 255 0000 00000000 		.space	4
 256              		.global	cosinevalue
 257              		.section	.bss.cosinevalue,"aw",%nobits
 258              		.align	2
 261              	cosinevalue:
 262 0000 00000000 		.space	4
 263              		.global	U_max
 264              		.section	.data.U_max,"aw",%progbits
 265              		.align	2
 268              	U_max:
 269 0000 78A8A143 		.word	1134667896
 270              		.global	Ia
 271              		.section	.bss.Ia,"aw",%nobits
 272              		.align	2
 275              	Ia:
 276 0000 00000000 		.space	4
 277              		.global	Ib
 278              		.section	.bss.Ib,"aw",%nobits
 279              		.align	2
 282              	Ib:
 283 0000 00000000 		.space	4
 284              		.global	Iq_real
 285              		.section	.bss.Iq_real,"aw",%nobits
 286              		.align	2
 289              	Iq_real:
 290 0000 00000000 		.space	4
 291              		.global	Iq_ref
 292              		.section	.bss.Iq_ref,"aw",%nobits
 293              		.align	2
 296              	Iq_ref:
ARM GAS  /tmp/cclaaHiH.s 			page 99


 297 0000 00000000 		.space	4
 298              		.global	Ud
 299              		.section	.bss.Ud,"aw",%nobits
 300              		.align	2
 303              	Ud:
 304 0000 00000000 		.space	4
 305              		.global	Uq
 306              		.section	.bss.Uq,"aw",%nobits
 307              		.align	2
 310              	Uq:
 311 0000 00000000 		.space	4
 312              		.comm	switchtime,12,4
 313              		.global	error_sum
 314              		.section	.bss.error_sum,"aw",%nobits
 315              		.align	2
 318              	error_sum:
 319 0000 00000000 		.space	4
 320              		.global	__aeabi_f2d
 321              		.global	__aeabi_dadd
 322              		.global	__aeabi_d2f
 323              		.global	__aeabi_dcmpge
 324              		.section	.text.main,"ax",%progbits
 325              		.align	2
 326              		.global	main
 327              		.thumb
 328              		.thumb_func
 330              	main:
 331              	.LFB156:
 332              		.file 2 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   *
   7:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/main.c    ****   * are permitted provided that the following conditions are met:
  11:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  13:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/main.c    ****   *      and/or other materials provided with the distribution.
  16:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  18:Src/main.c    ****   *      without specific prior written permission.
  19:Src/main.c    ****   *
  20:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/cclaaHiH.s 			page 100


  29:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/main.c    ****   *
  31:Src/main.c    ****   ******************************************************************************
  32:Src/main.c    ****   */
  33:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  34:Src/main.c    **** #include "main.h"
  35:Src/main.c    **** #include "stm32f3xx_hal.h"
  36:Src/main.c    **** 
  37:Src/main.c    **** /* USER CODE BEGIN Includes */
  38:Src/main.c    **** #include <math.h>
  39:Src/main.c    **** #include <arm_math.h>
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Maximum Voltage applying */
  42:Src/main.c    **** #define _U_DC	560
  43:Src/main.c    **** /* Square Root of 3 */
  44:Src/main.c    **** #define _SQRT3	1.73205081
  45:Src/main.c    **** /* Pi divided by 3 */
  46:Src/main.c    **** #define _PIdiv3	1.04719755
  47:Src/main.c    **** 
  48:Src/main.c    **** 
  49:Src/main.c    **** 
  50:Src/main.c    **** #define _OUTMIN 2//value       // limits output alias command signal
  51:Src/main.c    **** #define _OUTMAX 2//value       // limits output alias command signal
  52:Src/main.c    **** #define _ERRORMIN 2//value     // limits control error
  53:Src/main.c    **** #define _ERRORMAX 2//value     // limits control error
  54:Src/main.c    **** #define _K_p 4
  55:Src/main.c    **** #define _K_i 1
  56:Src/main.c    **** 
  57:Src/main.c    **** #define M_PI 3.14159265358979323846
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END Includes */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  62:Src/main.c    **** ADC_HandleTypeDef hadc1;
  63:Src/main.c    **** 
  64:Src/main.c    **** TIM_HandleTypeDef htim1;
  65:Src/main.c    **** 
  66:Src/main.c    **** UART_HandleTypeDef huart2;
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PV */
  69:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  70:Src/main.c    **** float32_t U_alpha=200, U_beta=0, Theta=0;
  71:Src/main.c    **** float32_t	T_halfsample = 0.00003125;
  72:Src/main.c    **** float32_t	counterfrequency = 64000000;
  73:Src/main.c    **** float32_t	sinevalue=0, cosinevalue=0;
  74:Src/main.c    **** float32_t	U_max = (1/_SQRT3)*_U_DC;
  75:Src/main.c    **** float32_t	Ia=0, Ib=0, Iq_real=0, Iq_ref=0, Ud=0, Uq=0;	// TO DO: Formula for Iq_ref and MAximum
  76:Src/main.c    **** 
  77:Src/main.c    **** uint16_t	*switchtime[3];
  78:Src/main.c    **** 
  79:Src/main.c    **** float32_t error_sum = 0;
  80:Src/main.c    **** 
  81:Src/main.c    **** /* USER CODE END PV */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  84:Src/main.c    **** void SystemClock_Config(void);
  85:Src/main.c    **** void Error_Handler(void);
ARM GAS  /tmp/cclaaHiH.s 			page 101


  86:Src/main.c    **** static void MX_GPIO_Init(void);
  87:Src/main.c    **** static void MX_USART2_UART_Init(void);
  88:Src/main.c    **** static void MX_TIM1_Init(void);
  89:Src/main.c    **** static void MX_ADC1_Init(void);
  90:Src/main.c    ****                                     
  91:Src/main.c    **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  92:Src/main.c    ****                                 
  93:Src/main.c    **** 
  94:Src/main.c    **** /* USER CODE BEGIN PFP */
  95:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  96:Src/main.c    **** float transform(float32_t current_a, float32_t current_b, float32_t theta);
  97:Src/main.c    **** float PI_control(float32_t ref, float32_t real);
  98:Src/main.c    **** void svpwm(void);
  99:Src/main.c    **** static void buffer_append_uint8(uint8_t* buffer, uint8_t number, int32_t *index);
 100:Src/main.c    **** /* USER CODE END PFP */
 101:Src/main.c    **** 
 102:Src/main.c    **** /* USER CODE BEGIN 0 */
 103:Src/main.c    **** 
 104:Src/main.c    **** /* USER CODE END 0 */
 105:Src/main.c    **** 
 106:Src/main.c    **** int main(void)
 107:Src/main.c    **** {
 333              		.loc 2 107 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337 0000 80B5     		push	{r7, lr}
 338              	.LCFI18:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 0002 00AF     		add	r7, sp, #0
 343              	.LCFI19:
 344              		.cfi_def_cfa_register 7
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* USER CODE BEGIN 1 */
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END 1 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Src/main.c    ****   HAL_Init();
 345              		.loc 2 116 0
 346 0004 FFF7FEFF 		bl	HAL_Init
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Configure the system clock */
 119:Src/main.c    ****   SystemClock_Config();
 347              		.loc 2 119 0
 348 0008 FFF7FEFF 		bl	SystemClock_Config
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* Initialize all configured peripherals */
 122:Src/main.c    ****   MX_GPIO_Init();
 349              		.loc 2 122 0
 350 000c FFF7FEFF 		bl	MX_GPIO_Init
 123:Src/main.c    ****   MX_USART2_UART_Init();
 351              		.loc 2 123 0
ARM GAS  /tmp/cclaaHiH.s 			page 102


 352 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 124:Src/main.c    ****   MX_TIM1_Init();
 353              		.loc 2 124 0
 354 0014 FFF7FEFF 		bl	MX_TIM1_Init
 125:Src/main.c    ****   MX_ADC1_Init();
 355              		.loc 2 125 0
 356 0018 FFF7FEFF 		bl	MX_ADC1_Init
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE BEGIN 2 */
 128:Src/main.c    ****    /* Start Timers*/
 129:Src/main.c    ****   if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1) != HAL_OK)
 357              		.loc 2 129 0
 358 001c 6A48     		ldr	r0, .L16+16
 359 001e 0021     		movs	r1, #0
 360 0020 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 361 0024 0346     		mov	r3, r0
 362 0026 002B     		cmp	r3, #0
 363 0028 01D0     		beq	.L7
 130:Src/main.c    ****   {
 131:Src/main.c    ****     /* PWM Generation Error */
 132:Src/main.c    ****     Error_Handler();
 364              		.loc 2 132 0
 365 002a FFF7FEFF 		bl	Error_Handler
 366              	.L7:
 133:Src/main.c    ****   }
 134:Src/main.c    ****     if (HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_1) != HAL_OK)
 367              		.loc 2 134 0
 368 002e 6648     		ldr	r0, .L16+16
 369 0030 0021     		movs	r1, #0
 370 0032 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 371 0036 0346     		mov	r3, r0
 372 0038 002B     		cmp	r3, #0
 373 003a 01D0     		beq	.L8
 135:Src/main.c    ****   {
 136:Src/main.c    ****     /* PWM Generation Error */
 137:Src/main.c    ****     Error_Handler();
 374              		.loc 2 137 0
 375 003c FFF7FEFF 		bl	Error_Handler
 376              	.L8:
 138:Src/main.c    ****   }
 139:Src/main.c    ****  
 140:Src/main.c    ****    if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2) != HAL_OK)
 377              		.loc 2 140 0
 378 0040 6148     		ldr	r0, .L16+16
 379 0042 0421     		movs	r1, #4
 380 0044 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 381 0048 0346     		mov	r3, r0
 382 004a 002B     		cmp	r3, #0
 383 004c 01D0     		beq	.L9
 141:Src/main.c    ****   {
 142:Src/main.c    ****     /* PWM Generation Error */
 143:Src/main.c    ****     Error_Handler();
 384              		.loc 2 143 0
 385 004e FFF7FEFF 		bl	Error_Handler
 386              	.L9:
 144:Src/main.c    ****   }
 145:Src/main.c    ****     if (HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_2) != HAL_OK)
ARM GAS  /tmp/cclaaHiH.s 			page 103


 387              		.loc 2 145 0
 388 0052 5D48     		ldr	r0, .L16+16
 389 0054 0421     		movs	r1, #4
 390 0056 FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 391 005a 0346     		mov	r3, r0
 392 005c 002B     		cmp	r3, #0
 393 005e 01D0     		beq	.L10
 146:Src/main.c    ****   {
 147:Src/main.c    ****     /* PWM Generation Error */
 148:Src/main.c    ****     Error_Handler();
 394              		.loc 2 148 0
 395 0060 FFF7FEFF 		bl	Error_Handler
 396              	.L10:
 149:Src/main.c    ****   }
 150:Src/main.c    ****   
 151:Src/main.c    ****  
 152:Src/main.c    ****    if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3) != HAL_OK)
 397              		.loc 2 152 0
 398 0064 5848     		ldr	r0, .L16+16
 399 0066 0821     		movs	r1, #8
 400 0068 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 401 006c 0346     		mov	r3, r0
 402 006e 002B     		cmp	r3, #0
 403 0070 01D0     		beq	.L11
 153:Src/main.c    ****   {
 154:Src/main.c    ****     /* PWM Generation Error */
 155:Src/main.c    ****     Error_Handler();
 404              		.loc 2 155 0
 405 0072 FFF7FEFF 		bl	Error_Handler
 406              	.L11:
 156:Src/main.c    ****   }
 157:Src/main.c    ****     if (HAL_TIMEx_PWMN_Start(&htim1, TIM_CHANNEL_3) != HAL_OK)
 407              		.loc 2 157 0
 408 0076 5448     		ldr	r0, .L16+16
 409 0078 0821     		movs	r1, #8
 410 007a FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 411 007e 0346     		mov	r3, r0
 412 0080 002B     		cmp	r3, #0
 413 0082 01D0     		beq	.L12
 158:Src/main.c    ****   {
 159:Src/main.c    ****     /* PWM Generation Error */
 160:Src/main.c    ****     Error_Handler();
 414              		.loc 2 160 0
 415 0084 FFF7FEFF 		bl	Error_Handler
 416              	.L12:
 161:Src/main.c    ****   }  
 162:Src/main.c    ****   /* USER CODE END 2 */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* Infinite loop */
 165:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 166:Src/main.c    ****   while (1)
 167:Src/main.c    ****   {
 168:Src/main.c    ****   /* USER CODE END WHILE */
 169:Src/main.c    **** 
 170:Src/main.c    ****   /* USER CODE BEGIN 3 */
 171:Src/main.c    **** 
 172:Src/main.c    ****   //////////////////////////////////////////////////////////////////////
ARM GAS  /tmp/cclaaHiH.s 			page 104


 173:Src/main.c    ****   // FOC Loop Test
 174:Src/main.c    ****   //////////////////////////////////////////////////////////////////////
 175:Src/main.c    ****   
 176:Src/main.c    ****   
 177:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);	// Debugging, watch Calculation Time
 417              		.loc 2 177 0
 418 0088 5048     		ldr	r0, .L16+20
 419 008a 4FF40051 		mov	r1, #8192
 420 008e 0122     		movs	r2, #1
 421 0090 FFF7FEFF 		bl	HAL_GPIO_WritePin
 178:Src/main.c    **** 
 179:Src/main.c    ****   /* Measure Ia and Ib and Theta */
 180:Src/main.c    **** 
 181:Src/main.c    ****   
 182:Src/main.c    ****   //Ia = (ADC_GetConversionValue(ADC1)/4095)*_MAX_CURRENT;
 183:Src/main.c    ****   //Ib = (ADC_GetConversionValue(ADC2)/4095)*_MAX_CURRENT;
 184:Src/main.c    ****   //blabla = ADC_GetConversionValue(ADC3);
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* Calculates sine and cosine for park transformation */
 187:Src/main.c    ****   arm_sin_cos_f32(Theta, &sinevalue, &cosinevalue);
 422              		.loc 2 187 0
 423 0094 4E4B     		ldr	r3, .L16+24
 424 0096 D3ED007A 		flds	s15, [r3]
 425 009a B0EE670A 		fcpys	s0, s15
 426 009e 4D48     		ldr	r0, .L16+28
 427 00a0 4D49     		ldr	r1, .L16+32
 428 00a2 FFF7FEFF 		bl	arm_sin_cos_f32
 188:Src/main.c    **** 
 189:Src/main.c    ****   /* Transform Ia and Ib in Iq */
 190:Src/main.c    ****   Iq_real = transform(Ia, Ib, Theta);
 429              		.loc 2 190 0
 430 00a6 4D4B     		ldr	r3, .L16+36
 431 00a8 D3ED006A 		flds	s13, [r3]
 432 00ac 4C4B     		ldr	r3, .L16+40
 433 00ae 93ED007A 		flds	s14, [r3]
 434 00b2 474B     		ldr	r3, .L16+24
 435 00b4 D3ED007A 		flds	s15, [r3]
 436 00b8 B0EE660A 		fcpys	s0, s13
 437 00bc F0EE470A 		fcpys	s1, s14
 438 00c0 B0EE671A 		fcpys	s2, s15
 439 00c4 FFF7FEFF 		bl	transform
 440 00c8 F0EE407A 		fcpys	s15, s0
 441 00cc 454B     		ldr	r3, .L16+44
 442 00ce C3ED007A 		fsts	s15, [r3]
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* Control Iq and return Uq */
 193:Src/main.c    ****   Uq = PI_control(Iq_ref, Iq_real);
 443              		.loc 2 193 0
 444 00d2 454B     		ldr	r3, .L16+48
 445 00d4 93ED007A 		flds	s14, [r3]
 446 00d8 424B     		ldr	r3, .L16+44
 447 00da D3ED007A 		flds	s15, [r3]
 448 00de B0EE470A 		fcpys	s0, s14
 449 00e2 F0EE670A 		fcpys	s1, s15
 450 00e6 FFF7FEFF 		bl	PI_control
 451 00ea F0EE407A 		fcpys	s15, s0
 452 00ee 3F4B     		ldr	r3, .L16+52
ARM GAS  /tmp/cclaaHiH.s 			page 105


 453 00f0 C3ED007A 		fsts	s15, [r3]
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* Transform Uq in U_alpha */
 196:Src/main.c    ****   arm_inv_park_f32(Ud, Uq, &U_alpha, &U_beta, sinevalue, cosinevalue);
 454              		.loc 2 196 0
 455 00f4 3E4B     		ldr	r3, .L16+56
 456 00f6 93ED006A 		flds	s12, [r3]
 457 00fa 3C4B     		ldr	r3, .L16+52
 458 00fc D3ED006A 		flds	s13, [r3]
 459 0100 344B     		ldr	r3, .L16+28
 460 0102 93ED007A 		flds	s14, [r3]
 461 0106 344B     		ldr	r3, .L16+32
 462 0108 D3ED007A 		flds	s15, [r3]
 463 010c B0EE460A 		fcpys	s0, s12
 464 0110 F0EE660A 		fcpys	s1, s13
 465 0114 3748     		ldr	r0, .L16+60
 466 0116 3849     		ldr	r1, .L16+64
 467 0118 B0EE471A 		fcpys	s2, s14
 468 011c F0EE671A 		fcpys	s3, s15
 469 0120 FFF7FEFF 		bl	arm_inv_park_f32
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* Calculate a new pulse width */
 199:Src/main.c    ****   svpwm();
 470              		.loc 2 199 0
 471 0124 FFF7FEFF 		bl	svpwm
 200:Src/main.c    **** 
 201:Src/main.c    ****   TIM1->CCR1 = *switchtime[0];
 472              		.loc 2 201 0
 473 0128 344A     		ldr	r2, .L16+68
 474 012a 354B     		ldr	r3, .L16+72
 475 012c 1B68     		ldr	r3, [r3]
 476 012e 1B88     		ldrh	r3, [r3]
 477 0130 5363     		str	r3, [r2, #52]
 202:Src/main.c    ****   TIM1->CCR2 = *switchtime[1];
 478              		.loc 2 202 0
 479 0132 324A     		ldr	r2, .L16+68
 480 0134 324B     		ldr	r3, .L16+72
 481 0136 5B68     		ldr	r3, [r3, #4]
 482 0138 1B88     		ldrh	r3, [r3]
 483 013a 9363     		str	r3, [r2, #56]
 203:Src/main.c    ****   TIM1->CCR3 = *switchtime[2];
 484              		.loc 2 203 0
 485 013c 2F4A     		ldr	r2, .L16+68
 486 013e 304B     		ldr	r3, .L16+72
 487 0140 9B68     		ldr	r3, [r3, #8]
 488 0142 1B88     		ldrh	r3, [r3]
 489 0144 D363     		str	r3, [r2, #60]
 204:Src/main.c    **** 
 205:Src/main.c    ****   //UPDATE Angle
 206:Src/main.c    ****   Theta += 0.019; //0.019 = (180 * 0.019/PI) = ~1.088 deg steps
 490              		.loc 2 206 0
 491 0146 224B     		ldr	r3, .L16+24
 492 0148 1B68     		ldr	r3, [r3]	@ float
 493 014a 1846     		mov	r0, r3	@ float
 494 014c FFF7FEFF 		bl	__aeabi_f2d
 495 0150 0246     		mov	r2, r0
 496 0152 0B46     		mov	r3, r1
ARM GAS  /tmp/cclaaHiH.s 			page 106


 497 0154 1046     		mov	r0, r2
 498 0156 1946     		mov	r1, r3
 499 0158 17A3     		adr	r3, .L16
 500 015a D3E90023 		ldrd	r2, [r3]
 501 015e FFF7FEFF 		bl	__aeabi_dadd
 502 0162 0246     		mov	r2, r0
 503 0164 0B46     		mov	r3, r1
 504 0166 1046     		mov	r0, r2
 505 0168 1946     		mov	r1, r3
 506 016a FFF7FEFF 		bl	__aeabi_d2f
 507 016e 0246     		mov	r2, r0	@ float
 508 0170 174B     		ldr	r3, .L16+24
 509 0172 1A60     		str	r2, [r3]	@ float
 207:Src/main.c    ****   if (Theta >= (2*M_PI))
 510              		.loc 2 207 0
 511 0174 164B     		ldr	r3, .L16+24
 512 0176 1B68     		ldr	r3, [r3]	@ float
 513 0178 1846     		mov	r0, r3	@ float
 514 017a FFF7FEFF 		bl	__aeabi_f2d
 515 017e 0246     		mov	r2, r0
 516 0180 0B46     		mov	r3, r1
 517 0182 1046     		mov	r0, r2
 518 0184 1946     		mov	r1, r3
 519 0186 0EA3     		adr	r3, .L16+8
 520 0188 D3E90023 		ldrd	r2, [r3]
 521 018c FFF7FEFF 		bl	__aeabi_dcmpge
 522 0190 0346     		mov	r3, r0
 523 0192 002B     		cmp	r3, #0
 524 0194 03D0     		beq	.L13
 208:Src/main.c    ****   Theta = 0;
 525              		.loc 2 208 0
 526 0196 0E4B     		ldr	r3, .L16+24
 527 0198 4FF00002 		mov	r2, #0
 528 019c 1A60     		str	r2, [r3]	@ float
 529              	.L13:
 209:Src/main.c    **** 
 210:Src/main.c    **** 
 211:Src/main.c    ****   /* Clear Interrupt Flag */
 212:Src/main.c    ****   //TIM_ClearITPendingBit(TIM2, TIM_IT_Update);
 213:Src/main.c    **** 
 214:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);	// Debugging, watch Calculation Time
 530              		.loc 2 214 0
 531 019e 0B48     		ldr	r0, .L16+20
 532 01a0 4FF40051 		mov	r1, #8192
 533 01a4 0022     		movs	r2, #0
 534 01a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 215:Src/main.c    **** 
 216:Src/main.c    ****   HAL_Delay(1);
 535              		.loc 2 216 0
 536 01aa 0120     		movs	r0, #1
 537 01ac FFF7FEFF 		bl	HAL_Delay
 217:Src/main.c    ****   }
 538              		.loc 2 217 0
 539 01b0 6AE7     		b	.L12
 540              	.L17:
 541 01b2 00BFAFF3 		.align	3
 541      0080
ARM GAS  /tmp/cclaaHiH.s 			page 107


 542              	.L16:
 543 01b8 DBF97E6A 		.word	1786706395
 544 01bc BC74933F 		.word	1066628284
 545 01c0 182D4454 		.word	1413754136
 546 01c4 FB211940 		.word	1075388923
 547 01c8 00000000 		.word	htim1
 548 01cc 00040048 		.word	1207960576
 549 01d0 00000000 		.word	Theta
 550 01d4 00000000 		.word	sinevalue
 551 01d8 00000000 		.word	cosinevalue
 552 01dc 00000000 		.word	Ia
 553 01e0 00000000 		.word	Ib
 554 01e4 00000000 		.word	Iq_real
 555 01e8 00000000 		.word	Iq_ref
 556 01ec 00000000 		.word	Uq
 557 01f0 00000000 		.word	Ud
 558 01f4 00000000 		.word	U_alpha
 559 01f8 00000000 		.word	U_beta
 560 01fc 002C0140 		.word	1073818624
 561 0200 00000000 		.word	switchtime
 562              		.cfi_endproc
 563              	.LFE156:
 565              		.section	.text.SystemClock_Config,"ax",%progbits
 566              		.align	2
 567              		.global	SystemClock_Config
 568              		.thumb
 569              		.thumb_func
 571              	SystemClock_Config:
 572              	.LFB157:
 218:Src/main.c    ****   /* USER CODE END 3 */
 219:Src/main.c    **** 
 220:Src/main.c    **** }
 221:Src/main.c    **** 
 222:Src/main.c    **** /** System Clock Configuration
 223:Src/main.c    **** */
 224:Src/main.c    **** void SystemClock_Config(void)
 225:Src/main.c    **** {
 573              		.loc 2 225 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 112
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577 0000 80B5     		push	{r7, lr}
 578              	.LCFI20:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 9CB0     		sub	sp, sp, #112
 583              	.LCFI21:
 584              		.cfi_def_cfa_offset 120
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI22:
 587              		.cfi_def_cfa_register 7
 226:Src/main.c    **** 
 227:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 228:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 229:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 230:Src/main.c    **** 
ARM GAS  /tmp/cclaaHiH.s 			page 108


 231:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 232:Src/main.c    ****     */
 233:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 588              		.loc 2 233 0
 589 0006 0223     		movs	r3, #2
 590 0008 BB64     		str	r3, [r7, #72]
 234:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 591              		.loc 2 234 0
 592 000a 0123     		movs	r3, #1
 593 000c BB65     		str	r3, [r7, #88]
 235:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 594              		.loc 2 235 0
 595 000e 1023     		movs	r3, #16
 596 0010 FB65     		str	r3, [r7, #92]
 236:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 597              		.loc 2 236 0
 598 0012 0223     		movs	r3, #2
 599 0014 7B66     		str	r3, [r7, #100]
 237:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 600              		.loc 2 237 0
 601 0016 0023     		movs	r3, #0
 602 0018 BB66     		str	r3, [r7, #104]
 238:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 603              		.loc 2 238 0
 604 001a 4FF46013 		mov	r3, #3670016
 605 001e FB66     		str	r3, [r7, #108]
 239:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 606              		.loc 2 239 0
 607 0020 07F14803 		add	r3, r7, #72
 608 0024 1846     		mov	r0, r3
 609 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 610 002a 0346     		mov	r3, r0
 611 002c 002B     		cmp	r3, #0
 612 002e 01D0     		beq	.L19
 240:Src/main.c    ****   {
 241:Src/main.c    ****     Error_Handler();
 613              		.loc 2 241 0
 614 0030 FFF7FEFF 		bl	Error_Handler
 615              	.L19:
 242:Src/main.c    ****   }
 243:Src/main.c    **** 
 244:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 245:Src/main.c    ****     */
 246:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 616              		.loc 2 246 0
 617 0034 0F23     		movs	r3, #15
 618 0036 7B63     		str	r3, [r7, #52]
 247:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 248:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 619              		.loc 2 248 0
 620 0038 0223     		movs	r3, #2
 621 003a BB63     		str	r3, [r7, #56]
 249:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 622              		.loc 2 249 0
 623 003c 0023     		movs	r3, #0
 624 003e FB63     		str	r3, [r7, #60]
 250:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  /tmp/cclaaHiH.s 			page 109


 625              		.loc 2 250 0
 626 0040 4FF48063 		mov	r3, #1024
 627 0044 3B64     		str	r3, [r7, #64]
 251:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 628              		.loc 2 251 0
 629 0046 0023     		movs	r3, #0
 630 0048 7B64     		str	r3, [r7, #68]
 252:Src/main.c    **** 
 253:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 631              		.loc 2 253 0
 632 004a 07F13403 		add	r3, r7, #52
 633 004e 1846     		mov	r0, r3
 634 0050 0221     		movs	r1, #2
 635 0052 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 636 0056 0346     		mov	r3, r0
 637 0058 002B     		cmp	r3, #0
 638 005a 01D0     		beq	.L20
 254:Src/main.c    ****   {
 255:Src/main.c    ****     Error_Handler();
 639              		.loc 2 255 0
 640 005c FFF7FEFF 		bl	Error_Handler
 641              	.L20:
 256:Src/main.c    ****   }
 257:Src/main.c    **** 
 258:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_TIM1|RCC_PERIPHCLK_ADC1;
 642              		.loc 2 258 0
 643 0060 4FF48453 		mov	r3, #4224
 644 0064 3B60     		str	r3, [r7]
 259:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 645              		.loc 2 259 0
 646 0066 0023     		movs	r3, #0
 647 0068 3B62     		str	r3, [r7, #32]
 260:Src/main.c    ****   PeriphClkInit.Adc1ClockSelection = RCC_ADC1PLLCLK_DIV1;
 648              		.loc 2 260 0
 649 006a 4FF48073 		mov	r3, #256
 650 006e BB61     		str	r3, [r7, #24]
 261:Src/main.c    **** 
 262:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 651              		.loc 2 262 0
 652 0070 3B46     		mov	r3, r7
 653 0072 1846     		mov	r0, r3
 654 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 655 0078 0346     		mov	r3, r0
 656 007a 002B     		cmp	r3, #0
 657 007c 01D0     		beq	.L21
 263:Src/main.c    ****   {
 264:Src/main.c    ****     Error_Handler();
 658              		.loc 2 264 0
 659 007e FFF7FEFF 		bl	Error_Handler
 660              	.L21:
 265:Src/main.c    ****   }
 266:Src/main.c    **** 
 267:Src/main.c    ****     /**Configure the Systick interrupt time 
 268:Src/main.c    ****     */
 269:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 661              		.loc 2 269 0
 662 0082 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
ARM GAS  /tmp/cclaaHiH.s 			page 110


 663 0086 0246     		mov	r2, r0
 664 0088 094B     		ldr	r3, .L22
 665 008a A3FB0223 		umull	r2, r3, r3, r2
 666 008e 9B09     		lsrs	r3, r3, #6
 667 0090 1846     		mov	r0, r3
 668 0092 FFF7FEFF 		bl	HAL_SYSTICK_Config
 270:Src/main.c    **** 
 271:Src/main.c    ****     /**Configure the Systick 
 272:Src/main.c    ****     */
 273:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 669              		.loc 2 273 0
 670 0096 0420     		movs	r0, #4
 671 0098 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 274:Src/main.c    **** 
 275:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 276:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 672              		.loc 2 276 0
 673 009c 4FF0FF30 		mov	r0, #-1
 674 00a0 0021     		movs	r1, #0
 675 00a2 0022     		movs	r2, #0
 676 00a4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 277:Src/main.c    **** }
 677              		.loc 2 277 0
 678 00a8 7037     		adds	r7, r7, #112
 679              	.LCFI23:
 680              		.cfi_def_cfa_offset 8
 681 00aa BD46     		mov	sp, r7
 682              	.LCFI24:
 683              		.cfi_def_cfa_register 13
 684              		@ sp needed
 685 00ac 80BD     		pop	{r7, pc}
 686              	.L23:
 687 00ae 00BF     		.align	2
 688              	.L22:
 689 00b0 D34D6210 		.word	274877907
 690              		.cfi_endproc
 691              	.LFE157:
 693              		.section	.text.MX_ADC1_Init,"ax",%progbits
 694              		.align	2
 695              		.thumb
 696              		.thumb_func
 698              	MX_ADC1_Init:
 699              	.LFB158:
 278:Src/main.c    **** 
 279:Src/main.c    **** /* ADC1 init function */
 280:Src/main.c    **** static void MX_ADC1_Init(void)
 281:Src/main.c    **** {
 700              		.loc 2 281 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 24
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              	.LCFI25:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/cclaaHiH.s 			page 111


 710              	.LCFI26:
 711              		.cfi_def_cfa_offset 32
 712 0004 00AF     		add	r7, sp, #0
 713              	.LCFI27:
 714              		.cfi_def_cfa_register 7
 282:Src/main.c    **** 
 283:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig;
 284:Src/main.c    **** 
 285:Src/main.c    ****     /**Common config 
 286:Src/main.c    ****     */
 287:Src/main.c    ****   hadc1.Instance = ADC1;
 715              		.loc 2 287 0
 716 0006 264B     		ldr	r3, .L27
 717 0008 4FF0A042 		mov	r2, #1342177280
 718 000c 1A60     		str	r2, [r3]
 288:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 719              		.loc 2 288 0
 720 000e 244B     		ldr	r3, .L27
 721 0010 0022     		movs	r2, #0
 722 0012 5A60     		str	r2, [r3, #4]
 289:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 723              		.loc 2 289 0
 724 0014 224B     		ldr	r3, .L27
 725 0016 0022     		movs	r2, #0
 726 0018 9A60     		str	r2, [r3, #8]
 290:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 727              		.loc 2 290 0
 728 001a 214B     		ldr	r3, .L27
 729 001c 0022     		movs	r2, #0
 730 001e 1A61     		str	r2, [r3, #16]
 291:Src/main.c    ****   hadc1.Init.ContinuousConvMode = ENABLE;
 731              		.loc 2 291 0
 732 0020 1F4B     		ldr	r3, .L27
 733 0022 0122     		movs	r2, #1
 734 0024 DA61     		str	r2, [r3, #28]
 292:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 735              		.loc 2 292 0
 736 0026 1E4B     		ldr	r3, .L27
 737 0028 0022     		movs	r2, #0
 738 002a 5A62     		str	r2, [r3, #36]
 293:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 739              		.loc 2 293 0
 740 002c 1C4B     		ldr	r3, .L27
 741 002e 0022     		movs	r2, #0
 742 0030 1A63     		str	r2, [r3, #48]
 294:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 743              		.loc 2 294 0
 744 0032 1B4B     		ldr	r3, .L27
 745 0034 0122     		movs	r2, #1
 746 0036 DA62     		str	r2, [r3, #44]
 295:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 747              		.loc 2 295 0
 748 0038 194B     		ldr	r3, .L27
 749 003a 0022     		movs	r2, #0
 750 003c DA60     		str	r2, [r3, #12]
 296:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 751              		.loc 2 296 0
ARM GAS  /tmp/cclaaHiH.s 			page 112


 752 003e 184B     		ldr	r3, .L27
 753 0040 0122     		movs	r2, #1
 754 0042 1A62     		str	r2, [r3, #32]
 297:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 755              		.loc 2 297 0
 756 0044 164B     		ldr	r3, .L27
 757 0046 0022     		movs	r2, #0
 758 0048 5A63     		str	r2, [r3, #52]
 298:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 759              		.loc 2 298 0
 760 004a 154B     		ldr	r3, .L27
 761 004c 0422     		movs	r2, #4
 762 004e 5A61     		str	r2, [r3, #20]
 299:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 763              		.loc 2 299 0
 764 0050 134B     		ldr	r3, .L27
 765 0052 0022     		movs	r2, #0
 766 0054 9A61     		str	r2, [r3, #24]
 300:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
 767              		.loc 2 300 0
 768 0056 124B     		ldr	r3, .L27
 769 0058 0022     		movs	r2, #0
 770 005a 9A63     		str	r2, [r3, #56]
 301:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 771              		.loc 2 301 0
 772 005c 1048     		ldr	r0, .L27
 773 005e FFF7FEFF 		bl	HAL_ADC_Init
 774 0062 0346     		mov	r3, r0
 775 0064 002B     		cmp	r3, #0
 776 0066 01D0     		beq	.L25
 302:Src/main.c    ****   {
 303:Src/main.c    ****     Error_Handler();
 777              		.loc 2 303 0
 778 0068 FFF7FEFF 		bl	Error_Handler
 779              	.L25:
 304:Src/main.c    ****   }
 305:Src/main.c    **** 
 306:Src/main.c    ****     /**Configure Regular Channel 
 307:Src/main.c    ****     */
 308:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 780              		.loc 2 308 0
 781 006c 0123     		movs	r3, #1
 782 006e 3B60     		str	r3, [r7]
 309:Src/main.c    ****   sConfig.Rank = 1;
 783              		.loc 2 309 0
 784 0070 0123     		movs	r3, #1
 785 0072 7B60     		str	r3, [r7, #4]
 310:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 786              		.loc 2 310 0
 787 0074 0023     		movs	r3, #0
 788 0076 FB60     		str	r3, [r7, #12]
 311:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 789              		.loc 2 311 0
 790 0078 0023     		movs	r3, #0
 791 007a BB60     		str	r3, [r7, #8]
 312:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 792              		.loc 2 312 0
ARM GAS  /tmp/cclaaHiH.s 			page 113


 793 007c 0023     		movs	r3, #0
 794 007e 3B61     		str	r3, [r7, #16]
 313:Src/main.c    ****   sConfig.Offset = 0;
 795              		.loc 2 313 0
 796 0080 0023     		movs	r3, #0
 797 0082 7B61     		str	r3, [r7, #20]
 314:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 798              		.loc 2 314 0
 799 0084 3B46     		mov	r3, r7
 800 0086 0648     		ldr	r0, .L27
 801 0088 1946     		mov	r1, r3
 802 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 803 008e 0346     		mov	r3, r0
 804 0090 002B     		cmp	r3, #0
 805 0092 01D0     		beq	.L24
 315:Src/main.c    ****   {
 316:Src/main.c    ****     Error_Handler();
 806              		.loc 2 316 0
 807 0094 FFF7FEFF 		bl	Error_Handler
 808              	.L24:
 317:Src/main.c    ****   }
 318:Src/main.c    **** 
 319:Src/main.c    **** }
 809              		.loc 2 319 0
 810 0098 1837     		adds	r7, r7, #24
 811              	.LCFI28:
 812              		.cfi_def_cfa_offset 8
 813 009a BD46     		mov	sp, r7
 814              	.LCFI29:
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 009c 80BD     		pop	{r7, pc}
 818              	.L28:
 819 009e 00BF     		.align	2
 820              	.L27:
 821 00a0 00000000 		.word	hadc1
 822              		.cfi_endproc
 823              	.LFE158:
 825              		.section	.text.MX_TIM1_Init,"ax",%progbits
 826              		.align	2
 827              		.thumb
 828              		.thumb_func
 830              	MX_TIM1_Init:
 831              	.LFB159:
 320:Src/main.c    **** 
 321:Src/main.c    **** /* TIM1 init function */
 322:Src/main.c    **** static void MX_TIM1_Init(void)
 323:Src/main.c    **** {
 832              		.loc 2 323 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 104
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836 0000 80B5     		push	{r7, lr}
 837              	.LCFI30:
 838              		.cfi_def_cfa_offset 8
 839              		.cfi_offset 7, -8
 840              		.cfi_offset 14, -4
ARM GAS  /tmp/cclaaHiH.s 			page 114


 841 0002 9AB0     		sub	sp, sp, #104
 842              	.LCFI31:
 843              		.cfi_def_cfa_offset 112
 844 0004 00AF     		add	r7, sp, #0
 845              	.LCFI32:
 846              		.cfi_def_cfa_register 7
 324:Src/main.c    **** 
 325:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 326:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 327:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC;
 328:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 329:Src/main.c    **** 
 330:Src/main.c    ****   htim1.Instance = TIM1;
 847              		.loc 2 330 0
 848 0006 554B     		ldr	r3, .L38
 849 0008 554A     		ldr	r2, .L38+4
 850 000a 1A60     		str	r2, [r3]
 331:Src/main.c    ****   htim1.Init.Prescaler = 0;
 851              		.loc 2 331 0
 852 000c 534B     		ldr	r3, .L38
 853 000e 0022     		movs	r2, #0
 854 0010 5A60     		str	r2, [r3, #4]
 332:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
 855              		.loc 2 332 0
 856 0012 524B     		ldr	r3, .L38
 857 0014 2022     		movs	r2, #32
 858 0016 9A60     		str	r2, [r3, #8]
 333:Src/main.c    ****   htim1.Init.Period = 3200;
 859              		.loc 2 333 0
 860 0018 504B     		ldr	r3, .L38
 861 001a 4FF44862 		mov	r2, #3200
 862 001e DA60     		str	r2, [r3, #12]
 334:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 863              		.loc 2 334 0
 864 0020 4E4B     		ldr	r3, .L38
 865 0022 0022     		movs	r2, #0
 866 0024 1A61     		str	r2, [r3, #16]
 335:Src/main.c    ****   htim1.Init.RepetitionCounter = 0;
 867              		.loc 2 335 0
 868 0026 4D4B     		ldr	r3, .L38
 869 0028 0022     		movs	r2, #0
 870 002a 5A61     		str	r2, [r3, #20]
 336:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 871              		.loc 2 336 0
 872 002c 4B4B     		ldr	r3, .L38
 873 002e 8022     		movs	r2, #128
 874 0030 9A61     		str	r2, [r3, #24]
 337:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 875              		.loc 2 337 0
 876 0032 4A48     		ldr	r0, .L38
 877 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 878 0038 0346     		mov	r3, r0
 879 003a 002B     		cmp	r3, #0
 880 003c 01D0     		beq	.L30
 338:Src/main.c    ****   {
 339:Src/main.c    ****     Error_Handler();
 881              		.loc 2 339 0
ARM GAS  /tmp/cclaaHiH.s 			page 115


 882 003e FFF7FEFF 		bl	Error_Handler
 883              	.L30:
 340:Src/main.c    ****   }
 341:Src/main.c    **** 
 342:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 884              		.loc 2 342 0
 885 0042 4FF48053 		mov	r3, #4096
 886 0046 BB65     		str	r3, [r7, #88]
 343:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 887              		.loc 2 343 0
 888 0048 07F15803 		add	r3, r7, #88
 889 004c 4348     		ldr	r0, .L38
 890 004e 1946     		mov	r1, r3
 891 0050 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 892 0054 0346     		mov	r3, r0
 893 0056 002B     		cmp	r3, #0
 894 0058 01D0     		beq	.L31
 344:Src/main.c    ****   {
 345:Src/main.c    ****     Error_Handler();
 895              		.loc 2 345 0
 896 005a FFF7FEFF 		bl	Error_Handler
 897              	.L31:
 346:Src/main.c    ****   }
 347:Src/main.c    **** 
 348:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 898              		.loc 2 348 0
 899 005e 3F48     		ldr	r0, .L38
 900 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 901 0064 0346     		mov	r3, r0
 902 0066 002B     		cmp	r3, #0
 903 0068 01D0     		beq	.L32
 349:Src/main.c    ****   {
 350:Src/main.c    ****     Error_Handler();
 904              		.loc 2 350 0
 905 006a FFF7FEFF 		bl	Error_Handler
 906              	.L32:
 351:Src/main.c    ****   }
 352:Src/main.c    **** 
 353:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 907              		.loc 2 353 0
 908 006e 0023     		movs	r3, #0
 909 0070 FB64     		str	r3, [r7, #76]
 354:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 910              		.loc 2 354 0
 911 0072 0023     		movs	r3, #0
 912 0074 3B65     		str	r3, [r7, #80]
 355:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 913              		.loc 2 355 0
 914 0076 0023     		movs	r3, #0
 915 0078 7B65     		str	r3, [r7, #84]
 356:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 916              		.loc 2 356 0
 917 007a 07F14C03 		add	r3, r7, #76
 918 007e 3748     		ldr	r0, .L38
 919 0080 1946     		mov	r1, r3
 920 0082 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 921 0086 0346     		mov	r3, r0
ARM GAS  /tmp/cclaaHiH.s 			page 116


 922 0088 002B     		cmp	r3, #0
 923 008a 01D0     		beq	.L33
 357:Src/main.c    ****   {
 358:Src/main.c    ****     Error_Handler();
 924              		.loc 2 358 0
 925 008c FFF7FEFF 		bl	Error_Handler
 926              	.L33:
 359:Src/main.c    ****   }
 360:Src/main.c    **** 
 361:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 927              		.loc 2 361 0
 928 0090 6023     		movs	r3, #96
 929 0092 3B63     		str	r3, [r7, #48]
 362:Src/main.c    ****   sConfigOC.Pulse = 2000;
 930              		.loc 2 362 0
 931 0094 4FF4FA63 		mov	r3, #2000
 932 0098 7B63     		str	r3, [r7, #52]
 363:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 933              		.loc 2 363 0
 934 009a 0023     		movs	r3, #0
 935 009c BB63     		str	r3, [r7, #56]
 364:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 936              		.loc 2 364 0
 937 009e 0023     		movs	r3, #0
 938 00a0 FB63     		str	r3, [r7, #60]
 365:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 939              		.loc 2 365 0
 940 00a2 0423     		movs	r3, #4
 941 00a4 3B64     		str	r3, [r7, #64]
 366:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_SET;
 942              		.loc 2 366 0
 943 00a6 4FF48073 		mov	r3, #256
 944 00aa 7B64     		str	r3, [r7, #68]
 367:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 945              		.loc 2 367 0
 946 00ac 4FF40073 		mov	r3, #512
 947 00b0 BB64     		str	r3, [r7, #72]
 368:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 948              		.loc 2 368 0
 949 00b2 07F13003 		add	r3, r7, #48
 950 00b6 2948     		ldr	r0, .L38
 951 00b8 1946     		mov	r1, r3
 952 00ba 0022     		movs	r2, #0
 953 00bc FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 954 00c0 0346     		mov	r3, r0
 955 00c2 002B     		cmp	r3, #0
 956 00c4 01D0     		beq	.L34
 369:Src/main.c    ****   {
 370:Src/main.c    ****     Error_Handler();
 957              		.loc 2 370 0
 958 00c6 FFF7FEFF 		bl	Error_Handler
 959              	.L34:
 371:Src/main.c    ****   }
 372:Src/main.c    **** 
 373:Src/main.c    ****   sConfigOC.Pulse = 1500;
 960              		.loc 2 373 0
 961 00ca 40F2DC53 		movw	r3, #1500
ARM GAS  /tmp/cclaaHiH.s 			page 117


 962 00ce 7B63     		str	r3, [r7, #52]
 374:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 963              		.loc 2 374 0
 964 00d0 0023     		movs	r3, #0
 965 00d2 3B64     		str	r3, [r7, #64]
 375:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 966              		.loc 2 375 0
 967 00d4 07F13003 		add	r3, r7, #48
 968 00d8 2048     		ldr	r0, .L38
 969 00da 1946     		mov	r1, r3
 970 00dc 0422     		movs	r2, #4
 971 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 972 00e2 0346     		mov	r3, r0
 973 00e4 002B     		cmp	r3, #0
 974 00e6 01D0     		beq	.L35
 376:Src/main.c    ****   {
 377:Src/main.c    ****     Error_Handler();
 975              		.loc 2 377 0
 976 00e8 FFF7FEFF 		bl	Error_Handler
 977              	.L35:
 378:Src/main.c    ****   }
 379:Src/main.c    **** 
 380:Src/main.c    ****   sConfigOC.Pulse = 400;
 978              		.loc 2 380 0
 979 00ec 4FF4C873 		mov	r3, #400
 980 00f0 7B63     		str	r3, [r7, #52]
 381:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 981              		.loc 2 381 0
 982 00f2 07F13003 		add	r3, r7, #48
 983 00f6 1948     		ldr	r0, .L38
 984 00f8 1946     		mov	r1, r3
 985 00fa 0822     		movs	r2, #8
 986 00fc FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 987 0100 0346     		mov	r3, r0
 988 0102 002B     		cmp	r3, #0
 989 0104 01D0     		beq	.L36
 382:Src/main.c    ****   {
 383:Src/main.c    ****     Error_Handler();
 990              		.loc 2 383 0
 991 0106 FFF7FEFF 		bl	Error_Handler
 992              	.L36:
 384:Src/main.c    ****   }
 385:Src/main.c    **** 
 386:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 993              		.loc 2 386 0
 994 010a 0023     		movs	r3, #0
 995 010c 7B60     		str	r3, [r7, #4]
 387:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 996              		.loc 2 387 0
 997 010e 0023     		movs	r3, #0
 998 0110 BB60     		str	r3, [r7, #8]
 388:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 999              		.loc 2 388 0
 1000 0112 0023     		movs	r3, #0
 1001 0114 FB60     		str	r3, [r7, #12]
 389:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = 10;
 1002              		.loc 2 389 0
ARM GAS  /tmp/cclaaHiH.s 			page 118


 1003 0116 0A23     		movs	r3, #10
 1004 0118 3B61     		str	r3, [r7, #16]
 390:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1005              		.loc 2 390 0
 1006 011a 0023     		movs	r3, #0
 1007 011c 7B61     		str	r3, [r7, #20]
 391:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1008              		.loc 2 391 0
 1009 011e 4FF40053 		mov	r3, #8192
 1010 0122 BB61     		str	r3, [r7, #24]
 392:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1011              		.loc 2 392 0
 1012 0124 0023     		movs	r3, #0
 1013 0126 FB61     		str	r3, [r7, #28]
 393:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1014              		.loc 2 393 0
 1015 0128 0023     		movs	r3, #0
 1016 012a 3B62     		str	r3, [r7, #32]
 394:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1017              		.loc 2 394 0
 1018 012c 4FF00073 		mov	r3, #33554432
 1019 0130 7B62     		str	r3, [r7, #36]
 395:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1020              		.loc 2 395 0
 1021 0132 0023     		movs	r3, #0
 1022 0134 BB62     		str	r3, [r7, #40]
 396:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1023              		.loc 2 396 0
 1024 0136 0023     		movs	r3, #0
 1025 0138 FB62     		str	r3, [r7, #44]
 397:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1026              		.loc 2 397 0
 1027 013a 3B1D     		adds	r3, r7, #4
 1028 013c 0748     		ldr	r0, .L38
 1029 013e 1946     		mov	r1, r3
 1030 0140 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1031 0144 0346     		mov	r3, r0
 1032 0146 002B     		cmp	r3, #0
 1033 0148 01D0     		beq	.L37
 398:Src/main.c    ****   {
 399:Src/main.c    ****     Error_Handler();
 1034              		.loc 2 399 0
 1035 014a FFF7FEFF 		bl	Error_Handler
 1036              	.L37:
 400:Src/main.c    ****   }
 401:Src/main.c    **** 
 402:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 1037              		.loc 2 402 0
 1038 014e 0348     		ldr	r0, .L38
 1039 0150 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 403:Src/main.c    **** 
 404:Src/main.c    **** }
 1040              		.loc 2 404 0
 1041 0154 6837     		adds	r7, r7, #104
 1042              	.LCFI33:
 1043              		.cfi_def_cfa_offset 8
 1044 0156 BD46     		mov	sp, r7
ARM GAS  /tmp/cclaaHiH.s 			page 119


 1045              	.LCFI34:
 1046              		.cfi_def_cfa_register 13
 1047              		@ sp needed
 1048 0158 80BD     		pop	{r7, pc}
 1049              	.L39:
 1050 015a 00BF     		.align	2
 1051              	.L38:
 1052 015c 00000000 		.word	htim1
 1053 0160 002C0140 		.word	1073818624
 1054              		.cfi_endproc
 1055              	.LFE159:
 1057              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1058              		.align	2
 1059              		.thumb
 1060              		.thumb_func
 1062              	MX_USART2_UART_Init:
 1063              	.LFB160:
 405:Src/main.c    **** 
 406:Src/main.c    **** /* USART2 init function */
 407:Src/main.c    **** static void MX_USART2_UART_Init(void)
 408:Src/main.c    **** {
 1064              		.loc 2 408 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 0
 1067              		@ frame_needed = 1, uses_anonymous_args = 0
 1068 0000 80B5     		push	{r7, lr}
 1069              	.LCFI35:
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 00AF     		add	r7, sp, #0
 1074              	.LCFI36:
 1075              		.cfi_def_cfa_register 7
 409:Src/main.c    **** 
 410:Src/main.c    ****   huart2.Instance = USART2;
 1076              		.loc 2 410 0
 1077 0004 134B     		ldr	r3, .L42
 1078 0006 144A     		ldr	r2, .L42+4
 1079 0008 1A60     		str	r2, [r3]
 411:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 1080              		.loc 2 411 0
 1081 000a 124B     		ldr	r3, .L42
 1082 000c 4FF4E132 		mov	r2, #115200
 1083 0010 5A60     		str	r2, [r3, #4]
 412:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1084              		.loc 2 412 0
 1085 0012 104B     		ldr	r3, .L42
 1086 0014 0022     		movs	r2, #0
 1087 0016 9A60     		str	r2, [r3, #8]
 413:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1088              		.loc 2 413 0
 1089 0018 0E4B     		ldr	r3, .L42
 1090 001a 0022     		movs	r2, #0
 1091 001c DA60     		str	r2, [r3, #12]
 414:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 1092              		.loc 2 414 0
 1093 001e 0D4B     		ldr	r3, .L42
ARM GAS  /tmp/cclaaHiH.s 			page 120


 1094 0020 0022     		movs	r2, #0
 1095 0022 1A61     		str	r2, [r3, #16]
 415:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1096              		.loc 2 415 0
 1097 0024 0B4B     		ldr	r3, .L42
 1098 0026 0C22     		movs	r2, #12
 1099 0028 5A61     		str	r2, [r3, #20]
 416:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1100              		.loc 2 416 0
 1101 002a 0A4B     		ldr	r3, .L42
 1102 002c 0022     		movs	r2, #0
 1103 002e 9A61     		str	r2, [r3, #24]
 417:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1104              		.loc 2 417 0
 1105 0030 084B     		ldr	r3, .L42
 1106 0032 0022     		movs	r2, #0
 1107 0034 DA61     		str	r2, [r3, #28]
 418:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1108              		.loc 2 418 0
 1109 0036 074B     		ldr	r3, .L42
 1110 0038 0022     		movs	r2, #0
 1111 003a 1A62     		str	r2, [r3, #32]
 419:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1112              		.loc 2 419 0
 1113 003c 054B     		ldr	r3, .L42
 1114 003e 0022     		movs	r2, #0
 1115 0040 5A62     		str	r2, [r3, #36]
 420:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1116              		.loc 2 420 0
 1117 0042 0448     		ldr	r0, .L42
 1118 0044 FFF7FEFF 		bl	HAL_UART_Init
 1119 0048 0346     		mov	r3, r0
 1120 004a 002B     		cmp	r3, #0
 1121 004c 01D0     		beq	.L40
 421:Src/main.c    ****   {
 422:Src/main.c    ****     Error_Handler();
 1122              		.loc 2 422 0
 1123 004e FFF7FEFF 		bl	Error_Handler
 1124              	.L40:
 423:Src/main.c    ****   }
 424:Src/main.c    **** 
 425:Src/main.c    **** }
 1125              		.loc 2 425 0
 1126 0052 80BD     		pop	{r7, pc}
 1127              	.L43:
 1128              		.align	2
 1129              	.L42:
 1130 0054 00000000 		.word	huart2
 1131 0058 00440040 		.word	1073759232
 1132              		.cfi_endproc
 1133              	.LFE160:
 1135              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1136              		.align	2
 1137              		.thumb
 1138              		.thumb_func
 1140              	MX_GPIO_Init:
 1141              	.LFB161:
ARM GAS  /tmp/cclaaHiH.s 			page 121


 426:Src/main.c    **** 
 427:Src/main.c    **** /** Configure pins as 
 428:Src/main.c    ****         * Analog 
 429:Src/main.c    ****         * Input 
 430:Src/main.c    ****         * Output
 431:Src/main.c    ****         * EVENT_OUT
 432:Src/main.c    ****         * EXTI
 433:Src/main.c    **** */
 434:Src/main.c    **** static void MX_GPIO_Init(void)
 435:Src/main.c    **** {
 1142              		.loc 2 435 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 40
 1145              		@ frame_needed = 1, uses_anonymous_args = 0
 1146 0000 80B5     		push	{r7, lr}
 1147              	.LCFI37:
 1148              		.cfi_def_cfa_offset 8
 1149              		.cfi_offset 7, -8
 1150              		.cfi_offset 14, -4
 1151 0002 8AB0     		sub	sp, sp, #40
 1152              	.LCFI38:
 1153              		.cfi_def_cfa_offset 48
 1154 0004 00AF     		add	r7, sp, #0
 1155              	.LCFI39:
 1156              		.cfi_def_cfa_register 7
 1157              	.LBB2:
 436:Src/main.c    **** 
 437:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 438:Src/main.c    **** 
 439:Src/main.c    ****   /* GPIO Ports Clock Enable */
 440:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1158              		.loc 2 440 0
 1159 0006 2A4A     		ldr	r2, .L45
 1160 0008 294B     		ldr	r3, .L45
 1161 000a 5B69     		ldr	r3, [r3, #20]
 1162 000c 43F40023 		orr	r3, r3, #524288
 1163 0010 5361     		str	r3, [r2, #20]
 1164 0012 274B     		ldr	r3, .L45
 1165 0014 5B69     		ldr	r3, [r3, #20]
 1166 0016 03F40023 		and	r3, r3, #524288
 1167 001a 3B61     		str	r3, [r7, #16]
 1168 001c 3B69     		ldr	r3, [r7, #16]
 1169              	.LBE2:
 1170              	.LBB3:
 441:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 1171              		.loc 2 441 0
 1172 001e 244A     		ldr	r2, .L45
 1173 0020 234B     		ldr	r3, .L45
 1174 0022 5B69     		ldr	r3, [r3, #20]
 1175 0024 43F48003 		orr	r3, r3, #4194304
 1176 0028 5361     		str	r3, [r2, #20]
 1177 002a 214B     		ldr	r3, .L45
 1178 002c 5B69     		ldr	r3, [r3, #20]
 1179 002e 03F48003 		and	r3, r3, #4194304
 1180 0032 FB60     		str	r3, [r7, #12]
 1181 0034 FB68     		ldr	r3, [r7, #12]
 1182              	.LBE3:
ARM GAS  /tmp/cclaaHiH.s 			page 122


 1183              	.LBB4:
 442:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1184              		.loc 2 442 0
 1185 0036 1E4A     		ldr	r2, .L45
 1186 0038 1D4B     		ldr	r3, .L45
 1187 003a 5B69     		ldr	r3, [r3, #20]
 1188 003c 43F40033 		orr	r3, r3, #131072
 1189 0040 5361     		str	r3, [r2, #20]
 1190 0042 1B4B     		ldr	r3, .L45
 1191 0044 5B69     		ldr	r3, [r3, #20]
 1192 0046 03F40033 		and	r3, r3, #131072
 1193 004a BB60     		str	r3, [r7, #8]
 1194 004c BB68     		ldr	r3, [r7, #8]
 1195              	.LBE4:
 1196              	.LBB5:
 443:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1197              		.loc 2 443 0
 1198 004e 184A     		ldr	r2, .L45
 1199 0050 174B     		ldr	r3, .L45
 1200 0052 5B69     		ldr	r3, [r3, #20]
 1201 0054 43F48023 		orr	r3, r3, #262144
 1202 0058 5361     		str	r3, [r2, #20]
 1203 005a 154B     		ldr	r3, .L45
 1204 005c 5B69     		ldr	r3, [r3, #20]
 1205 005e 03F48023 		and	r3, r3, #262144
 1206 0062 7B60     		str	r3, [r7, #4]
 1207 0064 7B68     		ldr	r3, [r7, #4]
 1208              	.LBE5:
 444:Src/main.c    **** 
 445:Src/main.c    ****   /*Configure GPIO pin Output Level */
 446:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 1209              		.loc 2 446 0
 1210 0066 1348     		ldr	r0, .L45+4
 1211 0068 4FF40051 		mov	r1, #8192
 1212 006c 0022     		movs	r2, #0
 1213 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 447:Src/main.c    **** 
 448:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 449:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 1214              		.loc 2 449 0
 1215 0072 4FF40053 		mov	r3, #8192
 1216 0076 7B61     		str	r3, [r7, #20]
 450:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 1217              		.loc 2 450 0
 1218 0078 0F4B     		ldr	r3, .L45+8
 1219 007a BB61     		str	r3, [r7, #24]
 451:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1220              		.loc 2 451 0
 1221 007c 0023     		movs	r3, #0
 1222 007e FB61     		str	r3, [r7, #28]
 452:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 1223              		.loc 2 452 0
 1224 0080 07F11403 		add	r3, r7, #20
 1225 0084 0D48     		ldr	r0, .L45+12
 1226 0086 1946     		mov	r1, r3
 1227 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 453:Src/main.c    **** 
ARM GAS  /tmp/cclaaHiH.s 			page 123


 454:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 455:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 1228              		.loc 2 455 0
 1229 008c 4FF40053 		mov	r3, #8192
 1230 0090 7B61     		str	r3, [r7, #20]
 456:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 1231              		.loc 2 456 0
 1232 0092 0123     		movs	r3, #1
 1233 0094 BB61     		str	r3, [r7, #24]
 457:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 1234              		.loc 2 457 0
 1235 0096 0023     		movs	r3, #0
 1236 0098 FB61     		str	r3, [r7, #28]
 458:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 1237              		.loc 2 458 0
 1238 009a 0023     		movs	r3, #0
 1239 009c 3B62     		str	r3, [r7, #32]
 459:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 1240              		.loc 2 459 0
 1241 009e 07F11403 		add	r3, r7, #20
 1242 00a2 0448     		ldr	r0, .L45+4
 1243 00a4 1946     		mov	r1, r3
 1244 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 460:Src/main.c    **** 
 461:Src/main.c    **** }
 1245              		.loc 2 461 0
 1246 00aa 2837     		adds	r7, r7, #40
 1247              	.LCFI40:
 1248              		.cfi_def_cfa_offset 8
 1249 00ac BD46     		mov	sp, r7
 1250              	.LCFI41:
 1251              		.cfi_def_cfa_register 13
 1252              		@ sp needed
 1253 00ae 80BD     		pop	{r7, pc}
 1254              	.L46:
 1255              		.align	2
 1256              	.L45:
 1257 00b0 00100240 		.word	1073876992
 1258 00b4 00040048 		.word	1207960576
 1259 00b8 00002110 		.word	270598144
 1260 00bc 00080048 		.word	1207961600
 1261              		.cfi_endproc
 1262              	.LFE161:
 1264              		.section	.text.transform,"ax",%progbits
 1265              		.align	2
 1266              		.global	transform
 1267              		.thumb
 1268              		.thumb_func
 1270              	transform:
 1271              	.LFB162:
 462:Src/main.c    **** 
 463:Src/main.c    **** /* USER CODE BEGIN 4 */
 464:Src/main.c    **** float transform(float32_t current_a, float32_t current_b, float32_t theta) {
 1272              		.loc 2 464 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 32
 1275              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cclaaHiH.s 			page 124


 1276 0000 80B5     		push	{r7, lr}
 1277              	.LCFI42:
 1278              		.cfi_def_cfa_offset 8
 1279              		.cfi_offset 7, -8
 1280              		.cfi_offset 14, -4
 1281 0002 88B0     		sub	sp, sp, #32
 1282              	.LCFI43:
 1283              		.cfi_def_cfa_offset 40
 1284 0004 00AF     		add	r7, sp, #0
 1285              	.LCFI44:
 1286              		.cfi_def_cfa_register 7
 1287 0006 87ED030A 		fsts	s0, [r7, #12]
 1288 000a C7ED020A 		fsts	s1, [r7, #8]
 1289 000e 87ED011A 		fsts	s2, [r7, #4]
 465:Src/main.c    **** 
 466:Src/main.c    **** 	float32_t current_alpha, current_beta;
 467:Src/main.c    **** 	float32_t current_Id, current_Iq;
 468:Src/main.c    **** 
 469:Src/main.c    **** 	/* Park Transformation */
 470:Src/main.c    **** 	/* Calculates I_alpha and I_beta */
 471:Src/main.c    **** 	arm_clarke_f32(current_a, current_b, &current_alpha, &current_beta);
 1290              		.loc 2 471 0
 1291 0012 07F11C02 		add	r2, r7, #28
 1292 0016 07F11803 		add	r3, r7, #24
 1293 001a 97ED030A 		flds	s0, [r7, #12]
 1294 001e D7ED020A 		flds	s1, [r7, #8]
 1295 0022 1046     		mov	r0, r2
 1296 0024 1946     		mov	r1, r3
 1297 0026 FFF7FEFF 		bl	arm_clarke_f32
 472:Src/main.c    **** 
 473:Src/main.c    **** 	/* Calculates sine and cosine for park transformation */
 474:Src/main.c    **** 	arm_sin_cos_f32(theta, &sinevalue, &cosinevalue);
 1298              		.loc 2 474 0
 1299 002a 97ED010A 		flds	s0, [r7, #4]
 1300 002e 1348     		ldr	r0, .L49
 1301 0030 1349     		ldr	r1, .L49+4
 1302 0032 FFF7FEFF 		bl	arm_sin_cos_f32
 475:Src/main.c    **** 
 476:Src/main.c    **** 	/* Park Transformation */
 477:Src/main.c    **** 	/* Calculates Id and Iq */
 478:Src/main.c    **** 	arm_park_f32(current_alpha, current_beta, &current_Id, &current_Iq, sinevalue, cosinevalue);
 1303              		.loc 2 478 0
 1304 0036 97ED076A 		flds	s12, [r7, #28]
 1305 003a D7ED066A 		flds	s13, [r7, #24]
 1306 003e 0F4B     		ldr	r3, .L49
 1307 0040 93ED007A 		flds	s14, [r3]
 1308 0044 0E4B     		ldr	r3, .L49+4
 1309 0046 D3ED007A 		flds	s15, [r3]
 1310 004a 07F11402 		add	r2, r7, #20
 1311 004e 07F11003 		add	r3, r7, #16
 1312 0052 B0EE460A 		fcpys	s0, s12
 1313 0056 F0EE660A 		fcpys	s1, s13
 1314 005a 1046     		mov	r0, r2
 1315 005c 1946     		mov	r1, r3
 1316 005e B0EE471A 		fcpys	s2, s14
 1317 0062 F0EE671A 		fcpys	s3, s15
 1318 0066 FFF7FEFF 		bl	arm_park_f32
ARM GAS  /tmp/cclaaHiH.s 			page 125


 479:Src/main.c    **** 
 480:Src/main.c    **** 	return(current_Iq);
 1319              		.loc 2 480 0
 1320 006a 3B69     		ldr	r3, [r7, #16]	@ float
 1321 006c 07EE903A 		fmsr	s15, r3
 481:Src/main.c    **** }
 1322              		.loc 2 481 0
 1323 0070 B0EE670A 		fcpys	s0, s15
 1324 0074 2037     		adds	r7, r7, #32
 1325              	.LCFI45:
 1326              		.cfi_def_cfa_offset 8
 1327 0076 BD46     		mov	sp, r7
 1328              	.LCFI46:
 1329              		.cfi_def_cfa_register 13
 1330              		@ sp needed
 1331 0078 80BD     		pop	{r7, pc}
 1332              	.L50:
 1333 007a 00BF     		.align	2
 1334              	.L49:
 1335 007c 00000000 		.word	sinevalue
 1336 0080 00000000 		.word	cosinevalue
 1337              		.cfi_endproc
 1338              	.LFE162:
 1340              		.section	.text.PI_control,"ax",%progbits
 1341              		.align	2
 1342              		.global	PI_control
 1343              		.thumb
 1344              		.thumb_func
 1346              	PI_control:
 1347              	.LFB163:
 482:Src/main.c    **** 
 483:Src/main.c    **** float PI_control(float32_t ref, float32_t real)  {
 1348              		.loc 2 483 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 16
 1351              		@ frame_needed = 1, uses_anonymous_args = 0
 1352              		@ link register save eliminated.
 1353 0000 80B4     		push	{r7}
 1354              	.LCFI47:
 1355              		.cfi_def_cfa_offset 4
 1356              		.cfi_offset 7, -4
 1357 0002 85B0     		sub	sp, sp, #20
 1358              	.LCFI48:
 1359              		.cfi_def_cfa_offset 24
 1360 0004 00AF     		add	r7, sp, #0
 1361              	.LCFI49:
 1362              		.cfi_def_cfa_register 7
 1363 0006 87ED010A 		fsts	s0, [r7, #4]
 1364 000a C7ED000A 		fsts	s1, [r7]
 484:Src/main.c    **** 
 485:Src/main.c    **** 	float32_t out, pi_error;
 486:Src/main.c    **** 
 487:Src/main.c    ****     pi_error = ref - real;
 1365              		.loc 2 487 0
 1366 000e 97ED017A 		flds	s14, [r7, #4]
 1367 0012 D7ED007A 		flds	s15, [r7]
 1368 0016 77EE677A 		fsubs	s15, s14, s15
ARM GAS  /tmp/cclaaHiH.s 			page 126


 1369 001a C7ED027A 		fsts	s15, [r7, #8]
 488:Src/main.c    ****     error_sum += pi_error;
 1370              		.loc 2 488 0
 1371 001e 2B4B     		ldr	r3, .L67
 1372 0020 93ED007A 		flds	s14, [r3]
 1373 0024 D7ED027A 		flds	s15, [r7, #8]
 1374 0028 77EE277A 		fadds	s15, s14, s15
 1375 002c 274B     		ldr	r3, .L67
 1376 002e C3ED007A 		fsts	s15, [r3]
 489:Src/main.c    **** 
 490:Src/main.c    ****     /* Limiting Error */
 491:Src/main.c    ****     if (error_sum < _ERRORMIN)  {
 1377              		.loc 2 491 0
 1378 0032 264B     		ldr	r3, .L67
 1379 0034 D3ED007A 		flds	s15, [r3]
 1380 0038 B0EE007A 		fconsts	s14, #0
 1381 003c F4EEC77A 		fcmpes	s15, s14
 1382 0040 F1EE10FA 		fmstat
 1383 0044 04D5     		bpl	.L65
 492:Src/main.c    ****       error_sum = _ERRORMIN;
 1384              		.loc 2 492 0
 1385 0046 214B     		ldr	r3, .L67
 1386 0048 4FF08042 		mov	r2, #1073741824
 1387 004c 1A60     		str	r2, [r3]	@ float
 1388 004e 0DE0     		b	.L54
 1389              	.L65:
 493:Src/main.c    ****     }
 494:Src/main.c    ****     else if (error_sum > _ERRORMAX)  {
 1390              		.loc 2 494 0
 1391 0050 1E4B     		ldr	r3, .L67
 1392 0052 D3ED007A 		flds	s15, [r3]
 1393 0056 B0EE007A 		fconsts	s14, #0
 1394 005a F4EEC77A 		fcmpes	s15, s14
 1395 005e F1EE10FA 		fmstat
 1396 0062 03DD     		ble	.L54
 495:Src/main.c    ****       error_sum = _ERRORMAX;
 1397              		.loc 2 495 0
 1398 0064 194B     		ldr	r3, .L67
 1399 0066 4FF08042 		mov	r2, #1073741824
 1400 006a 1A60     		str	r2, [r3]	@ float
 1401              	.L54:
 496:Src/main.c    ****     }
 497:Src/main.c    **** 
 498:Src/main.c    ****     out = _K_p*pi_error + _K_i*error_sum;
 1402              		.loc 2 498 0
 1403 006c D7ED027A 		flds	s15, [r7, #8]
 1404 0070 B1EE007A 		fconsts	s14, #16
 1405 0074 27EE877A 		fmuls	s14, s15, s14
 1406 0078 144B     		ldr	r3, .L67
 1407 007a D3ED007A 		flds	s15, [r3]
 1408 007e 77EE277A 		fadds	s15, s14, s15
 1409 0082 C7ED037A 		fsts	s15, [r7, #12]
 499:Src/main.c    **** 
 500:Src/main.c    ****     /* Limiting output */
 501:Src/main.c    ****     if (out < _OUTMIN)  {
 1410              		.loc 2 501 0
 1411 0086 D7ED037A 		flds	s15, [r7, #12]
ARM GAS  /tmp/cclaaHiH.s 			page 127


 1412 008a B0EE007A 		fconsts	s14, #0
 1413 008e F4EEC77A 		fcmpes	s15, s14
 1414 0092 F1EE10FA 		fmstat
 1415 0096 03D5     		bpl	.L66
 502:Src/main.c    ****       out = _OUTMIN;
 1416              		.loc 2 502 0
 1417 0098 4FF08043 		mov	r3, #1073741824
 1418 009c FB60     		str	r3, [r7, #12]	@ float
 1419 009e 0BE0     		b	.L58
 1420              	.L66:
 503:Src/main.c    ****     }
 504:Src/main.c    ****     else if (out > _OUTMAX) {
 1421              		.loc 2 504 0
 1422 00a0 D7ED037A 		flds	s15, [r7, #12]
 1423 00a4 B0EE007A 		fconsts	s14, #0
 1424 00a8 F4EEC77A 		fcmpes	s15, s14
 1425 00ac F1EE10FA 		fmstat
 1426 00b0 02DD     		ble	.L58
 505:Src/main.c    ****       out = _OUTMAX;
 1427              		.loc 2 505 0
 1428 00b2 4FF08043 		mov	r3, #1073741824
 1429 00b6 FB60     		str	r3, [r7, #12]	@ float
 1430              	.L58:
 506:Src/main.c    ****     }
 507:Src/main.c    **** 
 508:Src/main.c    ****     return (out);
 1431              		.loc 2 508 0
 1432 00b8 FB68     		ldr	r3, [r7, #12]	@ float
 1433 00ba 07EE903A 		fmsr	s15, r3
 509:Src/main.c    **** 
 510:Src/main.c    **** }
 1434              		.loc 2 510 0
 1435 00be B0EE670A 		fcpys	s0, s15
 1436 00c2 1437     		adds	r7, r7, #20
 1437              	.LCFI50:
 1438              		.cfi_def_cfa_offset 4
 1439 00c4 BD46     		mov	sp, r7
 1440              	.LCFI51:
 1441              		.cfi_def_cfa_register 13
 1442              		@ sp needed
 1443 00c6 5DF8047B 		ldr	r7, [sp], #4
 1444              	.LCFI52:
 1445              		.cfi_restore 7
 1446              		.cfi_def_cfa_offset 0
 1447 00ca 7047     		bx	lr
 1448              	.L68:
 1449              		.align	2
 1450              	.L67:
 1451 00cc 00000000 		.word	error_sum
 1452              		.cfi_endproc
 1453              	.LFE163:
 1455              		.global	__aeabi_ddiv
 1456              		.global	__aeabi_d2uiz
 1457              		.global	__aeabi_i2d
 1458              		.global	__aeabi_dmul
 1459              		.global	__aeabi_dsub
 1460              		.section	.text.svpwm,"ax",%progbits
ARM GAS  /tmp/cclaaHiH.s 			page 128


 1461              		.align	2
 1462              		.global	svpwm
 1463              		.thumb
 1464              		.thumb_func
 1466              	svpwm:
 1467              	.LFB164:
 511:Src/main.c    **** 
 512:Src/main.c    **** 
 513:Src/main.c    **** void svpwm(void)	{
 1468              		.loc 2 513 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 64
 1471              		@ frame_needed = 1, uses_anonymous_args = 0
 1472 0000 B0B5     		push	{r4, r5, r7, lr}
 1473              	.LCFI53:
 1474              		.cfi_def_cfa_offset 16
 1475              		.cfi_offset 4, -16
 1476              		.cfi_offset 5, -12
 1477              		.cfi_offset 7, -8
 1478              		.cfi_offset 14, -4
 1479 0002 90B0     		sub	sp, sp, #64
 1480              	.LCFI54:
 1481              		.cfi_def_cfa_offset 80
 1482 0004 00AF     		add	r7, sp, #0
 1483              	.LCFI55:
 1484              		.cfi_def_cfa_register 7
 514:Src/main.c    **** 
 515:Src/main.c    ****     int32_t ind = 0;
 1485              		.loc 2 515 0
 1486 0006 0023     		movs	r3, #0
 1487 0008 FB61     		str	r3, [r7, #28]
 516:Src/main.c    ****     uint8_t send_buffer[10];
 517:Src/main.c    ****     
 518:Src/main.c    **** 	uint8_t	sector = Theta/_PIdiv3;
 1488              		.loc 2 518 0
 1489 000a C14B     		ldr	r3, .L81+16
 1490 000c 1B68     		ldr	r3, [r3]	@ float
 1491 000e 1846     		mov	r0, r3	@ float
 1492 0010 FFF7FEFF 		bl	__aeabi_f2d
 1493 0014 0246     		mov	r2, r0
 1494 0016 0B46     		mov	r3, r1
 1495 0018 1046     		mov	r0, r2
 1496 001a 1946     		mov	r1, r3
 1497 001c B8A3     		adr	r3, .L81
 1498 001e D3E90023 		ldrd	r2, [r3]
 1499 0022 FFF7FEFF 		bl	__aeabi_ddiv
 1500 0026 0246     		mov	r2, r0
 1501 0028 0B46     		mov	r3, r1
 1502 002a 1046     		mov	r0, r2
 1503 002c 1946     		mov	r1, r3
 1504 002e FFF7FEFF 		bl	__aeabi_d2uiz
 1505 0032 0346     		mov	r3, r0
 1506 0034 87F83B30 		strb	r3, [r7, #59]
 519:Src/main.c    **** 	float32_t	U_ref = hypotf(U_alpha,U_beta);
 1507              		.loc 2 519 0
 1508 0038 B64B     		ldr	r3, .L81+20
 1509 003a 93ED007A 		flds	s14, [r3]
ARM GAS  /tmp/cclaaHiH.s 			page 129


 1510 003e B64B     		ldr	r3, .L81+24
 1511 0040 D3ED007A 		flds	s15, [r3]
 1512 0044 B0EE470A 		fcpys	s0, s14
 1513 0048 F0EE670A 		fcpys	s1, s15
 1514 004c FFF7FEFF 		bl	hypotf
 1515 0050 87ED0F0A 		fsts	s0, [r7, #60]
 520:Src/main.c    **** 	if (U_ref > U_max) {
 1516              		.loc 2 520 0
 1517 0054 B14B     		ldr	r3, .L81+28
 1518 0056 D3ED007A 		flds	s15, [r3]
 1519 005a 97ED0F7A 		flds	s14, [r7, #60]
 1520 005e B4EEE77A 		fcmpes	s14, s15
 1521 0062 F1EE10FA 		fmstat
 1522 0066 02DD     		ble	.L70
 521:Src/main.c    **** 		U_ref = U_max;
 1523              		.loc 2 521 0
 1524 0068 AC4B     		ldr	r3, .L81+28
 1525 006a 1B68     		ldr	r3, [r3]	@ float
 1526 006c FB63     		str	r3, [r7, #60]	@ float
 1527              	.L70:
 522:Src/main.c    **** 	}
 523:Src/main.c    **** 	float32_t	angle = Theta - (sector*_PIdiv3);
 1528              		.loc 2 523 0
 1529 006e A84B     		ldr	r3, .L81+16
 1530 0070 1B68     		ldr	r3, [r3]	@ float
 1531 0072 1846     		mov	r0, r3	@ float
 1532 0074 FFF7FEFF 		bl	__aeabi_f2d
 1533 0078 0446     		mov	r4, r0
 1534 007a 0D46     		mov	r5, r1
 1535 007c 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1536 0080 1846     		mov	r0, r3
 1537 0082 FFF7FEFF 		bl	__aeabi_i2d
 1538 0086 0246     		mov	r2, r0
 1539 0088 0B46     		mov	r3, r1
 1540 008a 1046     		mov	r0, r2
 1541 008c 1946     		mov	r1, r3
 1542 008e 9CA3     		adr	r3, .L81
 1543 0090 D3E90023 		ldrd	r2, [r3]
 1544 0094 FFF7FEFF 		bl	__aeabi_dmul
 1545 0098 0246     		mov	r2, r0
 1546 009a 0B46     		mov	r3, r1
 1547 009c 2046     		mov	r0, r4
 1548 009e 2946     		mov	r1, r5
 1549 00a0 FFF7FEFF 		bl	__aeabi_dsub
 1550 00a4 0246     		mov	r2, r0
 1551 00a6 0B46     		mov	r3, r1
 1552 00a8 1046     		mov	r0, r2
 1553 00aa 1946     		mov	r1, r3
 1554 00ac FFF7FEFF 		bl	__aeabi_d2f
 1555 00b0 0346     		mov	r3, r0	@ float
 1556 00b2 7B63     		str	r3, [r7, #52]	@ float
 524:Src/main.c    **** 	float32_t	U_ref_percent = (_SQRT3)*(U_ref/_U_DC); // previous: (2/_SQRT3)
 1557              		.loc 2 524 0
 1558 00b4 D7ED0F7A 		flds	s15, [r7, #60]
 1559 00b8 9FED997A 		flds	s14, .L81+32
 1560 00bc C7EE877A 		fdivs	s15, s15, s14
 1561 00c0 17EE900A 		fmrs	r0, s15
ARM GAS  /tmp/cclaaHiH.s 			page 130


 1562 00c4 FFF7FEFF 		bl	__aeabi_f2d
 1563 00c8 0246     		mov	r2, r0
 1564 00ca 0B46     		mov	r3, r1
 1565 00cc 1046     		mov	r0, r2
 1566 00ce 1946     		mov	r1, r3
 1567 00d0 8DA3     		adr	r3, .L81+8
 1568 00d2 D3E90023 		ldrd	r2, [r3]
 1569 00d6 FFF7FEFF 		bl	__aeabi_dmul
 1570 00da 0246     		mov	r2, r0
 1571 00dc 0B46     		mov	r3, r1
 1572 00de 1046     		mov	r0, r2
 1573 00e0 1946     		mov	r1, r3
 1574 00e2 FFF7FEFF 		bl	__aeabi_d2f
 1575 00e6 0346     		mov	r3, r0	@ float
 1576 00e8 3B63     		str	r3, [r7, #48]	@ float
 525:Src/main.c    **** 	float32_t	t_1 = U_ref_percent*arm_sin_f32(_PIdiv3-angle)*T_halfsample;
 1577              		.loc 2 525 0
 1578 00ea 786B     		ldr	r0, [r7, #52]	@ float
 1579 00ec FFF7FEFF 		bl	__aeabi_f2d
 1580 00f0 0246     		mov	r2, r0
 1581 00f2 0B46     		mov	r3, r1
 1582 00f4 82A1     		adr	r1, .L81
 1583 00f6 D1E90001 		ldrd	r0, [r1]
 1584 00fa FFF7FEFF 		bl	__aeabi_dsub
 1585 00fe 0246     		mov	r2, r0
 1586 0100 0B46     		mov	r3, r1
 1587 0102 1046     		mov	r0, r2
 1588 0104 1946     		mov	r1, r3
 1589 0106 FFF7FEFF 		bl	__aeabi_d2f
 1590 010a 0346     		mov	r3, r0	@ float
 1591 010c 00EE103A 		fmsr	s0, r3
 1592 0110 FFF7FEFF 		bl	arm_sin_f32
 1593 0114 B0EE407A 		fcpys	s14, s0
 1594 0118 D7ED0C7A 		flds	s15, [r7, #48]
 1595 011c 27EE277A 		fmuls	s14, s14, s15
 1596 0120 804B     		ldr	r3, .L81+36
 1597 0122 D3ED007A 		flds	s15, [r3]
 1598 0126 67EE277A 		fmuls	s15, s14, s15
 1599 012a C7ED0B7A 		fsts	s15, [r7, #44]
 526:Src/main.c    **** 	float32_t	t_2 = U_ref_percent*arm_sin_f32(angle)*T_halfsample;
 1600              		.loc 2 526 0
 1601 012e 97ED0D0A 		flds	s0, [r7, #52]
 1602 0132 FFF7FEFF 		bl	arm_sin_f32
 1603 0136 B0EE407A 		fcpys	s14, s0
 1604 013a D7ED0C7A 		flds	s15, [r7, #48]
 1605 013e 27EE277A 		fmuls	s14, s14, s15
 1606 0142 784B     		ldr	r3, .L81+36
 1607 0144 D3ED007A 		flds	s15, [r3]
 1608 0148 67EE277A 		fmuls	s15, s14, s15
 1609 014c C7ED0A7A 		fsts	s15, [r7, #40]
 527:Src/main.c    **** 	float32_t	t_0 = T_halfsample - t_1 - t_2;
 1610              		.loc 2 527 0
 1611 0150 744B     		ldr	r3, .L81+36
 1612 0152 93ED007A 		flds	s14, [r3]
 1613 0156 D7ED0B7A 		flds	s15, [r7, #44]
 1614 015a 37EE677A 		fsubs	s14, s14, s15
 1615 015e D7ED0A7A 		flds	s15, [r7, #40]
ARM GAS  /tmp/cclaaHiH.s 			page 131


 1616 0162 77EE677A 		fsubs	s15, s14, s15
 1617 0166 C7ED097A 		fsts	s15, [r7, #36]
 528:Src/main.c    **** 	float32_t	t_0_half = t_0/2;
 1618              		.loc 2 528 0
 1619 016a D7ED097A 		flds	s15, [r7, #36]
 1620 016e B0EE007A 		fconsts	s14, #0
 1621 0172 C7EE877A 		fdivs	s15, s15, s14
 1622 0176 C7ED087A 		fsts	s15, [r7, #32]
 529:Src/main.c    **** 
 530:Src/main.c    ****     //Transmit Sector value
 531:Src/main.c    ****     ind = 0;
 1623              		.loc 2 531 0
 1624 017a 0023     		movs	r3, #0
 1625 017c FB61     		str	r3, [r7, #28]
 532:Src/main.c    ****     buffer_append_uint8(send_buffer, (uint8_t)sector, &ind);
 1626              		.loc 2 532 0
 1627 017e 07F11001 		add	r1, r7, #16
 1628 0182 97F83B20 		ldrb	r2, [r7, #59]	@ zero_extendqisi2
 1629 0186 07F11C03 		add	r3, r7, #28
 1630 018a 0846     		mov	r0, r1
 1631 018c 1146     		mov	r1, r2
 1632 018e 1A46     		mov	r2, r3
 1633 0190 FFF7FEFF 		bl	buffer_append_uint8
 533:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t*)send_buffer, sizeof(uint8_t), 0xFFFF);
 1634              		.loc 2 533 0
 1635 0194 07F11003 		add	r3, r7, #16
 1636 0198 6348     		ldr	r0, .L81+40
 1637 019a 1946     		mov	r1, r3
 1638 019c 0122     		movs	r2, #1
 1639 019e 4FF6FF73 		movw	r3, #65535
 1640 01a2 FFF7FEFF 		bl	HAL_UART_Transmit
 534:Src/main.c    **** 
 535:Src/main.c    **** 	/* Switching counter values for Timer Interrupts */
 536:Src/main.c    **** 
 537:Src/main.c    **** 	/* Upper switches */
 538:Src/main.c    **** 	uint16_t	ontime_t_0_half = (t_0_half) * counterfrequency;
 1641              		.loc 2 538 0
 1642 01a6 614B     		ldr	r3, .L81+44
 1643 01a8 93ED007A 		flds	s14, [r3]
 1644 01ac D7ED087A 		flds	s15, [r7, #32]
 1645 01b0 67EE277A 		fmuls	s15, s14, s15
 1646 01b4 FCEEE77A 		ftouizs	s15, s15
 1647 01b8 C7ED017A 		fsts	s15, [r7, #4]	@ int
 1648 01bc BB88     		ldrh	r3, [r7, #4]	@ movhi
 1649 01be 9BB2     		uxth	r3, r3
 1650 01c0 FB81     		strh	r3, [r7, #14]	@ movhi
 539:Src/main.c    **** 	uint16_t	ontime_value_1 = (t_0_half + t_1) * counterfrequency;
 1651              		.loc 2 539 0
 1652 01c2 97ED087A 		flds	s14, [r7, #32]
 1653 01c6 D7ED0B7A 		flds	s15, [r7, #44]
 1654 01ca 37EE277A 		fadds	s14, s14, s15
 1655 01ce 574B     		ldr	r3, .L81+44
 1656 01d0 D3ED007A 		flds	s15, [r3]
 1657 01d4 67EE277A 		fmuls	s15, s14, s15
 1658 01d8 FCEEE77A 		ftouizs	s15, s15
 1659 01dc C7ED017A 		fsts	s15, [r7, #4]	@ int
 1660 01e0 BB88     		ldrh	r3, [r7, #4]	@ movhi
ARM GAS  /tmp/cclaaHiH.s 			page 132


 1661 01e2 9BB2     		uxth	r3, r3
 1662 01e4 BB81     		strh	r3, [r7, #12]	@ movhi
 540:Src/main.c    **** 	uint16_t	ontime_value_2 = (t_0_half + t_2) * counterfrequency;
 1663              		.loc 2 540 0
 1664 01e6 97ED087A 		flds	s14, [r7, #32]
 1665 01ea D7ED0A7A 		flds	s15, [r7, #40]
 1666 01ee 37EE277A 		fadds	s14, s14, s15
 1667 01f2 4E4B     		ldr	r3, .L81+44
 1668 01f4 D3ED007A 		flds	s15, [r3]
 1669 01f8 67EE277A 		fmuls	s15, s14, s15
 1670 01fc FCEEE77A 		ftouizs	s15, s15
 1671 0200 C7ED017A 		fsts	s15, [r7, #4]	@ int
 1672 0204 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1673 0206 9BB2     		uxth	r3, r3
 1674 0208 7B81     		strh	r3, [r7, #10]	@ movhi
 541:Src/main.c    **** 	uint16_t	ontime_value_3 = (t_0_half + t_1 + t_2) * counterfrequency;
 1675              		.loc 2 541 0
 1676 020a 97ED087A 		flds	s14, [r7, #32]
 1677 020e D7ED0B7A 		flds	s15, [r7, #44]
 1678 0212 37EE277A 		fadds	s14, s14, s15
 1679 0216 D7ED0A7A 		flds	s15, [r7, #40]
 1680 021a 37EE277A 		fadds	s14, s14, s15
 1681 021e 434B     		ldr	r3, .L81+44
 1682 0220 D3ED007A 		flds	s15, [r3]
 1683 0224 67EE277A 		fmuls	s15, s14, s15
 1684 0228 FCEEE77A 		ftouizs	s15, s15
 1685 022c C7ED017A 		fsts	s15, [r7, #4]	@ int
 1686 0230 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1687 0232 9BB2     		uxth	r3, r3
 1688 0234 3B81     		strh	r3, [r7, #8]	@ movhi
 542:Src/main.c    **** 
 543:Src/main.c    **** 	switch (sector)	{
 1689              		.loc 2 543 0
 1690 0236 97F83B30 		ldrb	r3, [r7, #59]	@ zero_extendqisi2
 1691 023a 052B     		cmp	r3, #5
 1692 023c 5CD8     		bhi	.L69
 1693 023e 01A2     		adr	r2, .L74
 1694 0240 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1695              		.p2align 2
 1696              	.L74:
 1697 0244 5D020000 		.word	.L73+1
 1698 0248 77020000 		.word	.L75+1
 1699 024c 91020000 		.word	.L76+1
 1700 0250 AB020000 		.word	.L77+1
 1701 0254 C5020000 		.word	.L78+1
 1702 0258 DF020000 		.word	.L79+1
 1703              		.p2align 1
 1704              	.L73:
 544:Src/main.c    **** 
 545:Src/main.c    **** 		/*					Upper switches			*/
 546:Src/main.c    **** 
 547:Src/main.c    **** 		/* Sector 1 */
 548:Src/main.c    **** 		case 0:		switchtime[0] = &ontime_t_0_half;
 1705              		.loc 2 548 0
 1706 025c 344A     		ldr	r2, .L81+48
 1707 025e 07F10E03 		add	r3, r7, #14
 1708 0262 1360     		str	r3, [r2]
ARM GAS  /tmp/cclaaHiH.s 			page 133


 549:Src/main.c    **** 					switchtime[1] = &ontime_value_1;
 1709              		.loc 2 549 0
 1710 0264 324A     		ldr	r2, .L81+48
 1711 0266 07F10C03 		add	r3, r7, #12
 1712 026a 5360     		str	r3, [r2, #4]
 550:Src/main.c    **** 					switchtime[2] = &ontime_value_3;
 1713              		.loc 2 550 0
 1714 026c 304A     		ldr	r2, .L81+48
 1715 026e 07F10803 		add	r3, r7, #8
 1716 0272 9360     		str	r3, [r2, #8]
 551:Src/main.c    **** 				break;
 1717              		.loc 2 551 0
 1718 0274 40E0     		b	.L69
 1719              	.L75:
 552:Src/main.c    **** 
 553:Src/main.c    **** 		/* Sector 2 */
 554:Src/main.c    **** 		case 1:		switchtime[0] = &ontime_value_2;
 1720              		.loc 2 554 0
 1721 0276 2E4A     		ldr	r2, .L81+48
 1722 0278 07F10A03 		add	r3, r7, #10
 1723 027c 1360     		str	r3, [r2]
 555:Src/main.c    **** 					switchtime[1] = &ontime_t_0_half;
 1724              		.loc 2 555 0
 1725 027e 2C4A     		ldr	r2, .L81+48
 1726 0280 07F10E03 		add	r3, r7, #14
 1727 0284 5360     		str	r3, [r2, #4]
 556:Src/main.c    **** 					switchtime[2] = &ontime_value_3;
 1728              		.loc 2 556 0
 1729 0286 2A4A     		ldr	r2, .L81+48
 1730 0288 07F10803 		add	r3, r7, #8
 1731 028c 9360     		str	r3, [r2, #8]
 557:Src/main.c    **** 				break;
 1732              		.loc 2 557 0
 1733 028e 33E0     		b	.L69
 1734              	.L76:
 558:Src/main.c    **** 
 559:Src/main.c    **** 		/* Sector 3 */
 560:Src/main.c    **** 		case 2:		switchtime[0] = &ontime_value_3;
 1735              		.loc 2 560 0
 1736 0290 274A     		ldr	r2, .L81+48
 1737 0292 07F10803 		add	r3, r7, #8
 1738 0296 1360     		str	r3, [r2]
 561:Src/main.c    **** 					switchtime[1] = &ontime_t_0_half;
 1739              		.loc 2 561 0
 1740 0298 254A     		ldr	r2, .L81+48
 1741 029a 07F10E03 		add	r3, r7, #14
 1742 029e 5360     		str	r3, [r2, #4]
 562:Src/main.c    **** 					switchtime[2] = &ontime_value_1;
 1743              		.loc 2 562 0
 1744 02a0 234A     		ldr	r2, .L81+48
 1745 02a2 07F10C03 		add	r3, r7, #12
 1746 02a6 9360     		str	r3, [r2, #8]
 563:Src/main.c    **** 				break;
 1747              		.loc 2 563 0
 1748 02a8 26E0     		b	.L69
 1749              	.L77:
 564:Src/main.c    **** 
ARM GAS  /tmp/cclaaHiH.s 			page 134


 565:Src/main.c    **** 		/* Sector 4 */
 566:Src/main.c    **** 		case 3:		switchtime[0] = &ontime_value_3;
 1750              		.loc 2 566 0
 1751 02aa 214A     		ldr	r2, .L81+48
 1752 02ac 07F10803 		add	r3, r7, #8
 1753 02b0 1360     		str	r3, [r2]
 567:Src/main.c    **** 					switchtime[1] = &ontime_value_2;
 1754              		.loc 2 567 0
 1755 02b2 1F4A     		ldr	r2, .L81+48
 1756 02b4 07F10A03 		add	r3, r7, #10
 1757 02b8 5360     		str	r3, [r2, #4]
 568:Src/main.c    **** 					switchtime[2] = &ontime_t_0_half;
 1758              		.loc 2 568 0
 1759 02ba 1D4A     		ldr	r2, .L81+48
 1760 02bc 07F10E03 		add	r3, r7, #14
 1761 02c0 9360     		str	r3, [r2, #8]
 569:Src/main.c    **** 				break;
 1762              		.loc 2 569 0
 1763 02c2 19E0     		b	.L69
 1764              	.L78:
 570:Src/main.c    **** 
 571:Src/main.c    **** 		/* Sector 5 */
 572:Src/main.c    **** 		case 4:		switchtime[0] = &ontime_value_1;
 1765              		.loc 2 572 0
 1766 02c4 1A4A     		ldr	r2, .L81+48
 1767 02c6 07F10C03 		add	r3, r7, #12
 1768 02ca 1360     		str	r3, [r2]
 573:Src/main.c    **** 					switchtime[1] = &ontime_value_3;
 1769              		.loc 2 573 0
 1770 02cc 184A     		ldr	r2, .L81+48
 1771 02ce 07F10803 		add	r3, r7, #8
 1772 02d2 5360     		str	r3, [r2, #4]
 574:Src/main.c    **** 					switchtime[2] = &ontime_t_0_half;
 1773              		.loc 2 574 0
 1774 02d4 164A     		ldr	r2, .L81+48
 1775 02d6 07F10E03 		add	r3, r7, #14
 1776 02da 9360     		str	r3, [r2, #8]
 575:Src/main.c    **** 				break;
 1777              		.loc 2 575 0
 1778 02dc 0CE0     		b	.L69
 1779              	.L79:
 576:Src/main.c    **** 
 577:Src/main.c    **** 		/* Sector 6 */
 578:Src/main.c    **** 		case 5:		switchtime[0] = &ontime_t_0_half;
 1780              		.loc 2 578 0
 1781 02de 144A     		ldr	r2, .L81+48
 1782 02e0 07F10E03 		add	r3, r7, #14
 1783 02e4 1360     		str	r3, [r2]
 579:Src/main.c    **** 					switchtime[1] = &ontime_value_3;
 1784              		.loc 2 579 0
 1785 02e6 124A     		ldr	r2, .L81+48
 1786 02e8 07F10803 		add	r3, r7, #8
 1787 02ec 5360     		str	r3, [r2, #4]
 580:Src/main.c    **** 					switchtime[2] = &ontime_value_2;
 1788              		.loc 2 580 0
 1789 02ee 104A     		ldr	r2, .L81+48
 1790 02f0 07F10A03 		add	r3, r7, #10
ARM GAS  /tmp/cclaaHiH.s 			page 135


 1791 02f4 9360     		str	r3, [r2, #8]
 581:Src/main.c    **** 				break;
 1792              		.loc 2 581 0
 1793 02f6 00BF     		nop
 1794              	.L69:
 582:Src/main.c    **** 	}
 583:Src/main.c    **** }
 1795              		.loc 2 583 0
 1796 02f8 4037     		adds	r7, r7, #64
 1797              	.LCFI56:
 1798              		.cfi_def_cfa_offset 16
 1799 02fa BD46     		mov	sp, r7
 1800              	.LCFI57:
 1801              		.cfi_def_cfa_register 13
 1802              		@ sp needed
 1803 02fc B0BD     		pop	{r4, r5, r7, pc}
 1804              	.L82:
 1805 02fe 00BF     		.align	3
 1806              	.L81:
 1807 0300 A038DB37 		.word	937113760
 1808 0304 52C1F03F 		.word	1072742738
 1809 0308 6E5DFFE8 		.word	3909049710
 1810 030c 7AB6FB3F 		.word	1073460858
 1811 0310 00000000 		.word	Theta
 1812 0314 00000000 		.word	U_alpha
 1813 0318 00000000 		.word	U_beta
 1814 031c 00000000 		.word	U_max
 1815 0320 00000C44 		.word	1141637120
 1816 0324 00000000 		.word	T_halfsample
 1817 0328 00000000 		.word	huart2
 1818 032c 00000000 		.word	counterfrequency
 1819 0330 00000000 		.word	switchtime
 1820              		.cfi_endproc
 1821              	.LFE164:
 1823              		.section	.text.buffer_append_uint8,"ax",%progbits
 1824              		.align	2
 1825              		.thumb
 1826              		.thumb_func
 1828              	buffer_append_uint8:
 1829              	.LFB165:
 584:Src/main.c    **** 
 585:Src/main.c    **** static void buffer_append_uint8(uint8_t* buffer, uint8_t number, int32_t *index) {
 1830              		.loc 2 585 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 16
 1833              		@ frame_needed = 1, uses_anonymous_args = 0
 1834              		@ link register save eliminated.
 1835 0000 80B4     		push	{r7}
 1836              	.LCFI58:
 1837              		.cfi_def_cfa_offset 4
 1838              		.cfi_offset 7, -4
 1839 0002 85B0     		sub	sp, sp, #20
 1840              	.LCFI59:
 1841              		.cfi_def_cfa_offset 24
 1842 0004 00AF     		add	r7, sp, #0
 1843              	.LCFI60:
 1844              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cclaaHiH.s 			page 136


 1845 0006 F860     		str	r0, [r7, #12]
 1846 0008 0B46     		mov	r3, r1
 1847 000a 7A60     		str	r2, [r7, #4]
 1848 000c FB72     		strb	r3, [r7, #11]
 586:Src/main.c    **** 	buffer[(*index)++] = number;
 1849              		.loc 2 586 0
 1850 000e 7B68     		ldr	r3, [r7, #4]
 1851 0010 1B68     		ldr	r3, [r3]
 1852 0012 591C     		adds	r1, r3, #1
 1853 0014 7A68     		ldr	r2, [r7, #4]
 1854 0016 1160     		str	r1, [r2]
 1855 0018 1A46     		mov	r2, r3
 1856 001a FB68     		ldr	r3, [r7, #12]
 1857 001c 1344     		add	r3, r3, r2
 1858 001e FA7A     		ldrb	r2, [r7, #11]
 1859 0020 1A70     		strb	r2, [r3]
 587:Src/main.c    **** }
 1860              		.loc 2 587 0
 1861 0022 1437     		adds	r7, r7, #20
 1862              	.LCFI61:
 1863              		.cfi_def_cfa_offset 4
 1864 0024 BD46     		mov	sp, r7
 1865              	.LCFI62:
 1866              		.cfi_def_cfa_register 13
 1867              		@ sp needed
 1868 0026 5DF8047B 		ldr	r7, [sp], #4
 1869              	.LCFI63:
 1870              		.cfi_restore 7
 1871              		.cfi_def_cfa_offset 0
 1872 002a 7047     		bx	lr
 1873              		.cfi_endproc
 1874              	.LFE165:
 1876              		.section	.text.Error_Handler,"ax",%progbits
 1877              		.align	2
 1878              		.global	Error_Handler
 1879              		.thumb
 1880              		.thumb_func
 1882              	Error_Handler:
 1883              	.LFB166:
 588:Src/main.c    **** 
 589:Src/main.c    **** /* USER CODE END 4 */
 590:Src/main.c    **** 
 591:Src/main.c    **** /**
 592:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 593:Src/main.c    ****   * @param  None
 594:Src/main.c    ****   * @retval None
 595:Src/main.c    ****   */
 596:Src/main.c    **** void Error_Handler(void)
 597:Src/main.c    **** {
 1884              		.loc 2 597 0
 1885              		.cfi_startproc
 1886              		@ args = 0, pretend = 0, frame = 0
 1887              		@ frame_needed = 1, uses_anonymous_args = 0
 1888              		@ link register save eliminated.
 1889 0000 80B4     		push	{r7}
 1890              	.LCFI64:
 1891              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cclaaHiH.s 			page 137


 1892              		.cfi_offset 7, -4
 1893 0002 00AF     		add	r7, sp, #0
 1894              	.LCFI65:
 1895              		.cfi_def_cfa_register 7
 1896              	.L85:
 598:Src/main.c    ****   /* USER CODE BEGIN Error_Handler */
 599:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 600:Src/main.c    ****   while(1) 
 601:Src/main.c    ****   {
 602:Src/main.c    ****   }
 1897              		.loc 2 602 0 discriminator 1
 1898 0004 FEE7     		b	.L85
 1899              		.cfi_endproc
 1900              	.LFE166:
 1902 0006 00BF     		.text
 1903              	.Letext0:
 1904              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1905              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1906              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 1907              		.file 6 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1908              		.file 7 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1909              		.file 8 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1910              		.file 9 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1911              		.file 10 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1912              		.file 11 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1913              		.file 12 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1914              		.file 13 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1915              		.file 14 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1916              		.file 15 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 1917              		.file 16 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1918              		.file 17 "../../Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cclaaHiH.s 			page 138


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cclaaHiH.s:21     .text.arm_clarke_f32:0000000000000000 $t
     /tmp/cclaaHiH.s:25     .text.arm_clarke_f32:0000000000000000 arm_clarke_f32
     /tmp/cclaaHiH.s:77     .text.arm_clarke_f32:0000000000000044 $d
     /tmp/cclaaHiH.s:83     .text.arm_park_f32:0000000000000000 $t
     /tmp/cclaaHiH.s:87     .text.arm_park_f32:0000000000000000 arm_park_f32
     /tmp/cclaaHiH.s:148    .text.arm_inv_park_f32:0000000000000000 $t
     /tmp/cclaaHiH.s:152    .text.arm_inv_park_f32:0000000000000000 arm_inv_park_f32
                            *COM*:0000000000000054 hadc1
                            *COM*:0000000000000040 htim1
                            *COM*:0000000000000070 huart2
     /tmp/cclaaHiH.s:219    .data.U_alpha:0000000000000000 U_alpha
     /tmp/cclaaHiH.s:216    .data.U_alpha:0000000000000000 $d
     /tmp/cclaaHiH.s:226    .bss.U_beta:0000000000000000 U_beta
     /tmp/cclaaHiH.s:223    .bss.U_beta:0000000000000000 $d
     /tmp/cclaaHiH.s:233    .bss.Theta:0000000000000000 Theta
     /tmp/cclaaHiH.s:230    .bss.Theta:0000000000000000 $d
     /tmp/cclaaHiH.s:240    .data.T_halfsample:0000000000000000 T_halfsample
     /tmp/cclaaHiH.s:237    .data.T_halfsample:0000000000000000 $d
     /tmp/cclaaHiH.s:247    .data.counterfrequency:0000000000000000 counterfrequency
     /tmp/cclaaHiH.s:244    .data.counterfrequency:0000000000000000 $d
     /tmp/cclaaHiH.s:254    .bss.sinevalue:0000000000000000 sinevalue
     /tmp/cclaaHiH.s:251    .bss.sinevalue:0000000000000000 $d
     /tmp/cclaaHiH.s:261    .bss.cosinevalue:0000000000000000 cosinevalue
     /tmp/cclaaHiH.s:258    .bss.cosinevalue:0000000000000000 $d
     /tmp/cclaaHiH.s:268    .data.U_max:0000000000000000 U_max
     /tmp/cclaaHiH.s:265    .data.U_max:0000000000000000 $d
     /tmp/cclaaHiH.s:275    .bss.Ia:0000000000000000 Ia
     /tmp/cclaaHiH.s:272    .bss.Ia:0000000000000000 $d
     /tmp/cclaaHiH.s:282    .bss.Ib:0000000000000000 Ib
     /tmp/cclaaHiH.s:279    .bss.Ib:0000000000000000 $d
     /tmp/cclaaHiH.s:289    .bss.Iq_real:0000000000000000 Iq_real
     /tmp/cclaaHiH.s:286    .bss.Iq_real:0000000000000000 $d
     /tmp/cclaaHiH.s:296    .bss.Iq_ref:0000000000000000 Iq_ref
     /tmp/cclaaHiH.s:293    .bss.Iq_ref:0000000000000000 $d
     /tmp/cclaaHiH.s:303    .bss.Ud:0000000000000000 Ud
     /tmp/cclaaHiH.s:300    .bss.Ud:0000000000000000 $d
     /tmp/cclaaHiH.s:310    .bss.Uq:0000000000000000 Uq
     /tmp/cclaaHiH.s:307    .bss.Uq:0000000000000000 $d
                            *COM*:000000000000000c switchtime
     /tmp/cclaaHiH.s:318    .bss.error_sum:0000000000000000 error_sum
     /tmp/cclaaHiH.s:315    .bss.error_sum:0000000000000000 $d
     /tmp/cclaaHiH.s:325    .text.main:0000000000000000 $t
     /tmp/cclaaHiH.s:330    .text.main:0000000000000000 main
     /tmp/cclaaHiH.s:571    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cclaaHiH.s:1140   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cclaaHiH.s:1062   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cclaaHiH.s:830    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cclaaHiH.s:698    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cclaaHiH.s:1882   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cclaaHiH.s:1270   .text.transform:0000000000000000 transform
     /tmp/cclaaHiH.s:1346   .text.PI_control:0000000000000000 PI_control
     /tmp/cclaaHiH.s:1466   .text.svpwm:0000000000000000 svpwm
     /tmp/cclaaHiH.s:543    .text.main:00000000000001b8 $d
     /tmp/cclaaHiH.s:566    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cclaaHiH.s:689    .text.SystemClock_Config:00000000000000b0 $d
ARM GAS  /tmp/cclaaHiH.s 			page 139


     /tmp/cclaaHiH.s:694    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cclaaHiH.s:821    .text.MX_ADC1_Init:00000000000000a0 $d
     /tmp/cclaaHiH.s:826    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cclaaHiH.s:1052   .text.MX_TIM1_Init:000000000000015c $d
     /tmp/cclaaHiH.s:1058   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cclaaHiH.s:1130   .text.MX_USART2_UART_Init:0000000000000054 $d
     /tmp/cclaaHiH.s:1136   .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cclaaHiH.s:1257   .text.MX_GPIO_Init:00000000000000b0 $d
     /tmp/cclaaHiH.s:1265   .text.transform:0000000000000000 $t
     /tmp/cclaaHiH.s:1335   .text.transform:000000000000007c $d
     /tmp/cclaaHiH.s:1341   .text.PI_control:0000000000000000 $t
     /tmp/cclaaHiH.s:1451   .text.PI_control:00000000000000cc $d
     /tmp/cclaaHiH.s:1461   .text.svpwm:0000000000000000 $t
     /tmp/cclaaHiH.s:1828   .text.buffer_append_uint8:0000000000000000 buffer_append_uint8
     /tmp/cclaaHiH.s:1697   .text.svpwm:0000000000000244 $d
     /tmp/cclaaHiH.s:1703   .text.svpwm:000000000000025c $t
     /tmp/cclaaHiH.s:1807   .text.svpwm:0000000000000300 $d
     /tmp/cclaaHiH.s:1824   .text.buffer_append_uint8:0000000000000000 $t
     /tmp/cclaaHiH.s:1877   .text.Error_Handler:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dadd
__aeabi_d2f
__aeabi_dcmpge
HAL_Init
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
HAL_GPIO_WritePin
arm_sin_cos_f32
HAL_Delay
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_GPIO_Init
__aeabi_ddiv
__aeabi_d2uiz
__aeabi_i2d
__aeabi_dmul
__aeabi_dsub
hypotf
arm_sin_f32
ARM GAS  /tmp/cclaaHiH.s 			page 140


HAL_UART_Transmit
