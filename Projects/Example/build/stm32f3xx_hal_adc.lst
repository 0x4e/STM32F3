ARM GAS  /tmp/ccAR1Wyn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_adc.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_ADC_Init,"ax",%progbits
  21              		.align	2
  22              		.weak	HAL_ADC_Init
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ADC_Init:
  27              	.LFB123:
  28              		.file 1 "../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c"
   1:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
   2:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   ******************************************************************************
   3:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @file    stm32f3xx_hal_adc.c
   4:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @version V1.4.0
   6:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @date    16-December-2016
   7:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   9:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          peripheral:
  10:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *           + Initialization and de-initialization functions
  11:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  12:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *           + Operation functions
  13:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  14:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  15:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *           + Control functions
  16:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  17:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *             ++ Channels configuration on injected group
  18:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  19:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *           + State functions
  20:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *             ++ ADC state machine management
  21:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *             ++ Interrupts and flags management
  22:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  23:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          "stm32f3xx_hal_adc_ex.c".
  24:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *
  25:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   @verbatim
  26:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   ==============================================================================
  27:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   ==============================================================================
  29:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   [..] 
  30:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution (available only on 
ARM GAS  /tmp/ccAR1Wyn.s 			page 2


  31:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       STM32F30xxC devices).
  32:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  33:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion, end of injected
  34:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       conversion, and in case of analog watchdog or overrun events.
  35:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  36:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  37:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  38:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  39:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  40:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  41:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  42:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  43:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  44:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) ADC conversion of regular group and injected group.
  45:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  46:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  47:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       for both regular and injected groups.
  48:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  49:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  50:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  51:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) Multimode dual mode (available on devices with 2 ADCs or more).
  52:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  53:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) Configurable DMA data storage in Multimode Dual mode (available on devices
  54:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       with 2 DCs or more).
  55:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  56:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode (available 
  57:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       on devices with 2 DCs or more).
  58:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  59:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) ADC calibration
  60:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  61:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) ADC channels selectable single/differential input (available only on
  62:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       STM32F30xxC devices)
  63:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  64:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) ADC Injected sequencer&channels configuration context queue (available 
  65:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       only on STM32F30xxC devices)
  66:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  67:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) ADC offset on injected and regular groups (offset on regular group 
  68:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       available only on STM32F30xxC devices)
  69:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  70:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) ADC supply requirements: 2.4 V to 3.6 V at full speed and down to 1.8 V at 
  71:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       slower speed.
  72:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
  73:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  74:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       Vdda or to an external voltage reference).
  75:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  76:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  77:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                      ##### How to use this driver #####
  78:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   ==============================================================================
  79:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     [..]
  80:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  81:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  82:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      ============================================================
  83:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      [..]
  84:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
  85:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Enable the ADC interface
  86:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (++) As prerequisite, ADC clock must be configured at RCC top level.
  87:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       
ARM GAS  /tmp/ccAR1Wyn.s 			page 3


  88:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) For STM32F30x/STM32F33x devices:
  89:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              Two possible clock sources: synchronous clock derived from AHB clock 
  90:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              or asynchronous clock derived from ADC dedicated PLL 72MHz.
  91:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               - Synchronous clock is mandatory since used as ADC core clock.
  92:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 Synchronous clock can be used optionally as ADC conversion clock, depending on ADC 
  93:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 Synchronous clock is configured using macro __ADCx_CLK_ENABLE().
  94:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               - Asynchronous can be used optionally as ADC conversion clock, depending on ADC init 
  95:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 Asynchronous clock is configured using function HAL_RCCEx_PeriphCLKConfig().
  96:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              (+++) For example, in case of device with a single ADC:
  97:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  98:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                    other device clock parameters configuration:
  99:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) __HAL_RCC_ADC1_CLK_ENABLE()                            (mandatory)
 100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC (optional, if ADC conve
 101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) PeriphClkInit.Adc1ClockSelection = RCC_ADC1PLLCLK_DIV1 (optional, if ADC conve
 102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&RCC_PeriphClkInitStructure) (optional, if ADC conve
 103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              (+++) For example, in case of device with 4 ADCs:
 105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) if((hadc->Instance == ADC1) || (hadc->Instance == ADC2))   
 107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) {                                                          
 108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   __HAL_RCC_ADC12_CLK_ENABLE()                             (mandatory)
 109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC   (optional, if ADC c
 110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_DIV1 (optional, if ADC c
 111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   HAL_RCCEx_PeriphCLKConfig(&RCC_PeriphClkInitStructure)   (optional, if ADC c
 112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) }                                                          
 113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) else                                                       
 114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) {                                                          
 115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   __HAL_RCC_ADC34_CLK_ENABLE()                              (mandatory)
 116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   PeriphClkInit.Adc34ClockSelection = RCC_ADC34PLLCLK_DIV1; (optional, if ADC 
 117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   HAL_RCCEx_PeriphCLKConfig(&RCC_PeriphClkInitStructure);   (optional, if ADC 
 118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) }                                                          
 119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       
 120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) For STM32F37x devices:
 121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              One clock setting is mandatory: 
 122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              ADC clock (core and conversion clock) from APB2 clock.
 123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              (+++) Example:
 124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
 125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                    other device clock parameters configuration:
 126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC
 127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPLLCLK_DIV2
 128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit)
 129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) ADC pins configuration
 131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
 132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
 133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
 134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using function HAL_GPIO_Init()
 135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
 141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               ADCx_IRQHandler().
 142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
ARM GAS  /tmp/ccAR1Wyn.s 			page 4


 145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using function HAL_DMA_Init().
 146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
 150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      *** Configuration of ADC, groups regular/injected, channels parameters ***
 153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      ==========================================================================
 154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      [..]
 155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         using function HAL_ADC_Init().
 159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Optionally, configure the injected group parameters (conversion trigger, 
 165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         sequencer, ..., of injected group)
 166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         and the channels for injected group parameters (channel number, 
 167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         channel rank into sequencer, ..., into injected group)
 168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         using function HAL_ADCEx_InjectedConfigChannel().
 169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         monitored, thresholds, ...)
 172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Optionally, for devices with several ADC instances: configure the 
 175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         multimode parameters
 176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         using function HAL_ADCEx_MultiModeConfigChannel().
 177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      *** Execution of ADC conversions ***
 179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      ====================================
 180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      [..]
 181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         conversion accuracy
 184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         transfer by DMA.
 188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) ADC conversion by polling:
 190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_Start()
 192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedPollForConversion() )
 195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Retrieve conversion results 
 196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) ADC conversion by interruption: 
ARM GAS  /tmp/ccAR1Wyn.s 			page 5


 202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 (this function must be implemented in user program)
 207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedConvCpltCallback() )
 208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Retrieve conversion results 
 209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 (or for injected group: HAL_ADCEx_InjectedGetValue() )
 211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 (these functions must be implemented in user program)
 220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 destination variable address.
 222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) For devices with several ADCs: ADC multimode conversion 
 226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              with transfer by DMA:
 227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Activate the ADC peripheral (slave)
 228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_Start()
 229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 (conversion start pending ADC master)
 230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Activate the ADC peripheral (master) and start conversions
 231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStart_DMA()
 232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 (these functions must be implemented in user program)
 235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 destination variable address.
 237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (master)
 238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADCEx_MultiModeStop_DMA()
 239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral (slave)
 240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      [..]
 243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+@) HAL_ADCEx_InjectedConvCpltCallback()
 250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+@) HAL_ADCEx_InjectedQueueOverflowCallback() (for STM32F30x/STM32F33x devices)
 251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      *** Deinitialization of ADC ***
 253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      ============================================================
 254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****      [..]
 255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Disable the ADC interface
 257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
ARM GAS  /tmp/ccAR1Wyn.s 			page 6


 259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) ADC clock disable
 261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) For STM32F30x/STM32F33x devices:
 264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****            Caution: For devices with several ADCs:
 265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****            These settings impact both ADC of common group: ADC1&ADC2, ADC3&ADC4
 266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****            if available (ADC2, ADC3, ADC4 availability depends on STM32 product)
 267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              (+++) For example, in case of device with a single ADC:
 269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                    other device clock parameters configuration:
 271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) __HAL_RCC_ADC1_FORCE_RESET()                           (optional)
 272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) __HAL_RCC_ADC1_RELEASE_RESET()                         (optional)
 273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) __HAL_RCC_ADC1_CLK_DISABLE()                           (mandatory)
 274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC (optional, if configure
 275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) PeriphClkInit.Adc1ClockSelection = RCC_ADC1PLLCLK_OFF  (optional, if configure
 276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&RCC_PeriphClkInitStructure) (optional, if configure
 277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              (+++) For example, in case of device with 4 ADCs:
 279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) if((hadc->Instance == ADC1) || (hadc->Instance == ADC2))   
 280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) {                                                          
 281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   __HAL_RCC_ADC12_FORCE_RESET()                            (optional)
 282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   __HAL_RCC_ADC12_RELEASE_RESET()                          (optional)
 283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   __HAL_RCC_ADC12_CLK_DISABLE()                            (mandatory)
 284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC   (optional, if confi
 285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   PeriphClkInit.Adc12ClockSelection = RCC_ADC12PLLCLK_OFF  (optional, if confi
 286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   HAL_RCCEx_PeriphCLKConfig(&RCC_PeriphClkInitStructure)   (optional, if confi
 287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) }                                                          
 288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) else                                                       
 289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) {                                                          
 290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   __HAL_RCC_ADC32_FORCE_RESET()                            (optional)
 291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   __HAL_RCC_ADC32_RELEASE_RESET()                          (optional)
 292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   __HAL_RCC_ADC34_CLK_DISABLE()                            (mandatory)
 293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   PeriphClkInit.Adc34ClockSelection = RCC_ADC34PLLCLK_OFF  (optional, if confi
 294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++)   HAL_RCCEx_PeriphCLKConfig(&RCC_PeriphClkInitStructure)   (optional, if confi
 295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) }                                                          
 296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       
 297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****         (++) For STM32F37x devices:
 298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              (+++) Example:
 299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                    other device clock parameters configuration:
 301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC
 302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection = RCC_ADCPLLCLK_OFF
 303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit)
 304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) ADC pins configuration
 306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Deinitialize the DMA
 315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using function HAL_DMA_Init().
ARM GAS  /tmp/ccAR1Wyn.s 			page 7


 316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     [..]
 320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     @endverbatim
 322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   ******************************************************************************
 323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @attention
 324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *
 325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *
 327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * are permitted provided that the following conditions are met:
 329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *      this list of conditions and the following disclaimer.
 331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *      this list of conditions and the following disclaimer in the documentation
 333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *      and/or other materials provided with the distribution.
 334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *      may be used to endorse or promote products derived from this software
 336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *      without specific prior written permission.
 337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *
 338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *
 349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   ******************************************************************************  
 350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** #include "stm32f3xx_hal.h"
 354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /** @addtogroup STM32F3xx_HAL_Driver
 356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @{
 357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /** @defgroup ADC ADC
 360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief ADC HAL module driver
 361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @{
 362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     
 366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
ARM GAS  /tmp/ccAR1Wyn.s 			page 8


 373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @{
 375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */ 
 376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  *  @brief    Initialization and Configuration functions 
 379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  *
 380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** @verbatim    
 381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  ===============================================================================
 382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  ===============================================================================
 384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) De-initialize the ADC. 
 387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          
 388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** @endverbatim
 389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @{
 390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         depending on both possible clock sources: PLL clock or AHB clock.
 397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         See commented example code below that can be copied and uncommented 
 398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         into HAL_ADC_MspInit().
 399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         before HAL_ADC_Init().
 406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   For devices with several ADCs: parameters related to common ADC 
 413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         registers (ADC clock mode) are set only if all ADCs sharing the
 414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         same common group are disabled.
 415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are  
 416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         without  disabling the other ADCs sharing the same common group.
 419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status
 421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
  29              		.loc 1 423 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccAR1Wyn.s 			page 9


  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
  45              		.loc 1 431 0
  46 0008 0123     		movs	r3, #1
 432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
  47              		.loc 1 432 0
  48 000a 1846     		mov	r0, r3
  49 000c 0C37     		adds	r7, r7, #12
  50              	.LCFI3:
  51              		.cfi_def_cfa_offset 4
  52 000e BD46     		mov	sp, r7
  53              	.LCFI4:
  54              		.cfi_def_cfa_register 13
  55              		@ sp needed
  56 0010 5DF8047B 		ldr	r7, [sp], #4
  57              	.LCFI5:
  58              		.cfi_restore 7
  59              		.cfi_def_cfa_offset 0
  60 0014 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE123:
  64 0016 00BF     		.section	.text.HAL_ADC_DeInit,"ax",%progbits
  65              		.align	2
  66              		.weak	HAL_ADC_DeInit
  67              		.thumb
  68              		.thumb_func
  70              	HAL_ADC_DeInit:
  71              	.LFB124:
 433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done 
 438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is  
 440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same 
 442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         common group is still running.
 443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   For devices with several ADCs: Global reset of all ADCs sharing a
 444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         common group is possible.
 445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         As this function is intended to reset a single ADC, to not impact 
ARM GAS  /tmp/ccAR1Wyn.s 			page 10


 446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         other ADCs, instructions for global reset of multiple ADCs have been
 447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         let commented below.
 448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         If needed, the example code can be copied and uncommented into
 449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         function HAL_ADC_MspDeInit().
 450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status
 452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
  72              		.loc 1 454 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 8
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              	.LCFI6:
  79              		.cfi_def_cfa_offset 4
  80              		.cfi_offset 7, -4
  81 0002 83B0     		sub	sp, sp, #12
  82              	.LCFI7:
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              	.LCFI8:
  86              		.cfi_def_cfa_register 7
  87 0006 7860     		str	r0, [r7, #4]
 455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
  88              		.loc 1 462 0
  89 0008 0123     		movs	r3, #1
 463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
  90              		.loc 1 463 0
  91 000a 1846     		mov	r0, r3
  92 000c 0C37     		adds	r7, r7, #12
  93              	.LCFI9:
  94              		.cfi_def_cfa_offset 4
  95 000e BD46     		mov	sp, r7
  96              	.LCFI10:
  97              		.cfi_def_cfa_register 13
  98              		@ sp needed
  99 0010 5DF8047B 		ldr	r7, [sp], #4
 100              	.LCFI11:
 101              		.cfi_restore 7
 102              		.cfi_def_cfa_offset 0
 103 0014 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE124:
 107 0016 00BF     		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 108              		.align	2
 109              		.weak	HAL_ADC_MspInit
 110              		.thumb
 111              		.thumb_func
ARM GAS  /tmp/ccAR1Wyn.s 			page 11


 113              	HAL_ADC_MspInit:
 114              	.LFB125:
 464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     
 465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Initializes the ADC MSP.
 467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval None
 469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 115              		.loc 1 471 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 8
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120 0000 80B4     		push	{r7}
 121              	.LCFI12:
 122              		.cfi_def_cfa_offset 4
 123              		.cfi_offset 7, -4
 124 0002 83B0     		sub	sp, sp, #12
 125              	.LCFI13:
 126              		.cfi_def_cfa_offset 16
 127 0004 00AF     		add	r7, sp, #0
 128              	.LCFI14:
 129              		.cfi_def_cfa_register 7
 130 0006 7860     		str	r0, [r7, #4]
 472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****    */ 
 478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 131              		.loc 1 478 0
 132 0008 0C37     		adds	r7, r7, #12
 133              	.LCFI15:
 134              		.cfi_def_cfa_offset 4
 135 000a BD46     		mov	sp, r7
 136              	.LCFI16:
 137              		.cfi_def_cfa_register 13
 138              		@ sp needed
 139 000c 5DF8047B 		ldr	r7, [sp], #4
 140              	.LCFI17:
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 0010 7047     		bx	lr
 144              		.cfi_endproc
 145              	.LFE125:
 147 0012 00BF     		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 148              		.align	2
 149              		.weak	HAL_ADC_MspDeInit
 150              		.thumb
 151              		.thumb_func
 153              	HAL_ADC_MspDeInit:
 154              	.LFB126:
 479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
ARM GAS  /tmp/ccAR1Wyn.s 			page 12


 481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  DeInitializes the ADC MSP.
 482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval None
 484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 155              		.loc 1 486 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 8
 158              		@ frame_needed = 1, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160 0000 80B4     		push	{r7}
 161              	.LCFI18:
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 7, -4
 164 0002 83B0     		sub	sp, sp, #12
 165              	.LCFI19:
 166              		.cfi_def_cfa_offset 16
 167 0004 00AF     		add	r7, sp, #0
 168              	.LCFI20:
 169              		.cfi_def_cfa_register 7
 170 0006 7860     		str	r0, [r7, #4]
 487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****    */ 
 493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 171              		.loc 1 493 0
 172 0008 0C37     		adds	r7, r7, #12
 173              	.LCFI21:
 174              		.cfi_def_cfa_offset 4
 175 000a BD46     		mov	sp, r7
 176              	.LCFI22:
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 000c 5DF8047B 		ldr	r7, [sp], #4
 180              	.LCFI23:
 181              		.cfi_restore 7
 182              		.cfi_def_cfa_offset 0
 183 0010 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE126:
 187 0012 00BF     		.section	.text.HAL_ADC_Start,"ax",%progbits
 188              		.align	2
 189              		.weak	HAL_ADC_Start
 190              		.thumb
 191              		.thumb_func
 193              	HAL_ADC_Start:
 194              	.LFB127:
 494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @}
 497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 Input and Output operation functions
ARM GAS  /tmp/ccAR1Wyn.s 			page 13


 500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  *  @brief    IO operation functions 
 501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  *
 502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** @verbatim   
 503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  ===============================================================================
 504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              ##### IO operation functions #####
 505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  ===============================================================================  
 506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Start conversion of regular group.
 508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Stop conversion of regular group.
 509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
 510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Poll for conversion event.
 511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Get result of regular channel conversion.
 512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
 513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
 514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Handle ADC interrupt request
 515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
 516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
 517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****                
 518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** @endverbatim
 519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @{
 520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group.
 523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         Interruptions enabled in this function: None.
 524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  Case of multimode enabled (for devices with several ADCs): This 
 525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         function must be called for ADC slave first, then ADC master. 
 526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
 527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status
 530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
 532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 195              		.loc 1 532 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 200 0000 80B4     		push	{r7}
 201              	.LCFI24:
 202              		.cfi_def_cfa_offset 4
 203              		.cfi_offset 7, -4
 204 0002 83B0     		sub	sp, sp, #12
 205              	.LCFI25:
 206              		.cfi_def_cfa_offset 16
 207 0004 00AF     		add	r7, sp, #0
 208              	.LCFI26:
 209              		.cfi_def_cfa_register 7
 210 0006 7860     		str	r0, [r7, #4]
 533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 211              		.loc 1 537 0
 212 0008 0123     		movs	r3, #1
 538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
ARM GAS  /tmp/ccAR1Wyn.s 			page 14


 213              		.loc 1 538 0
 214 000a 1846     		mov	r0, r3
 215 000c 0C37     		adds	r7, r7, #12
 216              	.LCFI27:
 217              		.cfi_def_cfa_offset 4
 218 000e BD46     		mov	sp, r7
 219              	.LCFI28:
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 0010 5DF8047B 		ldr	r7, [sp], #4
 223              	.LCFI29:
 224              		.cfi_restore 7
 225              		.cfi_def_cfa_offset 0
 226 0014 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE127:
 230 0016 00BF     		.section	.text.HAL_ADC_Stop,"ax",%progbits
 231              		.align	2
 232              		.weak	HAL_ADC_Stop
 233              		.thumb
 234              		.thumb_func
 236              	HAL_ADC_Stop:
 237              	.LFB128:
 539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
 542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
 543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
 544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
 545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
 546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  Case of multimode enabled (for devices with several ADCs): This 
 547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         function must be called for ADC master first, then ADC slave.
 548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For ADC master, converson is stopped and ADC is disabled. 
 549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         has already stopped conversion of ADC slave).
 551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status.
 553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
 555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 238              		.loc 1 555 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
 244              	.LCFI30:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 7, -4
 247 0002 83B0     		sub	sp, sp, #12
 248              	.LCFI31:
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              	.LCFI32:
 252              		.cfi_def_cfa_register 7
 253 0006 7860     		str	r0, [r7, #4]
 556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccAR1Wyn.s 			page 15


 557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 254              		.loc 1 563 0
 255 0008 0123     		movs	r3, #1
 564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 256              		.loc 1 564 0
 257 000a 1846     		mov	r0, r3
 258 000c 0C37     		adds	r7, r7, #12
 259              	.LCFI33:
 260              		.cfi_def_cfa_offset 4
 261 000e BD46     		mov	sp, r7
 262              	.LCFI34:
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 0010 5DF8047B 		ldr	r7, [sp], #4
 266              	.LCFI35:
 267              		.cfi_restore 7
 268              		.cfi_def_cfa_offset 0
 269 0014 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE128:
 273 0016 00BF     		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 274              		.align	2
 275              		.weak	HAL_ADC_PollForConversion
 276              		.thumb
 277              		.thumb_func
 279              	HAL_ADC_PollForConversion:
 280              	.LFB129:
 565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
 568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
 570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status
 571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
 573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 281              		.loc 1 573 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              	.LCFI36:
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 83B0     		sub	sp, sp, #12
 291              	.LCFI37:
 292              		.cfi_def_cfa_offset 16
 293 0004 00AF     		add	r7, sp, #0
 294              	.LCFI38:
 295              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccAR1Wyn.s 			page 16


 296 0006 7860     		str	r0, [r7, #4]
 297 0008 3960     		str	r1, [r7]
 574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(Timeout);
 577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 298              		.loc 1 582 0
 299 000a 0123     		movs	r3, #1
 583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 300              		.loc 1 583 0
 301 000c 1846     		mov	r0, r3
 302 000e 0C37     		adds	r7, r7, #12
 303              	.LCFI39:
 304              		.cfi_def_cfa_offset 4
 305 0010 BD46     		mov	sp, r7
 306              	.LCFI40:
 307              		.cfi_def_cfa_register 13
 308              		@ sp needed
 309 0012 5DF8047B 		ldr	r7, [sp], #4
 310              	.LCFI41:
 311              		.cfi_restore 7
 312              		.cfi_def_cfa_offset 0
 313 0016 7047     		bx	lr
 314              		.cfi_endproc
 315              	.LFE129:
 317              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 318              		.align	2
 319              		.weak	HAL_ADC_PollForEvent
 320              		.thumb
 321              		.thumb_func
 323              	HAL_ADC_PollForEvent:
 324              	.LFB130:
 584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Poll for conversion event.
 587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  EventType: the ADC event type.
 589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          This parameter can be one of the following values:
 590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog 1 event (main analog watchdog, present on al
 591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *            @arg ADC_AWD2_EVENT: ADC Analog watchdog 2 event (additional analog watchdog, presen
 592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *            @arg ADC_AWD3_EVENT: ADC Analog watchdog 3 event (additional analog watchdog, presen
 593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event
 594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *            @arg ADC_JQOVF_EVENT: ADC Injected context queue overflow event
 595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  Timeout: Timeout value in millisecond.
 596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status
 597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t
 599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 325              		.loc 1 599 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 16
 328              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccAR1Wyn.s 			page 17


 329              		@ link register save eliminated.
 330 0000 80B4     		push	{r7}
 331              	.LCFI42:
 332              		.cfi_def_cfa_offset 4
 333              		.cfi_offset 7, -4
 334 0002 85B0     		sub	sp, sp, #20
 335              	.LCFI43:
 336              		.cfi_def_cfa_offset 24
 337 0004 00AF     		add	r7, sp, #0
 338              	.LCFI44:
 339              		.cfi_def_cfa_register 7
 340 0006 F860     		str	r0, [r7, #12]
 341 0008 B960     		str	r1, [r7, #8]
 342 000a 7A60     		str	r2, [r7, #4]
 600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(EventType);
 603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(Timeout);
 604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 343              		.loc 1 609 0
 344 000c 0123     		movs	r3, #1
 610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 345              		.loc 1 610 0
 346 000e 1846     		mov	r0, r3
 347 0010 1437     		adds	r7, r7, #20
 348              	.LCFI45:
 349              		.cfi_def_cfa_offset 4
 350 0012 BD46     		mov	sp, r7
 351              	.LCFI46:
 352              		.cfi_def_cfa_register 13
 353              		@ sp needed
 354 0014 5DF8047B 		ldr	r7, [sp], #4
 355              	.LCFI47:
 356              		.cfi_restore 7
 357              		.cfi_def_cfa_offset 0
 358 0018 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE130:
 362 001a 00BF     		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 363              		.align	2
 364              		.weak	HAL_ADC_Start_IT
 365              		.thumb
 366              		.thumb_func
 368              	HAL_ADC_Start_IT:
 369              	.LFB131:
 611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
 614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         Interruptions enabled in this function:
 615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          - EOC (end of conversion of regular group) or EOS (end of 
 616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *            sequence of regular group) depending on ADC initialization 
 617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *            parameter "EOCSelection" (if available)
ARM GAS  /tmp/ccAR1Wyn.s 			page 18


 618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          - overrun (if available)
 619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
 620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  Case of multimode enabled (for devices with several ADCs): This 
 621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         function must be called for ADC slave first, then ADC master. 
 622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
 623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status
 626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
 628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 370              		.loc 1 628 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 8
 373              		@ frame_needed = 1, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375 0000 80B4     		push	{r7}
 376              	.LCFI48:
 377              		.cfi_def_cfa_offset 4
 378              		.cfi_offset 7, -4
 379 0002 83B0     		sub	sp, sp, #12
 380              	.LCFI49:
 381              		.cfi_def_cfa_offset 16
 382 0004 00AF     		add	r7, sp, #0
 383              	.LCFI50:
 384              		.cfi_def_cfa_register 7
 385 0006 7860     		str	r0, [r7, #4]
 629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 386              		.loc 1 636 0
 387 0008 0123     		movs	r3, #1
 637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 388              		.loc 1 637 0
 389 000a 1846     		mov	r0, r3
 390 000c 0C37     		adds	r7, r7, #12
 391              	.LCFI51:
 392              		.cfi_def_cfa_offset 4
 393 000e BD46     		mov	sp, r7
 394              	.LCFI52:
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 0010 5DF8047B 		ldr	r7, [sp], #4
 398              	.LCFI53:
 399              		.cfi_restore 7
 400              		.cfi_def_cfa_offset 0
 401 0014 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE131:
 405 0016 00BF     		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 406              		.align	2
 407              		.weak	HAL_ADC_Stop_IT
ARM GAS  /tmp/ccAR1Wyn.s 			page 19


 408              		.thumb
 409              		.thumb_func
 411              	HAL_ADC_Stop_IT:
 412              	.LFB132:
 638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
 641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         case of auto_injection mode), disable interruption of 
 642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
 643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
 644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
 645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
 646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  Case of multimode enabled (for devices with several ADCs): This 
 647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         function must be called for ADC master first, then ADC slave.
 648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For ADC master, conversion is stopped and ADC is disabled. 
 649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         has already stopped conversion of ADC slave).
 651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status.
 653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
 655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 413              		.loc 1 655 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 8
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418 0000 80B4     		push	{r7}
 419              	.LCFI54:
 420              		.cfi_def_cfa_offset 4
 421              		.cfi_offset 7, -4
 422 0002 83B0     		sub	sp, sp, #12
 423              	.LCFI55:
 424              		.cfi_def_cfa_offset 16
 425 0004 00AF     		add	r7, sp, #0
 426              	.LCFI56:
 427              		.cfi_def_cfa_register 7
 428 0006 7860     		str	r0, [r7, #4]
 656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 429              		.loc 1 663 0
 430 0008 0123     		movs	r3, #1
 664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 431              		.loc 1 664 0
 432 000a 1846     		mov	r0, r3
 433 000c 0C37     		adds	r7, r7, #12
 434              	.LCFI57:
 435              		.cfi_def_cfa_offset 4
 436 000e BD46     		mov	sp, r7
 437              	.LCFI58:
 438              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccAR1Wyn.s 			page 20


 439              		@ sp needed
 440 0010 5DF8047B 		ldr	r7, [sp], #4
 441              	.LCFI59:
 442              		.cfi_restore 7
 443              		.cfi_def_cfa_offset 0
 444 0014 7047     		bx	lr
 445              		.cfi_endproc
 446              	.LFE132:
 448 0016 00BF     		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 449              		.align	2
 450              		.weak	HAL_ADC_Start_DMA
 451              		.thumb
 452              		.thumb_func
 454              	HAL_ADC_Start_DMA:
 455              	.LFB133:
 665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
 668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         through DMA.
 669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         Interruptions enabled in this function:
 670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          - DMA transfer complete
 671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          - DMA half transfer
 672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          - overrun (if available)
 673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
 674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  Case of multimode enabled (for devices with several ADCs): This 
 675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         function is for single-ADC mode only. For multimode, use the 
 676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         dedicated MultimodeStart function.
 677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  pData: The destination Buffer address.
 679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
 680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval None
 681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Lengt
 683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 456              		.loc 1 683 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 16
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 461 0000 80B4     		push	{r7}
 462              	.LCFI60:
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 85B0     		sub	sp, sp, #20
 466              	.LCFI61:
 467              		.cfi_def_cfa_offset 24
 468 0004 00AF     		add	r7, sp, #0
 469              	.LCFI62:
 470              		.cfi_def_cfa_register 7
 471 0006 F860     		str	r0, [r7, #12]
 472 0008 B960     		str	r1, [r7, #8]
 473 000a 7A60     		str	r2, [r7, #4]
 684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(pData);
 687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(Length);
 688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
ARM GAS  /tmp/ccAR1Wyn.s 			page 21


 689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 474              		.loc 1 693 0
 475 000c 0123     		movs	r3, #1
 694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 476              		.loc 1 694 0
 477 000e 1846     		mov	r0, r3
 478 0010 1437     		adds	r7, r7, #20
 479              	.LCFI63:
 480              		.cfi_def_cfa_offset 4
 481 0012 BD46     		mov	sp, r7
 482              	.LCFI64:
 483              		.cfi_def_cfa_register 13
 484              		@ sp needed
 485 0014 5DF8047B 		ldr	r7, [sp], #4
 486              	.LCFI65:
 487              		.cfi_restore 7
 488              		.cfi_def_cfa_offset 0
 489 0018 7047     		bx	lr
 490              		.cfi_endproc
 491              	.LFE133:
 493 001a 00BF     		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 494              		.align	2
 495              		.weak	HAL_ADC_Stop_DMA
 496              		.thumb
 497              		.thumb_func
 499              	HAL_ADC_Stop_DMA:
 500              	.LFB134:
 695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
 698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
 699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         ADC peripheral.
 700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
 701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
 702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
 703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note:  Case of multimode enabled (for devices with several ADCs): This 
 704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         function is for single-ADC mode only. For multimode, use the 
 705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         dedicated MultimodeStop function.
 706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status.
 708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
 710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 501              		.loc 1 710 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
 507              	.LCFI66:
 508              		.cfi_def_cfa_offset 4
 509              		.cfi_offset 7, -4
 510 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccAR1Wyn.s 			page 22


 511              	.LCFI67:
 512              		.cfi_def_cfa_offset 16
 513 0004 00AF     		add	r7, sp, #0
 514              	.LCFI68:
 515              		.cfi_def_cfa_register 7
 516 0006 7860     		str	r0, [r7, #4]
 711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 517              		.loc 1 718 0
 518 0008 0123     		movs	r3, #1
 719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 519              		.loc 1 719 0
 520 000a 1846     		mov	r0, r3
 521 000c 0C37     		adds	r7, r7, #12
 522              	.LCFI69:
 523              		.cfi_def_cfa_offset 4
 524 000e BD46     		mov	sp, r7
 525              	.LCFI70:
 526              		.cfi_def_cfa_register 13
 527              		@ sp needed
 528 0010 5DF8047B 		ldr	r7, [sp], #4
 529              	.LCFI71:
 530              		.cfi_restore 7
 531              		.cfi_def_cfa_offset 0
 532 0014 7047     		bx	lr
 533              		.cfi_endproc
 534              	.LFE134:
 536 0016 00BF     		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 537              		.align	2
 538              		.weak	HAL_ADC_GetValue
 539              		.thumb
 540              		.thumb_func
 542              	HAL_ADC_GetValue:
 543              	.LFB135:
 720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
 723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   Reading DR register automatically clears EOC (end of conversion of
 724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         regular group) flag.
 725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         Additionally, this functions clears EOS (end of sequence of
 726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         regular group) flag, in case of the end of the sequence is reached.
 727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval Converted value
 729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
 731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 544              		.loc 1 731 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 8
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548              		@ link register save eliminated.
ARM GAS  /tmp/ccAR1Wyn.s 			page 23


 549 0000 80B4     		push	{r7}
 550              	.LCFI72:
 551              		.cfi_def_cfa_offset 4
 552              		.cfi_offset 7, -4
 553 0002 83B0     		sub	sp, sp, #12
 554              	.LCFI73:
 555              		.cfi_def_cfa_offset 16
 556 0004 00AF     		add	r7, sp, #0
 557              	.LCFI74:
 558              		.cfi_def_cfa_register 7
 559 0006 7860     		str	r0, [r7, #4]
 732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return ADC converted value */ 
 736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return hadc->Instance->DR;
 560              		.loc 1 736 0
 561 0008 7B68     		ldr	r3, [r7, #4]
 562 000a 1B68     		ldr	r3, [r3]
 563 000c 1B6C     		ldr	r3, [r3, #64]
 737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 564              		.loc 1 737 0
 565 000e 1846     		mov	r0, r3
 566 0010 0C37     		adds	r7, r7, #12
 567              	.LCFI75:
 568              		.cfi_def_cfa_offset 4
 569 0012 BD46     		mov	sp, r7
 570              	.LCFI76:
 571              		.cfi_def_cfa_register 13
 572              		@ sp needed
 573 0014 5DF8047B 		ldr	r7, [sp], #4
 574              	.LCFI77:
 575              		.cfi_restore 7
 576              		.cfi_def_cfa_offset 0
 577 0018 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE135:
 581 001a 00BF     		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 582              		.align	2
 583              		.weak	HAL_ADC_IRQHandler
 584              		.thumb
 585              		.thumb_func
 587              	HAL_ADC_IRQHandler:
 588              	.LFB136:
 738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Handles ADC interrupt request.  
 741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval None
 743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
 745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 589              		.loc 1 745 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 8
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593              		@ link register save eliminated.
ARM GAS  /tmp/ccAR1Wyn.s 			page 24


 594 0000 80B4     		push	{r7}
 595              	.LCFI78:
 596              		.cfi_def_cfa_offset 4
 597              		.cfi_offset 7, -4
 598 0002 83B0     		sub	sp, sp, #12
 599              	.LCFI79:
 600              		.cfi_def_cfa_offset 16
 601 0004 00AF     		add	r7, sp, #0
 602              	.LCFI80:
 603              		.cfi_def_cfa_register 7
 604 0006 7860     		str	r0, [r7, #4]
 746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 605              		.loc 1 751 0
 606 0008 0C37     		adds	r7, r7, #12
 607              	.LCFI81:
 608              		.cfi_def_cfa_offset 4
 609 000a BD46     		mov	sp, r7
 610              	.LCFI82:
 611              		.cfi_def_cfa_register 13
 612              		@ sp needed
 613 000c 5DF8047B 		ldr	r7, [sp], #4
 614              	.LCFI83:
 615              		.cfi_restore 7
 616              		.cfi_def_cfa_offset 0
 617 0010 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE136:
 621 0012 00BF     		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 622              		.align	2
 623              		.weak	HAL_ADC_ConvCpltCallback
 624              		.thumb
 625              		.thumb_func
 627              	HAL_ADC_ConvCpltCallback:
 628              	.LFB137:
 752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Conversion complete callback in non blocking mode 
 755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval None
 757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 629              		.loc 1 759 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 8
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634 0000 80B4     		push	{r7}
 635              	.LCFI84:
 636              		.cfi_def_cfa_offset 4
 637              		.cfi_offset 7, -4
 638 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccAR1Wyn.s 			page 25


 639              	.LCFI85:
 640              		.cfi_def_cfa_offset 16
 641 0004 00AF     		add	r7, sp, #0
 642              	.LCFI86:
 643              		.cfi_def_cfa_register 7
 644 0006 7860     		str	r0, [r7, #4]
 760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
 765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****    */
 766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 645              		.loc 1 766 0
 646 0008 0C37     		adds	r7, r7, #12
 647              	.LCFI87:
 648              		.cfi_def_cfa_offset 4
 649 000a BD46     		mov	sp, r7
 650              	.LCFI88:
 651              		.cfi_def_cfa_register 13
 652              		@ sp needed
 653 000c 5DF8047B 		ldr	r7, [sp], #4
 654              	.LCFI89:
 655              		.cfi_restore 7
 656              		.cfi_def_cfa_offset 0
 657 0010 7047     		bx	lr
 658              		.cfi_endproc
 659              	.LFE137:
 661 0012 00BF     		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 662              		.align	2
 663              		.weak	HAL_ADC_ConvHalfCpltCallback
 664              		.thumb
 665              		.thumb_func
 667              	HAL_ADC_ConvHalfCpltCallback:
 668              	.LFB138:
 767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non blocking mode 
 770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval None
 772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
 774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 669              		.loc 1 774 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 8
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674 0000 80B4     		push	{r7}
 675              	.LCFI90:
 676              		.cfi_def_cfa_offset 4
 677              		.cfi_offset 7, -4
 678 0002 83B0     		sub	sp, sp, #12
 679              	.LCFI91:
 680              		.cfi_def_cfa_offset 16
 681 0004 00AF     		add	r7, sp, #0
 682              	.LCFI92:
ARM GAS  /tmp/ccAR1Wyn.s 			page 26


 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
 780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 685              		.loc 1 781 0
 686 0008 0C37     		adds	r7, r7, #12
 687              	.LCFI93:
 688              		.cfi_def_cfa_offset 4
 689 000a BD46     		mov	sp, r7
 690              	.LCFI94:
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 000c 5DF8047B 		ldr	r7, [sp], #4
 694              	.LCFI95:
 695              		.cfi_restore 7
 696              		.cfi_def_cfa_offset 0
 697 0010 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE138:
 701 0012 00BF     		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 702              		.align	2
 703              		.weak	HAL_ADC_LevelOutOfWindowCallback
 704              		.thumb
 705              		.thumb_func
 707              	HAL_ADC_LevelOutOfWindowCallback:
 708              	.LFB139:
 782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Analog watchdog callback in non blocking mode. 
 785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval None
 787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
 789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 709              		.loc 1 789 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 8
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 80B4     		push	{r7}
 715              	.LCFI96:
 716              		.cfi_def_cfa_offset 4
 717              		.cfi_offset 7, -4
 718 0002 83B0     		sub	sp, sp, #12
 719              	.LCFI97:
 720              		.cfi_def_cfa_offset 16
 721 0004 00AF     		add	r7, sp, #0
 722              	.LCFI98:
 723              		.cfi_def_cfa_register 7
 724 0006 7860     		str	r0, [r7, #4]
 790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
ARM GAS  /tmp/ccAR1Wyn.s 			page 27


 792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****             function HAL_ADC_LevelOoutOfWindowCallback must be implemented in the user file.
 795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 725              		.loc 1 796 0
 726 0008 0C37     		adds	r7, r7, #12
 727              	.LCFI99:
 728              		.cfi_def_cfa_offset 4
 729 000a BD46     		mov	sp, r7
 730              	.LCFI100:
 731              		.cfi_def_cfa_register 13
 732              		@ sp needed
 733 000c 5DF8047B 		ldr	r7, [sp], #4
 734              	.LCFI101:
 735              		.cfi_restore 7
 736              		.cfi_def_cfa_offset 0
 737 0010 7047     		bx	lr
 738              		.cfi_endproc
 739              	.LFE139:
 741 0012 00BF     		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 742              		.align	2
 743              		.weak	HAL_ADC_ErrorCallback
 744              		.thumb
 745              		.thumb_func
 747              	HAL_ADC_ErrorCallback:
 748              	.LFB140:
 797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  ADC error callback in non blocking mode
 800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *        (ADC conversion with interruption or transfer by DMA)
 801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval None
 803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
 805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 749              		.loc 1 805 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754 0000 80B4     		push	{r7}
 755              	.LCFI102:
 756              		.cfi_def_cfa_offset 4
 757              		.cfi_offset 7, -4
 758 0002 83B0     		sub	sp, sp, #12
 759              	.LCFI103:
 760              		.cfi_def_cfa_offset 16
 761 0004 00AF     		add	r7, sp, #0
 762              	.LCFI104:
 763              		.cfi_def_cfa_register 7
 764 0006 7860     		str	r0, [r7, #4]
 806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
ARM GAS  /tmp/ccAR1Wyn.s 			page 28


 811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 765              		.loc 1 812 0
 766 0008 0C37     		adds	r7, r7, #12
 767              	.LCFI105:
 768              		.cfi_def_cfa_offset 4
 769 000a BD46     		mov	sp, r7
 770              	.LCFI106:
 771              		.cfi_def_cfa_register 13
 772              		@ sp needed
 773 000c 5DF8047B 		ldr	r7, [sp], #4
 774              	.LCFI107:
 775              		.cfi_restore 7
 776              		.cfi_def_cfa_offset 0
 777 0010 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE140:
 781 0012 00BF     		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 782              		.align	2
 783              		.weak	HAL_ADC_ConfigChannel
 784              		.thumb
 785              		.thumb_func
 787              	HAL_ADC_ConfigChannel:
 788              	.LFB141:
 813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @}
 816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
 819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  *  @brief    Peripheral Control functions 
 820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  *
 821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** @verbatim   
 822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  ===============================================================================
 823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****              ##### Peripheral Control functions #####
 824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  ===============================================================================  
 825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Configure channels on regular group
 827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Configure the analog watchdog
 828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       
 829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** @endverbatim
 830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @{
 831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Configures the the selected channel to be linked to the regular
 835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         group.
 836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
 837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
 838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         The recommended sampling time is at least:
 839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
 840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
 841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *            Vbat/VrefInt/TempSensor.
 842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         These internal paths can be be disabled using function 
 843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         HAL_ADC_DeInit().
 844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         This function initializes channel into regular group, following  
ARM GAS  /tmp/ccAR1Wyn.s 			page 29


 846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
 847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
 848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         the ADC.
 849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         "ADC_ChannelConfTypeDef".
 852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  sConfig: Structure of ADC channel for regular group.
 854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status
 855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sCo
 857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 789              		.loc 1 857 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 8
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 80B4     		push	{r7}
 795              	.LCFI108:
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 7, -4
 798 0002 83B0     		sub	sp, sp, #12
 799              	.LCFI109:
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              	.LCFI110:
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 805 0008 3960     		str	r1, [r7]
 858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(sConfig);
 861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 806              		.loc 1 866 0
 807 000a 0123     		movs	r3, #1
 867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 808              		.loc 1 867 0
 809 000c 1846     		mov	r0, r3
 810 000e 0C37     		adds	r7, r7, #12
 811              	.LCFI111:
 812              		.cfi_def_cfa_offset 4
 813 0010 BD46     		mov	sp, r7
 814              	.LCFI112:
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 0012 5DF8047B 		ldr	r7, [sp], #4
 818              	.LCFI113:
 819              		.cfi_restore 7
 820              		.cfi_def_cfa_offset 0
 821 0016 7047     		bx	lr
 822              		.cfi_endproc
 823              	.LFE141:
ARM GAS  /tmp/ccAR1Wyn.s 			page 30


 825              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 826              		.align	2
 827              		.weak	HAL_ADC_AnalogWDGConfig
 828              		.thumb
 829              		.thumb_func
 831              	HAL_ADC_AnalogWDGConfig:
 832              	.LFB142:
 868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Configures the analog watchdog.
 871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, following  
 873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
 874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without reseting 
 875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         the ADC.
 876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
 879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
 881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL status
 882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** __weak HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef*
 884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 833              		.loc 1 884 0
 834              		.cfi_startproc
 835              		@ args = 0, pretend = 0, frame = 8
 836              		@ frame_needed = 1, uses_anonymous_args = 0
 837              		@ link register save eliminated.
 838 0000 80B4     		push	{r7}
 839              	.LCFI114:
 840              		.cfi_def_cfa_offset 4
 841              		.cfi_offset 7, -4
 842 0002 83B0     		sub	sp, sp, #12
 843              	.LCFI115:
 844              		.cfi_def_cfa_offset 16
 845 0004 00AF     		add	r7, sp, #0
 846              	.LCFI116:
 847              		.cfi_def_cfa_register 7
 848 0006 7860     		str	r0, [r7, #4]
 849 0008 3960     		str	r1, [r7]
 885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(hadc);
 887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   UNUSED(AnalogWDGConfig);
 888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Note : This function is defined into this file for library reference. */
 890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /*        Function content is located into file stm32f3xx_hal_adc_ex.c   */
 891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return function status */
 893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return HAL_ERROR;
 850              		.loc 1 893 0
 851 000a 0123     		movs	r3, #1
 894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 852              		.loc 1 894 0
 853 000c 1846     		mov	r0, r3
 854 000e 0C37     		adds	r7, r7, #12
 855              	.LCFI117:
ARM GAS  /tmp/ccAR1Wyn.s 			page 31


 856              		.cfi_def_cfa_offset 4
 857 0010 BD46     		mov	sp, r7
 858              	.LCFI118:
 859              		.cfi_def_cfa_register 13
 860              		@ sp needed
 861 0012 5DF8047B 		ldr	r7, [sp], #4
 862              	.LCFI119:
 863              		.cfi_restore 7
 864              		.cfi_def_cfa_offset 0
 865 0016 7047     		bx	lr
 866              		.cfi_endproc
 867              	.LFE142:
 869              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 870              		.align	2
 871              		.global	HAL_ADC_GetState
 872              		.thumb
 873              		.thumb_func
 875              	HAL_ADC_GetState:
 876              	.LFB143:
 895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @}
 898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
 901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  *  @brief   ADC Peripheral State functions 
 902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  *
 903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** @verbatim   
 904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  ===============================================================================
 905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
 906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****  ===============================================================================
 907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     [..]
 908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
 909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****     peripheral.
 910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Check the ADC state
 911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****       (+) Check the ADC error code
 912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****          
 913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** @endverbatim
 914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @{
 915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  return the ADC state
 919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfield, state must be compared
 920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         with bit by bit.
 921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *         For example:                                                         
 922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *           " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_REG_BUSY)) "
 923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   *           " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD1)    ) "
 924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval HAL state
 926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
 928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 877              		.loc 1 928 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 8
 880              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccAR1Wyn.s 			page 32


 881              		@ link register save eliminated.
 882 0000 80B4     		push	{r7}
 883              	.LCFI120:
 884              		.cfi_def_cfa_offset 4
 885              		.cfi_offset 7, -4
 886 0002 83B0     		sub	sp, sp, #12
 887              	.LCFI121:
 888              		.cfi_def_cfa_offset 16
 889 0004 00AF     		add	r7, sp, #0
 890              	.LCFI122:
 891              		.cfi_def_cfa_register 7
 892 0006 7860     		str	r0, [r7, #4]
 929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Check the parameters */
 930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   
 932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   /* Return ADC state */
 933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return hadc->State;
 893              		.loc 1 933 0
 894 0008 7B68     		ldr	r3, [r7, #4]
 895 000a 5B6C     		ldr	r3, [r3, #68]
 934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 896              		.loc 1 934 0
 897 000c 1846     		mov	r0, r3
 898 000e 0C37     		adds	r7, r7, #12
 899              	.LCFI123:
 900              		.cfi_def_cfa_offset 4
 901 0010 BD46     		mov	sp, r7
 902              	.LCFI124:
 903              		.cfi_def_cfa_register 13
 904              		@ sp needed
 905 0012 5DF8047B 		ldr	r7, [sp], #4
 906              	.LCFI125:
 907              		.cfi_restore 7
 908              		.cfi_def_cfa_offset 0
 909 0016 7047     		bx	lr
 910              		.cfi_endproc
 911              	.LFE143:
 913              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 914              		.align	2
 915              		.global	HAL_ADC_GetError
 916              		.thumb
 917              		.thumb_func
 919              	HAL_ADC_GetError:
 920              	.LFB144:
 935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** 
 936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** /**
 937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @brief  Return the ADC error code
 938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @param  hadc: ADC handle
 939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   * @retval ADC Error Code
 940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   */
 941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
 942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** {
 921              		.loc 1 942 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 8
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925              		@ link register save eliminated.
ARM GAS  /tmp/ccAR1Wyn.s 			page 33


 926 0000 80B4     		push	{r7}
 927              	.LCFI126:
 928              		.cfi_def_cfa_offset 4
 929              		.cfi_offset 7, -4
 930 0002 83B0     		sub	sp, sp, #12
 931              	.LCFI127:
 932              		.cfi_def_cfa_offset 16
 933 0004 00AF     		add	r7, sp, #0
 934              	.LCFI128:
 935              		.cfi_def_cfa_register 7
 936 0006 7860     		str	r0, [r7, #4]
 943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c ****   return hadc->ErrorCode;
 937              		.loc 1 943 0
 938 0008 7B68     		ldr	r3, [r7, #4]
 939 000a 9B6C     		ldr	r3, [r3, #72]
 944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc.c **** }
 940              		.loc 1 944 0
 941 000c 1846     		mov	r0, r3
 942 000e 0C37     		adds	r7, r7, #12
 943              	.LCFI129:
 944              		.cfi_def_cfa_offset 4
 945 0010 BD46     		mov	sp, r7
 946              	.LCFI130:
 947              		.cfi_def_cfa_register 13
 948              		@ sp needed
 949 0012 5DF8047B 		ldr	r7, [sp], #4
 950              	.LCFI131:
 951              		.cfi_restore 7
 952              		.cfi_def_cfa_offset 0
 953 0016 7047     		bx	lr
 954              		.cfi_endproc
 955              	.LFE144:
 957              		.text
 958              	.Letext0:
 959              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 960              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 961              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 962              		.file 5 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 963              		.file 6 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 964              		.file 7 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 965              		.file 8 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 966              		.file 9 "../../Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccAR1Wyn.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_adc.c
     /tmp/ccAR1Wyn.s:21     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccAR1Wyn.s:26     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccAR1Wyn.s:65     .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccAR1Wyn.s:70     .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccAR1Wyn.s:108    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccAR1Wyn.s:113    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccAR1Wyn.s:148    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccAR1Wyn.s:153    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccAR1Wyn.s:188    .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccAR1Wyn.s:193    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccAR1Wyn.s:231    .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccAR1Wyn.s:236    .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccAR1Wyn.s:274    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccAR1Wyn.s:279    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccAR1Wyn.s:318    .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccAR1Wyn.s:323    .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccAR1Wyn.s:363    .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccAR1Wyn.s:368    .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccAR1Wyn.s:406    .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccAR1Wyn.s:411    .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccAR1Wyn.s:449    .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccAR1Wyn.s:454    .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccAR1Wyn.s:494    .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccAR1Wyn.s:499    .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccAR1Wyn.s:537    .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccAR1Wyn.s:542    .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccAR1Wyn.s:582    .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccAR1Wyn.s:587    .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccAR1Wyn.s:622    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccAR1Wyn.s:627    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccAR1Wyn.s:662    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccAR1Wyn.s:667    .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccAR1Wyn.s:702    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccAR1Wyn.s:707    .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccAR1Wyn.s:742    .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccAR1Wyn.s:747    .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccAR1Wyn.s:782    .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccAR1Wyn.s:787    .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccAR1Wyn.s:826    .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccAR1Wyn.s:831    .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccAR1Wyn.s:870    .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccAR1Wyn.s:875    .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccAR1Wyn.s:914    .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccAR1Wyn.s:919    .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
