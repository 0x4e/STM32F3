ARM GAS  /tmp/ccumkl9n.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_adc_ex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_ADC_Init,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_ADC_Init
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ADC_Init:
  27              	.LFB123:
  28              		.file 1 "../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c"
   1:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
   2:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************
   3:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @file    stm32f3xx_hal_adc_ex.c
   4:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @version V1.4.0
   6:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @date    16-December-2016
   7:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   9:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          peripheral:
  10:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *           + Operation functions
  11:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Start, stop, get result of conversions of injected
  12:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *                group, using 2 possible modes: polling, interruption.
  13:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Multimode feature (available on devices with 2 ADCs or more)
  14:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Calibration (ADC automatic self-calibration)
  15:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *           + Control functions
  16:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *             ++ Channels configuration on injected group
  17:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file 
  18:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          "stm32f3xx_hal_adc.c".
  19:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         
  20:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   @verbatim
  21:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   [..] 
  22:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  23:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       available in file of generic functions "stm32f3xx_hal_adc.c".
  24:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   [..]
  25:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   @endverbatim
  26:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************
  27:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @attention
  28:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  29:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  30:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
ARM GAS  /tmp/ccumkl9n.s 			page 2


  31:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  32:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * are permitted provided that the following conditions are met:
  33:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  34:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer.
  35:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  36:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  37:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      and/or other materials provided with the distribution.
  38:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  39:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      may be used to endorse or promote products derived from this software
  40:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *      without specific prior written permission.
  41:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  42:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  43:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  44:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  45:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  46:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  47:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  48:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  49:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  50:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  51:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  52:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
  53:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ******************************************************************************  
  54:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  55:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  56:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  57:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #include "stm32f3xx_hal.h"
  58:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  59:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @addtogroup STM32F3xx_HAL_Driver
  60:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  61:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  62:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  63:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  64:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  65:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  66:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  67:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  68:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  69:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
  70:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  71:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  72:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADCEx Private Constants
  73:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
  74:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
  75:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
  76:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
  77:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
  78:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
  79:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Fixed timeout values for ADC calibration, enable settling time, disable  */
  80:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* settling time.                                                           */
  81:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Values defined to be higher than worst cases: low clock frequency,       */
  82:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescalers.                                                      */
  83:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.5 MHz, ADC clock         */
  84:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 256 (devices STM32F30xx), sampling time 7.5 ADC clock cycles,  */
  85:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* resolution 12 bits.                                                      */
  86:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
  87:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT         ( 10U)
ARM GAS  /tmp/ccumkl9n.s 			page 3


  88:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_ENABLE_TIMEOUT              (  2U)
  89:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_DISABLE_TIMEOUT             (  2U)
  90:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STOP_CONVERSION_TIMEOUT     ( 11U)
  91:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
  92:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout to wait for current conversion on going to be completed.         */
  93:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout fixed to worst case, for 1 channel.                              */
  94:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - maximum sampling time (601.5 adc_clk)                                */
  95:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                          */
  96:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC clock (from PLL with prescaler 256 (devices STM32F30xx))         */
  97:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: cycles of CPU clock.                                               */
  98:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES ( 156928U)
  99:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC stabilization time (ADC voltage regulator start-up time)   */
 101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, param. TADCVREG_STUP). */
 102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STAB_DELAY_US               ( 10U)
 104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
 106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer device datasheet, parameter tSTART).        */
 107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         ( 10U)
 109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
 112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout values for ADC enable and disable settling time.                 */
 117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Values defined to be higher than worst cases: low clocks freq,           */
 118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
 119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 4U, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
 122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_ENABLE_TIMEOUT              ( 2U)
 123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_DISABLE_TIMEOUT             ( 2U)
 124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC calibration:                                               */
 126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Hardware prerequisite before starting a calibration: the ADC must have   */
 127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* been in power-on state for at least two ADC clock cycles.                */
 128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ADC clock cycles                                                   */
 129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_PRECALIBRATION_DELAY_ADCCLOCKCYCLES       ( 2U)
 130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout value for ADC calibration                                        */
 132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Value defined to be higher than worst cases: low clocks freq,            */
 133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* maximum prescaler.                                                       */
 134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* prescaler 4U, sampling time 12.5 ADC clock cycles, resolution 12 bits.    */
 136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: ms                                                                 */
 137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CALIBRATION_TIMEOUT         ( 10U)
 138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for ADC stabilization time.                                        */
 140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 1us (refer to device datasheet, parameter tSTAB).       */
 141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_STAB_DELAY_US               ( 1U)
 143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Delay for temperature sensor stabilization time.                         */
ARM GAS  /tmp/ccumkl9n.s 			page 4


 145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum delay is 10us (refer to device datasheet, parameter tSTART).     */
 146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: us                                                                 */
 147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_TEMPSENSOR_DELAY_US         ( 10U)
 148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Maximum number of CPU cycles corresponding to 1 ADC cycle                */
 150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Value fixed to worst case: clock prescalers slowing down ADC clock to    */
 151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* minimum frequency                                                        */
 152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - AHB prescaler: 16                                                    */
 153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   - ADC prescaler: 8                                                     */
 154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Unit: cycles of CPU clock.                                               */
 155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CYCLE_WORST_CASE_CPU_CYCLES ( 128U)
 156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ADC conversion cycles (unit: ADC clock cycles)                           */
 158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (selected sampling time + conversion time of 12.5 ADC clock cycles, with */
 159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* resolution 12 bits)                                                      */
 160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_1CYCLE5    ( 14U)
 161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_7CYCLES5   ( 20U)
 162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_13CYCLES5  ( 26U)
 163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_28CYCLES5  ( 41U)
 164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_41CYCLES5  ( 54U)
 165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_55CYCLES5  ( 68U)
 166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_71CYCLES5  ( 84U)
 167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   #define ADC_CONVERSIONCLOCKCYCLES_SAMPLETIME_239CYCLES5 (252U)
 168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
 171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
 174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
 175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
 176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc);
 181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc);
 182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc, uint32_t ConversionGroup);
 183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
 185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc);
 190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop_Disable(ADC_HandleTypeDef* hadc);
 191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
 198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADCEx Exported Functions
 200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
 201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/ccumkl9n.s 			page 5


 202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 ADCEx Initialization and de-initialization functions
 204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended Initialization and Configuration functions
 205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
 206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim    
 207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
 208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               ##### Initialization and de-initialization functions #####
 209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
 210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
 211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Initialize and configure the ADC. 
 212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) De-initialize the ADC.
 213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
 215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
 216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         depending on possible clock sources: AHB clock or PLL clock.
 227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         See commented example code below that can be copied and uncommented 
 228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         into HAL_ADC_MspInit().
 229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
 230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         coming from ADC state reset. Following calls to this function can
 232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         before HAL_ADC_Init().
 236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned by ADC state.
 237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
 238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InitTypeDef".
 239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_InitTypeDef".
 242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: parameters related to common ADC 
 243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         registers (ADC clock mode) are set only if all ADCs sharing the
 244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         same common group are disabled.
 245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If this is not the case, these common parameters setting are  
 246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         without  disabling the other ADCs sharing the same common group.
 249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
  29              		.loc 1 253 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 112
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccumkl9n.s 			page 6


  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 9CB0     		sub	sp, sp, #112
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 120
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  45              		.loc 1 254 0
  46 0008 0023     		movs	r3, #0
  47 000a 87F86F30 		strb	r3, [r7, #111]
 255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
 257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpCFGR = 0U;
  48              		.loc 1 257 0
  49 000e 0023     		movs	r3, #0
  50 0010 BB66     		str	r3, [r7, #104]
 258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
  51              		.loc 1 258 0
  52 0012 0023     		movs	r3, #0
  53 0014 FB60     		str	r3, [r7, #12]
 259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
 261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
  54              		.loc 1 261 0
  55 0016 7B68     		ldr	r3, [r7, #4]
  56 0018 002B     		cmp	r3, #0
  57 001a 01D1     		bne	.L2
 262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
  58              		.loc 1 263 0
  59 001c 0123     		movs	r3, #1
  60 001e 66E1     		b	.L26
  61              	.L2:
 264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign)); 
 271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
  62              		.loc 1 280 0
  63 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 7


  64 0022 1B69     		ldr	r3, [r3, #16]
  65 0024 002B     		cmp	r3, #0
 281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC core parameters and ADC MSP related parameters */
 291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
  66              		.loc 1 291 0
  67 0026 7B68     		ldr	r3, [r7, #4]
  68 0028 5B6C     		ldr	r3, [r3, #68]
  69 002a 03F01003 		and	r3, r3, #16
  70 002e 002B     		cmp	r3, #0
  71 0030 75D1     		bne	.L5
 292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured  */
 294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* at RCC top level.                                                      */
 295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Refer to header of this file for more details on clock enabling        */
 296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* procedure.                                                             */
 297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Actions performed only if ADC is coming from state reset:              */
 299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Initialization of ADC MSP                                            */
 300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - ADC voltage regulator enable                                         */
 301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->State == HAL_ADC_STATE_RESET)
  72              		.loc 1 301 0
  73 0032 7B68     		ldr	r3, [r7, #4]
  74 0034 5B6C     		ldr	r3, [r3, #68]
  75 0036 002B     		cmp	r3, #0
  76 0038 52D1     		bne	.L6
 302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize ADC error code */
 304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
  77              		.loc 1 304 0
  78 003a 7B68     		ldr	r3, [r7, #4]
  79 003c 0022     		movs	r2, #0
  80 003e 9A64     		str	r2, [r3, #72]
 305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize HAL ADC API internal variables */
 307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = 0U;
  81              		.loc 1 307 0
  82 0040 7B68     		ldr	r3, [r7, #4]
  83 0042 0022     		movs	r2, #0
  84 0044 1A65     		str	r2, [r3, #80]
 308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0U;
  85              		.loc 1 308 0
  86 0046 7B68     		ldr	r3, [r7, #4]
  87 0048 0022     		movs	r2, #0
  88 004a DA64     		str	r2, [r3, #76]
 309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Allocate lock resource and initialize it */
 311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->Lock = HAL_UNLOCKED;
  89              		.loc 1 311 0
ARM GAS  /tmp/ccumkl9n.s 			page 8


  90 004c 7B68     		ldr	r3, [r7, #4]
  91 004e 0022     		movs	r2, #0
  92 0050 83F84020 		strb	r2, [r3, #64]
 312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Init the low level hardware */
 314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_MspInit(hadc);
  93              		.loc 1 314 0
  94 0054 7868     		ldr	r0, [r7, #4]
  95 0056 FFF7FEFF 		bl	HAL_ADC_MspInit
 315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable voltage regulator (if disabled at this step) */
 317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN_0))
  96              		.loc 1 317 0
  97 005a 7B68     		ldr	r3, [r7, #4]
  98 005c 1B68     		ldr	r3, [r3]
  99 005e 9B68     		ldr	r3, [r3, #8]
 100 0060 03F08053 		and	r3, r3, #268435456
 101 0064 002B     		cmp	r3, #0
 102 0066 3BD1     		bne	.L6
 318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: The software must wait for the startup time of the ADC       */
 320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       voltage regulator before launching a calibration or          */
 321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       enabling the ADC. This temporization must be implemented by  */ 
 322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       software and is equal to 10 us in the worst case             */
 323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       process/temperature/power supply.                            */
 324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable the ADC (if not already disabled) */
 326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
 103              		.loc 1 326 0
 104 0068 7868     		ldr	r0, [r7, #4]
 105 006a FFF7FEFF 		bl	ADC_Disable
 106 006e 0346     		mov	r3, r0
 107 0070 87F86F30 		strb	r3, [r7, #111]
 327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
 329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Configuration of ADC parameters if previous preliminary actions    */ 
 330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* are correctly completed.                                           */
 331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 108              		.loc 1 331 0
 109 0074 7B68     		ldr	r3, [r7, #4]
 110 0076 5B6C     		ldr	r3, [r3, #68]
 111 0078 03F01003 		and	r3, r3, #16
 112 007c 002B     		cmp	r3, #0
 113 007e 2FD1     		bne	.L6
 114              		.loc 1 331 0 is_stmt 0 discriminator 1
 115 0080 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 116 0084 002B     		cmp	r3, #0
 117 0086 2BD1     		bne	.L6
 332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (tmp_hal_status == HAL_OK)                                  )
 333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
 335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 118              		.loc 1 335 0 is_stmt 1
 119 0088 7B68     		ldr	r3, [r7, #4]
 120 008a 5B6C     		ldr	r3, [r3, #68]
 121 008c 23F48853 		bic	r3, r3, #4352
 122 0090 23F00203 		bic	r3, r3, #2
ARM GAS  /tmp/ccumkl9n.s 			page 9


 123 0094 43F00202 		orr	r2, r3, #2
 124 0098 7B68     		ldr	r3, [r7, #4]
 125 009a 5A64     		str	r2, [r3, #68]
 336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL);
 338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the intermediate state before moving the ADC voltage         */
 340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* regulator to state enable.                                       */
 341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->CR, (ADC_CR_ADVREGEN_1 | ADC_CR_ADVREGEN_0));
 126              		.loc 1 341 0
 127 009c 7B68     		ldr	r3, [r7, #4]
 128 009e 1B68     		ldr	r3, [r3]
 129 00a0 7A68     		ldr	r2, [r7, #4]
 130 00a2 1268     		ldr	r2, [r2]
 131 00a4 9268     		ldr	r2, [r2, #8]
 132 00a6 22F04052 		bic	r2, r2, #805306368
 133 00aa 9A60     		str	r2, [r3, #8]
 342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADVREGEN bits to 0x01U */
 343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_0);
 134              		.loc 1 343 0
 135 00ac 7B68     		ldr	r3, [r7, #4]
 136 00ae 1B68     		ldr	r3, [r3]
 137 00b0 7A68     		ldr	r2, [r7, #4]
 138 00b2 1268     		ldr	r2, [r2]
 139 00b4 9268     		ldr	r2, [r2, #8]
 140 00b6 42F08052 		orr	r2, r2, #268435456
 141 00ba 9A60     		str	r2, [r3, #8]
 344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
 345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for ADC stabilization time.                                */
 346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
 347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 142              		.loc 1 347 0
 143 00bc 8E4B     		ldr	r3, .L27
 144 00be 1B68     		ldr	r3, [r3]
 145 00c0 8E4A     		ldr	r2, .L27+4
 146 00c2 A2FB0323 		umull	r2, r3, r2, r3
 147 00c6 9A0C     		lsrs	r2, r3, #18
 148 00c8 1346     		mov	r3, r2
 149 00ca 9B00     		lsls	r3, r3, #2
 150 00cc 1344     		add	r3, r3, r2
 151 00ce 5B00     		lsls	r3, r3, #1
 152 00d0 FB60     		str	r3, [r7, #12]
 348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 153              		.loc 1 348 0
 154 00d2 02E0     		b	.L7
 155              	.L8:
 349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
 350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
 156              		.loc 1 350 0
 157 00d4 FB68     		ldr	r3, [r7, #12]
 158 00d6 013B     		subs	r3, r3, #1
 159 00d8 FB60     		str	r3, [r7, #12]
 160              	.L7:
 348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 161              		.loc 1 348 0
 162 00da FB68     		ldr	r3, [r7, #12]
 163 00dc 002B     		cmp	r3, #0
ARM GAS  /tmp/ccumkl9n.s 			page 10


 164 00de F9D1     		bne	.L8
 165              	.L6:
 351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
 352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
 353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification that ADC voltage regulator is correctly enabled, whether  */
 357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* or not ADC is coming from state reset (if any potential problem of     */
 358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* clocking, voltage regulator would not be enabled).                     */
 359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADVREGEN_0) ||
 166              		.loc 1 359 0
 167 00e0 7B68     		ldr	r3, [r7, #4]
 168 00e2 1B68     		ldr	r3, [r3]
 169 00e4 9B68     		ldr	r3, [r3, #8]
 170 00e6 03F08053 		and	r3, r3, #268435456
 171 00ea 002B     		cmp	r3, #0
 172 00ec 06D0     		beq	.L9
 360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADVREGEN_1)   )
 173              		.loc 1 360 0 discriminator 1
 174 00ee 7B68     		ldr	r3, [r7, #4]
 175 00f0 1B68     		ldr	r3, [r3]
 176 00f2 9B68     		ldr	r3, [r3, #8]
 177 00f4 03F00053 		and	r3, r3, #536870912
 359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADVREGEN_1)   )
 178              		.loc 1 359 0 discriminator 1
 179 00f8 002B     		cmp	r3, #0
 180 00fa 10D0     		beq	.L5
 181              	.L9:
 361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 182              		.loc 1 363 0
 183 00fc 7B68     		ldr	r3, [r7, #4]
 184 00fe 5B6C     		ldr	r3, [r3, #68]
 185 0100 23F01203 		bic	r3, r3, #18
 186 0104 43F01002 		orr	r2, r3, #16
 187 0108 7B68     		ldr	r3, [r7, #4]
 188 010a 5A64     		str	r2, [r3, #68]
 364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
 368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 189              		.loc 1 368 0
 190 010c 7B68     		ldr	r3, [r7, #4]
 191 010e 9B6C     		ldr	r3, [r3, #72]
 192 0110 43F00102 		orr	r2, r3, #1
 193 0114 7B68     		ldr	r3, [r7, #4]
 194 0116 9A64     		str	r2, [r3, #72]
 369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 195              		.loc 1 370 0
 196 0118 0123     		movs	r3, #1
 197 011a 87F86F30 		strb	r3, [r7, #111]
 198              	.L5:
 371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccumkl9n.s 			page 11


 372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed and if there is no conversion on going on regular    */
 377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* called to update a parameter on the fly).                                */
 379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 199              		.loc 1 379 0
 200 011e 7B68     		ldr	r3, [r7, #4]
 201 0120 5B6C     		ldr	r3, [r3, #68]
 202 0122 03F01003 		and	r3, r3, #16
 203 0126 002B     		cmp	r3, #0
 204 0128 40F0D480 		bne	.L10
 205              		.loc 1 379 0 is_stmt 0 discriminator 1
 206 012c 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 207 0130 002B     		cmp	r3, #0
 208 0132 40F0CF80 		bne	.L10
 380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                &&
 381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)          )
 209              		.loc 1 381 0 is_stmt 1
 210 0136 7B68     		ldr	r3, [r7, #4]
 211 0138 1B68     		ldr	r3, [r3]
 212 013a 9B68     		ldr	r3, [r3, #8]
 213 013c 03F00403 		and	r3, r3, #4
 380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                &&
 214              		.loc 1 380 0
 215 0140 002B     		cmp	r3, #0
 216 0142 40F0C780 		bne	.L10
 382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 217              		.loc 1 384 0
 218 0146 7B68     		ldr	r3, [r7, #4]
 219 0148 5B6C     		ldr	r3, [r3, #68]
 220 014a 23F48173 		bic	r3, r3, #258
 221 014e 43F00202 		orr	r2, r3, #2
 222 0152 7B68     		ldr	r3, [r7, #4]
 223 0154 5A64     		str	r2, [r3, #68]
 385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
 389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
 391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
 392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
 393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 224              		.loc 1 393 0
 225 0156 6A4B     		ldr	r3, .L27+8
 226 0158 7B66     		str	r3, [r7, #100]
 394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set handle of the other ADC sharing the same common register           */
 396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
 227              		.loc 1 396 0
 228 015a 0023     		movs	r3, #0
 229 015c 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/ccumkl9n.s 			page 12


 397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters update conditioned to ADC state:                            */
 400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - Multimode clock configuration                                       */
 402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((ADC_IS_ENABLE(hadc) == RESET)                                   &&
 230              		.loc 1 402 0
 231 015e 7B68     		ldr	r3, [r7, #4]
 232 0160 1B68     		ldr	r3, [r3]
 233 0162 9B68     		ldr	r3, [r3, #8]
 234 0164 03F00303 		and	r3, r3, #3
 235 0168 012B     		cmp	r3, #1
 236 016a 08D1     		bne	.L11
 237              		.loc 1 402 0 is_stmt 0 discriminator 1
 238 016c 7B68     		ldr	r3, [r7, #4]
 239 016e 1B68     		ldr	r3, [r3]
 240 0170 1B68     		ldr	r3, [r3]
 241 0172 03F00103 		and	r3, r3, #1
 242 0176 002B     		cmp	r3, #0
 243 0178 01D0     		beq	.L11
 244              		.loc 1 402 0 discriminator 3
 245 017a 0123     		movs	r3, #1
 246 017c 00E0     		b	.L12
 247              	.L11:
 248              		.loc 1 402 0 discriminator 4
 249 017e 0023     		movs	r3, #0
 250              	.L12:
 251              		.loc 1 402 0 discriminator 6
 252 0180 002B     		cmp	r3, #0
 253 0182 1CD1     		bne	.L13
 403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 254              		.loc 1 403 0 is_stmt 1 discriminator 7
 255 0184 3B69     		ldr	r3, [r7, #16]
 402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 256              		.loc 1 402 0 discriminator 7
 257 0186 002B     		cmp	r3, #0
 258 0188 10D0     		beq	.L14
 404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 259              		.loc 1 404 0
 260 018a 3B69     		ldr	r3, [r7, #16]
 261 018c 9B68     		ldr	r3, [r3, #8]
 262 018e 03F00303 		and	r3, r3, #3
 263 0192 012B     		cmp	r3, #1
 264 0194 07D1     		bne	.L15
 265              		.loc 1 404 0 is_stmt 0 discriminator 1
 266 0196 3B69     		ldr	r3, [r7, #16]
 267 0198 1B68     		ldr	r3, [r3]
 268 019a 03F00103 		and	r3, r3, #1
 269 019e 002B     		cmp	r3, #0
 270 01a0 01D0     		beq	.L15
 271              		.loc 1 404 0 discriminator 3
 272 01a2 0123     		movs	r3, #1
 273 01a4 00E0     		b	.L16
 274              	.L15:
 275              		.loc 1 404 0 discriminator 4
 276 01a6 0023     		movs	r3, #0
 277              	.L16:
ARM GAS  /tmp/ccumkl9n.s 			page 13


 403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ((tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 278              		.loc 1 403 0 is_stmt 1
 279 01a8 002B     		cmp	r3, #0
 280 01aa 08D1     		bne	.L13
 281              	.L14:
 405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset configuration of ADC common register CCR:                      */
 407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - ADC clock mode: CKMODE                                           */
 408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Some parameters of this register are not reset, since they are set   */
 409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by other functions and must be kept in case of usage of this         */
 410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* parameters):                                                         */
 413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - multimode related parameters: MDMA, DMACFG, DELAY, MULTI (set    */
 414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     into HAL_ADCEx_MultiModeConfigChannel() )                        */
 415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     (set into HAL_ADC_ConfigChannel() or                             */
 417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
 419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR       ,
 282              		.loc 1 419 0
 283 01ac 7B6E     		ldr	r3, [r7, #100]
 284 01ae 9B68     		ldr	r3, [r3, #8]
 285 01b0 23F44032 		bic	r2, r3, #196608
 286 01b4 7B68     		ldr	r3, [r7, #4]
 287 01b6 5B68     		ldr	r3, [r3, #4]
 288 01b8 1A43     		orrs	r2, r2, r3
 289 01ba 7B6E     		ldr	r3, [r7, #100]
 290 01bc 9A60     		str	r2, [r3, #8]
 291              	.L13:
 420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_CKMODE           ,
 421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  hadc->Init.ClockPrescaler );
 422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - resolution                                                          */
 427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - data alignment                                                      */
 428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
 429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
 430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - continuous conversion mode                                          */
 431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - overrun                                                             */
 432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode                                                  */
 433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(tmpCFGR, ADC_CFGR_CONTINUOUS(hadc->Init.ContinuousConvMode) |
 292              		.loc 1 433 0
 293 01be 7B68     		ldr	r3, [r7, #4]
 294 01c0 DB69     		ldr	r3, [r3, #28]
 295 01c2 5A03     		lsls	r2, r3, #13
 296 01c4 7B68     		ldr	r3, [r7, #4]
 297 01c6 9B6B     		ldr	r3, [r3, #56]
 298 01c8 012B     		cmp	r3, #1
 299 01ca 02D0     		beq	.L17
 300              		.loc 1 433 0 is_stmt 0 discriminator 1
 301 01cc 4FF48053 		mov	r3, #4096
 302 01d0 00E0     		b	.L18
 303              	.L17:
 304              		.loc 1 433 0 discriminator 2
ARM GAS  /tmp/ccumkl9n.s 			page 14


 305 01d2 0023     		movs	r3, #0
 306              	.L18:
 307              		.loc 1 433 0 discriminator 4
 308 01d4 1A43     		orrs	r2, r2, r3
 309 01d6 7B68     		ldr	r3, [r7, #4]
 310 01d8 DB68     		ldr	r3, [r3, #12]
 311 01da 1A43     		orrs	r2, r2, r3
 312 01dc 7B68     		ldr	r3, [r7, #4]
 313 01de 9B68     		ldr	r3, [r3, #8]
 314 01e0 1343     		orrs	r3, r3, r2
 315 01e2 BA6E     		ldr	r2, [r7, #104]
 316 01e4 1343     		orrs	r3, r3, r2
 317 01e6 BB66     		str	r3, [r7, #104]
 434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_CFGR_OVERRUN(hadc->Init.Overrun)               |
 435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      hadc->Init.DataAlign                               |
 436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      hadc->Init.Resolution                               );
 437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 318              		.loc 1 439 0 is_stmt 1 discriminator 4
 319 01e8 7B68     		ldr	r3, [r7, #4]
 320 01ea 5B6A     		ldr	r3, [r3, #36]
 321 01ec 012B     		cmp	r3, #1
 322 01ee 1BD1     		bne	.L19
 440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 323              		.loc 1 441 0
 324 01f0 7B68     		ldr	r3, [r7, #4]
 325 01f2 DB69     		ldr	r3, [r3, #28]
 326 01f4 002B     		cmp	r3, #0
 327 01f6 09D1     		bne	.L20
 442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the selected ADC regular discontinuous mode */
 444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the number of channels to be converted in discontinuous mode */
 445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmpCFGR, ADC_CFGR_DISCEN                                            |
 328              		.loc 1 445 0
 329 01f8 7B68     		ldr	r3, [r7, #4]
 330 01fa 9B6A     		ldr	r3, [r3, #40]
 331 01fc 013B     		subs	r3, r3, #1
 332 01fe 5A04     		lsls	r2, r3, #17
 333 0200 BB6E     		ldr	r3, [r7, #104]
 334 0202 1343     		orrs	r3, r3, r2
 335 0204 43F48033 		orr	r3, r3, #65536
 336 0208 BB66     		str	r3, [r7, #104]
 337 020a 0DE0     		b	.L19
 338              	.L20:
 446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                          ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion)  );
 447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
 449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* cannot be enabled simultaneously.                                  */
 453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 339              		.loc 1 455 0
ARM GAS  /tmp/ccumkl9n.s 			page 15


 340 020c 7B68     		ldr	r3, [r7, #4]
 341 020e 5B6C     		ldr	r3, [r3, #68]
 342 0210 23F02203 		bic	r3, r3, #34
 343 0214 43F02002 		orr	r2, r3, #32
 344 0218 7B68     		ldr	r3, [r7, #4]
 345 021a 5A64     		str	r2, [r3, #68]
 456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_CONFIG);
 458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
 460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 346              		.loc 1 460 0
 347 021c 7B68     		ldr	r3, [r7, #4]
 348 021e 9B6C     		ldr	r3, [r3, #72]
 349 0220 43F00102 		orr	r2, r3, #1
 350 0224 7B68     		ldr	r3, [r7, #4]
 351 0226 9A64     		str	r2, [r3, #72]
 352              	.L19:
 461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable external trigger if trigger selection is different of software  */
 465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start.                                                                 */
 466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       software start.                                                  */
 469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 353              		.loc 1 469 0
 354 0228 7B68     		ldr	r3, [r7, #4]
 355 022a DB6A     		ldr	r3, [r3, #44]
 356 022c 012B     		cmp	r3, #1
 357 022e 07D0     		beq	.L21
 470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(tmpCFGR, ADC_CFGR_EXTSEL_SET(hadc, hadc->Init.ExternalTrigConv) |
 358              		.loc 1 471 0
 359 0230 7B68     		ldr	r3, [r7, #4]
 360 0232 DA6A     		ldr	r2, [r3, #44]
 361 0234 7B68     		ldr	r3, [r7, #4]
 362 0236 1B6B     		ldr	r3, [r3, #48]
 363 0238 1343     		orrs	r3, r3, r2
 364 023a BA6E     		ldr	r2, [r7, #104]
 365 023c 1343     		orrs	r3, r3, r2
 366 023e BB66     		str	r3, [r7, #104]
 367              	.L21:
 472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        hadc->Init.ExternalTrigConvEdge                         );
 473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters update conditioned to ADC state:                            */
 476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* conversion on going on regular and injected groups:                    */
 478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - DMA continuous request                                              */
 479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - LowPowerAutoWait feature                                            */
 480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 368              		.loc 1 480 0
 369 0240 7B68     		ldr	r3, [r7, #4]
 370 0242 1B68     		ldr	r3, [r3]
 371 0244 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccumkl9n.s 			page 16


 372 0246 03F00C03 		and	r3, r3, #12
 373 024a 002B     		cmp	r3, #0
 374 024c 13D1     		bne	.L22
 481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AUTDLY |
 375              		.loc 1 482 0
 376 024e 7B68     		ldr	r3, [r7, #4]
 377 0250 1A68     		ldr	r2, [r3]
 378 0252 7B68     		ldr	r3, [r7, #4]
 379 0254 1B68     		ldr	r3, [r3]
 380 0256 DB68     		ldr	r3, [r3, #12]
 381 0258 23F48043 		bic	r3, r3, #16384
 382 025c 23F00203 		bic	r3, r3, #2
 383 0260 D360     		str	r3, [r2, #12]
 483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_CFGR_DMACFG  );
 484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(tmpCFGR, ADC_CFGR_AUTOWAIT(hadc->Init.LowPowerAutoWait)       |
 384              		.loc 1 485 0
 385 0262 7B68     		ldr	r3, [r7, #4]
 386 0264 9B69     		ldr	r3, [r3, #24]
 387 0266 9A03     		lsls	r2, r3, #14
 388 0268 7B68     		ldr	r3, [r7, #4]
 389 026a 5B6B     		ldr	r3, [r3, #52]
 390 026c 5B00     		lsls	r3, r3, #1
 391 026e 1343     		orrs	r3, r3, r2
 392 0270 BA6E     		ldr	r2, [r7, #104]
 393 0272 1343     		orrs	r3, r3, r2
 394 0274 BB66     		str	r3, [r7, #104]
 395              	.L22:
 486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                        ADC_CFGR_DMACONTREQ(hadc->Init.DMAContinuousRequests) );
 487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register with previous settings */
 490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CFGR,
 396              		.loc 1 490 0
 397 0276 7B68     		ldr	r3, [r7, #4]
 398 0278 1A68     		ldr	r2, [r3]
 399 027a 7B68     		ldr	r3, [r7, #4]
 400 027c 1B68     		ldr	r3, [r3]
 401 027e D968     		ldr	r1, [r3, #12]
 402 0280 204B     		ldr	r3, .L27+12
 403 0282 0B40     		ands	r3, r3, r1
 404 0284 B96E     		ldr	r1, [r7, #104]
 405 0286 0B43     		orrs	r3, r3, r1
 406 0288 D360     		str	r3, [r2, #12]
 491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_DISCNUM |
 492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_DISCEN  |
 493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_CONT    |
 494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_OVRMOD  |
 495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_EXTSEL  |
 496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_EXTEN   |
 497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_ALIGN   |
 498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CFGR_RES        ,
 499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                tmpCFGR              );
 500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of regular group sequencer:                              */
ARM GAS  /tmp/ccumkl9n.s 			page 17


 503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   0x00: 1 channel converted (channel on regular rank 1U)                */
 505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   parameter "NbrOfConversion"                                          */   
 510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 407              		.loc 1 510 0
 408 028a 7B68     		ldr	r3, [r7, #4]
 409 028c 1B69     		ldr	r3, [r3, #16]
 410 028e 012B     		cmp	r3, #1
 411 0290 0CD1     		bne	.L23
 511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set number of ranks in regular group sequencer */     
 513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR1                     ,
 412              		.loc 1 513 0
 413 0292 7B68     		ldr	r3, [r7, #4]
 414 0294 1B68     		ldr	r3, [r3]
 415 0296 7A68     		ldr	r2, [r7, #4]
 416 0298 1268     		ldr	r2, [r2]
 417 029a 126B     		ldr	r2, [r2, #48]
 418 029c 22F00F01 		bic	r1, r2, #15
 419 02a0 7A68     		ldr	r2, [r7, #4]
 420 02a2 126A     		ldr	r2, [r2, #32]
 421 02a4 013A     		subs	r2, r2, #1
 422 02a6 0A43     		orrs	r2, r2, r1
 423 02a8 1A63     		str	r2, [r3, #48]
 424 02aa 07E0     		b	.L24
 425              	.L23:
 514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_L                               ,
 515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  (hadc->Init.NbrOfConversion - (uint8_t)1U) );  
 516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 426              		.loc 1 519 0
 427 02ac 7B68     		ldr	r3, [r7, #4]
 428 02ae 1B68     		ldr	r3, [r3]
 429 02b0 7A68     		ldr	r2, [r7, #4]
 430 02b2 1268     		ldr	r2, [r2]
 431 02b4 126B     		ldr	r2, [r2, #48]
 432 02b6 22F00F02 		bic	r2, r2, #15
 433 02ba 1A63     		str	r2, [r3, #48]
 434              	.L24:
 520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 435              		.loc 1 523 0
 436 02bc 7B68     		ldr	r3, [r7, #4]
 437 02be 0022     		movs	r2, #0
 438 02c0 9A64     		str	r2, [r3, #72]
 524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the ADC state */
 526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 439              		.loc 1 526 0
ARM GAS  /tmp/ccumkl9n.s 			page 18


 440 02c2 7B68     		ldr	r3, [r7, #4]
 441 02c4 5B6C     		ldr	r3, [r3, #68]
 442 02c6 23F00303 		bic	r3, r3, #3
 443 02ca 43F00102 		orr	r2, r3, #1
 444 02ce 7B68     		ldr	r3, [r7, #4]
 445 02d0 5A64     		str	r2, [r3, #68]
 446 02d2 0AE0     		b	.L25
 447              	.L10:
 527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
 531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 448              		.loc 1 533 0
 449 02d4 7B68     		ldr	r3, [r7, #4]
 450 02d6 5B6C     		ldr	r3, [r3, #68]
 451 02d8 23F01203 		bic	r3, r3, #18
 452 02dc 43F01002 		orr	r2, r3, #16
 453 02e0 7B68     		ldr	r3, [r7, #4]
 454 02e2 5A64     		str	r2, [r3, #68]
 534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_ERROR_INTERNAL);
 536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR; 
 455              		.loc 1 537 0
 456 02e4 0123     		movs	r3, #1
 457 02e6 87F86F30 		strb	r3, [r7, #111]
 458              	.L25:
 538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
 542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 459              		.loc 1 542 0
 460 02ea 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 461              	.L26:
 543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 462              		.loc 1 543 0 discriminator 1
 463 02ee 1846     		mov	r0, r3
 464 02f0 7037     		adds	r7, r7, #112
 465              	.LCFI3:
 466              		.cfi_def_cfa_offset 8
 467 02f2 BD46     		mov	sp, r7
 468              	.LCFI4:
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 02f4 80BD     		pop	{r7, pc}
 472              	.L28:
 473 02f6 00BF     		.align	2
 474              	.L27:
 475 02f8 00000000 		.word	SystemCoreClock
 476 02fc 83DE1B43 		.word	1125899907
 477 0300 00030050 		.word	1342178048
 478 0304 07C0F0FF 		.word	-999417
 479              		.cfi_endproc
ARM GAS  /tmp/ccumkl9n.s 			page 19


 480              	.LFE123:
 482              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 483              		.align	2
 484              		.global	HAL_ADC_DeInit
 485              		.thumb
 486              		.thumb_func
 488              	HAL_ADC_DeInit:
 489              	.LFB124:
 544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
 545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
 546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
 547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
 548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
 550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Initializes the ADC peripheral and regular group according to  
 552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (clock source APB2).
 555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         See commented example code below that can be copied and uncommented 
 556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         into HAL_ADC_MspInit().
 557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
 558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         coming from ADC state reset. Following calls to this function can
 560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         before HAL_ADC_Init().
 564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
 565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
 566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InitTypeDef".
 567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_InitTypeDef".
 570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cr1 = 0U;
 577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cr2 = 0U;
 578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_sqr1 = 0U;
 579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
 581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
 582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
 584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccumkl9n.s 			page 20


 593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(hadc->Init.DiscontinuousConvMode != DISABLE)
 598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* As prerequisite, into HAL_ADC_MspInit(), ADC clock must be configured    */
 604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* at RCC top level.                                                        */
 605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Refer to header of this file for more details on clock enabling          */
 606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* procedure.                                                               */
 607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Actions performed only if ADC is coming from state reset:                */
 609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - Initialization of ADC MSP                                              */
 610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Initialize ADC error code */
 613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Allocate lock resource and initialize it */
 616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Lock = HAL_UNLOCKED;
 617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Init the low level hardware */
 619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspInit(hadc);
 620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
 624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, precaution to not launch an        */
 625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       unwanted conversion while modifying register CR2 by writing 1 to   */
 626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       bit ADON.                                                          */
 627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
 628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
 632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL) &&
 633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (tmp_hal_status == HAL_OK)                                  )
 634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC parameters */
 641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - data alignment                                                      */
 644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
 645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity (always set to 1U, because needed for all  */
 646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    triggers: external trigger of SW start)                             */
 647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - continuous conversion mode                                          */
 648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: External trigger polarity (ADC_CR2_EXTTRIG) is set into          */
 649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       HAL_ADC_Start_xxx functions because if set in this function,     */
ARM GAS  /tmp/ccumkl9n.s 			page 21


 650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       a conversion on injected group would start a conversion also on  */
 651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       regular group after ADC enabling.                                */
 652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cr2 |= (hadc->Init.DataAlign                             |
 653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 hadc->Init.ExternalTrigConv                      |
 654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 ADC_CR2_CONTINUOUS(hadc->Init.ContinuousConvMode) );
 655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of ADC:                                                  */
 657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - scan mode                                                           */
 658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode disable/enable                                   */
 659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - discontinuous mode number of conversions                            */
 660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cr1 |= (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode));
 661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable discontinuous mode only if continuous mode is disabled */
 663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: If parameter "Init.ScanConvMode" is set to disable, parameter    */
 664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       discontinuous is set anyway, but will have no effect on ADC HW.  */
 665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the selected ADC regular discontinuous mode */
 670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the number of channels to be converted in discontinuous mode */
 671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cr1 |= (ADC_CR1_DISCEN                                           |
 672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                   ADC_CR1_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion) );
 673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
 675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* cannot be enabled simultaneously.                                  */
 679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
 684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
 686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register CR1 with previous settings */
 689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CR1,
 690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_SCAN    |
 691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_DISCEN  |
 692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR1_DISCNUM    ,
 693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_cr1             );
 694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC configuration register CR2 with previous settings */
 696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CR2,
 697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_ALIGN   |
 698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_EXTSEL  |
 699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_EXTTRIG |
 700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CR2_CONT       ,
 701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_cr2             );
 702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of regular group sequencer:                              */
 704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   0x00: 1 channel converted (channel on regular rank 1U)                */
 706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
ARM GAS  /tmp/ccumkl9n.s 			page 22


 707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   Note: Scan mode is present by hardware on this device and, if        */
 708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   disabled, discards automatically nb of conversions. Anyway, nb of    */
 709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   conversions is forced to 0x00 for alignment over all STM32 devices.  */
 710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*   parameter "NbrOfConversion"                                          */
 712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_CR1_SCAN_SET(hadc->Init.ScanConvMode) == ADC_SCAN_ENABLE)
 713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_sqr1 = ADC_SQR1_L_SHIFT(hadc->Init.NbrOfConversion);
 715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR1,
 718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_L          ,
 719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                tmp_sqr1             );
 720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check back that ADC registers have effectively been configured to      */
 722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ensure of no potential problem of ADC core IP clocking.                */
 723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check through register CR2 (excluding bits set in other functions:     */
 724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* execution control bits (ADON, JSWSTART, SWSTART), regular group bits   */
 725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (DMA), injected group bits (JEXTTRIG and JEXTSEL), channel internal    */
 726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* measurement path bit (TSVREFE).                                        */
 727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR2, ~(ADC_CR2_ADON | ADC_CR2_DMA |
 728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_SWSTART | ADC_CR2_JSWSTART |
 729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_JEXTTRIG | ADC_CR2_JEXTSEL |
 730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                         ADC_CR2_TSVREFE                     ))
 731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          == tmp_cr2)
 732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to none */
 734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the ADC state */
 737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
 740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
 744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
 749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
 756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
ARM GAS  /tmp/ccumkl9n.s 			page 23


 764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
 767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
 769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
 770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
 771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
 772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
 773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         values, with deinitialization of the ADC MSP.
 775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done 
 776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only if all ADCs sharing the same common group are disabled.
 777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If this is not the case, reset of these common parameters reset is  
 778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of reset of a single ADC while the other ADCs sharing the same 
 780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         common group is still running.
 781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: Global reset of all ADCs sharing a
 782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         common group is possible.
 783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         As this function is intended to reset a single ADC, to not impact 
 784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         other ADCs, instructions for global reset of multiple ADCs have been
 785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         let commented below.
 786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         If needed, the example code can be copied and uncommented into
 787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_MspDeInit().
 788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
 789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
 790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
 791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 490              		.loc 1 792 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 104
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494 0000 80B5     		push	{r7, lr}
 495              	.LCFI5:
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 9AB0     		sub	sp, sp, #104
 500              	.LCFI6:
 501              		.cfi_def_cfa_offset 112
 502 0004 00AF     		add	r7, sp, #0
 503              	.LCFI7:
 504              		.cfi_def_cfa_register 7
 505 0006 7860     		str	r0, [r7, #4]
 793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 506              		.loc 1 793 0
 507 0008 0023     		movs	r3, #0
 508 000a 87F86730 		strb	r3, [r7, #103]
 794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
 796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
 798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
 509              		.loc 1 798 0
 510 000e 7B68     		ldr	r3, [r7, #4]
 511 0010 002B     		cmp	r3, #0
ARM GAS  /tmp/ccumkl9n.s 			page 24


 512 0012 01D1     		bne	.L30
 799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      return HAL_ERROR;
 513              		.loc 1 800 0
 514 0014 0123     		movs	r3, #1
 515 0016 27E1     		b	.L41
 516              	.L30:
 801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
 804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
 807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 517              		.loc 1 807 0
 518 0018 7B68     		ldr	r3, [r7, #4]
 519 001a 5B6C     		ldr	r3, [r3, #68]
 520 001c 43F00202 		orr	r2, r3, #2
 521 0020 7B68     		ldr	r3, [r7, #4]
 522 0022 5A64     		str	r2, [r3, #68]
 808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
 810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 523              		.loc 1 810 0
 524 0024 7868     		ldr	r0, [r7, #4]
 525 0026 6C21     		movs	r1, #108
 526 0028 FFF7FEFF 		bl	ADC_ConversionStop
 527 002c 0346     		mov	r3, r0
 528 002e 87F86730 		strb	r3, [r7, #103]
 811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 529              		.loc 1 813 0
 530 0032 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 531 0036 002B     		cmp	r3, #0
 532 0038 18D1     		bne	.L32
 814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Flush register JSQR: queue sequencer reset when injected queue         */
 816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* sequencer is enabled and ADC disabled.                                 */
 817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable injected queue sequencer after injected conversion stop         */
 818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 533              		.loc 1 818 0
 534 003a 7B68     		ldr	r3, [r7, #4]
 535 003c 1B68     		ldr	r3, [r3]
 536 003e 7A68     		ldr	r2, [r7, #4]
 537 0040 1268     		ldr	r2, [r2]
 538 0042 D268     		ldr	r2, [r2, #12]
 539 0044 42F40012 		orr	r2, r2, #2097152
 540 0048 DA60     		str	r2, [r3, #12]
 819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the ADC peripheral */
 821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
 541              		.loc 1 821 0
 542 004a 7868     		ldr	r0, [r7, #4]
 543 004c FFF7FEFF 		bl	ADC_Disable
 544 0050 0346     		mov	r3, r0
 545 0052 87F86730 		strb	r3, [r7, #103]
ARM GAS  /tmp/ccumkl9n.s 			page 25


 822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
 824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 546              		.loc 1 824 0
 547 0056 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 548 005a 002B     		cmp	r3, #0
 549 005c 03D1     		bne	.L33
 825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Change ADC state */
 827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->State = HAL_ADC_STATE_READY;
 550              		.loc 1 827 0
 551 005e 7B68     		ldr	r3, [r7, #4]
 552 0060 0122     		movs	r2, #1
 553 0062 5A64     		str	r2, [r3, #68]
 554 0064 02E0     		b	.L32
 555              	.L33:
 828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
 830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {      
 831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 556              		.loc 1 831 0
 557 0066 0123     		movs	r3, #1
 558 0068 87F86730 		strb	r3, [r7, #103]
 559              	.L32:
 832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
 838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 560              		.loc 1 838 0
 561 006c 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 562 0070 002B     		cmp	r3, #0
 563 0072 40F0F380 		bne	.L34
 839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset ADC registers ========== */
 841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register IER */
 842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 564              		.loc 1 842 0
 565 0076 7B68     		ldr	r3, [r7, #4]
 566 0078 1A68     		ldr	r2, [r3]
 567 007a 7B68     		ldr	r3, [r7, #4]
 568 007c 1B68     		ldr	r3, [r3]
 569 007e 5B68     		ldr	r3, [r3, #4]
 570 0080 23F4FF63 		bic	r3, r3, #2040
 571 0084 23F00703 		bic	r3, r3, #7
 572 0088 5360     		str	r3, [r2, #4]
 843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_JQOVF | ADC_IT_OVR  |
 844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_JEOS  | ADC_IT_JEOC |
 845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_EOS   | ADC_IT_EOC  |
 846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_IT_EOSMP | ADC_IT_RDY                 ) );
 847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register ISR */
 849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 573              		.loc 1 849 0
 574 008a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 26


 575 008c 1B68     		ldr	r3, [r3]
 576 008e 40F2FF72 		movw	r2, #2047
 577 0092 1A60     		str	r2, [r3]
 850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_EOSMP | ADC_FLAG_RDY                   ) );
 854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR */
 856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART are  */
 857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in access mode "read-set": no direct reset applicable.                 */
 858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset Calibration mode to default setting (single ended):              */
 859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable voltage regulator:                                             */
 860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Voltage regulator disable is conditioned to ADC state disabled:  */
 861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       already done above.                                              */
 862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Voltage regulator disable is intended for power saving.          */
 863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Sequence to disable voltage regulator:                                 */
 864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Set the intermediate state before moving the ADC voltage regulator  */
 865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    to disable state.                                                   */
 866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_1 | ADC_CR_ADVREGEN_0 | ADC_CR_ADCALDIF);
 578              		.loc 1 866 0
 579 0094 7B68     		ldr	r3, [r7, #4]
 580 0096 1B68     		ldr	r3, [r3]
 581 0098 7A68     		ldr	r2, [r7, #4]
 582 009a 1268     		ldr	r2, [r2]
 583 009c 9268     		ldr	r2, [r2, #8]
 584 009e 22F0E042 		bic	r2, r2, #1879048192
 585 00a2 9A60     		str	r2, [r3, #8]
 867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Set ADVREGEN bits to 0x10U */
 868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN_1);
 586              		.loc 1 868 0
 587 00a4 7B68     		ldr	r3, [r7, #4]
 588 00a6 1B68     		ldr	r3, [r3]
 589 00a8 7A68     		ldr	r2, [r7, #4]
 590 00aa 1268     		ldr	r2, [r2]
 591 00ac 9268     		ldr	r2, [r2, #8]
 592 00ae 42F00052 		orr	r2, r2, #536870912
 593 00b2 9A60     		str	r2, [r3, #8]
 869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
 870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CFGR */
 871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AWD1CH  | ADC_CFGR_JAUTO   | ADC_CFGR_JAWD1EN |   
 594              		.loc 1 871 0
 595 00b4 7B68     		ldr	r3, [r7, #4]
 596 00b6 1A68     		ldr	r2, [r3]
 597 00b8 7B68     		ldr	r3, [r7, #4]
 598 00ba 1B68     		ldr	r3, [r3]
 599 00bc D968     		ldr	r1, [r3, #12]
 600 00be 6C4B     		ldr	r3, .L42
 601 00c0 0B40     		ands	r3, r3, r1
 602 00c2 D360     		str	r3, [r2, #12]
 872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |     
 873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_JDISCEN | ADC_CFGR_DISCNUM | ADC_CFGR_DISCEN  | 
 874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_AUTDLY  | ADC_CFGR_CONT    | ADC_CFGR_OVRMOD  |     
 875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_EXTEN   | ADC_CFGR_EXTSEL  | ADC_CFGR_ALIGN   |     
 876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CFGR_RES     | ADC_CFGR_DMACFG  | ADC_CFGR_DMAEN    );
 877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR1 */
ARM GAS  /tmp/ccumkl9n.s 			page 27


 879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_SMP9 | ADC_SMPR1_SMP8 | ADC_SMPR1_SMP7 | 
 603              		.loc 1 879 0
 604 00c4 7B68     		ldr	r3, [r7, #4]
 605 00c6 1A68     		ldr	r2, [r3]
 606 00c8 7B68     		ldr	r3, [r7, #4]
 607 00ca 1B68     		ldr	r3, [r3]
 608 00cc 5969     		ldr	r1, [r3, #20]
 609 00ce 694B     		ldr	r3, .L42+4
 610 00d0 0B40     		ands	r3, r3, r1
 611 00d2 5361     		str	r3, [r2, #20]
 880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR1_SMP6 | ADC_SMPR1_SMP5 | ADC_SMPR1_SMP4 | 
 881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR1_SMP3 | ADC_SMPR1_SMP2 | ADC_SMPR1_SMP1  );
 882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR2 */
 884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 | 
 612              		.loc 1 884 0
 613 00d4 7B68     		ldr	r3, [r7, #4]
 614 00d6 1B68     		ldr	r3, [r3]
 615 00d8 7A68     		ldr	r2, [r7, #4]
 616 00da 1268     		ldr	r2, [r2]
 617 00dc 9269     		ldr	r2, [r2, #24]
 618 00de 02F07842 		and	r2, r2, #-134217728
 619 00e2 9A61     		str	r2, [r3, #24]
 885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 | 
 886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                      ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10  );
 887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR1 */
 889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 620              		.loc 1 889 0
 621 00e4 7B68     		ldr	r3, [r7, #4]
 622 00e6 1B68     		ldr	r3, [r3]
 623 00e8 7A68     		ldr	r2, [r7, #4]
 624 00ea 1268     		ldr	r2, [r2]
 625 00ec 126A     		ldr	r2, [r2, #32]
 626 00ee 02F0F022 		and	r2, r2, #-268374016
 627 00f2 1A62     		str	r2, [r3, #32]
 890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR2 */
 892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 628              		.loc 1 892 0
 629 00f4 7B68     		ldr	r3, [r7, #4]
 630 00f6 1B68     		ldr	r3, [r3]
 631 00f8 7A68     		ldr	r2, [r7, #4]
 632 00fa 1268     		ldr	r2, [r2]
 633 00fc 526A     		ldr	r2, [r2, #36]
 634 00fe 02F0FF22 		and	r2, r2, #-16711936
 635 0102 5A62     		str	r2, [r3, #36]
 893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register TR3 */
 895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 636              		.loc 1 895 0
 637 0104 7B68     		ldr	r3, [r7, #4]
 638 0106 1B68     		ldr	r3, [r3]
 639 0108 7A68     		ldr	r2, [r7, #4]
 640 010a 1268     		ldr	r2, [r2]
 641 010c 926A     		ldr	r2, [r2, #40]
 642 010e 02F0FF22 		and	r2, r2, #-16711936
ARM GAS  /tmp/ccumkl9n.s 			page 28


 643 0112 9A62     		str	r2, [r3, #40]
 896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
 898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 | 
 644              		.loc 1 898 0
 645 0114 7B68     		ldr	r3, [r7, #4]
 646 0116 1A68     		ldr	r2, [r3]
 647 0118 7B68     		ldr	r3, [r7, #4]
 648 011a 1B68     		ldr	r3, [r3]
 649 011c 196B     		ldr	r1, [r3, #48]
 650 011e 564B     		ldr	r3, .L42+8
 651 0120 0B40     		ands	r3, r3, r1
 652 0122 1363     		str	r3, [r2, #48]
 899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ1 | ADC_SQR1_L);
 900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR2 */
 902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 | 
 653              		.loc 1 902 0
 654 0124 7B68     		ldr	r3, [r7, #4]
 655 0126 1A68     		ldr	r2, [r3]
 656 0128 7B68     		ldr	r3, [r7, #4]
 657 012a 1B68     		ldr	r3, [r3]
 658 012c 596B     		ldr	r1, [r3, #52]
 659 012e 534B     		ldr	r3, .L42+12
 660 0130 0B40     		ands	r3, r3, r1
 661 0132 5363     		str	r3, [r2, #52]
 903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR3 */
 906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 | 
 662              		.loc 1 906 0
 663 0134 7B68     		ldr	r3, [r7, #4]
 664 0136 1A68     		ldr	r2, [r3]
 665 0138 7B68     		ldr	r3, [r7, #4]
 666 013a 1B68     		ldr	r3, [r3]
 667 013c 996B     		ldr	r1, [r3, #56]
 668 013e 4F4B     		ldr	r3, .L42+12
 669 0140 0B40     		ands	r3, r3, r1
 670 0142 9363     		str	r3, [r2, #56]
 907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR4 */
 910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 671              		.loc 1 910 0
 672 0144 7B68     		ldr	r3, [r7, #4]
 673 0146 1A68     		ldr	r2, [r3]
 674 0148 7B68     		ldr	r3, [r7, #4]
 675 014a 1B68     		ldr	r3, [r3]
 676 014c DB6B     		ldr	r3, [r3, #60]
 677 014e 23F4FB63 		bic	r3, r3, #2008
 678 0152 23F00703 		bic	r3, r3, #7
 679 0156 D363     		str	r3, [r2, #60]
 911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DR */
 913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
 914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR1 */
ARM GAS  /tmp/ccumkl9n.s 			page 29


 916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 680              		.loc 1 916 0
 681 0158 7B68     		ldr	r3, [r7, #4]
 682 015a 1A68     		ldr	r2, [r3]
 683 015c 7B68     		ldr	r3, [r7, #4]
 684 015e 1B68     		ldr	r3, [r3]
 685 0160 196E     		ldr	r1, [r3, #96]
 686 0162 474B     		ldr	r3, .L42+16
 687 0164 0B40     		ands	r3, r3, r1
 688 0166 1366     		str	r3, [r2, #96]
 917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR2 */
 918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 689              		.loc 1 918 0
 690 0168 7B68     		ldr	r3, [r7, #4]
 691 016a 1A68     		ldr	r2, [r3]
 692 016c 7B68     		ldr	r3, [r7, #4]
 693 016e 1B68     		ldr	r3, [r3]
 694 0170 596E     		ldr	r1, [r3, #100]
 695 0172 434B     		ldr	r3, .L42+16
 696 0174 0B40     		ands	r3, r3, r1
 697 0176 5366     		str	r3, [r2, #100]
 919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR3 */
 920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 698              		.loc 1 920 0
 699 0178 7B68     		ldr	r3, [r7, #4]
 700 017a 1A68     		ldr	r2, [r3]
 701 017c 7B68     		ldr	r3, [r7, #4]
 702 017e 1B68     		ldr	r3, [r3]
 703 0180 996E     		ldr	r1, [r3, #104]
 704 0182 3F4B     		ldr	r3, .L42+16
 705 0184 0B40     		ands	r3, r3, r1
 706 0186 9366     		str	r3, [r2, #104]
 921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register OFR4 */
 922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 707              		.loc 1 922 0
 708 0188 7B68     		ldr	r3, [r7, #4]
 709 018a 1A68     		ldr	r2, [r3]
 710 018c 7B68     		ldr	r3, [r7, #4]
 711 018e 1B68     		ldr	r3, [r3]
 712 0190 D96E     		ldr	r1, [r3, #108]
 713 0192 3B4B     		ldr	r3, .L42+16
 714 0194 0B40     		ands	r3, r3, r1
 715 0196 D366     		str	r3, [r2, #108]
 923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
 926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register AWD2CR */
 928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 716              		.loc 1 928 0
 717 0198 7B68     		ldr	r3, [r7, #4]
 718 019a 1A68     		ldr	r2, [r3]
 719 019c 7B68     		ldr	r3, [r7, #4]
 720 019e 1B68     		ldr	r3, [r3]
 721 01a0 D3F8A030 		ldr	r3, [r3, #160]
 722 01a4 DB0C     		lsrs	r3, r3, #19
 723 01a6 DB04     		lsls	r3, r3, #19
ARM GAS  /tmp/ccumkl9n.s 			page 30


 724 01a8 C2F8A030 		str	r3, [r2, #160]
 929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register AWD3CR */
 931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 725              		.loc 1 931 0
 726 01ac 7B68     		ldr	r3, [r7, #4]
 727 01ae 1A68     		ldr	r2, [r3]
 728 01b0 7B68     		ldr	r3, [r7, #4]
 729 01b2 1B68     		ldr	r3, [r3]
 730 01b4 D3F8A430 		ldr	r3, [r3, #164]
 731 01b8 DB0C     		lsrs	r3, r3, #19
 732 01ba DB04     		lsls	r3, r3, #19
 733 01bc C2F8A430 		str	r3, [r2, #164]
 932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DIFSEL */
 934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 734              		.loc 1 934 0
 735 01c0 7B68     		ldr	r3, [r7, #4]
 736 01c2 1A68     		ldr	r2, [r3]
 737 01c4 7B68     		ldr	r3, [r7, #4]
 738 01c6 1B68     		ldr	r3, [r3]
 739 01c8 D3F8B030 		ldr	r3, [r3, #176]
 740 01cc DB0C     		lsrs	r3, r3, #19
 741 01ce DB04     		lsls	r3, r3, #19
 742 01d0 C2F8B030 		str	r3, [r2, #176]
 935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CALFACT */
 937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 743              		.loc 1 937 0
 744 01d4 7B68     		ldr	r3, [r7, #4]
 745 01d6 1B68     		ldr	r3, [r3]
 746 01d8 7A68     		ldr	r2, [r7, #4]
 747 01da 1268     		ldr	r2, [r2]
 748 01dc D2F8B420 		ldr	r2, [r2, #180]
 749 01e0 22F07F12 		bic	r2, r2, #8323199
 750 01e4 C3F8B420 		str	r2, [r3, #180]
 938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset common ADC registers ========== */
 945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
 947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
 948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
 949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 751              		.loc 1 949 0
 752 01e8 264B     		ldr	r3, .L42+20
 753 01ea 3B66     		str	r3, [r7, #96]
 950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set handle of the other ADC sharing the same common register           */
 952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
 754              		.loc 1 952 0
 755 01ec 0023     		movs	r3, #0
 756 01ee FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccumkl9n.s 			page 31


 953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Software is allowed to change common parameters only when all ADCs of  */
 955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* the common group are disabled.                                         */
 956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((ADC_IS_ENABLE(hadc) == RESET)                                  &&
 757              		.loc 1 956 0
 758 01f0 7B68     		ldr	r3, [r7, #4]
 759 01f2 1B68     		ldr	r3, [r3]
 760 01f4 9B68     		ldr	r3, [r3, #8]
 761 01f6 03F00303 		and	r3, r3, #3
 762 01fa 012B     		cmp	r3, #1
 763 01fc 08D1     		bne	.L35
 764              		.loc 1 956 0 is_stmt 0 discriminator 1
 765 01fe 7B68     		ldr	r3, [r7, #4]
 766 0200 1B68     		ldr	r3, [r3]
 767 0202 1B68     		ldr	r3, [r3]
 768 0204 03F00103 		and	r3, r3, #1
 769 0208 002B     		cmp	r3, #0
 770 020a 01D0     		beq	.L35
 771              		.loc 1 956 0 discriminator 3
 772 020c 0123     		movs	r3, #1
 773 020e 00E0     		b	.L36
 774              	.L35:
 775              		.loc 1 956 0 discriminator 4
 776 0210 0023     		movs	r3, #0
 777              	.L36:
 778              		.loc 1 956 0 discriminator 6
 779 0212 002B     		cmp	r3, #0
 780 0214 19D1     		bne	.L37
 957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 781              		.loc 1 957 0 is_stmt 1 discriminator 7
 782 0216 FB68     		ldr	r3, [r7, #12]
 956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 783              		.loc 1 956 0 discriminator 7
 784 0218 002B     		cmp	r3, #0
 785 021a 10D0     		beq	.L38
 958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET) )   )
 786              		.loc 1 958 0
 787 021c FB68     		ldr	r3, [r7, #12]
 788 021e 9B68     		ldr	r3, [r3, #8]
 789 0220 03F00303 		and	r3, r3, #3
 790 0224 012B     		cmp	r3, #1
 791 0226 07D1     		bne	.L39
 792              		.loc 1 958 0 is_stmt 0 discriminator 1
 793 0228 FB68     		ldr	r3, [r7, #12]
 794 022a 1B68     		ldr	r3, [r3]
 795 022c 03F00103 		and	r3, r3, #1
 796 0230 002B     		cmp	r3, #0
 797 0232 01D0     		beq	.L39
 798              		.loc 1 958 0 discriminator 3
 799 0234 0123     		movs	r3, #1
 800 0236 00E0     		b	.L40
 801              	.L39:
 802              		.loc 1 958 0 discriminator 4
 803 0238 0023     		movs	r3, #0
 804              	.L40:
 957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (tmphadcSharingSameCommonRegister.Instance == NULL) ||
 805              		.loc 1 957 0 is_stmt 1
ARM GAS  /tmp/ccumkl9n.s 			page 32


 806 023a 002B     		cmp	r3, #0
 807 023c 05D1     		bne	.L37
 808              	.L38:
 959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset configuration of ADC common register CCR:
 961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - clock mode: CKMODE
 962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - multimode related parameters: MDMA, DMACFG, DELAY, MULTI (set into
 963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_ADCEx_MultiModeConfigChannel() )
 964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         - internal measurement paths: Vbat, temperature sensor, Vref (set into
 965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       */
 967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_CKMODE |
 809              		.loc 1 967 0
 810 023e 3B6E     		ldr	r3, [r7, #96]
 811 0240 9A68     		ldr	r2, [r3, #8]
 812 0242 114B     		ldr	r3, .L42+24
 813 0244 1340     		ands	r3, r3, r2
 814 0246 3A6E     		ldr	r2, [r7, #96]
 815 0248 9360     		str	r3, [r2, #8]
 816              	.L37:
 968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_VBATEN |
 969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_TSEN   |
 970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_VREFEN |
 971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_MDMA   |
 972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_DMACFG |
 973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_DELAY  |
 974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CCR_MULTI   );
 975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Other ADC common registers (CSR, CDR) are in access mode read only,
 977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          no direct reset applicable */
 978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Hard reset and clock disable of ADC peripheral ========== */
 982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Into HAL_ADC_MspDeInit(), ADC clock can be hard reset and disabled     */
 983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* at RCC top level.                                                      */
 984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Refer to header of this file for more details on clock disabling       */
 985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* procedure.                                                             */
 986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
 988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* DeInit the low level hardware */
 989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspDeInit(hadc);
 817              		.loc 1 989 0
 818 024a 7868     		ldr	r0, [r7, #4]
 819 024c FFF7FEFF 		bl	HAL_ADC_MspDeInit
 990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 991:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
 992:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
 820              		.loc 1 992 0
 821 0250 7B68     		ldr	r3, [r7, #4]
 822 0252 0022     		movs	r2, #0
 823 0254 9A64     		str	r2, [r3, #72]
 993:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
 994:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
 995:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_RESET;
 824              		.loc 1 995 0
 825 0256 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 33


 826 0258 0022     		movs	r2, #0
 827 025a 5A64     		str	r2, [r3, #68]
 828              	.L34:
 996:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
 997:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
 998:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
 999:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 829              		.loc 1 999 0
 830 025c 7B68     		ldr	r3, [r7, #4]
 831 025e 0022     		movs	r2, #0
 832 0260 83F84020 		strb	r2, [r3, #64]
1000:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1001:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1002:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1003:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 833              		.loc 1 1003 0
 834 0264 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 835              	.L41:
1004:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 836              		.loc 1 1004 0 discriminator 1
 837 0268 1846     		mov	r0, r3
 838 026a 6837     		adds	r7, r7, #104
 839              	.LCFI8:
 840              		.cfi_def_cfa_offset 8
 841 026c BD46     		mov	sp, r7
 842              	.LCFI9:
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 026e 80BD     		pop	{r7, pc}
 846              	.L43:
 847              		.align	2
 848              	.L42:
 849 0270 04800080 		.word	-2147450876
 850 0274 070000C0 		.word	-1073741817
 851 0278 300882E0 		.word	-528349136
 852 027c 200882E0 		.word	-528349152
 853 0280 00F0FF03 		.word	67104768
 854 0284 00030050 		.word	1342178048
 855 0288 E0103CFE 		.word	-29617952
 856              		.cfi_endproc
 857              	.LFE124:
 859              		.section	.text.HAL_ADC_Start,"ax",%progbits
 860              		.align	2
 861              		.global	HAL_ADC_Start
 862              		.thumb
 863              		.thumb_func
 865              	HAL_ADC_Start:
 866              	.LFB125:
1005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1006:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1007:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1008:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1009:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1010:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1011:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1012:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Deinitialize the ADC peripheral registers to its default reset values.
1013:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
ARM GAS  /tmp/ccumkl9n.s 			page 34


1014:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1015:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
1017:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
1018:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
1019:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1020:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check ADC handle */
1021:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc == NULL)
1022:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1023:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      return HAL_ERROR;
1024:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1025:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1026:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1027:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1028:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1029:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
1030:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
1031:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1032:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
1033:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
1034:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1035:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1036:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1037:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
1038:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* correctly completed.                                                     */
1039:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1040:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1041:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Reset ADC registers ========== */
1042:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SR */
1043:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD | ADC_FLAG_JEOC | ADC_FLAG_EOC |
1044:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 ADC_FLAG_JSTRT | ADC_FLAG_STRT));
1045:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                          
1046:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR1 */
1047:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR1, (ADC_CR1_AWDEN   | ADC_CR1_JAWDEN | ADC_CR1_DISCNUM | 
1048:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_JDISCEN | ADC_CR1_DISCEN | ADC_CR1_JAUTO   | 
1049:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_AWDSGL  | ADC_CR1_SCAN   | ADC_CR1_JEOCIE  |   
1050:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR1_AWDIE   | ADC_CR1_EOCIE  | ADC_CR1_AWDCH    ));
1051:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1052:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register CR2 */
1053:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CR2, (ADC_CR2_TSVREFE | ADC_CR2_SWSTART | ADC_CR2_JSWSTART | 
1054:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_EXTTRIG | ADC_CR2_EXTSEL  | ADC_CR2_JEXTTRIG |  
1055:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_JEXTSEL | ADC_CR2_ALIGN   | ADC_CR2_DMA      |        
1056:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_RSTCAL  | ADC_CR2_CAL     | ADC_CR2_CONT     |         
1057:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_CR2_ADON                                          ));
1058:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1059:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR1 */
1060:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR1, (ADC_SMPR1_SMP18 | ADC_SMPR1_SMP17 | ADC_SMPR1_SMP15 | 
1061:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR1_SMP15 | ADC_SMPR1_SMP14 | ADC_SMPR1_SMP13 | 
1062:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR1_SMP12 | ADC_SMPR1_SMP11 | ADC_SMPR1_SMP10  ));
1063:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SMPR2 */
1065:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SMPR2, (ADC_SMPR2_SMP9 | ADC_SMPR2_SMP8 | ADC_SMPR2_SMP7 | 
1066:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP6 | ADC_SMPR2_SMP5 | ADC_SMPR2_SMP4 | 
1067:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP3 | ADC_SMPR2_SMP2 | ADC_SMPR2_SMP1 | 
1068:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_SMPR2_SMP0                                    ));
1069:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1070:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR1 */
ARM GAS  /tmp/ccumkl9n.s 			page 35


1071:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR1, ADC_JOFR1_JOFFSET1);
1072:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR2 */
1073:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR2, ADC_JOFR2_JOFFSET2);
1074:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR3 */
1075:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR3, ADC_JOFR3_JOFFSET3);
1076:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JOFR4 */
1077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JOFR4, ADC_JOFR4_JOFFSET4);
1078:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1079:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register HTR */
1080:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->HTR, ADC_HTR_HT);
1081:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register LTR */
1082:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->LTR, ADC_LTR_LT);
1083:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1084:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
1085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
1086:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
1087:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
1088:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1089:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR1 */
1090:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L    |
1091:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ16 | ADC_SQR1_SQ15 | 
1092:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR1_SQ14 | ADC_SQR1_SQ13  );
1093:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1094:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR2 */
1095:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ12 | ADC_SQR2_SQ11 | ADC_SQR2_SQ10 | 
1096:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR2_SQ9  | ADC_SQR2_SQ8  | ADC_SQR2_SQ7   );
1097:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1098:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register SQR3 */
1099:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ6 | ADC_SQR3_SQ5 | ADC_SQR3_SQ4 | 
1100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_SQR3_SQ3 | ADC_SQR3_SQ2 | ADC_SQR3_SQ1  );
1101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JSQR */
1103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
1104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
1105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
1106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register JSQR */
1108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->JSQR, ADC_JSQR_JL |
1109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ4 | ADC_JSQR_JSQ3 | 
1110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                     ADC_JSQR_JSQ2 | ADC_JSQR_JSQ1  );
1111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset register DR */
1113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
1114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset registers JDR1, JDR2, JDR3, JDR4 */
1116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bits in access mode read only, no direct reset applicable*/
1117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Reset VBAT measurement path, in case of enabled before by selecting    */
1119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channel ADC_CHANNEL_VBAT. */
1120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SYSCFG->CFGR1 &= ~(SYSCFG_CFGR1_VBAT);
1121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ========== Hard reset ADC peripheral ========== */
1124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Performs a global reset of the entire ADC peripheral: ADC state is     */
1125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* forced to a similar state after device power-on.                       */
1126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If needed, copy-paste and uncomment the following reset code into      */
1127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
ARM GAS  /tmp/ccumkl9n.s 			page 36


1128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*                                                                        */
1129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
1130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
1131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* DeInit the low level hardware */
1133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_MspDeInit(hadc);
1134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
1136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
1137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_RESET;
1140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
1153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADCEx Input and Output operation functions
1156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended IO operation functions
1157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
1158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim   
1159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
1160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ##### IO operation functions #####
1161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================  
1162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group.
1164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group.
1165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion complete on regular group.
1166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion event.
1167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of regular channel conversion.
1168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group and enable interruptions.
1169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group and disable interruptions.
1170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Handle ADC interrupt request
1171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of regular group and enable DMA transfer.
1172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of injected group.
1175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of injected group.
1176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Poll for conversion complete on injected group.
1177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of injected channel conversion.
1178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start conversion of injected group and enable interruptions.
1179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop conversion of injected group and disable interruptions.
1180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Start multimode and enable DMA transfer.
1182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
1183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
1184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccumkl9n.s 			page 37


1185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
1186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
1187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
1188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
1190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
1191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group.
1199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
1200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs):
1201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if ADC is slave, ADC is enabled only (conversion is not started).
1202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if ADC is master, ADC is enabled and multimode conversion is started.
1203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 867              		.loc 1 1207 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 16
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871 0000 80B5     		push	{r7, lr}
 872              	.LCFI10:
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 7, -8
 875              		.cfi_offset 14, -4
 876 0002 84B0     		sub	sp, sp, #16
 877              	.LCFI11:
 878              		.cfi_def_cfa_offset 24
 879 0004 00AF     		add	r7, sp, #0
 880              	.LCFI12:
 881              		.cfi_def_cfa_register 7
 882 0006 7860     		str	r0, [r7, #4]
1208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 883              		.loc 1 1208 0
 884 0008 0023     		movs	r3, #0
 885 000a FB73     		strb	r3, [r7, #15]
1209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 886              		.loc 1 1214 0
 887 000c 7B68     		ldr	r3, [r7, #4]
 888 000e 1B68     		ldr	r3, [r3]
 889 0010 9B68     		ldr	r3, [r3, #8]
 890 0012 03F00403 		and	r3, r3, #4
 891 0016 002B     		cmp	r3, #0
 892 0018 57D1     		bne	.L45
1215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/ccumkl9n.s 			page 38


1216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
1217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 893              		.loc 1 1217 0
 894 001a 7B68     		ldr	r3, [r7, #4]
 895 001c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 896 0020 012B     		cmp	r3, #1
 897 0022 01D1     		bne	.L46
 898              		.loc 1 1217 0 is_stmt 0 discriminator 1
 899 0024 0223     		movs	r3, #2
 900 0026 53E0     		b	.L47
 901              	.L46:
 902              		.loc 1 1217 0 discriminator 2
 903 0028 7B68     		ldr	r3, [r7, #4]
 904 002a 0122     		movs	r2, #1
 905 002c 83F84020 		strb	r2, [r3, #64]
1218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
1220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 906              		.loc 1 1220 0 is_stmt 1 discriminator 2
 907 0030 7868     		ldr	r0, [r7, #4]
 908 0032 FFF7FEFF 		bl	ADC_Enable
 909 0036 0346     		mov	r3, r0
 910 0038 FB73     		strb	r3, [r7, #15]
1221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
1223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 911              		.loc 1 1223 0 discriminator 2
 912 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 913 003c 002B     		cmp	r3, #0
 914 003e 3FD1     		bne	.L48
1224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
1226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
1227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
1228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 915              		.loc 1 1228 0
 916 0040 7B68     		ldr	r3, [r7, #4]
 917 0042 5B6C     		ldr	r3, [r3, #68]
 918 0044 23F47063 		bic	r3, r3, #3840
 919 0048 23F00103 		bic	r3, r3, #1
 920 004c 43F48072 		orr	r2, r3, #256
 921 0050 7B68     		ldr	r3, [r7, #4]
 922 0052 5A64     		str	r2, [r3, #68]
1229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
1231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set group injected state (from auto-injection) and multimode state   */
1233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* for all cases of multimode: independent mode, multimode ADC master   */
1234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or multimode ADC slave (for devices with several ADCs):              */
1235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC independent or master) */
1238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 923              		.loc 1 1238 0
 924 0054 7B68     		ldr	r3, [r7, #4]
 925 0056 5B6C     		ldr	r3, [r3, #68]
 926 0058 23F48012 		bic	r2, r3, #1048576
ARM GAS  /tmp/ccumkl9n.s 			page 39


 927 005c 7B68     		ldr	r3, [r7, #4]
 928 005e 5A64     		str	r2, [r3, #68]
1239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
1241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
1242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
 929              		.loc 1 1242 0
 930 0060 7B68     		ldr	r3, [r7, #4]
 931 0062 1B68     		ldr	r3, [r3]
 932 0064 DB68     		ldr	r3, [r3, #12]
 933 0066 03F00073 		and	r3, r3, #33554432
 934 006a 002B     		cmp	r3, #0
 935 006c 07D0     		beq	.L54
1243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 936              		.loc 1 1244 0
 937 006e 7B68     		ldr	r3, [r7, #4]
 938 0070 5B6C     		ldr	r3, [r3, #68]
 939 0072 23F44053 		bic	r3, r3, #12288
 940 0076 43F48052 		orr	r2, r3, #4096
 941 007a 7B68     		ldr	r3, [r7, #4]
 942 007c 5A64     		str	r2, [r3, #68]
 943              	.L54:
1245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC slave) */
1250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
1253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
1254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
1255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* State machine update: Check if an injected conversion is ongoing */
1261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 944              		.loc 1 1261 0
 945 007e 7B68     		ldr	r3, [r7, #4]
 946 0080 5B6C     		ldr	r3, [r3, #68]
 947 0082 03F48053 		and	r3, r3, #4096
 948 0086 002B     		cmp	r3, #0
 949 0088 06D0     		beq	.L50
1262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC error code fields related to conversions on group regular*/
1264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 950              		.loc 1 1264 0
 951 008a 7B68     		ldr	r3, [r7, #4]
 952 008c 9B6C     		ldr	r3, [r3, #72]
 953 008e 23F00602 		bic	r2, r3, #6
 954 0092 7B68     		ldr	r3, [r7, #4]
 955 0094 9A64     		str	r2, [r3, #72]
 956 0096 02E0     		b	.L51
 957              	.L50:
ARM GAS  /tmp/ccumkl9n.s 			page 40


1265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
1269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 958              		.loc 1 1269 0
 959 0098 7B68     		ldr	r3, [r7, #4]
 960 009a 0022     		movs	r2, #0
 961 009c 9A64     		str	r2, [r3, #72]
 962              	.L51:
1270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
1273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 963              		.loc 1 1275 0
 964 009e 7B68     		ldr	r3, [r7, #4]
 965 00a0 0022     		movs	r2, #0
 966 00a2 83F84020 		strb	r2, [r3, #64]
1276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
1278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
1280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 967              		.loc 1 1280 0
 968 00a6 7B68     		ldr	r3, [r7, #4]
 969 00a8 1B68     		ldr	r3, [r3]
 970 00aa 1C22     		movs	r2, #28
 971 00ac 1A60     		str	r2, [r3]
1281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
1283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
1284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
1285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
1286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
1287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
1288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
1290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
 972              		.loc 1 1291 0
 973 00ae 7B68     		ldr	r3, [r7, #4]
 974 00b0 1B68     		ldr	r3, [r3]
 975 00b2 7A68     		ldr	r2, [r7, #4]
 976 00b4 1268     		ldr	r2, [r2]
 977 00b6 9268     		ldr	r2, [r2, #8]
 978 00b8 42F00402 		orr	r2, r2, #4
 979 00bc 9A60     		str	r2, [r3, #8]
 980 00be 06E0     		b	.L53
 981              	.L48:
1292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
1297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
ARM GAS  /tmp/ccumkl9n.s 			page 41


 982              		.loc 1 1297 0
 983 00c0 7B68     		ldr	r3, [r7, #4]
 984 00c2 0022     		movs	r2, #0
 985 00c4 83F84020 		strb	r2, [r3, #64]
 986 00c8 01E0     		b	.L53
 987              	.L45:
1298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
 988              		.loc 1 1302 0
 989 00ca 0223     		movs	r3, #2
 990 00cc FB73     		strb	r3, [r7, #15]
 991              	.L53:
1303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 992              		.loc 1 1306 0
 993 00ce FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 994              	.L47:
1307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 995              		.loc 1 1307 0
 996 00d0 1846     		mov	r0, r3
 997 00d2 1037     		adds	r7, r7, #16
 998              	.LCFI13:
 999              		.cfi_def_cfa_offset 8
 1000 00d4 BD46     		mov	sp, r7
 1001              	.LCFI14:
 1002              		.cfi_def_cfa_register 13
 1003              		@ sp needed
 1004 00d6 80BD     		pop	{r7, pc}
 1005              		.cfi_endproc
 1006              	.LFE125:
 1008              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 1009              		.align	2
 1010              		.global	HAL_ADC_Stop
 1011              		.thumb
 1012              		.thumb_func
 1014              	HAL_ADC_Stop:
 1015              	.LFB126:
1308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group.
1316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
1317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
ARM GAS  /tmp/ccumkl9n.s 			page 42


1323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
1330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
1331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
1332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
1334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
1337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
1338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
1339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
1341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
1342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
1344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
1345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
1346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
1347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
1349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
1352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
1355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
1356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
1360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
1361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
1364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
1365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
1366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
1367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
1369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
1370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
1371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
1373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
1374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
1375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
1376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
1377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
1378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
1379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccumkl9n.s 			page 43


1380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
1381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
1382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
1386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
1387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
1401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC peripheral.
1402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
1403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
1404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
1405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
1406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
1407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
1408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop().
1409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
1411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 1016              		.loc 1 1413 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 16
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020 0000 80B5     		push	{r7, lr}
 1021              	.LCFI15:
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 84B0     		sub	sp, sp, #16
 1026              	.LCFI16:
 1027              		.cfi_def_cfa_offset 24
 1028 0004 00AF     		add	r7, sp, #0
 1029              	.LCFI17:
 1030              		.cfi_def_cfa_register 7
 1031 0006 7860     		str	r0, [r7, #4]
1414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1032              		.loc 1 1414 0
 1033 0008 0023     		movs	r3, #0
 1034 000a FB73     		strb	r3, [r7, #15]
1415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  /tmp/ccumkl9n.s 			page 44


1418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1035              		.loc 1 1420 0
 1036 000c 7B68     		ldr	r3, [r7, #4]
 1037 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 1038 0012 012B     		cmp	r3, #1
 1039 0014 01D1     		bne	.L56
 1040              		.loc 1 1420 0 is_stmt 0 discriminator 1
 1041 0016 0223     		movs	r3, #2
 1042 0018 23E0     		b	.L57
 1043              	.L56:
 1044              		.loc 1 1420 0 discriminator 2
 1045 001a 7B68     		ldr	r3, [r7, #4]
 1046 001c 0122     		movs	r2, #1
 1047 001e 83F84020 		strb	r2, [r3, #64]
1421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
1423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 1048              		.loc 1 1423 0 is_stmt 1 discriminator 2
 1049 0022 7868     		ldr	r0, [r7, #4]
 1050 0024 6C21     		movs	r1, #108
 1051 0026 FFF7FEFF 		bl	ADC_ConversionStop
 1052 002a 0346     		mov	r3, r0
 1053 002c FB73     		strb	r3, [r7, #15]
1424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1054              		.loc 1 1426 0 discriminator 2
 1055 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1056 0030 002B     		cmp	r3, #0
 1057 0032 11D1     		bne	.L58
1427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
 1058              		.loc 1 1429 0
 1059 0034 7868     		ldr	r0, [r7, #4]
 1060 0036 FFF7FEFF 		bl	ADC_Disable
 1061 003a 0346     		mov	r3, r0
 1062 003c FB73     		strb	r3, [r7, #15]
1430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
1432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1063              		.loc 1 1432 0
 1064 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1065 0040 002B     		cmp	r3, #0
 1066 0042 09D1     		bne	.L58
1433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
1435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1067              		.loc 1 1435 0
 1068 0044 7B68     		ldr	r3, [r7, #4]
 1069 0046 5B6C     		ldr	r3, [r3, #68]
 1070 0048 23F48853 		bic	r3, r3, #4352
 1071 004c 23F00103 		bic	r3, r3, #1
 1072 0050 43F00102 		orr	r2, r3, #1
 1073 0054 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 45


 1074 0056 5A64     		str	r2, [r3, #68]
 1075              	.L58:
1436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
1438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1076              		.loc 1 1442 0
 1077 0058 7B68     		ldr	r3, [r7, #4]
 1078 005a 0022     		movs	r2, #0
 1079 005c 83F84020 		strb	r2, [r3, #64]
1443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 1080              		.loc 1 1445 0
 1081 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1082              	.L57:
1446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1083              		.loc 1 1446 0
 1084 0062 1846     		mov	r0, r3
 1085 0064 1037     		adds	r7, r7, #16
 1086              	.LCFI18:
 1087              		.cfi_def_cfa_offset 8
 1088 0066 BD46     		mov	sp, r7
 1089              	.LCFI19:
 1090              		.cfi_def_cfa_register 13
 1091              		@ sp needed
 1092 0068 80BD     		pop	{r7, pc}
 1093              		.cfi_endproc
 1094              	.LFE126:
 1096 006a 00BF     		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 1097              		.align	2
 1098              		.global	HAL_ADC_PollForConversion
 1099              		.thumb
 1100              		.thumb_func
 1102              	HAL_ADC_PollForConversion:
 1103              	.LFB127:
1447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
1455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral.
1456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
1457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use, it
1458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
1461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
ARM GAS  /tmp/ccumkl9n.s 			page 46


1465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
1470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
1473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
1474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
1475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
1477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
1486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
1489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
1490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for regular group conversion to be completed.
1499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion) are cleared by this function, with an exception:
1501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are 
1502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         not cleared to not interfere with this feature until data register
1503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is read using function HAL_ADC_GetValue().
1504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         performed on each conversion. Nevertheless, polling can still 
1509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be performed on the complete sequence (ADC init
1510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
1513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Depending on init parameter "EOCSelection", flags EOS or EOC is 
1514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         checked and cleared depending on autodelay status (bit AUTDLY).     
1515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 1104              		.loc 1 1518 0
 1105              		.cfi_startproc
 1106              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccumkl9n.s 			page 47


 1107              		@ frame_needed = 1, uses_anonymous_args = 0
 1108 0000 80B5     		push	{r7, lr}
 1109              	.LCFI20:
 1110              		.cfi_def_cfa_offset 8
 1111              		.cfi_offset 7, -8
 1112              		.cfi_offset 14, -4
 1113 0002 86B0     		sub	sp, sp, #24
 1114              	.LCFI21:
 1115              		.cfi_def_cfa_offset 32
 1116 0004 00AF     		add	r7, sp, #0
 1117              	.LCFI22:
 1118              		.cfi_def_cfa_register 7
 1119 0006 7860     		str	r0, [r7, #4]
 1120 0008 3960     		str	r1, [r7]
1519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
1520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_Flag_EOC;
1521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
1522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr     = 0x0U;
 1121              		.loc 1 1522 0
 1122 000a 0023     		movs	r3, #0
 1123 000c 3B61     		str	r3, [r7, #16]
1523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /* If end of conversion selected to end of sequence */
1528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 1124              		.loc 1 1528 0
 1125 000e 7B68     		ldr	r3, [r7, #4]
 1126 0010 5B69     		ldr	r3, [r3, #20]
 1127 0012 082B     		cmp	r3, #8
 1128 0014 02D1     		bne	.L60
1529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = ADC_FLAG_EOS;
 1129              		.loc 1 1530 0
 1130 0016 0823     		movs	r3, #8
 1131 0018 7B61     		str	r3, [r7, #20]
 1132 001a 2EE0     		b	.L72
 1133              	.L60:
1531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of each conversion */
1533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* ADC_EOC_SINGLE_CONV */
1534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification that ADC configuration is compliant with polling for      */
1536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* each conversion:                                                       */
1537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* several ranks and polling for end of each conversion.                  */
1539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For code simplicity sake, this particular case is generalized to       */
1540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
1543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may have up to 4 ADC and 2 common */
1544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
1545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 1134              		.loc 1 1545 0
 1135 001c 524B     		ldr	r3, .L73
 1136 001e FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccumkl9n.s 			page 48


1546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check DMA configuration, depending on MultiMode set or not */
1548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI) == ADC_MODE_INDEPENDENT)
 1137              		.loc 1 1548 0
 1138 0020 FB68     		ldr	r3, [r7, #12]
 1139 0022 9B68     		ldr	r3, [r3, #8]
 1140 0024 03F01F03 		and	r3, r3, #31
 1141 0028 002B     		cmp	r3, #0
 1142 002a 12D1     		bne	.L62
1549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_DMAEN))
 1143              		.loc 1 1550 0
 1144 002c 7B68     		ldr	r3, [r7, #4]
 1145 002e 1B68     		ldr	r3, [r3]
 1146 0030 DB68     		ldr	r3, [r3, #12]
 1147 0032 03F00103 		and	r3, r3, #1
 1148 0036 002B     		cmp	r3, #0
 1149 0038 1DD0     		beq	.L63
1551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1150              		.loc 1 1553 0
 1151 003a 7B68     		ldr	r3, [r7, #4]
 1152 003c 5B6C     		ldr	r3, [r3, #68]
 1153 003e 43F02002 		orr	r2, r3, #32
 1154 0042 7B68     		ldr	r3, [r7, #4]
 1155 0044 5A64     		str	r2, [r3, #68]
1554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 1156              		.loc 1 1556 0
 1157 0046 7B68     		ldr	r3, [r7, #4]
 1158 0048 0022     		movs	r2, #0
 1159 004a 83F84020 		strb	r2, [r3, #64]
1557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 1160              		.loc 1 1558 0
 1161 004e 0123     		movs	r3, #1
 1162 0050 86E0     		b	.L64
 1163              	.L62:
1559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
1562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* MultiMode is enabled, Common Control Register MDMA bits must be checked */
1564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA) != RESET)
 1164              		.loc 1 1564 0
 1165 0052 FB68     		ldr	r3, [r7, #12]
 1166 0054 9B68     		ldr	r3, [r3, #8]
 1167 0056 03F44043 		and	r3, r3, #49152
 1168 005a 002B     		cmp	r3, #0
 1169 005c 0BD0     		beq	.L63
1565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1170              		.loc 1 1567 0
 1171 005e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 49


 1172 0060 5B6C     		ldr	r3, [r3, #68]
 1173 0062 43F02002 		orr	r2, r3, #32
 1174 0066 7B68     		ldr	r3, [r7, #4]
 1175 0068 5A64     		str	r2, [r3, #68]
1568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 1176              		.loc 1 1570 0
 1177 006a 7B68     		ldr	r3, [r7, #4]
 1178 006c 0022     		movs	r2, #0
 1179 006e 83F84020 		strb	r2, [r3, #64]
1571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 1180              		.loc 1 1572 0
 1181 0072 0123     		movs	r3, #1
 1182 0074 74E0     		b	.L64
 1183              	.L63:
1573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = (ADC_FLAG_EOC | ADC_FLAG_EOS);
 1184              		.loc 1 1576 0
 1185 0076 0C23     		movs	r3, #12
 1186 0078 7B61     		str	r3, [r7, #20]
 1187              	.L72:
1577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave      */
1581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode             */
1582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* available).                                                            */
1583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
1584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
 1188              		.loc 1 1585 0
 1189 007a 7B68     		ldr	r3, [r7, #4]
 1190 007c 1B68     		ldr	r3, [r3]
 1191 007e DB68     		ldr	r3, [r3, #12]
 1192 0080 3B61     		str	r3, [r7, #16]
1586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
1590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
1593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
 1193              		.loc 1 1593 0
 1194 0082 FFF7FEFF 		bl	HAL_GetTick
 1195 0086 B860     		str	r0, [r7, #8]
1594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Wait until End of Conversion or End of Sequence flag is raised */
1596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 1196              		.loc 1 1596 0
 1197 0088 1AE0     		b	.L65
 1198              	.L67:
1597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/ccumkl9n.s 			page 50


1598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1199              		.loc 1 1599 0
 1200 008a 3B68     		ldr	r3, [r7]
 1201 008c B3F1FF3F 		cmp	r3, #-1
 1202 0090 16D0     		beq	.L65
1600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 1203              		.loc 1 1601 0
 1204 0092 3B68     		ldr	r3, [r7]
 1205 0094 002B     		cmp	r3, #0
 1206 0096 07D0     		beq	.L66
 1207              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1208 0098 FFF7FEFF 		bl	HAL_GetTick
 1209 009c 0246     		mov	r2, r0
 1210 009e BB68     		ldr	r3, [r7, #8]
 1211 00a0 D21A     		subs	r2, r2, r3
 1212 00a2 3B68     		ldr	r3, [r7]
 1213 00a4 9A42     		cmp	r2, r3
 1214 00a6 0BD9     		bls	.L65
 1215              	.L66:
1602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1216              		.loc 1 1604 0 is_stmt 1
 1217 00a8 7B68     		ldr	r3, [r7, #4]
 1218 00aa 5B6C     		ldr	r3, [r3, #68]
 1219 00ac 43F00402 		orr	r2, r3, #4
 1220 00b0 7B68     		ldr	r3, [r7, #4]
 1221 00b2 5A64     		str	r2, [r3, #68]
1605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 1222              		.loc 1 1607 0
 1223 00b4 7B68     		ldr	r3, [r7, #4]
 1224 00b6 0022     		movs	r2, #0
 1225 00b8 83F84020 		strb	r2, [r3, #64]
1608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
 1226              		.loc 1 1609 0
 1227 00bc 0323     		movs	r3, #3
 1228 00be 4FE0     		b	.L64
 1229              	.L65:
1596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1230              		.loc 1 1596 0
 1231 00c0 7B68     		ldr	r3, [r7, #4]
 1232 00c2 1B68     		ldr	r3, [r3]
 1233 00c4 1A68     		ldr	r2, [r3]
 1234 00c6 7B69     		ldr	r3, [r7, #20]
 1235 00c8 1340     		ands	r3, r3, r2
 1236 00ca 002B     		cmp	r3, #0
 1237 00cc DDD0     		beq	.L67
1610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
ARM GAS  /tmp/ccumkl9n.s 			page 51


1615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 1238              		.loc 1 1615 0
 1239 00ce 7B68     		ldr	r3, [r7, #4]
 1240 00d0 5B6C     		ldr	r3, [r3, #68]
 1241 00d2 43F40072 		orr	r2, r3, #512
 1242 00d6 7B68     		ldr	r3, [r7, #4]
 1243 00d8 5A64     		str	r2, [r3, #68]
1616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group regular       */
1618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)           && 
 1244              		.loc 1 1619 0
 1245 00da 7B68     		ldr	r3, [r7, #4]
 1246 00dc 1B68     		ldr	r3, [r3]
 1247 00de DB68     		ldr	r3, [r3, #12]
 1248 00e0 03F44063 		and	r3, r3, #3072
 1249 00e4 002B     		cmp	r3, #0
 1250 00e6 31D1     		bne	.L68
1620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )
 1251              		.loc 1 1620 0 discriminator 1
 1252 00e8 3B69     		ldr	r3, [r7, #16]
 1253 00ea 03F40053 		and	r3, r3, #8192
1619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )
 1254              		.loc 1 1619 0 discriminator 1
 1255 00ee 002B     		cmp	r3, #0
 1256 00f0 2CD1     		bne	.L68
1621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If End of Sequence is reached, disable interrupts */
1623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 1257              		.loc 1 1623 0
 1258 00f2 7B68     		ldr	r3, [r7, #4]
 1259 00f4 1B68     		ldr	r3, [r3]
 1260 00f6 1B68     		ldr	r3, [r3]
 1261 00f8 03F00803 		and	r3, r3, #8
 1262 00fc 002B     		cmp	r3, #0
 1263 00fe 25D0     		beq	.L68
1624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* ADSTART==0 (no conversion on going)                                  */
1627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 1264              		.loc 1 1627 0
 1265 0100 7B68     		ldr	r3, [r7, #4]
 1266 0102 1B68     		ldr	r3, [r3]
 1267 0104 9B68     		ldr	r3, [r3, #8]
 1268 0106 03F00403 		and	r3, r3, #4
 1269 010a 002B     		cmp	r3, #0
 1270 010c 12D1     		bne	.L69
1628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {        
1629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
1630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 1271              		.loc 1 1630 0
 1272 010e 7B68     		ldr	r3, [r7, #4]
 1273 0110 5B6C     		ldr	r3, [r3, #68]
 1274 0112 23F48072 		bic	r2, r3, #256
 1275 0116 7B68     		ldr	r3, [r7, #4]
 1276 0118 5A64     		str	r2, [r3, #68]
1631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
ARM GAS  /tmp/ccumkl9n.s 			page 52


1632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1277              		.loc 1 1632 0
 1278 011a 7B68     		ldr	r3, [r7, #4]
 1279 011c 5B6C     		ldr	r3, [r3, #68]
 1280 011e 03F48053 		and	r3, r3, #4096
 1281 0122 002B     		cmp	r3, #0
 1282 0124 12D1     		bne	.L68
1633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1283              		.loc 1 1634 0
 1284 0126 7B68     		ldr	r3, [r7, #4]
 1285 0128 5B6C     		ldr	r3, [r3, #68]
 1286 012a 43F00102 		orr	r2, r3, #1
 1287 012e 7B68     		ldr	r3, [r7, #4]
 1288 0130 5A64     		str	r2, [r3, #68]
 1289 0132 0BE0     		b	.L68
 1290              	.L69:
1635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
1638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state to error state */
1640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 1291              		.loc 1 1640 0
 1292 0134 7B68     		ldr	r3, [r7, #4]
 1293 0136 5B6C     		ldr	r3, [r3, #68]
 1294 0138 43F02002 		orr	r2, r3, #32
 1295 013c 7B68     		ldr	r3, [r7, #4]
 1296 013e 5A64     		str	r2, [r3, #68]
1641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
1643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 1297              		.loc 1 1643 0
 1298 0140 7B68     		ldr	r3, [r7, #4]
 1299 0142 9B6C     		ldr	r3, [r3, #72]
 1300 0144 43F00102 		orr	r2, r3, #1
 1301 0148 7B68     		ldr	r3, [r7, #4]
 1302 014a 9A64     		str	r2, [r3, #72]
 1303              	.L68:
1644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (READ_BIT (tmp_cfgr, ADC_CFGR_AUTDLY) == RESET)
 1304              		.loc 1 1651 0
 1305 014c 3B69     		ldr	r3, [r7, #16]
 1306 014e 03F48043 		and	r3, r3, #16384
 1307 0152 002B     		cmp	r3, #0
 1308 0154 03D1     		bne	.L71
1652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag */
1654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (EOC or EOS depending on HAL ADC initialization parameter) */
1655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, tmp_Flag_EOC);
 1309              		.loc 1 1655 0
ARM GAS  /tmp/ccumkl9n.s 			page 53


 1310 0156 7B68     		ldr	r3, [r7, #4]
 1311 0158 1B68     		ldr	r3, [r3]
 1312 015a 7A69     		ldr	r2, [r7, #20]
 1313 015c 1A60     		str	r2, [r3]
 1314              	.L71:
1656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 1315              		.loc 1 1659 0
 1316 015e 0023     		movs	r3, #0
 1317              	.L64:
1660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1318              		.loc 1 1660 0
 1319 0160 1846     		mov	r0, r3
 1320 0162 1837     		adds	r7, r7, #24
 1321              	.LCFI23:
 1322              		.cfi_def_cfa_offset 8
 1323 0164 BD46     		mov	sp, r7
 1324              	.LCFI24:
 1325              		.cfi_def_cfa_register 13
 1326              		@ sp needed
 1327 0166 80BD     		pop	{r7, pc}
 1328              	.L74:
 1329              		.align	2
 1330              	.L73:
 1331 0168 00030050 		.word	1342178048
 1332              		.cfi_endproc
 1333              	.LFE127:
 1335              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1336              		.align	2
 1337              		.global	HAL_ADC_PollForEvent
 1338              		.thumb
 1339              		.thumb_func
 1341              	HAL_ADC_PollForEvent:
 1342              	.LFB128:
1661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for regular group conversion to be completed.
1669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in DMA mode.
1671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         performed on each conversion.
1673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   On STM32F37x devices, limitation in case of sequencer enabled
1674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (several ranks selected): polling cannot be done on each 
1675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion inside the sequence. In this case, polling is replaced by
1676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         wait for maximum conversion time.
1677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
1679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
ARM GAS  /tmp/ccumkl9n.s 			page 54


1682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
1684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled */
1686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max = 0U;
1687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0U;
1688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification that ADC configuration is compliant with polling for        */
1693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* each conversion:                                                         */
1694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Particular case is ADC configured in DMA mode                            */
1695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA))
1696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
1698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
1701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
1702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return HAL_ERROR;
1704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
1707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
1708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
1710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion.                                                              */
1711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If single conversion for regular group (Scan mode disabled or enabled */
1712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    with NbrOfConversion =1U), flag EOC is used to determine the           */
1713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
1714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If sequence conversion for regular group (scan mode enabled and       */
1715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    NbrOfConversion >=2U), flag EOC is set only at the end of the          */
1716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    sequence.                                                             */
1717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
1718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
1719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
1720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
1721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    As flag EOC is not set after each conversion, no timeout status can   */
1722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    be set.                                                               */
1723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_SCAN) &&
1724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L)    )
1725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
1727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_EOC))
1728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
1730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
1731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
1735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
1738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
ARM GAS  /tmp/ccumkl9n.s 			page 55


1739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
1741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
1746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
1748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Calculation of CPU cycles corresponding to ADC conversion cycles.      */
1749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Retrieve ADC clock prescaler and ADC maximum conversion cycles on all  */
1750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channels.                                                              */
1751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ADC_CLOCK_PRESCALER_RANGE() ;
1752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max *= ADC_CONVCYCLES_MAX_RANGE(hadc);
1753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Poll with maximum conversion time */
1755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
1756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
1758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
1759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
1761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
1762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
1763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
1766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
1768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
1769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
1770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
1772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear regular group conversion flag */
1776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
1777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
1779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group regular       */
1782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: On STM32F37x devices, in case of sequencer enabled                 */
1784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       (several ranks selected), end of conversion flag is raised         */
1785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       at the end of the sequence.                                        */
1786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
1787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (hadc->Init.ContinuousConvMode == DISABLE)   )
1788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {   
1789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
1791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     { 
1794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
1795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccumkl9n.s 			page 56


1796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
1800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Poll for conversion event.
1809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  EventType: the ADC event type.
1811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD1_EVENT: ADC Analog watchdog 1 event (main analog watchdog, present on a
1813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD2_EVENT: ADC Analog watchdog 2 event (additional analog watchdog, not pr
1814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD3_EVENT: ADC Analog watchdog 3 event (additional analog watchdog, not pr
1815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_OVR_EVENT: ADC Overrun event
1816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_JQOVF_EVENT: ADC Injected context queue overflow event
1817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
1818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 1343              		.loc 1 1821 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 24
 1346              		@ frame_needed = 1, uses_anonymous_args = 0
 1347 0000 80B5     		push	{r7, lr}
 1348              	.LCFI25:
 1349              		.cfi_def_cfa_offset 8
 1350              		.cfi_offset 7, -8
 1351              		.cfi_offset 14, -4
 1352 0002 86B0     		sub	sp, sp, #24
 1353              	.LCFI26:
 1354              		.cfi_def_cfa_offset 32
 1355 0004 00AF     		add	r7, sp, #0
 1356              	.LCFI27:
 1357              		.cfi_def_cfa_register 7
 1358 0006 F860     		str	r0, [r7, #12]
 1359 0008 B960     		str	r1, [r7, #8]
 1360 000a 7A60     		str	r2, [r7, #4]
1822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart; 
1823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get start tick count */
1829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
 1361              		.loc 1 1829 0
 1362 000c FFF7FEFF 		bl	HAL_GetTick
 1363 0010 7861     		str	r0, [r7, #20]
1830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check selected event flag */
ARM GAS  /tmp/ccumkl9n.s 			page 57


1832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
 1364              		.loc 1 1832 0
 1365 0012 1AE0     		b	.L76
 1366              	.L79:
1833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 1367              		.loc 1 1835 0
 1368 0014 7B68     		ldr	r3, [r7, #4]
 1369 0016 B3F1FF3F 		cmp	r3, #-1
 1370 001a 16D0     		beq	.L76
1836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 1371              		.loc 1 1837 0
 1372 001c 7B68     		ldr	r3, [r7, #4]
 1373 001e 002B     		cmp	r3, #0
 1374 0020 07D0     		beq	.L77
 1375              		.loc 1 1837 0 is_stmt 0 discriminator 1
 1376 0022 FFF7FEFF 		bl	HAL_GetTick
 1377 0026 0246     		mov	r2, r0
 1378 0028 7B69     		ldr	r3, [r7, #20]
 1379 002a D21A     		subs	r2, r2, r3
 1380 002c 7B68     		ldr	r3, [r7, #4]
 1381 002e 9A42     		cmp	r2, r3
 1382 0030 0BD9     		bls	.L76
 1383              	.L77:
1838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1384              		.loc 1 1840 0 is_stmt 1
 1385 0032 FB68     		ldr	r3, [r7, #12]
 1386 0034 5B6C     		ldr	r3, [r3, #68]
 1387 0036 43F00402 		orr	r2, r3, #4
 1388 003a FB68     		ldr	r3, [r7, #12]
 1389 003c 5A64     		str	r2, [r3, #68]
1841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 1390              		.loc 1 1843 0
 1391 003e FB68     		ldr	r3, [r7, #12]
 1392 0040 0022     		movs	r2, #0
 1393 0042 83F84020 		strb	r2, [r3, #64]
1844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
 1394              		.loc 1 1845 0
 1395 0046 0323     		movs	r3, #3
 1396 0048 63E0     		b	.L78
 1397              	.L76:
1832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 1398              		.loc 1 1832 0
 1399 004a FB68     		ldr	r3, [r7, #12]
 1400 004c 1B68     		ldr	r3, [r3]
 1401 004e 1A68     		ldr	r2, [r3]
 1402 0050 BB68     		ldr	r3, [r7, #8]
 1403 0052 1A40     		ands	r2, r2, r3
 1404 0054 BB68     		ldr	r3, [r7, #8]
 1405 0056 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccumkl9n.s 			page 58


 1406 0058 DCD1     		bne	.L79
1846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(EventType)
 1407              		.loc 1 1851 0
 1408 005a BB68     		ldr	r3, [r7, #8]
 1409 005c B3F5807F 		cmp	r3, #256
 1410 0060 17D0     		beq	.L81
 1411 0062 B3F5807F 		cmp	r3, #256
 1412 0066 02D8     		bhi	.L82
 1413 0068 802B     		cmp	r3, #128
 1414 006a 07D0     		beq	.L83
 1415 006c 3BE0     		b	.L80
 1416              	.L82:
 1417 006e B3F5007F 		cmp	r3, #512
 1418 0072 1AD0     		beq	.L84
 1419 0074 B3F5806F 		cmp	r3, #1024
 1420 0078 23D0     		beq	.L85
 1421 007a 34E0     		b	.L80
 1422              	.L83:
1852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog (level out of window) event */
1854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of several analog watchdog enabled, if needed to know      */
1855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* flags HAL_ADC_STATE_AWD1/2U/3 using function "HAL_ADC_GetState()".        */
1857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For example:                                                             */
1858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD1)) "    */
1859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD2)) "    */
1860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  " if (HAL_IS_BIT_SET(HAL_ADC_GetState(hadc1), HAL_ADC_STATE_AWD3)) "    */
1861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 1 flag */
1862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD_EVENT:
1863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1423              		.loc 1 1864 0
 1424 007c FB68     		ldr	r3, [r7, #12]
 1425 007e 5B6C     		ldr	r3, [r3, #68]
 1426 0080 43F48032 		orr	r2, r3, #65536
 1427 0084 FB68     		ldr	r3, [r7, #12]
 1428 0086 5A64     		str	r2, [r3, #68]
1865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 1429              		.loc 1 1867 0
 1430 0088 FB68     		ldr	r3, [r7, #12]
 1431 008a 1B68     		ldr	r3, [r3]
 1432 008c 8022     		movs	r2, #128
 1433 008e 1A60     		str	r2, [r3]
1868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1434              		.loc 1 1868 0
 1435 0090 3EE0     		b	.L86
 1436              	.L81:
1869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 2 flag */
1871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD2_EVENT:
ARM GAS  /tmp/ccumkl9n.s 			page 59


1872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
 1437              		.loc 1 1873 0
 1438 0092 FB68     		ldr	r3, [r7, #12]
 1439 0094 5B6C     		ldr	r3, [r3, #68]
 1440 0096 43F40032 		orr	r2, r3, #131072
 1441 009a FB68     		ldr	r3, [r7, #12]
 1442 009c 5A64     		str	r2, [r3, #68]
1874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
 1443              		.loc 1 1876 0
 1444 009e FB68     		ldr	r3, [r7, #12]
 1445 00a0 1B68     		ldr	r3, [r3]
 1446 00a2 4FF48072 		mov	r2, #256
 1447 00a6 1A60     		str	r2, [r3]
1877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1448              		.loc 1 1877 0
 1449 00a8 32E0     		b	.L86
 1450              	.L84:
1878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check analog watchdog 3 flag */
1880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_AWD3_EVENT:
1881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
 1451              		.loc 1 1882 0
 1452 00aa FB68     		ldr	r3, [r7, #12]
 1453 00ac 5B6C     		ldr	r3, [r3, #68]
 1454 00ae 43F48022 		orr	r2, r3, #262144
 1455 00b2 FB68     		ldr	r3, [r7, #12]
 1456 00b4 5A64     		str	r2, [r3, #68]
1883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */
1885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
 1457              		.loc 1 1885 0
 1458 00b6 FB68     		ldr	r3, [r7, #12]
 1459 00b8 1B68     		ldr	r3, [r3]
 1460 00ba 4FF40072 		mov	r2, #512
 1461 00be 1A60     		str	r2, [r3]
1886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1462              		.loc 1 1886 0
 1463 00c0 26E0     		b	.L86
 1464              	.L85:
1887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Injected context queue overflow event */
1889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   case ADC_JQOVF_EVENT:
1890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 1465              		.loc 1 1891 0
 1466 00c2 FB68     		ldr	r3, [r7, #12]
 1467 00c4 5B6C     		ldr	r3, [r3, #68]
 1468 00c6 43F48042 		orr	r2, r3, #16384
 1469 00ca FB68     		ldr	r3, [r7, #12]
 1470 00cc 5A64     		str	r2, [r3, #68]
1892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to Injected context queue overflow */
1894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
ARM GAS  /tmp/ccumkl9n.s 			page 60


 1471              		.loc 1 1894 0
 1472 00ce FB68     		ldr	r3, [r7, #12]
 1473 00d0 9B6C     		ldr	r3, [r3, #72]
 1474 00d2 43F00802 		orr	r2, r3, #8
 1475 00d6 FB68     		ldr	r3, [r7, #12]
 1476 00d8 9A64     		str	r2, [r3, #72]
1895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC Injected context queue overflow flag */
1897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
 1477              		.loc 1 1897 0
 1478 00da FB68     		ldr	r3, [r7, #12]
 1479 00dc 1B68     		ldr	r3, [r3]
 1480 00de 4FF48062 		mov	r2, #1024
 1481 00e2 1A60     		str	r2, [r3]
1898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1482              		.loc 1 1898 0
 1483 00e4 14E0     		b	.L86
 1484              	.L80:
1899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
1900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Overrun event */
1901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   default: /* Case ADC_OVR_EVENT */
1902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If overrun is set to overwrite previous data, overrun event is not     */
1903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* considered as an error.                                                */
1904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
1905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* overrun ")                                                             */
1906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 1485              		.loc 1 1906 0
 1486 00e6 FB68     		ldr	r3, [r7, #12]
 1487 00e8 9B6B     		ldr	r3, [r3, #56]
 1488 00ea 012B     		cmp	r3, #1
 1489 00ec 0BD1     		bne	.L87
1907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
1909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 1490              		.loc 1 1909 0
 1491 00ee FB68     		ldr	r3, [r7, #12]
 1492 00f0 5B6C     		ldr	r3, [r3, #68]
 1493 00f2 43F48062 		orr	r2, r3, #1024
 1494 00f6 FB68     		ldr	r3, [r7, #12]
 1495 00f8 5A64     		str	r2, [r3, #68]
1910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to overrun */
1912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1496              		.loc 1 1912 0
 1497 00fa FB68     		ldr	r3, [r7, #12]
 1498 00fc 9B6C     		ldr	r3, [r3, #72]
 1499 00fe 43F00202 		orr	r2, r3, #2
 1500 0102 FB68     		ldr	r3, [r7, #12]
 1501 0104 9A64     		str	r2, [r3, #72]
 1502              	.L87:
1913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC Overrun flag */
1916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 1503              		.loc 1 1916 0
 1504 0106 FB68     		ldr	r3, [r7, #12]
 1505 0108 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccumkl9n.s 			page 61


 1506 010a 1022     		movs	r2, #16
 1507 010c 1A60     		str	r2, [r3]
1917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     break;
 1508              		.loc 1 1917 0
 1509 010e 00BF     		nop
 1510              	.L86:
1918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 1511              		.loc 1 1921 0
 1512 0110 0023     		movs	r3, #0
 1513              	.L78:
1922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1514              		.loc 1 1922 0
 1515 0112 1846     		mov	r0, r3
 1516 0114 1837     		adds	r7, r7, #24
 1517              	.LCFI28:
 1518              		.cfi_def_cfa_offset 8
 1519 0116 BD46     		mov	sp, r7
 1520              	.LCFI29:
 1521              		.cfi_def_cfa_register 13
 1522              		@ sp needed
 1523 0118 80BD     		pop	{r7, pc}
 1524              		.cfi_endproc
 1525              	.LFE128:
 1527 011a 00BF     		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 1528              		.align	2
 1529              		.global	HAL_ADC_Start_IT
 1530              		.thumb
 1531              		.thumb_func
 1533              	HAL_ADC_Start_IT:
 1534              	.LFB129:
1923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
1924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
1925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
1926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
1927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
1929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Poll for conversion event.
1931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  EventType: the ADC event type.
1933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_AWD_EVENT: ADC Analog watchdog event.
1935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
1936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
1940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart; 
1941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
1943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
1945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();   
ARM GAS  /tmp/ccumkl9n.s 			page 62


1947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
1948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check selected event flag */
1949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == RESET)
1950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
1951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
1952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
1953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
1954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
1955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
1956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
1957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
1960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
1961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
1962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
1963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
1964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
1965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
1966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog (level out of window) event */
1968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
1969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
1971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear ADC analog watchdog flag */
1972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
1973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
1974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
1975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
1976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
1977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
1978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
1979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
1980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
1981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
1982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
1983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
1984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
1985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
1986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) or EOS (end of 
1987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group) depending on ADC initialization 
1988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            parameter "EOCSelection"
1989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun, depending on ADC initialization parameter "Overrun"
1990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
1991:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
1992:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
1993:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
1994:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
1995:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
1996:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
1997:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
1998:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1999:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 1535              		.loc 1 1999 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 16
 1538              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccumkl9n.s 			page 63


 1539 0000 80B5     		push	{r7, lr}
 1540              	.LCFI30:
 1541              		.cfi_def_cfa_offset 8
 1542              		.cfi_offset 7, -8
 1543              		.cfi_offset 14, -4
 1544 0002 84B0     		sub	sp, sp, #16
 1545              	.LCFI31:
 1546              		.cfi_def_cfa_offset 24
 1547 0004 00AF     		add	r7, sp, #0
 1548              	.LCFI32:
 1549              		.cfi_def_cfa_register 7
 1550 0006 7860     		str	r0, [r7, #4]
2000:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1551              		.loc 1 2000 0
 1552 0008 0023     		movs	r3, #0
 1553 000a FB73     		strb	r3, [r7, #15]
2001:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2002:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2003:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2004:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2006:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 1554              		.loc 1 2006 0
 1555 000c 7B68     		ldr	r3, [r7, #4]
 1556 000e 1B68     		ldr	r3, [r3]
 1557 0010 9B68     		ldr	r3, [r3, #8]
 1558 0012 03F00403 		and	r3, r3, #4
 1559 0016 002B     		cmp	r3, #0
 1560 0018 40F08280 		bne	.L89
2007:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2008:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
2009:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1561              		.loc 1 2009 0
 1562 001c 7B68     		ldr	r3, [r7, #4]
 1563 001e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 1564 0022 012B     		cmp	r3, #1
 1565 0024 01D1     		bne	.L90
 1566              		.loc 1 2009 0 is_stmt 0 discriminator 1
 1567 0026 0223     		movs	r3, #2
 1568 0028 7DE0     		b	.L91
 1569              	.L90:
 1570              		.loc 1 2009 0 discriminator 2
 1571 002a 7B68     		ldr	r3, [r7, #4]
 1572 002c 0122     		movs	r2, #1
 1573 002e 83F84020 		strb	r2, [r3, #64]
2010:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2011:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
2012:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1574              		.loc 1 2012 0 is_stmt 1 discriminator 2
 1575 0032 7868     		ldr	r0, [r7, #4]
 1576 0034 FFF7FEFF 		bl	ADC_Enable
 1577 0038 0346     		mov	r3, r0
 1578 003a FB73     		strb	r3, [r7, #15]
2013:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2014:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
2015:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1579              		.loc 1 2015 0 discriminator 2
ARM GAS  /tmp/ccumkl9n.s 			page 64


 1580 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1581 003e 002B     		cmp	r3, #0
 1582 0040 69D1     		bne	.L92
2016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2017:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
2018:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
2019:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
2020:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1583              		.loc 1 2020 0
 1584 0042 7B68     		ldr	r3, [r7, #4]
 1585 0044 5B6C     		ldr	r3, [r3, #68]
 1586 0046 23F47063 		bic	r3, r3, #3840
 1587 004a 23F00103 		bic	r3, r3, #1
 1588 004e 43F48072 		orr	r2, r3, #256
 1589 0052 7B68     		ldr	r3, [r7, #4]
 1590 0054 5A64     		str	r2, [r3, #68]
2021:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
2022:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
2023:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2024:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set group injected state (from auto-injection) and multimode state   */
2025:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* for all cases of multimode: independent mode, multimode ADC master   */
2026:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or multimode ADC slave (for devices with several ADCs):              */
2027:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
2028:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2029:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC independent or master) */
2030:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1591              		.loc 1 2030 0
 1592 0056 7B68     		ldr	r3, [r7, #4]
 1593 0058 5B6C     		ldr	r3, [r3, #68]
 1594 005a 23F48012 		bic	r2, r3, #1048576
 1595 005e 7B68     		ldr	r3, [r7, #4]
 1596 0060 5A64     		str	r2, [r3, #68]
2031:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2032:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
2033:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
2034:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
 1597              		.loc 1 2034 0
 1598 0062 7B68     		ldr	r3, [r7, #4]
 1599 0064 1B68     		ldr	r3, [r3]
 1600 0066 DB68     		ldr	r3, [r3, #12]
 1601 0068 03F00073 		and	r3, r3, #33554432
 1602 006c 002B     		cmp	r3, #0
 1603 006e 07D0     		beq	.L102
2035:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2036:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1604              		.loc 1 2036 0
 1605 0070 7B68     		ldr	r3, [r7, #4]
 1606 0072 5B6C     		ldr	r3, [r3, #68]
 1607 0074 23F44053 		bic	r3, r3, #12288
 1608 0078 43F48052 		orr	r2, r3, #4096
 1609 007c 7B68     		ldr	r3, [r7, #4]
 1610 007e 5A64     		str	r2, [r3, #68]
 1611              	.L102:
2037:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2038:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2039:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2040:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/ccumkl9n.s 			page 65


2041:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state (ADC slave) */
2042:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2043:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2044:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If conversions on group regular are also triggering group injected,*/
2045:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* update ADC state.                                                  */
2046:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
2047:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2048:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
2049:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2050:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2051:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2052:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* State machine update: Check if an injected conversion is ongoing */
2053:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1612              		.loc 1 2053 0
 1613 0080 7B68     		ldr	r3, [r7, #4]
 1614 0082 5B6C     		ldr	r3, [r3, #68]
 1615 0084 03F48053 		and	r3, r3, #4096
 1616 0088 002B     		cmp	r3, #0
 1617 008a 06D0     		beq	.L94
2054:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2055:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC error code fields related to conversions on group regular*/
2056:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1618              		.loc 1 2056 0
 1619 008c 7B68     		ldr	r3, [r7, #4]
 1620 008e 9B6C     		ldr	r3, [r3, #72]
 1621 0090 23F00602 		bic	r2, r3, #6
 1622 0094 7B68     		ldr	r3, [r7, #4]
 1623 0096 9A64     		str	r2, [r3, #72]
 1624 0098 02E0     		b	.L95
 1625              	.L94:
2057:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2058:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2059:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2060:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
2061:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 1626              		.loc 1 2061 0
 1627 009a 7B68     		ldr	r3, [r7, #4]
 1628 009c 0022     		movs	r2, #0
 1629 009e 9A64     		str	r2, [r3, #72]
 1630              	.L95:
2062:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2063:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2065:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
2066:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
2067:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1631              		.loc 1 2067 0
 1632 00a0 7B68     		ldr	r3, [r7, #4]
 1633 00a2 0022     		movs	r2, #0
 1634 00a4 83F84020 		strb	r2, [r3, #64]
2068:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2069:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
2070:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
2071:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
2072:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 1635              		.loc 1 2072 0
 1636 00a8 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 66


 1637 00aa 1B68     		ldr	r3, [r3]
 1638 00ac 1C22     		movs	r2, #28
 1639 00ae 1A60     		str	r2, [r3]
2073:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2074:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
2075:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */  
2076:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       switch(hadc->Init.EOCSelection)
 1640              		.loc 1 2076 0
 1641 00b0 7B68     		ldr	r3, [r7, #4]
 1642 00b2 5B69     		ldr	r3, [r3, #20]
 1643 00b4 082B     		cmp	r3, #8
 1644 00b6 10D1     		bne	.L104
2077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2078:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV: 
2079:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 1645              		.loc 1 2079 0
 1646 00b8 7B68     		ldr	r3, [r7, #4]
 1647 00ba 1B68     		ldr	r3, [r3]
 1648 00bc 7A68     		ldr	r2, [r7, #4]
 1649 00be 1268     		ldr	r2, [r2]
 1650 00c0 5268     		ldr	r2, [r2, #4]
 1651 00c2 22F00402 		bic	r2, r2, #4
 1652 00c6 5A60     		str	r2, [r3, #4]
2080:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOS));
 1653              		.loc 1 2080 0
 1654 00c8 7B68     		ldr	r3, [r7, #4]
 1655 00ca 1B68     		ldr	r3, [r3]
 1656 00cc 7A68     		ldr	r2, [r7, #4]
 1657 00ce 1268     		ldr	r2, [r2]
 1658 00d0 5268     		ldr	r2, [r2, #4]
 1659 00d2 42F00802 		orr	r2, r2, #8
 1660 00d6 5A60     		str	r2, [r3, #4]
2081:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 1661              		.loc 1 2081 0
 1662 00d8 08E0     		b	.L98
 1663              	.L104:
2082:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
2083:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         default:
2084:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS));
 1664              		.loc 1 2084 0
 1665 00da 7B68     		ldr	r3, [r7, #4]
 1666 00dc 1B68     		ldr	r3, [r3]
 1667 00de 7A68     		ldr	r2, [r7, #4]
 1668 00e0 1268     		ldr	r2, [r2]
 1669 00e2 5268     		ldr	r2, [r2, #4]
 1670 00e4 42F00C02 		orr	r2, r2, #12
 1671 00e8 5A60     		str	r2, [r3, #4]
2085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 1672              		.loc 1 2085 0
 1673 00ea 00BF     		nop
 1674              	.L98:
2086:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2087:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2088:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If overrun is set to overwrite previous data (default setting),      */
2089:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* overrun interrupt is not activated (overrun event is not considered  */
2090:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* as an error).                                                        */
2091:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (cf ref manual "Managing conversions without using the DMA and       */
ARM GAS  /tmp/ccumkl9n.s 			page 67


2092:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* without overrun ")                                                   */
2093:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 1675              		.loc 1 2093 0
 1676 00ec 7B68     		ldr	r3, [r7, #4]
 1677 00ee 9B6B     		ldr	r3, [r3, #56]
 1678 00f0 012B     		cmp	r3, #1
 1679 00f2 07D1     		bne	.L103
2094:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2095:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 1680              		.loc 1 2095 0
 1681 00f4 7B68     		ldr	r3, [r7, #4]
 1682 00f6 1B68     		ldr	r3, [r3]
 1683 00f8 7A68     		ldr	r2, [r7, #4]
 1684 00fa 1268     		ldr	r2, [r2]
 1685 00fc 5268     		ldr	r2, [r2, #4]
 1686 00fe 22F01002 		bic	r2, r2, #16
 1687 0102 5A60     		str	r2, [r3, #4]
 1688              	.L103:
2096:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2097:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2098:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
2099:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
2100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
2101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
2102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
2103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
2104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
2105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
 1689              		.loc 1 2107 0
 1690 0104 7B68     		ldr	r3, [r7, #4]
 1691 0106 1B68     		ldr	r3, [r3]
 1692 0108 7A68     		ldr	r2, [r7, #4]
 1693 010a 1268     		ldr	r2, [r2]
 1694 010c 9268     		ldr	r2, [r2, #8]
 1695 010e 42F00402 		orr	r2, r2, #4
 1696 0112 9A60     		str	r2, [r3, #8]
 1697 0114 06E0     		b	.L101
 1698              	.L92:
2108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1699              		.loc 1 2113 0
 1700 0116 7B68     		ldr	r3, [r7, #4]
 1701 0118 0022     		movs	r2, #0
 1702 011a 83F84020 		strb	r2, [r3, #64]
 1703 011e 01E0     		b	.L101
 1704              	.L89:
2114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
2117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
ARM GAS  /tmp/ccumkl9n.s 			page 68


 1705              		.loc 1 2118 0
 1706 0120 0223     		movs	r3, #2
 1707 0122 FB73     		strb	r3, [r7, #15]
 1708              	.L101:
2119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 1709              		.loc 1 2122 0
 1710 0124 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1711              	.L91:
2123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1712              		.loc 1 2123 0
 1713 0126 1846     		mov	r0, r3
 1714 0128 1037     		adds	r7, r7, #16
 1715              	.LCFI33:
 1716              		.cfi_def_cfa_offset 8
 1717 012a BD46     		mov	sp, r7
 1718              	.LCFI34:
 1719              		.cfi_def_cfa_register 13
 1720              		@ sp needed
 1721 012c 80BD     		pop	{r7, pc}
 1722              		.cfi_endproc
 1723              	.LFE129:
 1725 012e 00BF     		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 1726              		.align	2
 1727              		.global	HAL_ADC_Stop_IT
 1728              		.thumb
 1729              		.thumb_func
 1731              	HAL_ADC_Stop_IT:
 1732              	.LFB130:
2124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group with interruption.
2132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
2133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group)
2134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
2137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
2139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
2149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
ARM GAS  /tmp/ccumkl9n.s 			page 69


2150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
2152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
2155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
2156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
2157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
2159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
2160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
2162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
2163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
2164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
2165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
2170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
2173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
2178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
2179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
2182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
2183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
2184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
2187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
2188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
2189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for regular group */
2191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
2192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
2194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
2195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
2196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
2197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
2198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
2200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
2201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
2205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
2206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccumkl9n.s 			page 70


2207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
2220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC peripheral.
2221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
2222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) and EOS (end of 
2223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group)
2224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
2225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
2227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
2228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
2229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
2230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
2231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop_IT().
2232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
2236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 1733              		.loc 1 2236 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 16
 1736              		@ frame_needed = 1, uses_anonymous_args = 0
 1737 0000 80B5     		push	{r7, lr}
 1738              	.LCFI35:
 1739              		.cfi_def_cfa_offset 8
 1740              		.cfi_offset 7, -8
 1741              		.cfi_offset 14, -4
 1742 0002 84B0     		sub	sp, sp, #16
 1743              	.LCFI36:
 1744              		.cfi_def_cfa_offset 24
 1745 0004 00AF     		add	r7, sp, #0
 1746              	.LCFI37:
 1747              		.cfi_def_cfa_register 7
 1748 0006 7860     		str	r0, [r7, #4]
2237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1749              		.loc 1 2237 0
 1750 0008 0023     		movs	r3, #0
 1751 000a FB73     		strb	r3, [r7, #15]
2238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1752              		.loc 1 2243 0
ARM GAS  /tmp/ccumkl9n.s 			page 71


 1753 000c 7B68     		ldr	r3, [r7, #4]
 1754 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 1755 0012 012B     		cmp	r3, #1
 1756 0014 01D1     		bne	.L106
 1757              		.loc 1 2243 0 is_stmt 0 discriminator 1
 1758 0016 0223     		movs	r3, #2
 1759 0018 2BE0     		b	.L107
 1760              	.L106:
 1761              		.loc 1 2243 0 discriminator 2
 1762 001a 7B68     		ldr	r3, [r7, #4]
 1763 001c 0122     		movs	r2, #1
 1764 001e 83F84020 		strb	r2, [r3, #64]
2244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
2246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 1765              		.loc 1 2246 0 is_stmt 1 discriminator 2
 1766 0022 7868     		ldr	r0, [r7, #4]
 1767 0024 6C21     		movs	r1, #108
 1768 0026 FFF7FEFF 		bl	ADC_ConversionStop
 1769 002a 0346     		mov	r3, r0
 1770 002c FB73     		strb	r3, [r7, #15]
2247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1771              		.loc 1 2249 0 discriminator 2
 1772 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1773 0030 002B     		cmp	r3, #0
 1774 0032 19D1     		bne	.L108
2250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
2252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
2253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 1775              		.loc 1 2253 0
 1776 0034 7B68     		ldr	r3, [r7, #4]
 1777 0036 1B68     		ldr	r3, [r3]
 1778 0038 7A68     		ldr	r2, [r7, #4]
 1779 003a 1268     		ldr	r2, [r2]
 1780 003c 5268     		ldr	r2, [r2, #4]
 1781 003e 22F01C02 		bic	r2, r2, #28
 1782 0042 5A60     		str	r2, [r3, #4]
2254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
2256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
 1783              		.loc 1 2256 0
 1784 0044 7868     		ldr	r0, [r7, #4]
 1785 0046 FFF7FEFF 		bl	ADC_Disable
 1786 004a 0346     		mov	r3, r0
 1787 004c FB73     		strb	r3, [r7, #15]
2257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
2259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1788              		.loc 1 2259 0
 1789 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1790 0050 002B     		cmp	r3, #0
 1791 0052 09D1     		bne	.L108
2260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
ARM GAS  /tmp/ccumkl9n.s 			page 72


2262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1792              		.loc 1 2262 0
 1793 0054 7B68     		ldr	r3, [r7, #4]
 1794 0056 5B6C     		ldr	r3, [r3, #68]
 1795 0058 23F48853 		bic	r3, r3, #4352
 1796 005c 23F00103 		bic	r3, r3, #1
 1797 0060 43F00102 		orr	r2, r3, #1
 1798 0064 7B68     		ldr	r3, [r7, #4]
 1799 0066 5A64     		str	r2, [r3, #68]
 1800              	.L108:
2263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1801              		.loc 1 2269 0
 1802 0068 7B68     		ldr	r3, [r7, #4]
 1803 006a 0022     		movs	r2, #0
 1804 006c 83F84020 		strb	r2, [r3, #64]
2270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 1805              		.loc 1 2272 0
 1806 0070 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1807              	.L107:
2273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 1808              		.loc 1 2273 0
 1809 0072 1846     		mov	r0, r3
 1810 0074 1037     		adds	r7, r7, #16
 1811              	.LCFI38:
 1812              		.cfi_def_cfa_offset 8
 1813 0076 BD46     		mov	sp, r7
 1814              	.LCFI39:
 1815              		.cfi_def_cfa_register 13
 1816              		@ sp needed
 1817 0078 80BD     		pop	{r7, pc}
 1818              		.cfi_endproc
 1819              	.LFE130:
 1821 007a 00BF     		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 1822              		.align	2
 1823              		.global	HAL_ADC_Start_DMA
 1824              		.thumb
 1825              		.thumb_func
 1827              	HAL_ADC_Start_DMA:
 1828              	.LFB131:
2274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
2282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable interrution of 
2283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         end-of-conversion, disable ADC peripheral.
ARM GAS  /tmp/ccumkl9n.s 			page 73


2284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
2288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
2294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
2298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
2299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
2300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
2302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
2305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
2306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
2308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
2311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
2327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
2328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
2329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
2330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
2331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
2332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
2334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
2335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStart function.
2336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
2338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
2339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/ccumkl9n.s 			page 74


2341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
2342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 1829              		.loc 1 2342 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 24
 1832              		@ frame_needed = 1, uses_anonymous_args = 0
 1833 0000 80B5     		push	{r7, lr}
 1834              	.LCFI40:
 1835              		.cfi_def_cfa_offset 8
 1836              		.cfi_offset 7, -8
 1837              		.cfi_offset 14, -4
 1838 0002 86B0     		sub	sp, sp, #24
 1839              	.LCFI41:
 1840              		.cfi_def_cfa_offset 32
 1841 0004 00AF     		add	r7, sp, #0
 1842              	.LCFI42:
 1843              		.cfi_def_cfa_register 7
 1844 0006 F860     		str	r0, [r7, #12]
 1845 0008 B960     		str	r1, [r7, #8]
 1846 000a 7A60     		str	r2, [r7, #4]
2343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1847              		.loc 1 2343 0
 1848 000c 0023     		movs	r3, #0
 1849 000e FB75     		strb	r3, [r7, #23]
2344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 1850              		.loc 1 2349 0
 1851 0010 FB68     		ldr	r3, [r7, #12]
 1852 0012 1B68     		ldr	r3, [r3]
 1853 0014 9B68     		ldr	r3, [r3, #8]
 1854 0016 03F00403 		and	r3, r3, #4
 1855 001a 002B     		cmp	r3, #0
 1856 001c 7FD1     		bne	.L110
2350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
2352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1857              		.loc 1 2352 0
 1858 001e FB68     		ldr	r3, [r7, #12]
 1859 0020 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 1860 0024 012B     		cmp	r3, #1
 1861 0026 01D1     		bne	.L111
 1862              		.loc 1 2352 0 is_stmt 0 discriminator 1
 1863 0028 0223     		movs	r3, #2
 1864 002a 7BE0     		b	.L112
 1865              	.L111:
 1866              		.loc 1 2352 0 discriminator 2
 1867 002c FB68     		ldr	r3, [r7, #12]
 1868 002e 0122     		movs	r2, #1
 1869 0030 83F84020 		strb	r2, [r3, #64]
2353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Verification if multimode is disabled (for devices with several ADC)   */
2355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If multimode is enabled, dedicated function multimode conversion       */
2356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start DMA must be used.                                                */
ARM GAS  /tmp/ccumkl9n.s 			page 75


2357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_COMMON_CCR_MULTI(hadc) == RESET)
2358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable the ADC peripheral */
2360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(hadc);
 1870              		.loc 1 2360 0 is_stmt 1 discriminator 2
 1871 0034 F868     		ldr	r0, [r7, #12]
 1872 0036 FFF7FEFF 		bl	ADC_Enable
 1873 003a 0346     		mov	r3, r0
 1874 003c FB75     		strb	r3, [r7, #23]
2361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
2363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 1875              		.loc 1 2363 0 discriminator 2
 1876 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1877 0040 002B     		cmp	r3, #0
 1878 0042 67D1     		bne	.L113
2364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state                                                      */
2366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* - Clear state bitfield related to regular group conversion results */
2367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* - Set state bitfield related to regular operation                  */
2368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 1879              		.loc 1 2368 0
 1880 0044 FB68     		ldr	r3, [r7, #12]
 1881 0046 5B6C     		ldr	r3, [r3, #68]
 1882 0048 23F47063 		bic	r3, r3, #3840
 1883 004c 23F00103 		bic	r3, r3, #1
 1884 0050 43F48072 		orr	r2, r3, #256
 1885 0054 FB68     		ldr	r3, [r7, #12]
 1886 0056 5A64     		str	r2, [r3, #68]
2369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY);
2371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set group injected state (from auto-injection) and multimode state */
2373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* for all cases of multimode: independent mode, multimode ADC master */
2374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* or multimode ADC slave (for devices with several ADCs):            */
2375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
2376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state (ADC independent or master) */
2378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 1887              		.loc 1 2378 0
 1888 0058 FB68     		ldr	r3, [r7, #12]
 1889 005a 5B6C     		ldr	r3, [r3, #68]
 1890 005c 23F48012 		bic	r2, r3, #1048576
 1891 0060 FB68     		ldr	r3, [r7, #12]
 1892 0062 5A64     		str	r2, [r3, #68]
2379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* If conversions on group regular are also triggering group injected,*/
2381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* update ADC state.                                                  */
2382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
 1893              		.loc 1 2382 0
 1894 0064 FB68     		ldr	r3, [r7, #12]
 1895 0066 1B68     		ldr	r3, [r3]
 1896 0068 DB68     		ldr	r3, [r3, #12]
 1897 006a 03F00073 		and	r3, r3, #33554432
 1898 006e 002B     		cmp	r3, #0
 1899 0070 07D0     		beq	.L119
2383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
ARM GAS  /tmp/ccumkl9n.s 			page 76


2384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 1900              		.loc 1 2384 0
 1901 0072 FB68     		ldr	r3, [r7, #12]
 1902 0074 5B6C     		ldr	r3, [r3, #68]
 1903 0076 23F44053 		bic	r3, r3, #12288
 1904 007a 43F48052 		orr	r2, r3, #4096
 1905 007e FB68     		ldr	r3, [r7, #12]
 1906 0080 5A64     		str	r2, [r3, #68]
 1907              	.L119:
2385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state (ADC slave) */
2390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* If conversions on group regular are also triggering group injected,*/
2393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* update ADC state.                                                  */
2394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (ADC_MULTIMODE_AUTO_INJECTED(hadc))
2395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
2397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* State machine update: Check if an injected conversion is ongoing */
2401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 1908              		.loc 1 2401 0
 1909 0082 FB68     		ldr	r3, [r7, #12]
 1910 0084 5B6C     		ldr	r3, [r3, #68]
 1911 0086 03F48053 		and	r3, r3, #4096
 1912 008a 002B     		cmp	r3, #0
 1913 008c 06D0     		beq	.L115
2402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Reset ADC error code fields related to conversions on group regular*/
2404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 1914              		.loc 1 2404 0
 1915 008e FB68     		ldr	r3, [r7, #12]
 1916 0090 9B6C     		ldr	r3, [r3, #72]
 1917 0092 23F00602 		bic	r2, r3, #6
 1918 0096 FB68     		ldr	r3, [r7, #12]
 1919 0098 9A64     		str	r2, [r3, #72]
 1920 009a 02E0     		b	.L116
 1921              	.L115:
2405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Reset ADC all error code fields */
2409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_CLEAR_ERRORCODE(hadc);
 1922              		.loc 1 2409 0
 1923 009c FB68     		ldr	r3, [r7, #12]
 1924 009e 0022     		movs	r2, #0
 1925 00a0 9A64     		str	r2, [r3, #72]
 1926              	.L116:
2410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
2413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Unlock before starting ADC conversions: in case of potential         */
ARM GAS  /tmp/ccumkl9n.s 			page 77


2414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 1927              		.loc 1 2415 0
 1928 00a2 FB68     		ldr	r3, [r7, #12]
 1929 00a4 0022     		movs	r2, #0
 1930 00a6 83F84020 		strb	r2, [r3, #64]
2416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA transfer complete callback */
2419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 1931              		.loc 1 2419 0
 1932 00aa FB68     		ldr	r3, [r7, #12]
 1933 00ac DB6B     		ldr	r3, [r3, #60]
 1934 00ae 1F4A     		ldr	r2, .L120
 1935 00b0 9A62     		str	r2, [r3, #40]
2420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA half transfer complete callback */
2422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 1936              		.loc 1 2422 0
 1937 00b2 FB68     		ldr	r3, [r7, #12]
 1938 00b4 DB6B     		ldr	r3, [r3, #60]
 1939 00b6 1E4A     		ldr	r2, .L120+4
 1940 00b8 DA62     		str	r2, [r3, #44]
2423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the DMA error callback */
2425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 1941              		.loc 1 2425 0
 1942 00ba FB68     		ldr	r3, [r7, #12]
 1943 00bc DB6B     		ldr	r3, [r3, #60]
 1944 00be 1D4A     		ldr	r2, .L120+8
 1945 00c0 1A63     		str	r2, [r3, #48]
2426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               
2428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC */
2429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* start (in case of SW start):                                       */
2430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Clear regular group conversion flag and overrun flag */
2432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* operations)                                                        */
2434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 1946              		.loc 1 2434 0
 1947 00c2 FB68     		ldr	r3, [r7, #12]
 1948 00c4 1B68     		ldr	r3, [r3]
 1949 00c6 1C22     		movs	r2, #28
 1950 00c8 1A60     		str	r2, [r3]
2435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable ADC overrun interrupt */
2437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 1951              		.loc 1 2437 0
 1952 00ca FB68     		ldr	r3, [r7, #12]
 1953 00cc 1B68     		ldr	r3, [r3]
 1954 00ce FA68     		ldr	r2, [r7, #12]
 1955 00d0 1268     		ldr	r2, [r2]
 1956 00d2 5268     		ldr	r2, [r2, #4]
 1957 00d4 42F01002 		orr	r2, r2, #16
 1958 00d8 5A60     		str	r2, [r3, #4]
2438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
ARM GAS  /tmp/ccumkl9n.s 			page 78


2439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable ADC DMA mode */
2440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 1959              		.loc 1 2440 0
 1960 00da FB68     		ldr	r3, [r7, #12]
 1961 00dc 1B68     		ldr	r3, [r3]
 1962 00de FA68     		ldr	r2, [r7, #12]
 1963 00e0 1268     		ldr	r2, [r2]
 1964 00e2 D268     		ldr	r2, [r2, #12]
 1965 00e4 42F00102 		orr	r2, r2, #1
 1966 00e8 DA60     		str	r2, [r3, #12]
2441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Start the DMA channel */
2443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 1967              		.loc 1 2443 0
 1968 00ea FB68     		ldr	r3, [r7, #12]
 1969 00ec DA6B     		ldr	r2, [r3, #60]
 1970 00ee FB68     		ldr	r3, [r7, #12]
 1971 00f0 1B68     		ldr	r3, [r3]
 1972 00f2 4033     		adds	r3, r3, #64
 1973 00f4 1946     		mov	r1, r3
 1974 00f6 BB68     		ldr	r3, [r7, #8]
 1975 00f8 1046     		mov	r0, r2
 1976 00fa 1A46     		mov	r2, r3
 1977 00fc 7B68     		ldr	r3, [r7, #4]
 1978 00fe FFF7FEFF 		bl	HAL_DMA_Start_IT
2444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
2445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable conversion of regular group.                                */
2446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If software start has been selected, conversion starts immediately.*/
2447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If external trigger has been selected, conversion will start at    */
2448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* next trigger event.                                                */
2449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
 1979              		.loc 1 2449 0
 1980 0102 FB68     		ldr	r3, [r7, #12]
 1981 0104 1B68     		ldr	r3, [r3]
 1982 0106 FA68     		ldr	r2, [r7, #12]
 1983 0108 1268     		ldr	r2, [r2]
 1984 010a 9268     		ldr	r2, [r2, #8]
 1985 010c 42F00402 		orr	r2, r2, #4
 1986 0110 9A60     		str	r2, [r3, #8]
 1987 0112 06E0     		b	.L118
 1988              	.L113:
2450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
2453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
2455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 1989              		.loc 1 2455 0
 1990 0114 FB68     		ldr	r3, [r7, #12]
 1991 0116 0022     		movs	r2, #0
 1992 0118 83F84020 		strb	r2, [r3, #64]
 1993 011c 01E0     		b	.L118
 1994              	.L110:
2456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccumkl9n.s 			page 79


2460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
2461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
2462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
2463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
2464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
2467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
 1995              		.loc 1 2468 0
 1996 011e 0223     		movs	r3, #2
 1997 0120 FB75     		strb	r3, [r7, #23]
 1998              	.L118:
2469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 1999              		.loc 1 2472 0
 2000 0122 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2001              	.L112:
2473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2002              		.loc 1 2473 0
 2003 0124 1846     		mov	r0, r3
 2004 0126 1837     		adds	r7, r7, #24
 2005              	.LCFI43:
 2006              		.cfi_def_cfa_offset 8
 2007 0128 BD46     		mov	sp, r7
 2008              	.LCFI44:
 2009              		.cfi_def_cfa_register 13
 2010              		@ sp needed
 2011 012a 80BD     		pop	{r7, pc}
 2012              	.L121:
 2013              		.align	2
 2014              	.L120:
 2015 012c 00000000 		.word	ADC_DMAConvCplt
 2016 0130 00000000 		.word	ADC_DMAHalfConvCplt
 2017 0134 00000000 		.word	ADC_DMAError
 2018              		.cfi_endproc
 2019              	.LFE131:
 2021              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 2022              		.align	2
 2023              		.global	HAL_ADC_Stop_DMA
 2024              		.thumb
 2025              		.thumb_func
 2027              	HAL_ADC_Stop_DMA:
 2028              	.LFB132:
2474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of regular group and transfers result
2482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
2483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
2484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
ARM GAS  /tmp/ccumkl9n.s 			page 80


2485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
2486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
2487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
2488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only. For multimode, use the dedicated MultimodeStart function.
2489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
2491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
2492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
2495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
2505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
2506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
2508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
2511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to regular group conversion results     */
2512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to regular operation                      */
2513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
2514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC,
2515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY);
2516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set group injected state (from auto-injection) */
2518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If conversions on group regular are also triggering group injected,    */
2519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* update ADC state.                                                      */
2520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
2521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
2523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* State machine update: Check if an injected conversion is ongoing */
2526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
2527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC error code fields related to conversions on group regular */
2529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
2530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
2534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
2535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
2538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
2539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
2540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /tmp/ccumkl9n.s 			page 81


2542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA transfer complete callback */
2543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
2545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA half transfer complete callback */
2546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the DMA error callback */
2549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
2553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* start (in case of SW start):                                           */
2554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag and overrun flag */
2556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
2557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC);
2558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable ADC DMA mode */
2560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR2 |= ADC_CR2_DMA;
2561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start the DMA channel */
2563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
2564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of regular group.                                    */
2566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
2567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
2568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
2569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: Alternate trigger for single conversion could be to force an     */
2570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       additional set of bit ADON "hadc->Instance->CR2 |= ADC_CR2_ADON;"*/
2571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_REGULAR(hadc))
2572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with SW start */
2574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_SWSTART | ADC_CR2_EXTTRIG));
2575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on regular group with external trigger */
2579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_EXTTRIG);
2580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of both groups regular and injected,
2594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral.
2595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
2596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
2597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
2598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
ARM GAS  /tmp/ccumkl9n.s 			page 82


2599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use,
2601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it should be preliminarily stopped using function
2602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop().
2603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To stop ADC conversion only on ADC group regular
2604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         while letting ADC group injected conversions running,
2605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADCEx_RegularStop_DMA().
2606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
2607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
2608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStop function.
2609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
2613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {  
 2029              		.loc 1 2613 0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 16
 2032              		@ frame_needed = 1, uses_anonymous_args = 0
 2033 0000 80B5     		push	{r7, lr}
 2034              	.LCFI45:
 2035              		.cfi_def_cfa_offset 8
 2036              		.cfi_offset 7, -8
 2037              		.cfi_offset 14, -4
 2038 0002 84B0     		sub	sp, sp, #16
 2039              	.LCFI46:
 2040              		.cfi_def_cfa_offset 24
 2041 0004 00AF     		add	r7, sp, #0
 2042              	.LCFI47:
 2043              		.cfi_def_cfa_register 7
 2044 0006 7860     		str	r0, [r7, #4]
2614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2045              		.loc 1 2614 0
 2046 0008 0023     		movs	r3, #0
 2047 000a FB73     		strb	r3, [r7, #15]
2615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2048              		.loc 1 2620 0
 2049 000c 7B68     		ldr	r3, [r7, #4]
 2050 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 2051 0012 012B     		cmp	r3, #1
 2052 0014 01D1     		bne	.L123
 2053              		.loc 1 2620 0 is_stmt 0 discriminator 1
 2054 0016 0223     		movs	r3, #2
 2055 0018 4AE0     		b	.L124
 2056              	.L123:
 2057              		.loc 1 2620 0 discriminator 2
 2058 001a 7B68     		ldr	r3, [r7, #4]
 2059 001c 0122     		movs	r2, #1
 2060 001e 83F84020 		strb	r2, [r3, #64]
2621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular and injected groups */
2623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
ARM GAS  /tmp/ccumkl9n.s 			page 83


 2061              		.loc 1 2623 0 is_stmt 1 discriminator 2
 2062 0022 7868     		ldr	r0, [r7, #4]
 2063 0024 6C21     		movs	r1, #108
 2064 0026 FFF7FEFF 		bl	ADC_ConversionStop
 2065 002a 0346     		mov	r3, r0
 2066 002c FB73     		strb	r3, [r7, #15]
2624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2067              		.loc 1 2626 0 discriminator 2
 2068 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2069 0030 002B     		cmp	r3, #0
 2070 0032 38D1     		bne	.L125
2627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
2629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 2071              		.loc 1 2629 0
 2072 0034 7B68     		ldr	r3, [r7, #4]
 2073 0036 1B68     		ldr	r3, [r3]
 2074 0038 7A68     		ldr	r2, [r7, #4]
 2075 003a 1268     		ldr	r2, [r2]
 2076 003c D268     		ldr	r2, [r2, #12]
 2077 003e 22F00102 		bic	r2, r2, #1
 2078 0042 DA60     		str	r2, [r3, #12]
2630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
2632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
2633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);   
 2079              		.loc 1 2633 0
 2080 0044 7B68     		ldr	r3, [r7, #4]
 2081 0046 DB6B     		ldr	r3, [r3, #60]
 2082 0048 1846     		mov	r0, r3
 2083 004a FFF7FEFF 		bl	HAL_DMA_Abort
 2084 004e 0346     		mov	r3, r0
 2085 0050 FB73     		strb	r3, [r7, #15]
2634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
2636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
 2086              		.loc 1 2636 0
 2087 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2088 0054 002B     		cmp	r3, #0
 2089 0056 05D0     		beq	.L126
2637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
2639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);     
 2090              		.loc 1 2639 0
 2091 0058 7B68     		ldr	r3, [r7, #4]
 2092 005a 5B6C     		ldr	r3, [r3, #68]
 2093 005c 43F04002 		orr	r2, r3, #64
 2094 0060 7B68     		ldr	r3, [r7, #4]
 2095 0062 5A64     		str	r2, [r3, #68]
 2096              	.L126:
2640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
2643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 2097              		.loc 1 2643 0
ARM GAS  /tmp/ccumkl9n.s 			page 84


 2098 0064 7B68     		ldr	r3, [r7, #4]
 2099 0066 1B68     		ldr	r3, [r3]
 2100 0068 7A68     		ldr	r2, [r7, #4]
 2101 006a 1268     		ldr	r2, [r2]
 2102 006c 5268     		ldr	r2, [r2, #4]
 2103 006e 22F01002 		bic	r2, r2, #16
 2104 0072 5A60     		str	r2, [r3, #4]
2644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
2646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
2648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2105              		.loc 1 2648 0
 2106 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2107 0076 002B     		cmp	r3, #0
 2108 0078 05D1     		bne	.L127
2649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 2109              		.loc 1 2650 0
 2110 007a 7868     		ldr	r0, [r7, #4]
 2111 007c FFF7FEFF 		bl	ADC_Disable
 2112 0080 0346     		mov	r3, r0
 2113 0082 FB73     		strb	r3, [r7, #15]
 2114 0084 02E0     		b	.L128
 2115              	.L127:
2651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
 2116              		.loc 1 2654 0
 2117 0086 7868     		ldr	r0, [r7, #4]
 2118 0088 FFF7FEFF 		bl	ADC_Disable
 2119              	.L128:
2655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
2658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 2120              		.loc 1 2658 0
 2121 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2122 008e 002B     		cmp	r3, #0
 2123 0090 09D1     		bne	.L125
2659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 2124              		.loc 1 2661 0
 2125 0092 7B68     		ldr	r3, [r7, #4]
 2126 0094 5B6C     		ldr	r3, [r3, #68]
 2127 0096 23F48853 		bic	r3, r3, #4352
 2128 009a 23F00103 		bic	r3, r3, #1
 2129 009e 43F00102 		orr	r2, r3, #1
 2130 00a2 7B68     		ldr	r3, [r7, #4]
 2131 00a4 5A64     		str	r2, [r3, #68]
 2132              	.L125:
2662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
ARM GAS  /tmp/ccumkl9n.s 			page 85


2666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2133              		.loc 1 2669 0
 2134 00a6 7B68     		ldr	r3, [r7, #4]
 2135 00a8 0022     		movs	r2, #0
 2136 00aa 83F84020 		strb	r2, [r3, #64]
2670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 2137              		.loc 1 2672 0
 2138 00ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2139              	.L124:
2673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2140              		.loc 1 2673 0
 2141 00b0 1846     		mov	r0, r3
 2142 00b2 1037     		adds	r7, r7, #16
 2143              	.LCFI48:
 2144              		.cfi_def_cfa_offset 8
 2145 00b4 BD46     		mov	sp, r7
 2146              	.LCFI49:
 2147              		.cfi_def_cfa_register 13
 2148              		@ sp needed
 2149 00b6 80BD     		pop	{r7, pc}
 2150              		.cfi_endproc
 2151              	.LFE132:
 2153              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 2154              		.align	2
 2155              		.global	HAL_ADC_GetValue
 2156              		.thumb
 2157              		.thumb_func
 2159              	HAL_ADC_GetValue:
 2160              	.LFB133:
2674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
2682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
2683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC peripheral.
2684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC peripheral disable is forcing interruption of potential 
2685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         conversion on injected group. If injected group is under use, it
2686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   For devices with several ADCs: This function is for single-ADC mode 
2688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         only. For multimode, use the dedicated MultimodeStop function.
2689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
2691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
2693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/ccumkl9n.s 			page 86


2697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
2699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
2700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups */
2703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
2704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
2705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
2707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
2708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA mode */
2710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR2 &= ~ADC_CR2_DMA;
2711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
2713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
2714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
2717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
2718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
2721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
2723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
2727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
2732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
2735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
2736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC regular group conversion result.
2745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion).
2747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag EOS 
2748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of sequence conversion).
2749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag EOS rising:
2750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag EOC.
2752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
2753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
ARM GAS  /tmp/ccumkl9n.s 			page 87


2754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags EOC and EOS are raised.
2755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
2756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
2758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group regular conversion data
2761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
2763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 2161              		.loc 1 2763 0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 8
 2164              		@ frame_needed = 1, uses_anonymous_args = 0
 2165              		@ link register save eliminated.
 2166 0000 80B4     		push	{r7}
 2167              	.LCFI50:
 2168              		.cfi_def_cfa_offset 4
 2169              		.cfi_offset 7, -4
 2170 0002 83B0     		sub	sp, sp, #12
 2171              	.LCFI51:
 2172              		.cfi_def_cfa_offset 16
 2173 0004 00AF     		add	r7, sp, #0
 2174              	.LCFI52:
 2175              		.cfi_def_cfa_register 7
 2176 0006 7860     		str	r0, [r7, #4]
2764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: ADC flag EOC is not cleared here by software because               */
2768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       automatically cleared by hardware when reading register DR.        */
2769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
2771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return hadc->Instance->DR;
 2177              		.loc 1 2771 0
 2178 0008 7B68     		ldr	r3, [r7, #4]
 2179 000a 1B68     		ldr	r3, [r3]
 2180 000c 1B6C     		ldr	r3, [r3, #64]
2772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2181              		.loc 1 2772 0
 2182 000e 1846     		mov	r0, r3
 2183 0010 0C37     		adds	r7, r7, #12
 2184              	.LCFI53:
 2185              		.cfi_def_cfa_offset 4
 2186 0012 BD46     		mov	sp, r7
 2187              	.LCFI54:
 2188              		.cfi_def_cfa_register 13
 2189              		@ sp needed
 2190 0014 5DF8047B 		ldr	r7, [sp], #4
 2191              	.LCFI55:
 2192              		.cfi_restore 7
 2193              		.cfi_def_cfa_offset 0
 2194 0018 7047     		bx	lr
 2195              		.cfi_endproc
 2196              	.LFE133:
 2198 001a 00BF     		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 2199              		.align	2
ARM GAS  /tmp/ccumkl9n.s 			page 88


 2200              		.global	HAL_ADC_IRQHandler
 2201              		.thumb
 2202              		.thumb_func
 2204              	HAL_ADC_IRQHandler:
 2205              	.LFB134:
2773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
2774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
2775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
2776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
2777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
2779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC regular group conversion result.
2781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion).
2783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag EOS 
2784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of sequence conversion).
2785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag EOS rising:
2786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag EOC.
2788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
2789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags EOC and EOS are raised.
2791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
2792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADC_PollForConversion() 
2794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group regular conversion data
2797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
2799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
2800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       cleared by hardware when reading register DR.                      */
2805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
2807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return hadc->Instance->DR;
2808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
2809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
2810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
2812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
2813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
2814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
2815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
2816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Handles ADC interrupt request.  
2817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
2818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
2819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
2820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
2821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 2206              		.loc 1 2821 0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccumkl9n.s 			page 89


 2209              		@ frame_needed = 1, uses_anonymous_args = 0
 2210 0000 80B5     		push	{r7, lr}
 2211              	.LCFI56:
 2212              		.cfi_def_cfa_offset 8
 2213              		.cfi_offset 7, -8
 2214              		.cfi_offset 14, -4
 2215 0002 86B0     		sub	sp, sp, #24
 2216              	.LCFI57:
 2217              		.cfi_def_cfa_offset 32
 2218 0004 00AF     		add	r7, sp, #0
 2219              	.LCFI58:
 2220              		.cfi_def_cfa_register 7
 2221 0006 7860     		str	r0, [r7, #4]
2822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t overrun_error = 0U; /* flag set if overrun occurrence has to be considered as an error *
 2222              		.loc 1 2822 0
 2223 0008 0023     		movs	r3, #0
 2224 000a 7B61     		str	r3, [r7, #20]
2823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
2824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr     = 0x0U;
 2225              		.loc 1 2824 0
 2226 000c 0023     		movs	r3, #0
 2227 000e 3B61     		str	r3, [r7, #16]
2825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr_jqm = 0x0U;
 2228              		.loc 1 2825 0
 2229 0010 0023     		movs	r3, #0
 2230 0012 FB60     		str	r3, [r7, #12]
2826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
2828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
2830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for regular group ========== */
2833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if( (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC)) || 
 2231              		.loc 1 2833 0
 2232 0014 7B68     		ldr	r3, [r7, #4]
 2233 0016 1B68     		ldr	r3, [r3]
 2234 0018 1B68     		ldr	r3, [r3]
 2235 001a 03F00403 		and	r3, r3, #4
 2236 001e 002B     		cmp	r3, #0
 2237 0020 06D0     		beq	.L132
 2238              		.loc 1 2833 0 is_stmt 0 discriminator 1
 2239 0022 7B68     		ldr	r3, [r7, #4]
 2240 0024 1B68     		ldr	r3, [r3]
 2241 0026 5B68     		ldr	r3, [r3, #4]
 2242 0028 03F00403 		and	r3, r3, #4
 2243 002c 002B     		cmp	r3, #0
 2244 002e 0DD1     		bne	.L133
 2245              	.L132:
2834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 2246              		.loc 1 2834 0 is_stmt 1 discriminator 3
 2247 0030 7B68     		ldr	r3, [r7, #4]
 2248 0032 1B68     		ldr	r3, [r3]
 2249 0034 1B68     		ldr	r3, [r3]
 2250 0036 03F00803 		and	r3, r3, #8
2833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOS))   )
 2251              		.loc 1 2833 0 discriminator 3
ARM GAS  /tmp/ccumkl9n.s 			page 90


 2252 003a 002B     		cmp	r3, #0
 2253 003c 5ED0     		beq	.L134
 2254              		.loc 1 2834 0
 2255 003e 7B68     		ldr	r3, [r7, #4]
 2256 0040 1B68     		ldr	r3, [r3]
 2257 0042 5B68     		ldr	r3, [r3, #4]
 2258 0044 03F00803 		and	r3, r3, #8
 2259 0048 002B     		cmp	r3, #0
 2260 004a 57D0     		beq	.L134
 2261              	.L133:
2835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update state machine on conversion status if not in error state */
2837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 2262              		.loc 1 2837 0
 2263 004c 7B68     		ldr	r3, [r7, #4]
 2264 004e 5B6C     		ldr	r3, [r3, #68]
 2265 0050 03F01003 		and	r3, r3, #16
 2266 0054 002B     		cmp	r3, #0
 2267 0056 05D1     		bne	.L156
2838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
2840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 2268              		.loc 1 2840 0
 2269 0058 7B68     		ldr	r3, [r7, #4]
 2270 005a 5B6C     		ldr	r3, [r3, #68]
 2271 005c 43F40072 		orr	r2, r3, #512
 2272 0060 7B68     		ldr	r3, [r7, #4]
 2273 0062 5A64     		str	r2, [r3, #68]
 2274              	.L156:
2841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in function of multimode state (for devices with multimode           */
2845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* available).                                                          */
2846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
 2275              		.loc 1 2848 0
 2276 0064 7B68     		ldr	r3, [r7, #4]
 2277 0066 1B68     		ldr	r3, [r3]
 2278 0068 DB68     		ldr	r3, [r3, #12]
 2279 006a 3B61     		str	r3, [r7, #16]
2849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable interruption if no further conversion upcoming by regular      */
2856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external trigger or by continuous mode,                                */
2857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* and if scan sequence if completed.                                     */
2858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)         && 
 2280              		.loc 1 2858 0
 2281 006c 7B68     		ldr	r3, [r7, #4]
 2282 006e 1B68     		ldr	r3, [r3]
 2283 0070 DB68     		ldr	r3, [r3, #12]
 2284 0072 03F44063 		and	r3, r3, #3072
ARM GAS  /tmp/ccumkl9n.s 			page 91


 2285 0076 002B     		cmp	r3, #0
 2286 0078 39D1     		bne	.L136
2859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == RESET)  )
 2287              		.loc 1 2859 0 discriminator 1
 2288 007a 3B69     		ldr	r3, [r7, #16]
 2289 007c 03F40053 		and	r3, r3, #8192
2858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == RESET)  )
 2290              		.loc 1 2858 0 discriminator 1
 2291 0080 002B     		cmp	r3, #0
 2292 0082 34D1     		bne	.L136
2860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If End of Sequence is reached, disable interrupts */
2862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
 2293              		.loc 1 2862 0
 2294 0084 7B68     		ldr	r3, [r7, #4]
 2295 0086 1B68     		ldr	r3, [r3]
 2296 0088 1B68     		ldr	r3, [r3]
 2297 008a 03F00803 		and	r3, r3, #8
 2298 008e 002B     		cmp	r3, #0
 2299 0090 2DD0     		beq	.L136
2863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* ADSTART==0 (no conversion on going)                                */
2866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 2300              		.loc 1 2866 0
 2301 0092 7B68     		ldr	r3, [r7, #4]
 2302 0094 1B68     		ldr	r3, [r3]
 2303 0096 9B68     		ldr	r3, [r3, #8]
 2304 0098 03F00403 		and	r3, r3, #4
 2305 009c 002B     		cmp	r3, #0
 2306 009e 1AD1     		bne	.L137
2867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Disable ADC end of sequence conversion interrupt */
2869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* by overrun IRQ process below.                                    */
2872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 2307              		.loc 1 2872 0
 2308 00a0 7B68     		ldr	r3, [r7, #4]
 2309 00a2 1B68     		ldr	r3, [r3]
 2310 00a4 7A68     		ldr	r2, [r7, #4]
 2311 00a6 1268     		ldr	r2, [r2]
 2312 00a8 5268     		ldr	r2, [r2, #4]
 2313 00aa 22F00C02 		bic	r2, r2, #12
 2314 00ae 5A60     		str	r2, [r3, #4]
2873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
2875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 2315              		.loc 1 2875 0
 2316 00b0 7B68     		ldr	r3, [r7, #4]
 2317 00b2 5B6C     		ldr	r3, [r3, #68]
 2318 00b4 23F48072 		bic	r2, r3, #256
 2319 00b8 7B68     		ldr	r3, [r7, #4]
 2320 00ba 5A64     		str	r2, [r3, #68]
2876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 2321              		.loc 1 2877 0
ARM GAS  /tmp/ccumkl9n.s 			page 92


 2322 00bc 7B68     		ldr	r3, [r7, #4]
 2323 00be 5B6C     		ldr	r3, [r3, #68]
 2324 00c0 03F48053 		and	r3, r3, #4096
 2325 00c4 002B     		cmp	r3, #0
 2326 00c6 12D1     		bne	.L136
2878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 2327              		.loc 1 2879 0
 2328 00c8 7B68     		ldr	r3, [r7, #4]
 2329 00ca 5B6C     		ldr	r3, [r3, #68]
 2330 00cc 43F00102 		orr	r2, r3, #1
 2331 00d0 7B68     		ldr	r3, [r7, #4]
 2332 00d2 5A64     		str	r2, [r3, #68]
 2333 00d4 0BE0     		b	.L136
 2334              	.L137:
2880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
2885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 2335              		.loc 1 2885 0
 2336 00d6 7B68     		ldr	r3, [r7, #4]
 2337 00d8 5B6C     		ldr	r3, [r3, #68]
 2338 00da 43F01002 		orr	r2, r3, #16
 2339 00de 7B68     		ldr	r3, [r7, #4]
 2340 00e0 5A64     		str	r2, [r3, #68]
2886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC error code to ADC IP internal error */
2888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 2341              		.loc 1 2888 0
 2342 00e2 7B68     		ldr	r3, [r7, #4]
 2343 00e4 9B6C     		ldr	r3, [r3, #72]
 2344 00e6 43F00102 		orr	r2, r3, #1
 2345 00ea 7B68     		ldr	r3, [r7, #4]
 2346 00ec 9A64     		str	r2, [r3, #72]
 2347              	.L136:
2889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
2894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: into callback, to determine if conversion has been triggered     */
2895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       from EOC or EOS, possibility to use:                             */
2896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ConvCpltCallback(hadc);
 2348              		.loc 1 2897 0
 2349 00ee 7868     		ldr	r0, [r7, #4]
 2350 00f0 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
2898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear regular group conversion flag */
2901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversion flags clear induces the release of the preserved      */
2903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       data.                                                            */
2904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
ARM GAS  /tmp/ccumkl9n.s 			page 93


2906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS) );
 2351              		.loc 1 2906 0
 2352 00f4 7B68     		ldr	r3, [r7, #4]
 2353 00f6 1B68     		ldr	r3, [r3]
 2354 00f8 0C22     		movs	r2, #12
 2355 00fa 1A60     		str	r2, [r3]
 2356              	.L134:
2907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
2910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for injected group ========== */
2911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if( (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC)) ||   
 2357              		.loc 1 2911 0
 2358 00fc 7B68     		ldr	r3, [r7, #4]
 2359 00fe 1B68     		ldr	r3, [r3]
 2360 0100 1B68     		ldr	r3, [r3]
 2361 0102 03F02003 		and	r3, r3, #32
 2362 0106 002B     		cmp	r3, #0
 2363 0108 06D0     		beq	.L139
 2364              		.loc 1 2911 0 is_stmt 0 discriminator 1
 2365 010a 7B68     		ldr	r3, [r7, #4]
 2366 010c 1B68     		ldr	r3, [r3]
 2367 010e 5B68     		ldr	r3, [r3, #4]
 2368 0110 03F02003 		and	r3, r3, #32
 2369 0114 002B     		cmp	r3, #0
 2370 0116 0DD1     		bne	.L140
 2371              	.L139:
2912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
 2372              		.loc 1 2912 0 is_stmt 1 discriminator 3
 2373 0118 7B68     		ldr	r3, [r7, #4]
 2374 011a 1B68     		ldr	r3, [r3]
 2375 011c 1B68     		ldr	r3, [r3]
 2376 011e 03F04003 		and	r3, r3, #64
2911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOS))   )
 2377              		.loc 1 2911 0 discriminator 3
 2378 0122 002B     		cmp	r3, #0
 2379 0124 6DD0     		beq	.L141
 2380              		.loc 1 2912 0
 2381 0126 7B68     		ldr	r3, [r7, #4]
 2382 0128 1B68     		ldr	r3, [r3]
 2383 012a 5B68     		ldr	r3, [r3, #4]
 2384 012c 03F04003 		and	r3, r3, #64
 2385 0130 002B     		cmp	r3, #0
 2386 0132 66D0     		beq	.L141
 2387              	.L140:
2913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
2914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
2915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 2388              		.loc 1 2915 0
 2389 0134 7B68     		ldr	r3, [r7, #4]
 2390 0136 5B6C     		ldr	r3, [r3, #68]
 2391 0138 43F40052 		orr	r2, r3, #8192
 2392 013c 7B68     		ldr	r3, [r7, #4]
 2393 013e 5A64     		str	r2, [r3, #68]
2916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave      */
2918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* in function of multimode state (for devices with multimode             */
ARM GAS  /tmp/ccumkl9n.s 			page 94


2919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* available).                                                            */
2920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_NONMULTIMODE_REG_OR_MULTIMODEMASTER(hadc))
2921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
 2394              		.loc 1 2922 0
 2395 0140 7B68     		ldr	r3, [r7, #4]
 2396 0142 1B68     		ldr	r3, [r3]
 2397 0144 DB68     		ldr	r3, [r3, #12]
 2398 0146 3B61     		str	r3, [r7, #16]
2923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
2925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
2928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external trigger or by automatic injected conversion with regular      */
2931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* group having no further conversion upcoming (same conditions as        */
2932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* regular group interruption disabling above),                           */
2933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* and if injected scan sequence is completed.                            */
2934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                   ||
 2399              		.loc 1 2934 0
 2400 0148 7B68     		ldr	r3, [r7, #4]
 2401 014a 1B68     		ldr	r3, [r3]
 2402 014c DB6C     		ldr	r3, [r3, #76]
 2403 014e 03F0C003 		and	r3, r3, #192
 2404 0152 002B     		cmp	r3, #0
 2405 0154 10D0     		beq	.L142
2935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 2406              		.loc 1 2935 0 discriminator 1
 2407 0156 3B69     		ldr	r3, [r7, #16]
 2408 0158 03F00073 		and	r3, r3, #33554432
2934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 2409              		.loc 1 2934 0 discriminator 1
 2410 015c 002B     		cmp	r3, #0
 2411 015e 49D1     		bne	.L143
2936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 2412              		.loc 1 2936 0
 2413 0160 7B68     		ldr	r3, [r7, #4]
 2414 0162 1B68     		ldr	r3, [r3]
 2415 0164 DB68     		ldr	r3, [r3, #12]
 2416 0166 03F44063 		and	r3, r3, #3072
2935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 2417              		.loc 1 2935 0
 2418 016a 002B     		cmp	r3, #0
 2419 016c 42D1     		bne	.L143
2937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 2420              		.loc 1 2937 0
 2421 016e 3B69     		ldr	r3, [r7, #16]
 2422 0170 03F40053 		and	r3, r3, #8192
2936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 2423              		.loc 1 2936 0
 2424 0174 002B     		cmp	r3, #0
 2425 0176 3DD1     		bne	.L143
 2426              	.L142:
2938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
2939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If End of Sequence is reached, disable interrupts */
ARM GAS  /tmp/ccumkl9n.s 			page 95


2940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 2427              		.loc 1 2940 0
 2428 0178 7B68     		ldr	r3, [r7, #4]
 2429 017a 1B68     		ldr	r3, [r3]
 2430 017c 1B68     		ldr	r3, [r3]
 2431 017e 03F04003 		and	r3, r3, #64
 2432 0182 002B     		cmp	r3, #0
 2433 0184 36D0     		beq	.L143
2941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
2942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* in function of multimode state (for devices with multimode         */
2945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* available).                                                        */
2946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc))
2947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           tmp_cfgr_jqm = READ_REG(hadc->Instance->CFGR); 
 2434              		.loc 1 2948 0
 2435 0186 7B68     		ldr	r3, [r7, #4]
 2436 0188 1B68     		ldr	r3, [r3]
 2437 018a DB68     		ldr	r3, [r3, #12]
 2438 018c FB60     		str	r3, [r7, #12]
2949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
2951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           tmp_cfgr_jqm = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
2953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
2955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Particular case if injected contexts queue is enabled:             */
2956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* when the last context has been fully processed, JSQR is reset      */
2957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* by the hardware. Even if no injected conversion is planned to come */
2958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* (queue empty, triggers are ignored), it can start again            */
2959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* immediately after setting a new context (JADSTART is still set).   */
2960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Therefore, state of HAL ADC injected group is kept to busy.        */
2961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if(READ_BIT(tmp_cfgr_jqm, ADC_CFGR_JQM) == RESET)
 2439              		.loc 1 2961 0
 2440 018e FB68     		ldr	r3, [r7, #12]
 2441 0190 03F40013 		and	r3, r3, #2097152
 2442 0194 002B     		cmp	r3, #0
 2443 0196 2DD1     		bne	.L143
2962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
2963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* JADSTART==0 (no conversion on going)                             */
2965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
 2444              		.loc 1 2965 0
 2445 0198 7B68     		ldr	r3, [r7, #4]
 2446 019a 1B68     		ldr	r3, [r3]
 2447 019c 9B68     		ldr	r3, [r3, #8]
 2448 019e 03F00803 		and	r3, r3, #8
 2449 01a2 002B     		cmp	r3, #0
 2450 01a4 1AD1     		bne	.L144
2966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Disable ADC end of sequence conversion interrupt  */
2968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
 2451              		.loc 1 2968 0
 2452 01a6 7B68     		ldr	r3, [r7, #4]
 2453 01a8 1B68     		ldr	r3, [r3]
 2454 01aa 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 96


 2455 01ac 1268     		ldr	r2, [r2]
 2456 01ae 5268     		ldr	r2, [r2, #4]
 2457 01b0 22F06002 		bic	r2, r2, #96
 2458 01b4 5A60     		str	r2, [r3, #4]
2969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             
2970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Set ADC state */
2971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 2459              		.loc 1 2971 0
 2460 01b6 7B68     		ldr	r3, [r7, #4]
 2461 01b8 5B6C     		ldr	r3, [r3, #68]
 2462 01ba 23F48052 		bic	r2, r3, #4096
 2463 01be 7B68     		ldr	r3, [r7, #4]
 2464 01c0 5A64     		str	r2, [r3, #68]
2972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
2973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 2465              		.loc 1 2973 0
 2466 01c2 7B68     		ldr	r3, [r7, #4]
 2467 01c4 5B6C     		ldr	r3, [r3, #68]
 2468 01c6 03F48073 		and	r3, r3, #256
 2469 01ca 002B     		cmp	r3, #0
 2470 01cc 12D1     		bne	.L143
2974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             { 
2975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 2471              		.loc 1 2975 0
 2472 01ce 7B68     		ldr	r3, [r7, #4]
 2473 01d0 5B6C     		ldr	r3, [r3, #68]
 2474 01d2 43F00102 		orr	r2, r3, #1
 2475 01d6 7B68     		ldr	r3, [r7, #4]
 2476 01d8 5A64     		str	r2, [r3, #68]
 2477 01da 0BE0     		b	.L143
 2478              	.L144:
2976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             }
2977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           else
2979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
2980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Update ADC state machine to error */
2981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 2479              		.loc 1 2981 0
 2480 01dc 7B68     		ldr	r3, [r7, #4]
 2481 01de 5B6C     		ldr	r3, [r3, #68]
 2482 01e0 43F01002 		orr	r2, r3, #16
 2483 01e4 7B68     		ldr	r3, [r7, #4]
 2484 01e6 5A64     		str	r2, [r3, #68]
2982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
2983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             /* Set ADC error code to ADC IP internal error */
2984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 2485              		.loc 1 2984 0
 2486 01e8 7B68     		ldr	r3, [r7, #4]
 2487 01ea 9B6C     		ldr	r3, [r3, #72]
 2488 01ec 43F00102 		orr	r2, r3, #1
 2489 01f0 7B68     		ldr	r3, [r7, #4]
 2490 01f2 9A64     		str	r2, [r3, #72]
 2491              	.L143:
2985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
2986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
2987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
2988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccumkl9n.s 			page 97


2989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
2991:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: into callback, to determine if conversion has been triggered     */
2992:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       from JEOC or JEOS, possibility to use:                           */
2993:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) "               */
2994:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
 2492              		.loc 1 2994 0
 2493 01f4 7868     		ldr	r0, [r7, #4]
 2494 01f6 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
2995:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
2996:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
2997:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
 2495              		.loc 1 2997 0
 2496 01fa 7B68     		ldr	r3, [r7, #4]
 2497 01fc 1B68     		ldr	r3, [r3]
 2498 01fe 6022     		movs	r2, #96
 2499 0200 1A60     		str	r2, [r3]
 2500              	.L141:
2998:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
2999:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3000:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 1 flag ========== */
3001:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD1) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD1))
 2501              		.loc 1 3001 0
 2502 0202 7B68     		ldr	r3, [r7, #4]
 2503 0204 1B68     		ldr	r3, [r3]
 2504 0206 1B68     		ldr	r3, [r3]
 2505 0208 03F08003 		and	r3, r3, #128
 2506 020c 002B     		cmp	r3, #0
 2507 020e 13D0     		beq	.L146
 2508              		.loc 1 3001 0 is_stmt 0 discriminator 1
 2509 0210 7B68     		ldr	r3, [r7, #4]
 2510 0212 1B68     		ldr	r3, [r3]
 2511 0214 5B68     		ldr	r3, [r3, #4]
 2512 0216 03F08003 		and	r3, r3, #128
 2513 021a 002B     		cmp	r3, #0
 2514 021c 0CD0     		beq	.L146
3002:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3003:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3004:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 2515              		.loc 1 3004 0 is_stmt 1
 2516 021e 7B68     		ldr	r3, [r7, #4]
 2517 0220 5B6C     		ldr	r3, [r3, #68]
 2518 0222 43F48032 		orr	r2, r3, #65536
 2519 0226 7B68     		ldr	r3, [r7, #4]
 2520 0228 5A64     		str	r2, [r3, #68]
3005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3006:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 1 callback */
3007:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
 2521              		.loc 1 3007 0
 2522 022a 7868     		ldr	r0, [r7, #4]
 2523 022c FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
3008:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3009:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 2524              		.loc 1 3009 0
 2525 0230 7B68     		ldr	r3, [r7, #4]
 2526 0232 1B68     		ldr	r3, [r3]
 2527 0234 8022     		movs	r2, #128
ARM GAS  /tmp/ccumkl9n.s 			page 98


 2528 0236 1A60     		str	r2, [r3]
 2529              	.L146:
3010:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3011:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3012:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 2 flag ========== */
3013:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD2) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD2))
 2530              		.loc 1 3013 0
 2531 0238 7B68     		ldr	r3, [r7, #4]
 2532 023a 1B68     		ldr	r3, [r3]
 2533 023c 1B68     		ldr	r3, [r3]
 2534 023e 03F48073 		and	r3, r3, #256
 2535 0242 002B     		cmp	r3, #0
 2536 0244 14D0     		beq	.L147
 2537              		.loc 1 3013 0 is_stmt 0 discriminator 1
 2538 0246 7B68     		ldr	r3, [r7, #4]
 2539 0248 1B68     		ldr	r3, [r3]
 2540 024a 5B68     		ldr	r3, [r3, #4]
 2541 024c 03F48073 		and	r3, r3, #256
 2542 0250 002B     		cmp	r3, #0
 2543 0252 0DD0     		beq	.L147
3014:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3015:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
 2544              		.loc 1 3016 0 is_stmt 1
 2545 0254 7B68     		ldr	r3, [r7, #4]
 2546 0256 5B6C     		ldr	r3, [r3, #68]
 2547 0258 43F40032 		orr	r2, r3, #131072
 2548 025c 7B68     		ldr	r3, [r7, #4]
 2549 025e 5A64     		str	r2, [r3, #68]
3017:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3018:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 2 callback */
3019:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
 2550              		.loc 1 3019 0
 2551 0260 7868     		ldr	r0, [r7, #4]
 2552 0262 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
3020:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3021:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
 2553              		.loc 1 3021 0
 2554 0266 7B68     		ldr	r3, [r7, #4]
 2555 0268 1B68     		ldr	r3, [r3]
 2556 026a 4FF48072 		mov	r2, #256
 2557 026e 1A60     		str	r2, [r3]
 2558              	.L147:
3022:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   } 
3023:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3024:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check analog watchdog 3 flag ========== */
3025:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD3) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD3)) 
 2559              		.loc 1 3025 0
 2560 0270 7B68     		ldr	r3, [r7, #4]
 2561 0272 1B68     		ldr	r3, [r3]
 2562 0274 1B68     		ldr	r3, [r3]
 2563 0276 03F40073 		and	r3, r3, #512
 2564 027a 002B     		cmp	r3, #0
 2565 027c 14D0     		beq	.L148
 2566              		.loc 1 3025 0 is_stmt 0 discriminator 1
 2567 027e 7B68     		ldr	r3, [r7, #4]
 2568 0280 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccumkl9n.s 			page 99


 2569 0282 5B68     		ldr	r3, [r3, #4]
 2570 0284 03F40073 		and	r3, r3, #512
 2571 0288 002B     		cmp	r3, #0
 2572 028a 0DD0     		beq	.L148
3026:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3027:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3028:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
 2573              		.loc 1 3028 0 is_stmt 1
 2574 028c 7B68     		ldr	r3, [r7, #4]
 2575 028e 5B6C     		ldr	r3, [r3, #68]
 2576 0290 43F48022 		orr	r2, r3, #262144
 2577 0294 7B68     		ldr	r3, [r7, #4]
 2578 0296 5A64     		str	r2, [r3, #68]
3029:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3030:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Level out of window 3 callback */
3031:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
 2579              		.loc 1 3031 0
 2580 0298 7868     		ldr	r0, [r7, #4]
 2581 029a FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
3032:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear ADC analog watchdog flag */ 
3033:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
 2582              		.loc 1 3033 0
 2583 029e 7B68     		ldr	r3, [r7, #4]
 2584 02a0 1B68     		ldr	r3, [r3]
 2585 02a2 4FF40072 		mov	r2, #512
 2586 02a6 1A60     		str	r2, [r3]
 2587              	.L148:
3034:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3035:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3036:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Overrun flag ========== */
3037:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_OVR) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_OVR))
 2588              		.loc 1 3037 0
 2589 02a8 7B68     		ldr	r3, [r7, #4]
 2590 02aa 1B68     		ldr	r3, [r3]
 2591 02ac 1B68     		ldr	r3, [r3]
 2592 02ae 03F01003 		and	r3, r3, #16
 2593 02b2 002B     		cmp	r3, #0
 2594 02b4 3DD0     		beq	.L149
 2595              		.loc 1 3037 0 is_stmt 0 discriminator 1
 2596 02b6 7B68     		ldr	r3, [r7, #4]
 2597 02b8 1B68     		ldr	r3, [r3]
 2598 02ba 5B68     		ldr	r3, [r3, #4]
 2599 02bc 03F01003 		and	r3, r3, #16
 2600 02c0 002B     		cmp	r3, #0
 2601 02c2 36D0     		beq	.L149
3038:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3039:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If overrun is set to overwrite previous data (default setting),        */
3040:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* overrun event is not considered as an error.                           */
3041:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (cf ref manual "Managing conversions without using the DMA and         */
3042:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* without overrun ")                                                     */
3043:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Exception for usage with DMA overrun event always considered as an     */
3044:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* error.                                                                 */
3045:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 2602              		.loc 1 3045 0 is_stmt 1
 2603 02c4 7B68     		ldr	r3, [r7, #4]
 2604 02c6 9B6B     		ldr	r3, [r3, #56]
 2605 02c8 012B     		cmp	r3, #1
ARM GAS  /tmp/ccumkl9n.s 			page 100


 2606 02ca 02D1     		bne	.L150
3046:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3047:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       overrun_error = 1U;
 2607              		.loc 1 3047 0
 2608 02cc 0123     		movs	r3, #1
 2609 02ce 7B61     		str	r3, [r7, #20]
 2610 02d0 19E0     		b	.L151
 2611              	.L150:
3048:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3049:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3050:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3051:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Pointer to the common control register to which is belonging hadc    */
3052:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common */
3053:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* control registers)                                                   */
3054:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 2612              		.loc 1 3054 0
 2613 02d2 2A4B     		ldr	r3, .L157
 2614 02d4 BB60     		str	r3, [r7, #8]
3055:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3056:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check DMA configuration, depending on MultiMode set or not */
3057:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI) == ADC_MODE_INDEPENDENT)
 2615              		.loc 1 3057 0
 2616 02d6 BB68     		ldr	r3, [r7, #8]
 2617 02d8 9B68     		ldr	r3, [r3, #8]
 2618 02da 03F01F03 		and	r3, r3, #31
 2619 02de 002B     		cmp	r3, #0
 2620 02e0 09D1     		bne	.L152
3058:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3059:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_DMAEN))
 2621              		.loc 1 3059 0
 2622 02e2 7B68     		ldr	r3, [r7, #4]
 2623 02e4 1B68     		ldr	r3, [r3]
 2624 02e6 DB68     		ldr	r3, [r3, #12]
 2625 02e8 03F00103 		and	r3, r3, #1
 2626 02ec 002B     		cmp	r3, #0
 2627 02ee 0AD0     		beq	.L151
3060:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3061:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           overrun_error = 1U;  
 2628              		.loc 1 3061 0
 2629 02f0 0123     		movs	r3, #1
 2630 02f2 7B61     		str	r3, [r7, #20]
 2631 02f4 07E0     		b	.L151
 2632              	.L152:
3062:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3063:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3065:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3066:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* MultiMode is enabled, Common Control Register MDMA bits must be checked */
3067:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (READ_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA) != RESET)
 2633              		.loc 1 3067 0
 2634 02f6 BB68     		ldr	r3, [r7, #8]
 2635 02f8 9B68     		ldr	r3, [r3, #8]
 2636 02fa 03F44043 		and	r3, r3, #49152
 2637 02fe 002B     		cmp	r3, #0
 2638 0300 01D0     		beq	.L151
3068:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3069:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           overrun_error = 1U;  
ARM GAS  /tmp/ccumkl9n.s 			page 101


 2639              		.loc 1 3069 0
 2640 0302 0123     		movs	r3, #1
 2641 0304 7B61     		str	r3, [r7, #20]
 2642              	.L151:
3070:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3071:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3072:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3073:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3074:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (overrun_error == 1U)
 2643              		.loc 1 3074 0
 2644 0306 7B69     		ldr	r3, [r7, #20]
 2645 0308 012B     		cmp	r3, #1
 2646 030a 0ED1     		bne	.L154
3075:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3076:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
3077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 2647              		.loc 1 3077 0
 2648 030c 7B68     		ldr	r3, [r7, #4]
 2649 030e 5B6C     		ldr	r3, [r3, #68]
 2650 0310 43F48062 		orr	r2, r3, #1024
 2651 0314 7B68     		ldr	r3, [r7, #4]
 2652 0316 5A64     		str	r2, [r3, #68]
3078:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3079:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
3080:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 2653              		.loc 1 3080 0
 2654 0318 7B68     		ldr	r3, [r7, #4]
 2655 031a 9B6C     		ldr	r3, [r3, #72]
 2656 031c 43F00202 		orr	r2, r3, #2
 2657 0320 7B68     		ldr	r3, [r7, #4]
 2658 0322 9A64     		str	r2, [r3, #72]
3081:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3082:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Error callback */ 
3083:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ErrorCallback(hadc);
 2659              		.loc 1 3083 0
 2660 0324 7868     		ldr	r0, [r7, #4]
 2661 0326 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2662              	.L154:
3084:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3086:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear the Overrun flag */
3087:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 2663              		.loc 1 3087 0
 2664 032a 7B68     		ldr	r3, [r7, #4]
 2665 032c 1B68     		ldr	r3, [r3]
 2666 032e 1022     		movs	r2, #16
 2667 0330 1A60     		str	r2, [r3]
 2668              	.L149:
3088:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3089:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3090:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3091:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3092:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Injected context queue overflow flag ========== */
3093:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JQOVF) && __HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JQOVF))
 2669              		.loc 1 3093 0
 2670 0332 7B68     		ldr	r3, [r7, #4]
 2671 0334 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccumkl9n.s 			page 102


 2672 0336 1B68     		ldr	r3, [r3]
 2673 0338 03F48063 		and	r3, r3, #1024
 2674 033c 002B     		cmp	r3, #0
 2675 033e 1AD0     		beq	.L131
 2676              		.loc 1 3093 0 is_stmt 0 discriminator 1
 2677 0340 7B68     		ldr	r3, [r7, #4]
 2678 0342 1B68     		ldr	r3, [r3]
 2679 0344 5B68     		ldr	r3, [r3, #4]
 2680 0346 03F48063 		and	r3, r3, #1024
 2681 034a 002B     		cmp	r3, #0
 2682 034c 13D0     		beq	.L131
3094:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3095:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
3096:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 2683              		.loc 1 3096 0 is_stmt 1
 2684 034e 7B68     		ldr	r3, [r7, #4]
 2685 0350 5B6C     		ldr	r3, [r3, #68]
 2686 0352 43F48042 		orr	r2, r3, #16384
 2687 0356 7B68     		ldr	r3, [r7, #4]
 2688 0358 5A64     		str	r2, [r3, #68]
3097:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3098:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
3099:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 2689              		.loc 1 3099 0
 2690 035a 7B68     		ldr	r3, [r7, #4]
 2691 035c 9B6C     		ldr	r3, [r3, #72]
 2692 035e 43F00802 		orr	r2, r3, #8
 2693 0362 7B68     		ldr	r3, [r7, #4]
 2694 0364 9A64     		str	r2, [r3, #72]
3100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear the Injected context queue overflow flag */
3102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
 2695              		.loc 1 3102 0
 2696 0366 7B68     		ldr	r3, [r7, #4]
 2697 0368 1B68     		ldr	r3, [r3]
 2698 036a 4FF48062 		mov	r2, #1024
 2699 036e 1A60     		str	r2, [r3]
3103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Error callback */ 
3105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
 2700              		.loc 1 3105 0
 2701 0370 7868     		ldr	r0, [r7, #4]
 2702 0372 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 2703              	.L131:
3106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2704              		.loc 1 3108 0
 2705 0376 1837     		adds	r7, r7, #24
 2706              	.LCFI59:
 2707              		.cfi_def_cfa_offset 8
 2708 0378 BD46     		mov	sp, r7
 2709              	.LCFI60:
 2710              		.cfi_def_cfa_register 13
 2711              		@ sp needed
 2712 037a 80BD     		pop	{r7, pc}
 2713              	.L158:
ARM GAS  /tmp/ccumkl9n.s 			page 103


 2714              		.align	2
 2715              	.L157:
 2716 037c 00030050 		.word	1342178048
 2717              		.cfi_endproc
 2718              	.LFE134:
 2720              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
 2721              		.align	2
 2722              		.global	HAL_ADCEx_Calibration_Start
 2723              		.thumb
 2724              		.thumb_func
 2726              	HAL_ADCEx_Calibration_Start:
 2727              	.LFB135:
3109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Handles ADC interrupt request  
3117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
3121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
3125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
3126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for regular group ========== */
3129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_EOC))
3130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC) )
3132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update state machine on conversion status if not in error state */
3134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
3135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
3138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Determine whether any further conversion upcoming on group regular   */
3141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by external trigger, continuous mode or scan sequence on going.      */
3142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On STM32F37x devices, in case of sequencer enabled             */
3143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (several ranks selected), end of conversion flag is raised     */
3144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       at the end of the sequence.                                    */
3145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(ADC_IS_SOFTWARE_START_REGULAR(hadc)       && 
3146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode == DISABLE)  )
3147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable ADC end of single conversion interrupt  */
3149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
3150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
3153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
ARM GAS  /tmp/ccumkl9n.s 			page 104


3154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
3155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion complete callback */
3161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_ConvCpltCallback(hadc);
3162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag */
3164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
3165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check End of Conversion flag for injected group ========== */
3169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_JEOC))
3170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOC))
3172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update state machine on conversion status if not in error state */
3174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
3175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
3178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Determine whether any further conversion upcoming on group injected  */
3181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* by external trigger, scan sequence on going or by automatic injected */
3182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion from group regular (same conditions as group regular      */
3183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption disabling above).                                       */
3184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On STM32F37x devices, in case of sequencer enabled             */
3185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (several ranks selected), end of conversion flag is raised     */
3186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       at the end of the sequence.                                    */
3187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
3188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
3189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
3190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (hadc->Init.ContinuousConvMode == DISABLE)  )         )   )
3191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable ADC end of single conversion interrupt  */
3193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
3194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
3197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         { 
3200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion complete callback */ 
3205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADCEx_InjectedConvCpltCallback(hadc);
3206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
3208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
3209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/ccumkl9n.s 			page 105


3211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ========== Check Analog watchdog flags ========== */
3213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(__HAL_ADC_GET_IT_SOURCE(hadc, ADC_IT_AWD))
3214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
3216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
3218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Level out of window callback */ 
3221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_ADC_LevelOutOfWindowCallback(hadc);
3222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC analog watchdog flag */
3224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
3225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
3238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
3239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
3240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input
3242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc, uint32_t SingleDiff)
3248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 2728              		.loc 1 3248 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 16
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732 0000 80B5     		push	{r7, lr}
 2733              	.LCFI61:
 2734              		.cfi_def_cfa_offset 8
 2735              		.cfi_offset 7, -8
 2736              		.cfi_offset 14, -4
 2737 0002 84B0     		sub	sp, sp, #16
 2738              	.LCFI62:
 2739              		.cfi_def_cfa_offset 24
 2740 0004 00AF     		add	r7, sp, #0
 2741              	.LCFI63:
 2742              		.cfi_def_cfa_register 7
 2743 0006 7860     		str	r0, [r7, #4]
 2744 0008 3960     		str	r1, [r7]
3249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2745              		.loc 1 3249 0
ARM GAS  /tmp/ccumkl9n.s 			page 106


 2746 000a 0023     		movs	r3, #0
 2747 000c FB73     		strb	r3, [r7, #15]
3250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
3255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2748              		.loc 1 3257 0
 2749 000e 7B68     		ldr	r3, [r7, #4]
 2750 0010 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 2751 0014 012B     		cmp	r3, #1
 2752 0016 01D1     		bne	.L160
 2753              		.loc 1 3257 0 is_stmt 0 discriminator 1
 2754 0018 0223     		movs	r3, #2
 2755 001a 57E0     		b	.L161
 2756              	.L160:
 2757              		.loc 1 3257 0 discriminator 2
 2758 001c 7B68     		ldr	r3, [r7, #4]
 2759 001e 0122     		movs	r2, #1
 2760 0020 83F84020 		strb	r2, [r3, #64]
3258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
3260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
3261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
3262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
 2761              		.loc 1 3262 0 is_stmt 1 discriminator 2
 2762 0024 7868     		ldr	r0, [r7, #4]
 2763 0026 FFF7FEFF 		bl	ADC_Disable
 2764 002a 0346     		mov	r3, r0
 2765 002c FB73     		strb	r3, [r7, #15]
3263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
3265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 2766              		.loc 1 3265 0 discriminator 2
 2767 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2768 0030 002B     		cmp	r3, #0
 2769 0032 44D1     		bne	.L162
3266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Change ADC state */
3268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->State = HAL_ADC_STATE_READY;
 2770              		.loc 1 3268 0
 2771 0034 7B68     		ldr	r3, [r7, #4]
 2772 0036 0122     		movs	r2, #1
 2773 0038 5A64     		str	r2, [r3, #68]
3269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Select calibration mode single ended or differential ended */
3271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR &= (~ADC_CR_ADCALDIF);
 2774              		.loc 1 3271 0
 2775 003a 7B68     		ldr	r3, [r7, #4]
 2776 003c 1B68     		ldr	r3, [r3]
 2777 003e 7A68     		ldr	r2, [r7, #4]
 2778 0040 1268     		ldr	r2, [r2]
 2779 0042 9268     		ldr	r2, [r2, #8]
 2780 0044 22F08042 		bic	r2, r2, #1073741824
ARM GAS  /tmp/ccumkl9n.s 			page 107


 2781 0048 9A60     		str	r2, [r3, #8]
3272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
 2782              		.loc 1 3272 0
 2783 004a 3B68     		ldr	r3, [r7]
 2784 004c 012B     		cmp	r3, #1
 2785 004e 07D1     		bne	.L163
3273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->Instance->CR |= ADC_CR_ADCALDIF;
 2786              		.loc 1 3274 0
 2787 0050 7B68     		ldr	r3, [r7, #4]
 2788 0052 1B68     		ldr	r3, [r3]
 2789 0054 7A68     		ldr	r2, [r7, #4]
 2790 0056 1268     		ldr	r2, [r2]
 2791 0058 9268     		ldr	r2, [r2, #8]
 2792 005a 42F08042 		orr	r2, r2, #1073741824
 2793 005e 9A60     		str	r2, [r3, #8]
 2794              	.L163:
3275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start ADC calibration */
3278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->Instance->CR |= ADC_CR_ADCAL;
 2795              		.loc 1 3278 0
 2796 0060 7B68     		ldr	r3, [r7, #4]
 2797 0062 1B68     		ldr	r3, [r3]
 2798 0064 7A68     		ldr	r2, [r7, #4]
 2799 0066 1268     		ldr	r2, [r2]
 2800 0068 9268     		ldr	r2, [r2, #8]
 2801 006a 42F00042 		orr	r2, r2, #-2147483648
 2802 006e 9A60     		str	r2, [r3, #8]
3279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
 2803              		.loc 1 3280 0
 2804 0070 FFF7FEFF 		bl	HAL_GetTick
 2805 0074 B860     		str	r0, [r7, #8]
3281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration completion */
3283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADCAL))
 2806              		.loc 1 3283 0
 2807 0076 14E0     		b	.L164
 2808              	.L165:
3284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
 2809              		.loc 1 3285 0
 2810 0078 FFF7FEFF 		bl	HAL_GetTick
 2811 007c 0246     		mov	r2, r0
 2812 007e BB68     		ldr	r3, [r7, #8]
 2813 0080 D31A     		subs	r3, r2, r3
 2814 0082 0A2B     		cmp	r3, #10
 2815 0084 0DD9     		bls	.L164
3286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 2816              		.loc 1 3288 0
 2817 0086 7B68     		ldr	r3, [r7, #4]
 2818 0088 5B6C     		ldr	r3, [r3, #68]
 2819 008a 23F01203 		bic	r3, r3, #18
 2820 008e 43F01002 		orr	r2, r3, #16
ARM GAS  /tmp/ccumkl9n.s 			page 108


 2821 0092 7B68     		ldr	r3, [r7, #4]
 2822 0094 5A64     		str	r2, [r3, #68]
3289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
3290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 2823              		.loc 1 3293 0
 2824 0096 7B68     		ldr	r3, [r7, #4]
 2825 0098 0022     		movs	r2, #0
 2826 009a 83F84020 		strb	r2, [r3, #64]
3294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 2827              		.loc 1 3295 0
 2828 009e 0123     		movs	r3, #1
 2829 00a0 14E0     		b	.L161
 2830              	.L164:
3283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 2831              		.loc 1 3283 0
 2832 00a2 7B68     		ldr	r3, [r7, #4]
 2833 00a4 1B68     		ldr	r3, [r3]
 2834 00a6 9B68     		ldr	r3, [r3, #8]
 2835 00a8 002B     		cmp	r3, #0
 2836 00aa E5DB     		blt	.L165
3296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 2837              		.loc 1 3300 0
 2838 00ac 7B68     		ldr	r3, [r7, #4]
 2839 00ae 5B6C     		ldr	r3, [r3, #68]
 2840 00b0 23F00303 		bic	r3, r3, #3
 2841 00b4 43F00102 		orr	r2, r3, #1
 2842 00b8 7B68     		ldr	r3, [r7, #4]
 2843 00ba 5A64     		str	r2, [r3, #68]
 2844 00bc 01E0     		b	.L166
 2845              	.L162:
3301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
3302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
3303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 2846              		.loc 1 3307 0
 2847 00be 0123     		movs	r3, #1
 2848 00c0 FB73     		strb	r3, [r7, #15]
 2849              	.L166:
3308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2850              		.loc 1 3311 0
 2851 00c2 7B68     		ldr	r3, [r7, #4]
 2852 00c4 0022     		movs	r2, #0
 2853 00c6 83F84020 		strb	r2, [r3, #64]
ARM GAS  /tmp/ccumkl9n.s 			page 109


3312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 2854              		.loc 1 3314 0
 2855 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2856              	.L161:
3315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2857              		.loc 1 3315 0
 2858 00cc 1846     		mov	r0, r3
 2859 00ce 1037     		adds	r7, r7, #16
 2860              	.LCFI64:
 2861              		.cfi_def_cfa_offset 8
 2862 00d0 BD46     		mov	sp, r7
 2863              	.LCFI65:
 2864              		.cfi_def_cfa_register 13
 2865              		@ sp needed
 2866 00d2 80BD     		pop	{r7, pc}
 2867              		.cfi_endproc
 2868              	.LFE135:
 2870              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 2871              		.align	2
 2872              		.global	HAL_ADCEx_Calibration_GetValue
 2873              		.thumb
 2874              		.thumb_func
 2876              	HAL_ADCEx_Calibration_GetValue:
 2877              	.LFB136:
3316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
3324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
3325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
3326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         During calibration process, ADC is enabled. ADC is let enabled at
3327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the completion of this function.
3328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef* hadc)
3332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
3336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Calibration prerequisite:                                             */
3344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    - ADC must be disabled for at least two ADC clock cycles in disable   */
3345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      mode before ADC enable                                              */
3346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion on going, on regular and injected groups       */
ARM GAS  /tmp/ccumkl9n.s 			page 110


3347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral */
3348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop_Disable(hadc);
3349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
3351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
3352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
3357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait two ADC clock cycles */
3359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(wait_loop_index < ADC_CYCLE_WORST_CASE_CPU_CYCLES *2U)
3360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       wait_loop_index++;
3362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Enable the ADC peripheral */
3365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_Enable(hadc);
3366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 3. Resets ADC calibration registers */  
3369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_RSTCAL);
3370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
3372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration reset completion */
3374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_RSTCAL))
3375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
3377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
3380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
3381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
3387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 4. Start ADC calibration */
3392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_CAL);
3393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
3395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for calibration completion */
3397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_CAL))
3398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_CALIBRATION_TIMEOUT)
3400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
3402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
3403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
ARM GAS  /tmp/ccumkl9n.s 			page 111


3404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
3405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
3408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
3410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
3416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
3417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get the calibration factor from automatic conversion result
3434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input
3436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval Converted value
3440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef* hadc, uint32_t SingleDiff)
3442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 2878              		.loc 1 3442 0
 2879              		.cfi_startproc
 2880              		@ args = 0, pretend = 0, frame = 8
 2881              		@ frame_needed = 1, uses_anonymous_args = 0
 2882              		@ link register save eliminated.
 2883 0000 80B4     		push	{r7}
 2884              	.LCFI66:
 2885              		.cfi_def_cfa_offset 4
 2886              		.cfi_offset 7, -4
 2887 0002 83B0     		sub	sp, sp, #12
 2888              	.LCFI67:
 2889              		.cfi_def_cfa_offset 16
 2890 0004 00AF     		add	r7, sp, #0
 2891              	.LCFI68:
 2892              		.cfi_def_cfa_register 7
 2893 0006 7860     		str	r0, [r7, #4]
 2894 0008 3960     		str	r1, [r7]
3443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/ccumkl9n.s 			page 112


3444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff)); 
3446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */ 
3448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
 2895              		.loc 1 3448 0
 2896 000a 3B68     		ldr	r3, [r7]
 2897 000c 012B     		cmp	r3, #1
 2898 000e 05D1     		bne	.L168
3449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return ADC_CALFACT_DIFF_GET(hadc->Instance->CALFACT);
 2899              		.loc 1 3450 0
 2900 0010 7B68     		ldr	r3, [r7, #4]
 2901 0012 1B68     		ldr	r3, [r3]
 2902 0014 D3F8B430 		ldr	r3, [r3, #180]
 2903 0018 1B0C     		lsrs	r3, r3, #16
 2904 001a 05E0     		b	.L169
 2905              	.L168:
3451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     return ((hadc->Instance->CALFACT) & ADC_CALFACT_CALFACT_S);
 2906              		.loc 1 3454 0
 2907 001c 7B68     		ldr	r3, [r7, #4]
 2908 001e 1B68     		ldr	r3, [r3]
 2909 0020 D3F8B430 		ldr	r3, [r3, #180]
 2910 0024 03F07F03 		and	r3, r3, #127
 2911              	.L169:
3455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 2912              		.loc 1 3456 0
 2913 0028 1846     		mov	r0, r3
 2914 002a 0C37     		adds	r7, r7, #12
 2915              	.LCFI69:
 2916              		.cfi_def_cfa_offset 4
 2917 002c BD46     		mov	sp, r7
 2918              	.LCFI70:
 2919              		.cfi_def_cfa_register 13
 2920              		@ sp needed
 2921 002e 5DF8047B 		ldr	r7, [sp], #4
 2922              	.LCFI71:
 2923              		.cfi_restore 7
 2924              		.cfi_def_cfa_offset 0
 2925 0032 7047     		bx	lr
 2926              		.cfi_endproc
 2927              	.LFE136:
 2929              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 2930              		.align	2
 2931              		.global	HAL_ADCEx_Calibration_SetValue
 2932              		.thumb
 2933              		.thumb_func
 2935              	HAL_ADCEx_Calibration_SetValue:
 2936              	.LFB137:
3457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
ARM GAS  /tmp/ccumkl9n.s 			page 113


3461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result. ADC must be enable
3468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  SingleDiff: Selection of single-ended or differential input
3470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
3471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_SINGLE_ENDED: Channel in mode input single ended
3472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_DIFFERENTIAL_ENDED: Channel in mode input differential ended
3473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  CalibrationFactor: Calibration factor (coded on 7 bits maximum)
3474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL state
3475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef* hadc, uint32_t SingleDiff, uint
3477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 2937              		.loc 1 3477 0
 2938              		.cfi_startproc
 2939              		@ args = 0, pretend = 0, frame = 24
 2940              		@ frame_needed = 1, uses_anonymous_args = 0
 2941              		@ link register save eliminated.
 2942 0000 80B4     		push	{r7}
 2943              	.LCFI72:
 2944              		.cfi_def_cfa_offset 4
 2945              		.cfi_offset 7, -4
 2946 0002 87B0     		sub	sp, sp, #28
 2947              	.LCFI73:
 2948              		.cfi_def_cfa_offset 32
 2949 0004 00AF     		add	r7, sp, #0
 2950              	.LCFI74:
 2951              		.cfi_def_cfa_register 7
 2952 0006 F860     		str	r0, [r7, #12]
 2953 0008 B960     		str	r1, [r7, #8]
 2954 000a 7A60     		str	r2, [r7, #4]
3478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2955              		.loc 1 3478 0
 2956 000c 0023     		movs	r3, #0
 2957 000e FB75     		strb	r3, [r7, #23]
3479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff)); 
3483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor)); 
3484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 2958              		.loc 1 3486 0
 2959 0010 FB68     		ldr	r3, [r7, #12]
 2960 0012 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 2961 0016 012B     		cmp	r3, #1
 2962 0018 01D1     		bne	.L171
 2963              		.loc 1 3486 0 is_stmt 0 discriminator 1
 2964 001a 0223     		movs	r3, #2
 2965 001c 4CE0     		b	.L172
 2966              	.L171:
 2967              		.loc 1 3486 0 discriminator 2
ARM GAS  /tmp/ccumkl9n.s 			page 114


 2968 001e FB68     		ldr	r3, [r7, #12]
 2969 0020 0122     		movs	r2, #1
 2970 0022 83F84020 		strb	r2, [r3, #64]
3487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
3489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
3490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ( (ADC_IS_ENABLE(hadc) != RESET)                              &&
 2971              		.loc 1 3490 0 is_stmt 1 discriminator 2
 2972 0026 FB68     		ldr	r3, [r7, #12]
 2973 0028 1B68     		ldr	r3, [r3]
 2974 002a 9B68     		ldr	r3, [r3, #8]
 2975 002c 03F00303 		and	r3, r3, #3
 2976 0030 012B     		cmp	r3, #1
 2977 0032 08D1     		bne	.L173
 2978              		.loc 1 3490 0 is_stmt 0 discriminator 1
 2979 0034 FB68     		ldr	r3, [r7, #12]
 2980 0036 1B68     		ldr	r3, [r3]
 2981 0038 1B68     		ldr	r3, [r3]
 2982 003a 03F00103 		and	r3, r3, #1
 2983 003e 002B     		cmp	r3, #0
 2984 0040 01D0     		beq	.L173
 2985              		.loc 1 3490 0 discriminator 3
 2986 0042 0123     		movs	r3, #1
 2987 0044 00E0     		b	.L174
 2988              	.L173:
 2989              		.loc 1 3490 0 discriminator 4
 2990 0046 0023     		movs	r3, #0
 2991              	.L174:
 2992              		.loc 1 3490 0 discriminator 6
 2993 0048 002B     		cmp	r3, #0
 2994 004a 24D0     		beq	.L175
3491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 2995              		.loc 1 3491 0 is_stmt 1 discriminator 7
 2996 004c FB68     		ldr	r3, [r7, #12]
 2997 004e 1B68     		ldr	r3, [r3]
 2998 0050 9B68     		ldr	r3, [r3, #8]
 2999 0052 03F00C03 		and	r3, r3, #12
3490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)   )
 3000              		.loc 1 3490 0 discriminator 7
 3001 0056 002B     		cmp	r3, #0
 3002 0058 1DD1     		bne	.L175
3492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */ 
3494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (SingleDiff == ADC_DIFFERENTIAL_ENDED)
 3003              		.loc 1 3494 0
 3004 005a BB68     		ldr	r3, [r7, #8]
 3005 005c 012B     		cmp	r3, #1
 3006 005e 0DD1     		bne	.L176
3495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CALFACT                ,
 3007              		.loc 1 3496 0
 3008 0060 FB68     		ldr	r3, [r7, #12]
 3009 0062 1B68     		ldr	r3, [r3]
 3010 0064 FA68     		ldr	r2, [r7, #12]
 3011 0066 1268     		ldr	r2, [r2]
 3012 0068 D2F8B420 		ldr	r2, [r2, #180]
 3013 006c 22F4FE01 		bic	r1, r2, #8323072
ARM GAS  /tmp/ccumkl9n.s 			page 115


 3014 0070 7A68     		ldr	r2, [r7, #4]
 3015 0072 1204     		lsls	r2, r2, #16
 3016 0074 0A43     		orrs	r2, r2, r1
 3017 0076 C3F8B420 		str	r2, [r3, #180]
3494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3018              		.loc 1 3494 0
 3019 007a 18E0     		b	.L178
 3020              	.L176:
3497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_D                  ,
3498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_DIFF_SET(CalibrationFactor) );
3499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CALFACT,
 3021              		.loc 1 3502 0
 3022 007c FB68     		ldr	r3, [r7, #12]
 3023 007e 1B68     		ldr	r3, [r3]
 3024 0080 FA68     		ldr	r2, [r7, #12]
 3025 0082 1268     		ldr	r2, [r2]
 3026 0084 D2F8B420 		ldr	r2, [r2, #180]
 3027 0088 22F07F01 		bic	r1, r2, #127
 3028 008c 7A68     		ldr	r2, [r7, #4]
 3029 008e 0A43     		orrs	r2, r2, r1
 3030 0090 C3F8B420 		str	r2, [r3, #180]
3494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 3031              		.loc 1 3494 0
 3032 0094 0BE0     		b	.L178
 3033              	.L175:
3503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CALFACT_CALFACT_S  ,
3504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  CalibrationFactor       );
3505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 3034              		.loc 1 3510 0
 3035 0096 FB68     		ldr	r3, [r7, #12]
 3036 0098 5B6C     		ldr	r3, [r3, #68]
 3037 009a 43F02002 		orr	r2, r3, #32
 3038 009e FB68     		ldr	r3, [r7, #12]
 3039 00a0 5A64     		str	r2, [r3, #68]
3511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to ADC IP internal error */
3513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 3040              		.loc 1 3513 0
 3041 00a2 FB68     		ldr	r3, [r7, #12]
 3042 00a4 9B6C     		ldr	r3, [r3, #72]
 3043 00a6 43F00102 		orr	r2, r3, #1
 3044 00aa FB68     		ldr	r3, [r7, #12]
 3045 00ac 9A64     		str	r2, [r3, #72]
 3046              	.L178:
3514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3047              		.loc 1 3517 0
ARM GAS  /tmp/ccumkl9n.s 			page 116


 3048 00ae FB68     		ldr	r3, [r7, #12]
 3049 00b0 0022     		movs	r2, #0
 3050 00b2 83F84020 		strb	r2, [r3, #64]
3518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 3051              		.loc 1 3520 0
 3052 00b6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 3053              	.L172:
3521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3054              		.loc 1 3521 0
 3055 00b8 1846     		mov	r0, r3
 3056 00ba 1C37     		adds	r7, r7, #28
 3057              	.LCFI75:
 3058              		.cfi_def_cfa_offset 4
 3059 00bc BD46     		mov	sp, r7
 3060              	.LCFI76:
 3061              		.cfi_def_cfa_register 13
 3062              		@ sp needed
 3063 00be 5DF8047B 		ldr	r7, [sp], #4
 3064              	.LCFI77:
 3065              		.cfi_restore 7
 3066              		.cfi_def_cfa_offset 0
 3067 00c2 7047     		bx	lr
 3068              		.cfi_endproc
 3069              	.LFE137:
 3071              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 3072              		.align	2
 3073              		.global	HAL_ADCEx_InjectedStart
 3074              		.thumb
 3075              		.thumb_func
 3077              	HAL_ADCEx_InjectedStart:
 3078              	.LFB138:
3522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
3533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
3534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
3535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
3536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
3537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
3538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
3542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 3079              		.loc 1 3542 0
 3080              		.cfi_startproc
 3081              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccumkl9n.s 			page 117


 3082              		@ frame_needed = 1, uses_anonymous_args = 0
 3083 0000 80B5     		push	{r7, lr}
 3084              	.LCFI78:
 3085              		.cfi_def_cfa_offset 8
 3086              		.cfi_offset 7, -8
 3087              		.cfi_offset 14, -4
 3088 0002 84B0     		sub	sp, sp, #16
 3089              	.LCFI79:
 3090              		.cfi_def_cfa_offset 24
 3091 0004 00AF     		add	r7, sp, #0
 3092              	.LCFI80:
 3093              		.cfi_def_cfa_register 7
 3094 0006 7860     		str	r0, [r7, #4]
3543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3095              		.loc 1 3543 0
 3096 0008 0023     		movs	r3, #0
 3097 000a FB73     		strb	r3, [r7, #15]
3544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
3549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
 3098              		.loc 1 3549 0
 3099 000c 7B68     		ldr	r3, [r7, #4]
 3100 000e 1B68     		ldr	r3, [r3]
 3101 0010 9B68     		ldr	r3, [r3, #8]
 3102 0012 03F00803 		and	r3, r3, #8
 3103 0016 002B     		cmp	r3, #0
 3104 0018 48D1     		bne	.L180
3550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
3552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 3105              		.loc 1 3552 0
 3106 001a 7B68     		ldr	r3, [r7, #4]
 3107 001c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 3108 0020 012B     		cmp	r3, #1
 3109 0022 01D1     		bne	.L181
 3110              		.loc 1 3552 0 is_stmt 0 discriminator 1
 3111 0024 0223     		movs	r3, #2
 3112 0026 44E0     		b	.L182
 3113              	.L181:
 3114              		.loc 1 3552 0 discriminator 2
 3115 0028 7B68     		ldr	r3, [r7, #4]
 3116 002a 0122     		movs	r2, #1
 3117 002c 83F84020 		strb	r2, [r3, #64]
3553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
3555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 3118              		.loc 1 3555 0 is_stmt 1 discriminator 2
 3119 0030 7868     		ldr	r0, [r7, #4]
 3120 0032 FFF7FEFF 		bl	ADC_Enable
 3121 0036 0346     		mov	r3, r0
 3122 0038 FB73     		strb	r3, [r7, #15]
3556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
3558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
ARM GAS  /tmp/ccumkl9n.s 			page 118


 3123              		.loc 1 3558 0 discriminator 2
 3124 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3125 003c 002B     		cmp	r3, #0
 3126 003e 30D1     		bne	.L183
3559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
3561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
3562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
3563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 3127              		.loc 1 3563 0
 3128 0040 7B68     		ldr	r3, [r7, #4]
 3129 0042 5B6C     		ldr	r3, [r3, #68]
 3130 0044 23F44053 		bic	r3, r3, #12288
 3131 0048 23F00103 		bic	r3, r3, #1
 3132 004c 43F48052 		orr	r2, r3, #4096
 3133 0050 7B68     		ldr	r3, [r7, #4]
 3134 0052 5A64     		str	r2, [r3, #68]
3564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
3565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
3566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of independent mode or multimode(for devices with several ADCs):*/
3568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set multimode state.                                                 */
3569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
3570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 3135              		.loc 1 3571 0
 3136 0054 7B68     		ldr	r3, [r7, #4]
 3137 0056 5B6C     		ldr	r3, [r3, #68]
 3138 0058 23F48012 		bic	r2, r3, #1048576
 3139 005c 7B68     		ldr	r3, [r7, #4]
 3140 005e 5A64     		str	r2, [r3, #68]
3572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
3576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
3579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On this device, there is no ADC error code fields related to   */
3580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       conversions on group injected only. In case of conversion on   */
3581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       going on group regular, no error code is reset.                */
3582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 3141              		.loc 1 3582 0
 3142 0060 7B68     		ldr	r3, [r7, #4]
 3143 0062 5B6C     		ldr	r3, [r3, #68]
 3144 0064 03F48073 		and	r3, r3, #256
 3145 0068 002B     		cmp	r3, #0
 3146 006a 02D1     		bne	.L184
3583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
3585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 3147              		.loc 1 3585 0
 3148 006c 7B68     		ldr	r3, [r7, #4]
 3149 006e 0022     		movs	r2, #0
 3150 0070 9A64     		str	r2, [r3, #72]
 3151              	.L184:
3586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/ccumkl9n.s 			page 119


3587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
3589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
3590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
3591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 3152              		.loc 1 3591 0
 3153 0072 7B68     		ldr	r3, [r7, #4]
 3154 0074 0022     		movs	r2, #0
 3155 0076 83F84020 		strb	r2, [r3, #64]
3592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
3594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
3595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
3596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 3156              		.loc 1 3596 0
 3157 007a 7B68     		ldr	r3, [r7, #4]
 3158 007c 1B68     		ldr	r3, [r3]
 3159 007e 6022     		movs	r2, #96
 3160 0080 1A60     		str	r2, [r3]
3597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected           */
3599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion is disabled.                                              */
3600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
3601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
3602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
3603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
3604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
3605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
3606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO) && 
 3161              		.loc 1 3606 0
 3162 0082 7B68     		ldr	r3, [r7, #4]
 3163 0084 1B68     		ldr	r3, [r3]
 3164 0086 DB68     		ldr	r3, [r3, #12]
 3165 0088 03F00073 		and	r3, r3, #33554432
 3166 008c 002B     		cmp	r3, #0
 3167 008e 0FD1     		bne	.L187
3607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
3608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_JADSTART);
 3168              		.loc 1 3609 0
 3169 0090 7B68     		ldr	r3, [r7, #4]
 3170 0092 1B68     		ldr	r3, [r3]
 3171 0094 7A68     		ldr	r2, [r7, #4]
 3172 0096 1268     		ldr	r2, [r2]
 3173 0098 9268     		ldr	r2, [r2, #8]
 3174 009a 42F00802 		orr	r2, r2, #8
 3175 009e 9A60     		str	r2, [r3, #8]
 3176 00a0 06E0     		b	.L187
 3177              	.L183:
3610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
3615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 3178              		.loc 1 3615 0
 3179 00a2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 120


 3180 00a4 0022     		movs	r2, #0
 3181 00a6 83F84020 		strb	r2, [r3, #64]
 3182 00aa 01E0     		b	.L187
 3183              	.L180:
3616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
 3184              		.loc 1 3620 0
 3185 00ac 0223     		movs	r3, #2
 3186 00ae FB73     		strb	r3, [r7, #15]
 3187              	.L187:
3621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 3188              		.loc 1 3624 0
 3189 00b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3190              	.L182:
3625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3191              		.loc 1 3625 0
 3192 00b2 1846     		mov	r0, r3
 3193 00b4 1037     		adds	r7, r7, #16
 3194              	.LCFI81:
 3195              		.cfi_def_cfa_offset 8
 3196 00b6 BD46     		mov	sp, r7
 3197              	.LCFI82:
 3198              		.cfi_def_cfa_register 13
 3199              		@ sp needed
 3200 00b8 80BD     		pop	{r7, pc}
 3201              		.cfi_endproc
 3202              	.LFE138:
 3204 00ba 00BF     		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 3205              		.align	2
 3206              		.global	HAL_ADCEx_InjectedStop
 3207              		.thumb
 3208              		.thumb_func
 3210              	HAL_ADCEx_InjectedStop:
 3211              	.LFB139:
3626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group.
3634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function: None.
3635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef* hadc)
3639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
ARM GAS  /tmp/ccumkl9n.s 			page 121


3643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
3649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
3650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
3652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
3653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
3655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
3656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
3657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
3658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
3659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
3660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
3662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
3663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
3664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
3665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
3666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
3668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
3669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
3672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
3673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
3674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
3675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
3677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
3678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
3679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
3681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
3682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
3683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
3684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
3685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
3686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
3687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
3688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_INJECTED(hadc)               && 
3689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
3690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with SW start */
3692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
3693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
3695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with external trigger */
3697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
3698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/ccumkl9n.s 			page 122


3700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group injected conversion (potential conversion on going
3712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group regular is not impacted), disable ADC peripheral
3713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group regular.
3714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
3715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
3716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
3717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
3718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
3719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
3720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
3721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC master first, then ADC slave.
3722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled. 
3723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
3724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
3725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
3726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
3730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 3212              		.loc 1 3730 0
 3213              		.cfi_startproc
 3214              		@ args = 0, pretend = 0, frame = 16
 3215              		@ frame_needed = 1, uses_anonymous_args = 0
 3216 0000 80B5     		push	{r7, lr}
 3217              	.LCFI83:
 3218              		.cfi_def_cfa_offset 8
 3219              		.cfi_offset 7, -8
 3220              		.cfi_offset 14, -4
 3221 0002 84B0     		sub	sp, sp, #16
 3222              	.LCFI84:
 3223              		.cfi_def_cfa_offset 24
 3224 0004 00AF     		add	r7, sp, #0
 3225              	.LCFI85:
 3226              		.cfi_def_cfa_register 7
 3227 0006 7860     		str	r0, [r7, #4]
3731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3228              		.loc 1 3731 0
 3229 0008 0023     		movs	r3, #0
 3230 000a FB73     		strb	r3, [r7, #15]
3732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
ARM GAS  /tmp/ccumkl9n.s 			page 123


 3231              		.loc 1 3737 0
 3232 000c 7B68     		ldr	r3, [r7, #4]
 3233 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 3234 0012 012B     		cmp	r3, #1
 3235 0014 01D1     		bne	.L189
 3236              		.loc 1 3737 0 is_stmt 0 discriminator 1
 3237 0016 0223     		movs	r3, #2
 3238 0018 49E0     		b	.L190
 3239              	.L189:
 3240              		.loc 1 3737 0 discriminator 2
 3241 001a 7B68     		ldr	r3, [r7, #4]
 3242 001c 0122     		movs	r2, #1
 3243 001e 83F84020 		strb	r2, [r3, #64]
3738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
3740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
3741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
3742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC injected group conversion stop:                                */
3743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
3744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group regular) can continue (groups regular and injected              */
3745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
3746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
3747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group regular) must be intended to   */
3748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
3749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
3750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
 3244              		.loc 1 3750 0 is_stmt 1 discriminator 2
 3245 0022 7B68     		ldr	r3, [r7, #4]
 3246 0024 1B68     		ldr	r3, [r3]
 3247 0026 DB68     		ldr	r3, [r3, #12]
 3248 0028 03F00073 		and	r3, r3, #33554432
 3249 002c 002B     		cmp	r3, #0
 3250 002e 31D1     		bne	.L191
3751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Stop potential conversion on going on injected group only. */
3753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 3251              		.loc 1 3753 0
 3252 0030 7868     		ldr	r0, [r7, #4]
 3253 0032 6021     		movs	r1, #96
 3254 0034 FFF7FEFF 		bl	ADC_ConversionStop
 3255 0038 0346     		mov	r3, r0
 3256 003a FB73     		strb	r3, [r7, #15]
3754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral if conversion on ADC group injected is          */
3756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped and if no conversion on the other group            */
3757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (ADC group regular) is intended to continue.                           */
3758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 3257              		.loc 1 3758 0
 3258 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3259 003e 002B     		cmp	r3, #0
 3260 0040 30D1     		bne	.L195
3759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {      
3760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) &&
 3261              		.loc 1 3760 0
 3262 0042 7B68     		ldr	r3, [r7, #4]
 3263 0044 1B68     		ldr	r3, [r3]
 3264 0046 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccumkl9n.s 			page 124


 3265 0048 03F00403 		and	r3, r3, #4
 3266 004c 002B     		cmp	r3, #0
 3267 004e 19D1     		bne	.L193
3761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3268              		.loc 1 3761 0 discriminator 1
 3269 0050 7B68     		ldr	r3, [r7, #4]
 3270 0052 5B6C     		ldr	r3, [r3, #68]
 3271 0054 03F48073 		and	r3, r3, #256
3760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3272              		.loc 1 3760 0 discriminator 1
 3273 0058 002B     		cmp	r3, #0
 3274 005a 13D1     		bne	.L193
3762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* 2. Disable the ADC peripheral */
3764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
 3275              		.loc 1 3764 0
 3276 005c 7868     		ldr	r0, [r7, #4]
 3277 005e FFF7FEFF 		bl	ADC_Disable
 3278 0062 0346     		mov	r3, r0
 3279 0064 FB73     		strb	r3, [r7, #15]
3765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
3767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
 3280              		.loc 1 3767 0
 3281 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3282 0068 002B     		cmp	r3, #0
 3283 006a 0AD1     		bne	.L194
3768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
3769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
3770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 3284              		.loc 1 3770 0
 3285 006c 7B68     		ldr	r3, [r7, #4]
 3286 006e 5B6C     		ldr	r3, [r3, #68]
 3287 0070 23F48853 		bic	r3, r3, #4352
 3288 0074 23F00103 		bic	r3, r3, #1
 3289 0078 43F00102 		orr	r2, r3, #1
 3290 007c 7B68     		ldr	r3, [r7, #4]
 3291 007e 5A64     		str	r2, [r3, #68]
3767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 3292              		.loc 1 3767 0
 3293 0080 07E0     		b	.L192
 3294              	.L194:
 3295 0082 06E0     		b	.L192
 3296              	.L193:
3771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_READY);
3773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
3774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion on ADC group injected group is stopped, but ADC is not    */
3776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* disabled since conversion on ADC group regular is still on going.    */
3777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
3778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
3780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 3297              		.loc 1 3780 0
 3298 0084 7B68     		ldr	r3, [r7, #4]
 3299 0086 5B6C     		ldr	r3, [r3, #68]
ARM GAS  /tmp/ccumkl9n.s 			page 125


 3300 0088 23F48052 		bic	r2, r3, #4096
 3301 008c 7B68     		ldr	r3, [r7, #4]
 3302 008e 5A64     		str	r2, [r3, #68]
 3303 0090 08E0     		b	.L195
 3304              	.L192:
 3305 0092 07E0     		b	.L195
 3306              	.L191:
3781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 3307              		.loc 1 3787 0
 3308 0094 7B68     		ldr	r3, [r7, #4]
 3309 0096 5B6C     		ldr	r3, [r3, #68]
 3310 0098 43F02002 		orr	r2, r3, #32
 3311 009c 7B68     		ldr	r3, [r7, #4]
 3312 009e 5A64     		str	r2, [r3, #68]
3788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3313              		.loc 1 3789 0
 3314 00a0 0123     		movs	r3, #1
 3315 00a2 FB73     		strb	r3, [r7, #15]
 3316              	.L195:
3790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3317              		.loc 1 3793 0
 3318 00a4 7B68     		ldr	r3, [r7, #4]
 3319 00a6 0022     		movs	r2, #0
 3320 00a8 83F84020 		strb	r2, [r3, #64]
3794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 3321              		.loc 1 3796 0
 3322 00ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3323              	.L190:
3797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3324              		.loc 1 3797 0
 3325 00ae 1846     		mov	r0, r3
 3326 00b0 1037     		adds	r7, r7, #16
 3327              	.LCFI86:
 3328              		.cfi_def_cfa_offset 8
 3329 00b2 BD46     		mov	sp, r7
 3330              	.LCFI87:
 3331              		.cfi_def_cfa_register 13
 3332              		@ sp needed
 3333 00b4 80BD     		pop	{r7, pc}
 3334              		.cfi_endproc
 3335              	.LFE139:
 3337              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 3338              		.align	2
 3339              		.global	HAL_ADCEx_InjectedPollForConversion
 3340              		.thumb
ARM GAS  /tmp/ccumkl9n.s 			page 126


 3341              		.thumb_func
 3343              	HAL_ADCEx_InjectedPollForConversion:
 3344              	.LFB140:
3798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
3802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
3806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         no regular conversion is on going.
3807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
3808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
3809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
3810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
3811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
3813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef* hadc)
3815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
3822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
3823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
3825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
3826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
3827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
3828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   are common)                                                            */
3829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
3830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
3831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
3832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
3834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
3835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
3836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
3838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
3839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
3841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
3842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
3843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
3844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
3849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
3851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
ARM GAS  /tmp/ccumkl9n.s 			page 127


3852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
3855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
3856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
3858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
3859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
3860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
3861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
3863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
3864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
3865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
3866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
3868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
3870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
3873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 3345              		.loc 1 3873 0
 3346              		.cfi_startproc
 3347              		@ args = 0, pretend = 0, frame = 24
 3348              		@ frame_needed = 1, uses_anonymous_args = 0
 3349 0000 80B5     		push	{r7, lr}
 3350              	.LCFI88:
 3351              		.cfi_def_cfa_offset 8
 3352              		.cfi_offset 7, -8
 3353              		.cfi_offset 14, -4
 3354 0002 86B0     		sub	sp, sp, #24
 3355              	.LCFI89:
 3356              		.cfi_def_cfa_offset 32
 3357 0004 00AF     		add	r7, sp, #0
 3358              	.LCFI90:
 3359              		.cfi_def_cfa_register 7
 3360 0006 7860     		str	r0, [r7, #4]
 3361 0008 3960     		str	r1, [r7]
3874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
3875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_Flag_EOC;
3876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_cfgr = 0x00000000U;
 3362              		.loc 1 3876 0
 3363 000a 0023     		movs	r3, #0
 3364 000c 3B61     		str	r3, [r7, #16]
3877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of sequence */
3882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 3365              		.loc 1 3882 0
 3366 000e 7B68     		ldr	r3, [r7, #4]
 3367 0010 5B69     		ldr	r3, [r3, #20]
 3368 0012 082B     		cmp	r3, #8
 3369 0014 02D1     		bne	.L197
3883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/ccumkl9n.s 			page 128


3884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = ADC_FLAG_JEOS;
 3370              		.loc 1 3884 0
 3371 0016 4023     		movs	r3, #64
 3372 0018 7B61     		str	r3, [r7, #20]
 3373 001a 01E0     		b	.L206
 3374              	.L197:
3885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If end of conversion selected to end of each conversion */
3887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* ADC_EOC_SINGLE_CONV */
3888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_Flag_EOC = (ADC_FLAG_JEOC | ADC_FLAG_JEOS);
 3375              		.loc 1 3889 0
 3376 001c 6023     		movs	r3, #96
 3377 001e 7B61     		str	r3, [r7, #20]
 3378              	.L206:
3890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave      */
3893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode             */
3894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* available).                                                            */
3895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
3896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR); 
 3379              		.loc 1 3897 0
 3380 0020 7B68     		ldr	r3, [r7, #4]
 3381 0022 1B68     		ldr	r3, [r3]
 3382 0024 DB68     		ldr	r3, [r3, #12]
 3383 0026 3B61     		str	r3, [r7, #16]
3898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
3900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(ADC_MASTER_INSTANCE(hadc)->CFGR);
3902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
3905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
 3384              		.loc 1 3905 0
 3385 0028 FFF7FEFF 		bl	HAL_GetTick
 3386 002c F860     		str	r0, [r7, #12]
3906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
3907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Wait until End of Conversion flag is raised */
3908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   while(HAL_IS_BIT_CLR(hadc->Instance->ISR, tmp_Flag_EOC))
 3387              		.loc 1 3908 0
 3388 002e 1AE0     		b	.L199
 3389              	.L202:
3909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
3911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(Timeout != HAL_MAX_DELAY)
 3390              		.loc 1 3911 0
 3391 0030 3B68     		ldr	r3, [r7]
 3392 0032 B3F1FF3F 		cmp	r3, #-1
 3393 0036 16D0     		beq	.L199
3912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 3394              		.loc 1 3913 0
 3395 0038 3B68     		ldr	r3, [r7]
 3396 003a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccumkl9n.s 			page 129


 3397 003c 07D0     		beq	.L200
 3398              		.loc 1 3913 0 is_stmt 0 discriminator 1
 3399 003e FFF7FEFF 		bl	HAL_GetTick
 3400 0042 0246     		mov	r2, r0
 3401 0044 FB68     		ldr	r3, [r7, #12]
 3402 0046 D21A     		subs	r2, r2, r3
 3403 0048 3B68     		ldr	r3, [r7]
 3404 004a 9A42     		cmp	r2, r3
 3405 004c 0BD9     		bls	.L199
 3406              	.L200:
3914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
3915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to timeout */
3916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 3407              		.loc 1 3916 0 is_stmt 1
 3408 004e 7B68     		ldr	r3, [r7, #4]
 3409 0050 5B6C     		ldr	r3, [r3, #68]
 3410 0052 43F00402 		orr	r2, r3, #4
 3411 0056 7B68     		ldr	r3, [r7, #4]
 3412 0058 5A64     		str	r2, [r3, #68]
3917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
3919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 3413              		.loc 1 3919 0
 3414 005a 7B68     		ldr	r3, [r7, #4]
 3415 005c 0022     		movs	r2, #0
 3416 005e 83F84020 		strb	r2, [r3, #64]
3920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
3921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_TIMEOUT;
 3417              		.loc 1 3921 0
 3418 0062 0323     		movs	r3, #3
 3419 0064 40E0     		b	.L201
 3420              	.L199:
3908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
 3421              		.loc 1 3908 0
 3422 0066 7B68     		ldr	r3, [r7, #4]
 3423 0068 1B68     		ldr	r3, [r3]
 3424 006a 1A68     		ldr	r2, [r3]
 3425 006c 7B69     		ldr	r3, [r7, #20]
 3426 006e 1340     		ands	r3, r3, r2
 3427 0070 002B     		cmp	r3, #0
 3428 0072 DDD0     		beq	.L202
3922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
3923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
3927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 3429              		.loc 1 3927 0
 3430 0074 7B68     		ldr	r3, [r7, #4]
 3431 0076 5B6C     		ldr	r3, [r3, #68]
 3432 0078 43F40052 		orr	r2, r3, #8192
 3433 007c 7B68     		ldr	r3, [r7, #4]
 3434 007e 5A64     		str	r2, [r3, #68]
3928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
3930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
3931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* from group regular.                                                      */
ARM GAS  /tmp/ccumkl9n.s 			page 130


3932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                   ||
 3435              		.loc 1 3932 0
 3436 0080 7B68     		ldr	r3, [r7, #4]
 3437 0082 1B68     		ldr	r3, [r3]
 3438 0084 DB6C     		ldr	r3, [r3, #76]
 3439 0086 03F0C003 		and	r3, r3, #192
 3440 008a 002B     		cmp	r3, #0
 3441 008c 10D0     		beq	.L203
3933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 3442              		.loc 1 3933 0 discriminator 1
 3443 008e 3B69     		ldr	r3, [r7, #16]
 3444 0090 03F00073 		and	r3, r3, #33554432
3932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 3445              		.loc 1 3932 0 discriminator 1
 3446 0094 002B     		cmp	r3, #0
 3447 0096 1DD1     		bne	.L204
3934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 3448              		.loc 1 3934 0
 3449 0098 7B68     		ldr	r3, [r7, #4]
 3450 009a 1B68     		ldr	r3, [r3]
 3451 009c DB68     		ldr	r3, [r3, #12]
 3452 009e 03F44063 		and	r3, r3, #3072
3933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((READ_BIT (tmp_cfgr, ADC_CFGR_JAUTO) == RESET)    &&
 3453              		.loc 1 3933 0
 3454 00a2 002B     		cmp	r3, #0
 3455 00a4 16D1     		bne	.L204
3935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (READ_BIT (tmp_cfgr, ADC_CFGR_CONT) == RESET)   )   )   )
 3456              		.loc 1 3935 0
 3457 00a6 3B69     		ldr	r3, [r7, #16]
 3458 00a8 03F40053 		and	r3, r3, #8192
3934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (ADC_IS_SOFTWARE_START_REGULAR(hadc)          &&
 3459              		.loc 1 3934 0
 3460 00ac 002B     		cmp	r3, #0
 3461 00ae 11D1     		bne	.L204
 3462              	.L203:
3936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
3938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 3463              		.loc 1 3938 0
 3464 00b0 7B68     		ldr	r3, [r7, #4]
 3465 00b2 5B6C     		ldr	r3, [r3, #68]
 3466 00b4 23F48052 		bic	r2, r3, #4096
 3467 00b8 7B68     		ldr	r3, [r7, #4]
 3468 00ba 5A64     		str	r2, [r3, #68]
3939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
3940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 3469              		.loc 1 3940 0
 3470 00bc 7B68     		ldr	r3, [r7, #4]
 3471 00be 5B6C     		ldr	r3, [r3, #68]
 3472 00c0 03F48073 		and	r3, r3, #256
 3473 00c4 002B     		cmp	r3, #0
 3474 00c6 05D1     		bne	.L204
3941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
3942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 3475              		.loc 1 3942 0
 3476 00c8 7B68     		ldr	r3, [r7, #4]
 3477 00ca 5B6C     		ldr	r3, [r3, #68]
ARM GAS  /tmp/ccumkl9n.s 			page 131


 3478 00cc 43F00102 		orr	r2, r3, #1
 3479 00d0 7B68     		ldr	r3, [r7, #4]
 3480 00d2 5A64     		str	r2, [r3, #68]
 3481              	.L204:
3943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
3944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear end of conversion flag of injected group if low power feature      */
3947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* "Auto Wait" is disabled, to not interfere with this feature until data   */
3948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* register is read using function HAL_ADC_GetValue().                      */
3949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (READ_BIT (tmp_cfgr, ADC_CFGR_AUTDLY) == RESET)
 3482              		.loc 1 3949 0
 3483 00d4 3B69     		ldr	r3, [r7, #16]
 3484 00d6 03F48043 		and	r3, r3, #16384
 3485 00da 002B     		cmp	r3, #0
 3486 00dc 03D1     		bne	.L205
3950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
3951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
3952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (JEOC or JEOS depending on HAL ADC initialization parameter) */
3953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, tmp_Flag_EOC);
 3487              		.loc 1 3953 0
 3488 00de 7B68     		ldr	r3, [r7, #4]
 3489 00e0 1B68     		ldr	r3, [r3]
 3490 00e2 7A69     		ldr	r2, [r7, #20]
 3491 00e4 1A60     		str	r2, [r3]
 3492              	.L205:
3954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
3955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
3957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 3493              		.loc 1 3957 0
 3494 00e6 0023     		movs	r3, #0
 3495              	.L201:
3958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3496              		.loc 1 3958 0
 3497 00e8 1846     		mov	r0, r3
 3498 00ea 1837     		adds	r7, r7, #24
 3499              	.LCFI91:
 3500              		.cfi_def_cfa_offset 8
 3501 00ec BD46     		mov	sp, r7
 3502              	.LCFI92:
 3503              		.cfi_def_cfa_register 13
 3504              		@ sp needed
 3505 00ee 80BD     		pop	{r7, pc}
 3506              		.cfi_endproc
 3507              	.LFE140:
 3509              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 3510              		.align	2
 3511              		.global	HAL_ADCEx_InjectedStart_IT
 3512              		.thumb
 3513              		.thumb_func
 3515              	HAL_ADCEx_InjectedStart_IT:
 3516              	.LFB141:
3959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
3960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
3961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
3962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
ARM GAS  /tmp/ccumkl9n.s 			page 132


3963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
3965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
3966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
3967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
3968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Timeout: Timeout value in millisecond.
3969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
3970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
3971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
3972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
3973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
3974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
3975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Variables for polling in case of scan mode enabled */
3976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles_max =0U;
3977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles =0U;
3978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
3979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
3980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
3982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get tick count */
3983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();  
3984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
3985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Polling for end of conversion: differentiation if single/sequence        */
3986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion.                                                              */
3987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For injected group, flag JEOC is set only at the end of the sequence,    */
3988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* not for each conversion within the sequence.                             */
3989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If single conversion for injected group (scan mode disabled or        */
3990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion ==1U), flag JEOC is used to determine the      */
3991:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    conversion completion.                                                */
3992:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - If sequence conversion for injected group (scan mode enabled and      */
3993:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    InjectedNbrOfConversion >=2U), flag JEOC is set only at the end of the */
3994:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    sequence.                                                             */
3995:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    To poll for each conversion, the maximum conversion time is computed  */
3996:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    from ADC conversion time (selected sampling time + conversion time of */
3997:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    12.5 ADC clock cycles) and APB2/ADC clock prescalers (depending on    */
3998:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    settings, conversion time range can be from 28 to 32256 CPU cycles).  */
3999:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    As flag JEOC is not set after each conversion, no timeout status can  */
4000:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    be set.                                                               */
4001:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((hadc->Instance->JSQR & ADC_JSQR_JL) == RESET)
4002:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4003:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait until End of Conversion flag is raised */
4004:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_CLR(hadc->Instance->SR, ADC_FLAG_JEOC))
4005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4006:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
4007:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
4008:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4009:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
4010:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4011:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
4012:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
4013:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4014:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
4015:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
4016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4017:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
4018:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4019:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
ARM GAS  /tmp/ccumkl9n.s 			page 133


4020:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4021:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4022:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4023:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4024:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Replace polling by wait for maximum conversion time */
4025:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Calculation of CPU cycles corresponding to ADC conversion cycles.      */
4026:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Retrieve ADC clock prescaler and ADC maximum conversion cycles on all  */
4027:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* channels.                                                              */
4028:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max = ADC_CLOCK_PRESCALER_RANGE();
4029:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     Conversion_Timeout_CPU_cycles_max *= ADC_CONVCYCLES_MAX_RANGE(hadc);
4030:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4031:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Poll with maximum conversion time */
4032:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(Conversion_Timeout_CPU_cycles < Conversion_Timeout_CPU_cycles_max)
4033:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4034:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if timeout is disabled (set to infinite wait) */
4035:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(Timeout != HAL_MAX_DELAY)
4036:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4037:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
4038:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4039:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
4040:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
4041:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4042:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Process unlocked */
4043:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
4044:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4045:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
4046:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4047:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4048:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       Conversion_Timeout_CPU_cycles ++;
4049:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4050:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4051:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4052:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4053:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Clear injected group conversion flag (and regular conversion flag raised simultaneously) */
4054:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JSTRT | ADC_FLAG_JEOC | ADC_FLAG_EOC);
4055:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4056:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update ADC state machine */
4057:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
4058:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4059:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
4060:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
4061:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* from group regular.                                                      */
4062:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                     || 
4063:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&     
4064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (ADC_IS_SOFTWARE_START_REGULAR(hadc)        &&
4065:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (hadc->Init.ContinuousConvMode == DISABLE)   )        )   )
4066:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4067:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
4068:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
4069:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4070:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
4071:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4072:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_READY);
4073:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4074:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4075:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4076:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC state */
ARM GAS  /tmp/ccumkl9n.s 			page 134


4077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
4078:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4079:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4080:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4081:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4082:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4083:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4084:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4086:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
4087:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4088:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group) or JEOS (end of 
4089:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of injected group) depending on ADC initialization 
4090:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            parameter "EOCSelection"
4091:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4092:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
4093:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC slave first, then ADC master. 
4094:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).  
4095:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
4096:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4097:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4098:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4099:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
4100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 3517              		.loc 1 4100 0
 3518              		.cfi_startproc
 3519              		@ args = 0, pretend = 0, frame = 16
 3520              		@ frame_needed = 1, uses_anonymous_args = 0
 3521 0000 80B5     		push	{r7, lr}
 3522              	.LCFI93:
 3523              		.cfi_def_cfa_offset 8
 3524              		.cfi_offset 7, -8
 3525              		.cfi_offset 14, -4
 3526 0002 84B0     		sub	sp, sp, #16
 3527              	.LCFI94:
 3528              		.cfi_def_cfa_offset 24
 3529 0004 00AF     		add	r7, sp, #0
 3530              	.LCFI95:
 3531              		.cfi_def_cfa_register 7
 3532 0006 7860     		str	r0, [r7, #4]
4101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3533              		.loc 1 4101 0
 3534 0008 0023     		movs	r3, #0
 3535 000a FB73     		strb	r3, [r7, #15]
4102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
4107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
 3536              		.loc 1 4107 0
 3537 000c 7B68     		ldr	r3, [r7, #4]
 3538 000e 1B68     		ldr	r3, [r3]
 3539 0010 9B68     		ldr	r3, [r3, #8]
 3540 0012 03F00803 		and	r3, r3, #8
 3541 0016 002B     		cmp	r3, #0
 3542 0018 75D1     		bne	.L208
ARM GAS  /tmp/ccumkl9n.s 			page 135


4108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process locked */
4110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 3543              		.loc 1 4110 0
 3544 001a 7B68     		ldr	r3, [r7, #4]
 3545 001c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 3546 0020 012B     		cmp	r3, #1
 3547 0022 01D1     		bne	.L209
 3548              		.loc 1 4110 0 is_stmt 0 discriminator 1
 3549 0024 0223     		movs	r3, #2
 3550 0026 71E0     		b	.L210
 3551              	.L209:
 3552              		.loc 1 4110 0 discriminator 2
 3553 0028 7B68     		ldr	r3, [r7, #4]
 3554 002a 0122     		movs	r2, #1
 3555 002c 83F84020 		strb	r2, [r3, #64]
4111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
4113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 3556              		.loc 1 4113 0 is_stmt 1 discriminator 2
 3557 0030 7868     		ldr	r0, [r7, #4]
 3558 0032 FFF7FEFF 		bl	ADC_Enable
 3559 0036 0346     		mov	r3, r0
 3560 0038 FB73     		strb	r3, [r7, #15]
4114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
4116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start conversion if ADC is effectively enabled */
4117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 3561              		.loc 1 4117 0 discriminator 2
 3562 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3563 003c 002B     		cmp	r3, #0
 3564 003e 5DD1     		bne	.L211
4118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
4120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
4121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
4122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 3565              		.loc 1 4122 0
 3566 0040 7B68     		ldr	r3, [r7, #4]
 3567 0042 5B6C     		ldr	r3, [r3, #68]
 3568 0044 23F44053 		bic	r3, r3, #12288
 3569 0048 23F00103 		bic	r3, r3, #1
 3570 004c 43F48052 		orr	r2, r3, #4096
 3571 0050 7B68     		ldr	r3, [r7, #4]
 3572 0052 5A64     		str	r2, [r3, #68]
4123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
4124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
4125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of independent mode or multimode(for devices with several ADCs):*/
4127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set multimode state.                                                 */
4128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (ADC_NONMULTIMODE_OR_MULTIMODEMASTER(hadc))
4129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 3573              		.loc 1 4130 0
 3574 0054 7B68     		ldr	r3, [r7, #4]
 3575 0056 5B6C     		ldr	r3, [r3, #68]
 3576 0058 23F48012 		bic	r2, r3, #1048576
ARM GAS  /tmp/ccumkl9n.s 			page 136


 3577 005c 7B68     		ldr	r3, [r7, #4]
 3578 005e 5A64     		str	r2, [r3, #68]
4131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
4133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
4135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
4138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: On this device, there is no ADC error code fields related to   */
4139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       conversions on group injected only. In case of conversion on   */
4140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       going on group regular, no error code is reset.                */
4141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 3579              		.loc 1 4141 0
 3580 0060 7B68     		ldr	r3, [r7, #4]
 3581 0062 5B6C     		ldr	r3, [r3, #68]
 3582 0064 03F48073 		and	r3, r3, #256
 3583 0068 002B     		cmp	r3, #0
 3584 006a 02D1     		bne	.L212
4142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Reset ADC all error code fields */
4144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 3585              		.loc 1 4144 0
 3586 006c 7B68     		ldr	r3, [r7, #4]
 3587 006e 0022     		movs	r2, #0
 3588 0070 9A64     		str	r2, [r3, #72]
 3589              	.L212:
4145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
4149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
4150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 3590              		.loc 1 4150 0
 3591 0072 7B68     		ldr	r3, [r7, #4]
 3592 0074 0022     		movs	r2, #0
 3593 0076 83F84020 		strb	r2, [r3, #64]
4151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear injected group conversion flag */
4153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC           */
4154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* operations)                                                          */
4155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 3594              		.loc 1 4155 0
 3595 007a 7B68     		ldr	r3, [r7, #4]
 3596 007c 1B68     		ldr	r3, [r3]
 3597 007e 6022     		movs	r2, #96
 3598 0080 1A60     		str	r2, [r3]
4156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature */
4158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* is enabled.                                                          */
4159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != RESET)
 3599              		.loc 1 4159 0
 3600 0082 7B68     		ldr	r3, [r7, #4]
 3601 0084 1B68     		ldr	r3, [r3]
 3602 0086 DB68     		ldr	r3, [r3, #12]
 3603 0088 03F40013 		and	r3, r3, #2097152
 3604 008c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccumkl9n.s 			page 137


 3605 008e 07D0     		beq	.L213
4160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 3606              		.loc 1 4161 0
 3607 0090 7B68     		ldr	r3, [r7, #4]
 3608 0092 1B68     		ldr	r3, [r3]
 3609 0094 7A68     		ldr	r2, [r7, #4]
 3610 0096 1268     		ldr	r2, [r2]
 3611 0098 5268     		ldr	r2, [r2, #4]
 3612 009a 42F48062 		orr	r2, r2, #1024
 3613 009e 5A60     		str	r2, [r3, #4]
 3614              	.L213:
4162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
4165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       switch(hadc->Init.EOCSelection)
 3615              		.loc 1 4165 0
 3616 00a0 7B68     		ldr	r3, [r7, #4]
 3617 00a2 5B69     		ldr	r3, [r3, #20]
 3618 00a4 082B     		cmp	r3, #8
 3619 00a6 10D1     		bne	.L220
4166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV: 
4168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 3620              		.loc 1 4168 0
 3621 00a8 7B68     		ldr	r3, [r7, #4]
 3622 00aa 1B68     		ldr	r3, [r3]
 3623 00ac 7A68     		ldr	r2, [r7, #4]
 3624 00ae 1268     		ldr	r2, [r2]
 3625 00b0 5268     		ldr	r2, [r2, #4]
 3626 00b2 22F02002 		bic	r2, r2, #32
 3627 00b6 5A60     		str	r2, [r3, #4]
4169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 3628              		.loc 1 4169 0
 3629 00b8 7B68     		ldr	r3, [r7, #4]
 3630 00ba 1B68     		ldr	r3, [r3]
 3631 00bc 7A68     		ldr	r2, [r7, #4]
 3632 00be 1268     		ldr	r2, [r2]
 3633 00c0 5268     		ldr	r2, [r2, #4]
 3634 00c2 42F04002 		orr	r2, r2, #64
 3635 00c6 5A60     		str	r2, [r3, #4]
4170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
 3636              		.loc 1 4170 0
 3637 00c8 08E0     		b	.L216
 3638              	.L220:
4171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
4172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         default:
4173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
 3639              		.loc 1 4173 0
 3640 00ca 7B68     		ldr	r3, [r7, #4]
 3641 00cc 1B68     		ldr	r3, [r3]
 3642 00ce 7A68     		ldr	r2, [r7, #4]
 3643 00d0 1268     		ldr	r2, [r2]
 3644 00d2 5268     		ldr	r2, [r2, #4]
 3645 00d4 42F06002 		orr	r2, r2, #96
 3646 00d8 5A60     		str	r2, [r3, #4]
4174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           break;
ARM GAS  /tmp/ccumkl9n.s 			page 138


 3647              		.loc 1 4174 0
 3648 00da 00BF     		nop
 3649              	.L216:
4175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected           */
4178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* conversion is disabled.                                              */
4179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
4180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
4181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
4182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Case of multimode enabled (for devices with several ADCs):           */
4183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is slave, ADC is enabled only (conversion is not started). */
4184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
4185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO) && 
 3650              		.loc 1 4185 0
 3651 00dc 7B68     		ldr	r3, [r7, #4]
 3652 00de 1B68     		ldr	r3, [r3]
 3653 00e0 DB68     		ldr	r3, [r3, #12]
 3654 00e2 03F00073 		and	r3, r3, #33554432
 3655 00e6 002B     		cmp	r3, #0
 3656 00e8 0FD1     		bne	.L219
4186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_NONMULTIMODE_INJ_OR_MULTIMODEMASTER(hadc)          )
4187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR, ADC_CR_JADSTART);
 3657              		.loc 1 4188 0
 3658 00ea 7B68     		ldr	r3, [r7, #4]
 3659 00ec 1B68     		ldr	r3, [r3]
 3660 00ee 7A68     		ldr	r2, [r7, #4]
 3661 00f0 1268     		ldr	r2, [r2]
 3662 00f2 9268     		ldr	r2, [r2, #8]
 3663 00f4 42F00802 		orr	r2, r2, #8
 3664 00f8 9A60     		str	r2, [r3, #8]
 3665 00fa 06E0     		b	.L219
 3666              	.L211:
4189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 3667              		.loc 1 4194 0
 3668 00fc 7B68     		ldr	r3, [r7, #4]
 3669 00fe 0022     		movs	r2, #0
 3670 0100 83F84020 		strb	r2, [r3, #64]
 3671 0104 01E0     		b	.L219
 3672              	.L208:
4195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
 3673              		.loc 1 4199 0
 3674 0106 0223     		movs	r3, #2
 3675 0108 FB73     		strb	r3, [r7, #15]
 3676              	.L219:
4200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccumkl9n.s 			page 139


4202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 3677              		.loc 1 4203 0
 3678 010a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3679              	.L210:
4204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3680              		.loc 1 4204 0
 3681 010c 1846     		mov	r0, r3
 3682 010e 1037     		adds	r7, r7, #16
 3683              	.LCFI96:
 3684              		.cfi_def_cfa_offset 8
 3685 0110 BD46     		mov	sp, r7
 3686              	.LCFI97:
 3687              		.cfi_def_cfa_register 13
 3688              		@ sp needed
 3689 0112 80BD     		pop	{r7, pc}
 3690              		.cfi_endproc
 3691              	.LFE141:
 3693              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 3694              		.align	2
 3695              		.global	HAL_ADCEx_InjectedStop_IT
 3696              		.thumb
 3697              		.thumb_func
 3699              	HAL_ADCEx_InjectedStop_IT:
 3700              	.LFB142:
4205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
4209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enables ADC, starts conversion of injected group with interruption.
4213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group)
4215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef* hadc)
4220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Enable the ADC peripheral */
4230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Enable(hadc);
4231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Start conversion if ADC is effectively enabled */
4233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
4234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state                                                          */
4236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Clear state bitfield related to injected group conversion results    */
ARM GAS  /tmp/ccumkl9n.s 			page 140


4237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set state bitfield related to injected operation                     */
4238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
4239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
4240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                       HAL_ADC_STATE_INJ_BUSY);
4241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if a regular conversion is ongoing */
4243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On this device, there is no ADC error code fields related to     */
4244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       conversions on group injected only. In case of conversion on     */
4245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       going on group regular, no error code is reset.                  */
4246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
4247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Reset ADC all error code fields */
4249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
4250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Process unlocked */
4253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Unlock before starting ADC conversions: in case of potential           */
4254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* interruption, to let the process to ADC IRQ Handler.                   */
4255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
4256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC error code to none */
4258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(hadc);
4259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Clear injected group conversion flag */
4261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (To ensure of no unknown state from potential previous ADC operations) */
4262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
4263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable end of conversion interrupt for injected channels */
4265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
4266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable conversion of injected group.                                   */
4268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If software start has been selected, conversion starts immediately.    */
4269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
4270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
4271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If external trigger has been selected, conversion will start at next   */
4272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* trigger event.                                                         */
4273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If automatic injected conversion is enabled, conversion will start     */
4274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* after next regular group conversion.                                   */
4275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_IS_SOFTWARE_START_INJECTED(hadc)              && 
4276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)  )
4277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with SW start */
4279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, (ADC_CR2_JSWSTART | ADC_CR2_JEXTTRIG));
4280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start ADC conversion on injected group with external trigger */
4284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_JEXTTRIG);
4285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
ARM GAS  /tmp/ccumkl9n.s 			page 141


4294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group injected conversion (potential conversion on going
4299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group regular is not impacted), disable ADC peripheral
4300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group regular.
4301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - JEOC (end of conversion of injected group) and JEOS (end of 
4303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of injected group)
4304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
4308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
4309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
4310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
4311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function must be called for ADC master first, then ADC slave.
4312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled. 
4313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
4314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
4315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop must be used.
4316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
4320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
 3701              		.loc 1 4320 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 16
 3704              		@ frame_needed = 1, uses_anonymous_args = 0
 3705 0000 80B5     		push	{r7, lr}
 3706              	.LCFI98:
 3707              		.cfi_def_cfa_offset 8
 3708              		.cfi_offset 7, -8
 3709              		.cfi_offset 14, -4
 3710 0002 84B0     		sub	sp, sp, #16
 3711              	.LCFI99:
 3712              		.cfi_def_cfa_offset 24
 3713 0004 00AF     		add	r7, sp, #0
 3714              	.LCFI100:
 3715              		.cfi_def_cfa_register 7
 3716 0006 7860     		str	r0, [r7, #4]
4321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3717              		.loc 1 4321 0
 3718 0008 0023     		movs	r3, #0
 3719 000a FB73     		strb	r3, [r7, #15]
4322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3720              		.loc 1 4327 0
 3721 000c 7B68     		ldr	r3, [r7, #4]
 3722 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 3723 0012 012B     		cmp	r3, #1
ARM GAS  /tmp/ccumkl9n.s 			page 142


 3724 0014 01D1     		bne	.L222
 3725              		.loc 1 4327 0 is_stmt 0 discriminator 1
 3726 0016 0223     		movs	r3, #2
 3727 0018 51E0     		b	.L223
 3728              	.L222:
 3729              		.loc 1 4327 0 discriminator 2
 3730 001a 7B68     		ldr	r3, [r7, #4]
 3731 001c 0122     		movs	r2, #1
 3732 001e 83F84020 		strb	r2, [r3, #64]
4328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */
4332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC injected group conversion stop:                                */
4333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
4334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group regular) can continue (groups regular and injected              */
4335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group regular) must be intended to   */
4338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
4339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(HAL_IS_BIT_CLR(hadc->Instance->CFGR, ADC_CFGR_JAUTO))
 3733              		.loc 1 4340 0 is_stmt 1 discriminator 2
 3734 0022 7B68     		ldr	r3, [r7, #4]
 3735 0024 1B68     		ldr	r3, [r3]
 3736 0026 DB68     		ldr	r3, [r3, #12]
 3737 0028 03F00073 		and	r3, r3, #33554432
 3738 002c 002B     		cmp	r3, #0
 3739 002e 39D1     		bne	.L224
4341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Stop potential conversion on going on injected group only. */
4343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 3740              		.loc 1 4343 0
 3741 0030 7868     		ldr	r0, [r7, #4]
 3742 0032 6021     		movs	r1, #96
 3743 0034 FFF7FEFF 		bl	ADC_ConversionStop
 3744 0038 0346     		mov	r3, r0
 3745 003a FB73     		strb	r3, [r7, #15]
4344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral if conversion on ADC group injected is          */
4346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped and if no conversion on the other group            */
4347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (ADC group regular) is intended to continue.                           */
4348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 3746              		.loc 1 4348 0
 3747 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3748 003e 002B     		cmp	r3, #0
 3749 0040 38D1     		bne	.L228
4349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
4351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_IT_JQOVF));
 3750              		.loc 1 4351 0
 3751 0042 7B68     		ldr	r3, [r7, #4]
 3752 0044 1B68     		ldr	r3, [r3]
 3753 0046 7A68     		ldr	r2, [r7, #4]
 3754 0048 1268     		ldr	r2, [r2]
 3755 004a 5268     		ldr	r2, [r2, #4]
 3756 004c 22F48C62 		bic	r2, r2, #1120
ARM GAS  /tmp/ccumkl9n.s 			page 143


 3757 0050 5A60     		str	r2, [r3, #4]
4352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) &&
 3758              		.loc 1 4353 0
 3759 0052 7B68     		ldr	r3, [r7, #4]
 3760 0054 1B68     		ldr	r3, [r3]
 3761 0056 9B68     		ldr	r3, [r3, #8]
 3762 0058 03F00403 		and	r3, r3, #4
 3763 005c 002B     		cmp	r3, #0
 3764 005e 19D1     		bne	.L226
4354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3765              		.loc 1 4354 0 discriminator 1
 3766 0060 7B68     		ldr	r3, [r7, #4]
 3767 0062 5B6C     		ldr	r3, [r3, #68]
 3768 0064 03F48073 		and	r3, r3, #256
4353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          ((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)    )
 3769              		.loc 1 4353 0 discriminator 1
 3770 0068 002B     		cmp	r3, #0
 3771 006a 13D1     		bne	.L226
4355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* 2. Disable the ADC peripheral */
4357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
 3772              		.loc 1 4357 0
 3773 006c 7868     		ldr	r0, [r7, #4]
 3774 006e FFF7FEFF 		bl	ADC_Disable
 3775 0072 0346     		mov	r3, r0
 3776 0074 FB73     		strb	r3, [r7, #15]
4358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Check if ADC is effectively disabled */
4360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
 3777              		.loc 1 4360 0
 3778 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3779 0078 002B     		cmp	r3, #0
 3780 007a 0AD1     		bne	.L227
4361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
4362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC state */
4363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 3781              		.loc 1 4363 0
 3782 007c 7B68     		ldr	r3, [r7, #4]
 3783 007e 5B6C     		ldr	r3, [r3, #68]
 3784 0080 23F48853 		bic	r3, r3, #4352
 3785 0084 23F00103 		bic	r3, r3, #1
 3786 0088 43F00102 		orr	r2, r3, #1
 3787 008c 7B68     		ldr	r3, [r7, #4]
 3788 008e 5A64     		str	r2, [r3, #68]
4360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 3789              		.loc 1 4360 0
 3790 0090 07E0     		b	.L225
 3791              	.L227:
 3792 0092 06E0     		b	.L225
 3793              	.L226:
4364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                             HAL_ADC_STATE_READY);
4366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
4367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Conversion on ADC group injected group is stopped, but ADC is not    */
4369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* disabled since conversion on ADC group regular is still on going.    */
ARM GAS  /tmp/ccumkl9n.s 			page 144


4370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
4371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC state */
4373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 3794              		.loc 1 4373 0
 3795 0094 7B68     		ldr	r3, [r7, #4]
 3796 0096 5B6C     		ldr	r3, [r3, #68]
 3797 0098 23F48052 		bic	r2, r3, #4096
 3798 009c 7B68     		ldr	r3, [r7, #4]
 3799 009e 5A64     		str	r2, [r3, #68]
 3800 00a0 08E0     		b	.L228
 3801              	.L225:
 3802 00a2 07E0     		b	.L228
 3803              	.L224:
4374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
4380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 3804              		.loc 1 4380 0
 3805 00a4 7B68     		ldr	r3, [r7, #4]
 3806 00a6 5B6C     		ldr	r3, [r3, #68]
 3807 00a8 43F02002 		orr	r2, r3, #32
 3808 00ac 7B68     		ldr	r3, [r7, #4]
 3809 00ae 5A64     		str	r2, [r3, #68]
4381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3810              		.loc 1 4382 0
 3811 00b0 0123     		movs	r3, #1
 3812 00b2 FB73     		strb	r3, [r7, #15]
 3813              	.L228:
4383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 3814              		.loc 1 4386 0
 3815 00b4 7B68     		ldr	r3, [r7, #4]
 3816 00b6 0022     		movs	r2, #0
 3817 00b8 83F84020 		strb	r2, [r3, #64]
4387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 3818              		.loc 1 4389 0
 3819 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3820              	.L223:
4390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3821              		.loc 1 4390 0
 3822 00be 1846     		mov	r0, r3
 3823 00c0 1037     		adds	r7, r7, #16
 3824              	.LCFI101:
 3825              		.cfi_def_cfa_offset 8
 3826 00c2 BD46     		mov	sp, r7
 3827              	.LCFI102:
 3828              		.cfi_def_cfa_register 13
 3829              		@ sp needed
ARM GAS  /tmp/ccumkl9n.s 			page 145


 3830 00c4 80BD     		pop	{r7, pc}
 3831              		.cfi_endproc
 3832              	.LFE142:
 3834 00c6 00BF     		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 3835              		.align	2
 3836              		.global	HAL_ADCEx_InjectedGetValue
 3837              		.thumb
 3838              		.thumb_func
 3840              	HAL_ADCEx_InjectedGetValue:
 3841              	.LFB143:
4391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
4395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of 
4399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
4400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is on going.
4401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on 
4402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
4403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
4404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef* hadc)
4408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential conversion and disable ADC peripheral                     */
4418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conditioned to:                                                          */
4419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - No conversion on the other group (regular group) is intended to        */
4420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (injected and regular groups stop conversion and ADC disable  */
4421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   are common)                                                            */
4422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - In case of auto-injection mode, HAL_ADC_Stop must be used.             */ 
4423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(((hadc->State & HAL_ADC_STATE_REG_BUSY) == RESET)  &&
4424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO)   )
4425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going, on regular and injected groups */
4427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC peripheral */
4428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_ConversionStop_Disable(hadc);
4429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
4431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable ADC end of conversion interrupt for injected channels */
4434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
4435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
4437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /tmp/ccumkl9n.s 			page 146


4438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
4440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
4445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
4446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
4448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
4461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
4463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Enables ADC, starts conversion of regular group and transfers result
4464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         through DMA.
4465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Multimode must have been previously configured using 
4466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
4467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
4468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
4469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
4470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
4472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   ADC slave must be preliminarily enabled using single-mode  
4473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Start() function.
4474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
4475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  pData: The destination Buffer address.
4476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  Length: The length of data to be transferred from ADC peripheral to memory.
4477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t L
4480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
4483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
4484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
4488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
4489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
4490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
ARM GAS  /tmp/ccumkl9n.s 			page 147


4495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (check on ADC master only) */
4496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
4497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
4499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
4500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
4501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
4503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
4505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
4506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
4511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
4515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
4516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
4517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmphadcSlave);
4520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Start conversion all ADCs of multimode are effectively enabled */
4523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state (ADC master)                                           */
4526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Clear state bitfield related to regular group conversion results   */
4527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* - Set state bitfield related to regular operation                    */
4528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
4529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
4530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
4531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If conversions on group regular are also triggering group injected,  */
4533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* update ADC state.                                                    */
4534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != RESET)
4535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
4537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
4541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
4542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to none */
4545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
4546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
4549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
4550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          
4551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
ARM GAS  /tmp/ccumkl9n.s 			page 148


4552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
4553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the DMA error callback */
4555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
4556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Pointer to the common control register to which is belonging hadc    */
4558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common */
4559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* control registers)                                                   */
4560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpADC_Common = ADC_COMMON_REGISTER(hadc);
4561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
4564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* start (in case of SW start):                                         */
4565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
4567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
4568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
4569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
4571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
4572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Start the DMA channel */
4574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)pData, Length);
4575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
4576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                  */
4577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.  */
4578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next */
4579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* trigger event.                                                       */
4580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR, ADC_CR_ADSTART);
4581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_BUSY;
4592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
4600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Stop ADC group regular conversion (potential conversion on going
4601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted),
4602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
4603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
4606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
4607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
ARM GAS  /tmp/ccumkl9n.s 			page 149


4609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode
4611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel() ), ADC must be 
4612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
4613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
4614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
4615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel of ADC slave.
4616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
4617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
4618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef* hadc)
4620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
4622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
4623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
4624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
4630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and          */
4632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    injected groups.                                                      */
4633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
4634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
4636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
4637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
4639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
4640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
4641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
4643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
4645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
4646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
4648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
4649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
4651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
4654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
4655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Wait until ADSTP=0 for ADC master and ADC slave */
4657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
4658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(ADC_IS_CONVERSION_ONGOING_REGULAR(hadc)          || 
4660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
4661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
4663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine (ADC master) to error */
4665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /tmp/ccumkl9n.s 			page 150


4666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
4668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
4669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
4671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
4675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
4676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: In case of ADC slave using its own DMA channel (multimode        */
4677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       parameter "DMAAccessMode" set to disabled):                      */
4678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       DMA channel of ADC slave should stopped after this function with */
4679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       function HAL_ADC_Stop_DMA.                                       */
4680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
4681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
4683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
4684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
4686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
4687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
4690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
4691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
4695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
4696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
4697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
4698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if ADC are effectively disabled */
4700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) != HAL_ERROR)          &&
4701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
4702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
4703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
4704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
4705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state (ADC master) */
4706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
4707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
4709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
4710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
4712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC instances anyway */
4714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
4715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
4716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
4717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
4718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
4719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccumkl9n.s 			page 151


4723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
4725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
4728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Returns the last ADC Master&Slave regular conversions results data
4732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in the selected multi mode.
4733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register CDR does not clear flag ADC flag EOC
4734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group regular end of unitary conversion),
4735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         as it is the case for independent mode data register.
4736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
4737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval The converted data value.
4738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef* hadc)
4740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
4742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
4745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Pointer to the common control register to which is belonging hadc        */
4747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common     */
4748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* control registers)                                                       */
4749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmpADC_Common = ADC_COMMON_REGISTER(hadc);
4750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
4752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
4753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx    */
4757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
4764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
4765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
4766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
4767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
4768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
4769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
4770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag JEOC.
4771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
4772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
4773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
4774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
4775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
4776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
4777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
4778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
4779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
ARM GAS  /tmp/ccumkl9n.s 			page 152


4780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
4781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  InjectedRank: the converted ADC injected rank.
4783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
4784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
4785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
4786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
4787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
4788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
4789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
4791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 3842              		.loc 1 4791 0
 3843              		.cfi_startproc
 3844              		@ args = 0, pretend = 0, frame = 16
 3845              		@ frame_needed = 1, uses_anonymous_args = 0
 3846              		@ link register save eliminated.
 3847 0000 80B4     		push	{r7}
 3848              	.LCFI103:
 3849              		.cfi_def_cfa_offset 4
 3850              		.cfi_offset 7, -4
 3851 0002 85B0     		sub	sp, sp, #20
 3852              	.LCFI104:
 3853              		.cfi_def_cfa_offset 24
 3854 0004 00AF     		add	r7, sp, #0
 3855              	.LCFI105:
 3856              		.cfi_def_cfa_register 7
 3857 0006 7860     		str	r0, [r7, #4]
 3858 0008 3960     		str	r1, [r7]
4792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
 3859              		.loc 1 4792 0
 3860 000a 0023     		movs	r3, #0
 3861 000c FB60     		str	r3, [r7, #12]
4793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
4797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: ADC flag JEOC is not cleared here by software because              */
4799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       automatically cleared by hardware when reading register JDRx.      */
4800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
4802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(InjectedRank)
 3862              		.loc 1 4802 0
 3863 000e 3B68     		ldr	r3, [r7]
 3864 0010 032B     		cmp	r3, #3
 3865 0012 0AD0     		beq	.L231
 3866 0014 042B     		cmp	r3, #4
 3867 0016 02D0     		beq	.L232
 3868 0018 022B     		cmp	r3, #2
 3869 001a 0CD0     		beq	.L233
 3870 001c 11E0     		b	.L236
 3871              	.L232:
4803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {  
4804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
4805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
 3872              		.loc 1 4805 0
ARM GAS  /tmp/ccumkl9n.s 			page 153


 3873 001e 7B68     		ldr	r3, [r7, #4]
 3874 0020 1B68     		ldr	r3, [r3]
 3875 0022 D3F88C30 		ldr	r3, [r3, #140]
 3876 0026 FB60     		str	r3, [r7, #12]
4806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 3877              		.loc 1 4806 0
 3878 0028 11E0     		b	.L234
 3879              	.L231:
4807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
4808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
 3880              		.loc 1 4808 0
 3881 002a 7B68     		ldr	r3, [r7, #4]
 3882 002c 1B68     		ldr	r3, [r3]
 3883 002e D3F88830 		ldr	r3, [r3, #136]
 3884 0032 FB60     		str	r3, [r7, #12]
4809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 3885              		.loc 1 4809 0
 3886 0034 0BE0     		b	.L234
 3887              	.L233:
4810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
4811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
 3888              		.loc 1 4811 0
 3889 0036 7B68     		ldr	r3, [r7, #4]
 3890 0038 1B68     		ldr	r3, [r3]
 3891 003a D3F88430 		ldr	r3, [r3, #132]
 3892 003e FB60     		str	r3, [r7, #12]
4812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 3893              		.loc 1 4812 0
 3894 0040 05E0     		b	.L234
 3895              	.L236:
4813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
4814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
4815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 3896              		.loc 1 4815 0
 3897 0042 7B68     		ldr	r3, [r7, #4]
 3898 0044 1B68     		ldr	r3, [r3]
 3899 0046 D3F88030 		ldr	r3, [r3, #128]
 3900 004a FB60     		str	r3, [r7, #12]
4816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 3901              		.loc 1 4816 0
 3902 004c 00BF     		nop
 3903              	.L234:
4817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
4820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_jdr;
 3904              		.loc 1 4820 0
 3905 004e FB68     		ldr	r3, [r7, #12]
4821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 3906              		.loc 1 4821 0
 3907 0050 1846     		mov	r0, r3
 3908 0052 1437     		adds	r7, r7, #20
 3909              	.LCFI106:
 3910              		.cfi_def_cfa_offset 4
 3911 0054 BD46     		mov	sp, r7
 3912              	.LCFI107:
 3913              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccumkl9n.s 			page 154


 3914              		@ sp needed
 3915 0056 5DF8047B 		ldr	r7, [sp], #4
 3916              	.LCFI108:
 3917              		.cfi_restore 7
 3918              		.cfi_def_cfa_offset 0
 3919 005a 7047     		bx	lr
 3920              		.cfi_endproc
 3921              	.LFE143:
 3923              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 3924              		.align	2
 3925              		.global	HAL_ADCEx_RegularStop
 3926              		.thumb
 3927              		.thumb_func
 3929              	HAL_ADCEx_RegularStop:
 3930              	.LFB144:
4822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
4823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
4824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
4825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
4826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
4830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
4831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
4832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS 
4833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
4834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
4835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
4836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            to flag JEOC.
4837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
4838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
4839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
4840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
4841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
4842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
4843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         To clear this flag, either use function: 
4844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
4845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion() 
4846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
4847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  InjectedRank: the converted ADC injected rank.
4849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
4850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_1: Injected Channel1 selected
4851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_2: Injected Channel2 selected
4852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_3: Injected Channel3 selected
4853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_RANK_4: Injected Channel4 selected
4854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
4855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef* hadc, uint32_t InjectedRank)
4857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
4858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_jdr = 0U;
4859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
4863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccumkl9n.s 			page 155


4864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Get ADC converted value */ 
4865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(InjectedRank)
4866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {  
4867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4: 
4868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
4869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3: 
4871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
4872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2: 
4874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
4875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
4877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
4878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
4879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
4880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return ADC converted value */ 
4883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_jdr;
4884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
4885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
4886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
4888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
4889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
4890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
4891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
4893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), disable ADC peripheral
4894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
4899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
4900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef* hadc)
4905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 3931              		.loc 1 4905 0
 3932              		.cfi_startproc
 3933              		@ args = 0, pretend = 0, frame = 16
 3934              		@ frame_needed = 1, uses_anonymous_args = 0
 3935 0000 80B5     		push	{r7, lr}
 3936              	.LCFI109:
 3937              		.cfi_def_cfa_offset 8
 3938              		.cfi_offset 7, -8
 3939              		.cfi_offset 14, -4
 3940 0002 84B0     		sub	sp, sp, #16
 3941              	.LCFI110:
 3942              		.cfi_def_cfa_offset 24
 3943 0004 00AF     		add	r7, sp, #0
 3944              	.LCFI111:
 3945              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccumkl9n.s 			page 156


 3946 0006 7860     		str	r0, [r7, #4]
4906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3947              		.loc 1 4906 0
 3948 0008 0023     		movs	r3, #0
 3949 000a FB73     		strb	r3, [r7, #15]
4907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 3950              		.loc 1 4912 0
 3951 000c 7B68     		ldr	r3, [r7, #4]
 3952 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 3953 0012 012B     		cmp	r3, #1
 3954 0014 01D1     		bne	.L238
 3955              		.loc 1 4912 0 is_stmt 0 discriminator 1
 3956 0016 0223     		movs	r3, #2
 3957 0018 35E0     		b	.L239
 3958              	.L238:
 3959              		.loc 1 4912 0 discriminator 2
 3960 001a 7B68     		ldr	r3, [r7, #4]
 3961 001c 0122     		movs	r2, #1
 3962 001e 83F84020 		strb	r2, [r3, #64]
4913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
4917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
4918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
4919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
4922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
4923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
4926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 3963              		.loc 1 4926 0 is_stmt 1 discriminator 2
 3964 0022 7868     		ldr	r0, [r7, #4]
 3965 0024 0C21     		movs	r1, #12
 3966 0026 FFF7FEFF 		bl	ADC_ConversionStop
 3967 002a 0346     		mov	r3, r0
 3968 002c FB73     		strb	r3, [r7, #15]
4927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
4929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
4930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
4931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
 3969              		.loc 1 4931 0 discriminator 2
 3970 002e 7B68     		ldr	r3, [r7, #4]
 3971 0030 1B68     		ldr	r3, [r3]
 3972 0032 9B68     		ldr	r3, [r3, #8]
 3973 0034 03F00803 		and	r3, r3, #8
 3974 0038 002B     		cmp	r3, #0
 3975 003a 19D1     		bne	.L240
4932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
ARM GAS  /tmp/ccumkl9n.s 			page 157


 3976              		.loc 1 4932 0 discriminator 1
 3977 003c 7B68     		ldr	r3, [r7, #4]
 3978 003e 5B6C     		ldr	r3, [r3, #68]
 3979 0040 03F48053 		and	r3, r3, #4096
4931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 3980              		.loc 1 4931 0 discriminator 1
 3981 0044 002B     		cmp	r3, #0
 3982 0046 13D1     		bne	.L240
4933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
4935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
 3983              		.loc 1 4935 0
 3984 0048 7868     		ldr	r0, [r7, #4]
 3985 004a FFF7FEFF 		bl	ADC_Disable
 3986 004e 0346     		mov	r3, r0
 3987 0050 FB73     		strb	r3, [r7, #15]
4936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
4937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
4938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 3988              		.loc 1 4938 0
 3989 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3990 0054 002B     		cmp	r3, #0
 3991 0056 0AD1     		bne	.L241
4939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
4940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
4941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 3992              		.loc 1 4941 0
 3993 0058 7B68     		ldr	r3, [r7, #4]
 3994 005a 5B6C     		ldr	r3, [r3, #68]
 3995 005c 23F48853 		bic	r3, r3, #4352
 3996 0060 23F00103 		bic	r3, r3, #1
 3997 0064 43F00102 		orr	r2, r3, #1
 3998 0068 7B68     		ldr	r3, [r7, #4]
 3999 006a 5A64     		str	r2, [r3, #68]
4938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4000              		.loc 1 4938 0
 4001 006c 06E0     		b	.L242
 4002              	.L241:
 4003 006e 05E0     		b	.L242
 4004              	.L240:
4942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
4943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
4944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
4945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
4947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
4948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
4949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
4950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
4951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 4005              		.loc 1 4951 0
 4006 0070 7B68     		ldr	r3, [r7, #4]
 4007 0072 5B6C     		ldr	r3, [r3, #68]
 4008 0074 23F48072 		bic	r2, r3, #256
 4009 0078 7B68     		ldr	r3, [r7, #4]
 4010 007a 5A64     		str	r2, [r3, #68]
 4011              	.L242:
ARM GAS  /tmp/ccumkl9n.s 			page 158


4952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
4953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
4955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 4012              		.loc 1 4955 0
 4013 007c 7B68     		ldr	r3, [r7, #4]
 4014 007e 0022     		movs	r2, #0
 4015 0080 83F84020 		strb	r2, [r3, #64]
4956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
4958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 4016              		.loc 1 4958 0
 4017 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4018              	.L239:
4959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4019              		.loc 1 4959 0
 4020 0086 1846     		mov	r0, r3
 4021 0088 1037     		adds	r7, r7, #16
 4022              	.LCFI112:
 4023              		.cfi_def_cfa_offset 8
 4024 008a BD46     		mov	sp, r7
 4025              	.LCFI113:
 4026              		.cfi_def_cfa_register 13
 4027              		@ sp needed
 4028 008c 80BD     		pop	{r7, pc}
 4029              		.cfi_endproc
 4030              	.LFE144:
 4032 008e 00BF     		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 4033              		.align	2
 4034              		.global	HAL_ADCEx_RegularStop_IT
 4035              		.thumb
 4036              		.thumb_func
 4038              	HAL_ADCEx_RegularStop_IT:
 4039              	.LFB145:
4960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
4961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
4962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
4963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), disable ADC peripheral
4964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
4965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
4966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - EOC (end of conversion of regular group) and EOS (end of 
4967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            sequence of regular group)
4968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
4969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
4970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
4971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
4972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
4973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
4974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
4975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
4976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
4977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
4978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef* hadc)
4979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 4040              		.loc 1 4979 0
 4041              		.cfi_startproc
 4042              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccumkl9n.s 			page 159


 4043              		@ frame_needed = 1, uses_anonymous_args = 0
 4044 0000 80B5     		push	{r7, lr}
 4045              	.LCFI114:
 4046              		.cfi_def_cfa_offset 8
 4047              		.cfi_offset 7, -8
 4048              		.cfi_offset 14, -4
 4049 0002 84B0     		sub	sp, sp, #16
 4050              	.LCFI115:
 4051              		.cfi_def_cfa_offset 24
 4052 0004 00AF     		add	r7, sp, #0
 4053              	.LCFI116:
 4054              		.cfi_def_cfa_register 7
 4055 0006 7860     		str	r0, [r7, #4]
4980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4056              		.loc 1 4980 0
 4057 0008 0023     		movs	r3, #0
 4058 000a FB73     		strb	r3, [r7, #15]
4981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
4983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
4984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
4986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 4059              		.loc 1 4986 0
 4060 000c 7B68     		ldr	r3, [r7, #4]
 4061 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 4062 0012 012B     		cmp	r3, #1
 4063 0014 01D1     		bne	.L244
 4064              		.loc 1 4986 0 is_stmt 0 discriminator 1
 4065 0016 0223     		movs	r3, #2
 4066 0018 3DE0     		b	.L245
 4067              	.L244:
 4068              		.loc 1 4986 0 discriminator 2
 4069 001a 7B68     		ldr	r3, [r7, #4]
 4070 001c 0122     		movs	r2, #1
 4071 001e 83F84020 		strb	r2, [r3, #64]
4987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
4989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
4990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
4991:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
4992:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
4993:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
4994:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
4995:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
4996:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
4997:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
4998:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
4999:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
5000:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 4072              		.loc 1 5000 0 is_stmt 1 discriminator 2
 4073 0022 7868     		ldr	r0, [r7, #4]
 4074 0024 0C21     		movs	r1, #12
 4075 0026 FFF7FEFF 		bl	ADC_ConversionStop
 4076 002a 0346     		mov	r3, r0
 4077 002c FB73     		strb	r3, [r7, #15]
5001:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccumkl9n.s 			page 160


5002:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
5003:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
5004:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
5005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
 4078              		.loc 1 5005 0 discriminator 2
 4079 002e 7B68     		ldr	r3, [r7, #4]
 4080 0030 1B68     		ldr	r3, [r3]
 4081 0032 9B68     		ldr	r3, [r3, #8]
 4082 0034 03F00803 		and	r3, r3, #8
 4083 0038 002B     		cmp	r3, #0
 4084 003a 21D1     		bne	.L246
5006:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4085              		.loc 1 5006 0 discriminator 1
 4086 003c 7B68     		ldr	r3, [r7, #4]
 4087 003e 5B6C     		ldr	r3, [r3, #68]
 4088 0040 03F48053 		and	r3, r3, #4096
5005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4089              		.loc 1 5005 0 discriminator 1
 4090 0044 002B     		cmp	r3, #0
 4091 0046 1BD1     		bne	.L246
5007:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5008:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for regular group */
5009:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5010:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 4092              		.loc 1 5010 0
 4093 0048 7B68     		ldr	r3, [r7, #4]
 4094 004a 1B68     		ldr	r3, [r3]
 4095 004c 7A68     		ldr	r2, [r7, #4]
 4096 004e 1268     		ldr	r2, [r2]
 4097 0050 5268     		ldr	r2, [r2, #4]
 4098 0052 22F01C02 		bic	r2, r2, #28
 4099 0056 5A60     		str	r2, [r3, #4]
5011:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5012:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
5013:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Disable(hadc);
 4100              		.loc 1 5013 0
 4101 0058 7868     		ldr	r0, [r7, #4]
 4102 005a FFF7FEFF 		bl	ADC_Disable
 4103 005e 0346     		mov	r3, r0
 4104 0060 FB73     		strb	r3, [r7, #15]
5014:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5015:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
5016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 4105              		.loc 1 5016 0
 4106 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4107 0064 002B     		cmp	r3, #0
 4108 0066 0AD1     		bne	.L247
5017:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5018:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
5019:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 4109              		.loc 1 5019 0
 4110 0068 7B68     		ldr	r3, [r7, #4]
 4111 006a 5B6C     		ldr	r3, [r3, #68]
 4112 006c 23F48853 		bic	r3, r3, #4352
 4113 0070 23F00103 		bic	r3, r3, #1
 4114 0074 43F00102 		orr	r2, r3, #1
 4115 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 161


 4116 007a 5A64     		str	r2, [r3, #68]
5016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4117              		.loc 1 5016 0
 4118 007c 06E0     		b	.L248
 4119              	.L247:
 4120 007e 05E0     		b	.L248
 4121              	.L246:
5020:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5021:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
5022:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5023:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5024:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5025:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5026:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5027:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5028:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5029:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 4122              		.loc 1 5029 0
 4123 0080 7B68     		ldr	r3, [r7, #4]
 4124 0082 5B6C     		ldr	r3, [r3, #68]
 4125 0084 23F48072 		bic	r2, r3, #256
 4126 0088 7B68     		ldr	r3, [r7, #4]
 4127 008a 5A64     		str	r2, [r3, #68]
 4128              	.L248:
5030:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5031:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5032:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5033:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 4129              		.loc 1 5033 0
 4130 008c 7B68     		ldr	r3, [r7, #4]
 4131 008e 0022     		movs	r2, #0
 4132 0090 83F84020 		strb	r2, [r3, #64]
5034:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5035:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5036:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 4133              		.loc 1 5036 0
 4134 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4135              	.L245:
5037:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4136              		.loc 1 5037 0
 4137 0096 1846     		mov	r0, r3
 4138 0098 1037     		adds	r7, r7, #16
 4139              	.LCFI117:
 4140              		.cfi_def_cfa_offset 8
 4141 009a BD46     		mov	sp, r7
 4142              	.LCFI118:
 4143              		.cfi_def_cfa_register 13
 4144              		@ sp needed
 4145 009c 80BD     		pop	{r7, pc}
 4146              		.cfi_endproc
 4147              	.LFE145:
 4149 009e 00BF     		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 4150              		.align	2
 4151              		.global	HAL_ADCEx_RegularStop_DMA
 4152              		.thumb
 4153              		.thumb_func
 4155              	HAL_ADCEx_RegularStop_DMA:
ARM GAS  /tmp/ccumkl9n.s 			page 162


 4156              	.LFB146:
5038:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5039:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5040:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC group regular conversion (potential conversion on going
5041:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted), 
5042:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
5043:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
5044:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
5045:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
5046:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
5047:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
5048:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
5049:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
5050:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularStop() and @ref HAL_ADCEx_InjectedStop(),
5051:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         use function @ref HAL_ADC_Stop().
5052:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (for devices with several ADCs): This 
5053:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function is for single-ADC mode only. For multimode, use the 
5054:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         dedicated MultimodeStop function.
5055:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5056:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
5057:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5058:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef* hadc)
5059:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 4157              		.loc 1 5059 0
 4158              		.cfi_startproc
 4159              		@ args = 0, pretend = 0, frame = 16
 4160              		@ frame_needed = 1, uses_anonymous_args = 0
 4161 0000 80B5     		push	{r7, lr}
 4162              	.LCFI119:
 4163              		.cfi_def_cfa_offset 8
 4164              		.cfi_offset 7, -8
 4165              		.cfi_offset 14, -4
 4166 0002 84B0     		sub	sp, sp, #16
 4167              	.LCFI120:
 4168              		.cfi_def_cfa_offset 24
 4169 0004 00AF     		add	r7, sp, #0
 4170              	.LCFI121:
 4171              		.cfi_def_cfa_register 7
 4172 0006 7860     		str	r0, [r7, #4]
5060:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4173              		.loc 1 5060 0
 4174 0008 0023     		movs	r3, #0
 4175 000a FB73     		strb	r3, [r7, #15]
5061:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5062:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5063:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5065:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5066:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 4176              		.loc 1 5066 0
 4177 000c 7B68     		ldr	r3, [r7, #4]
 4178 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 4179 0012 012B     		cmp	r3, #1
 4180 0014 01D1     		bne	.L250
 4181              		.loc 1 5066 0 is_stmt 0 discriminator 1
 4182 0016 0223     		movs	r3, #2
 4183 0018 5CE0     		b	.L251
ARM GAS  /tmp/ccumkl9n.s 			page 163


 4184              	.L250:
 4185              		.loc 1 5066 0 discriminator 2
 4186 001a 7B68     		ldr	r3, [r7, #4]
 4187 001c 0122     		movs	r2, #1
 4188 001e 83F84020 		strb	r2, [r3, #64]
5067:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5068:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
5069:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
5070:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
5071:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
5072:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
5073:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
5074:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
5075:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
5076:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
5077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
5078:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5079:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
5080:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 4189              		.loc 1 5080 0 is_stmt 1 discriminator 2
 4190 0022 7868     		ldr	r0, [r7, #4]
 4191 0024 0C21     		movs	r1, #12
 4192 0026 FFF7FEFF 		bl	ADC_ConversionStop
 4193 002a 0346     		mov	r3, r0
 4194 002c FB73     		strb	r3, [r7, #15]
5081:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5082:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
5083:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
5084:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
5085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
 4195              		.loc 1 5085 0 discriminator 2
 4196 002e 7B68     		ldr	r3, [r7, #4]
 4197 0030 1B68     		ldr	r3, [r3]
 4198 0032 9B68     		ldr	r3, [r3, #8]
 4199 0034 03F00803 		and	r3, r3, #8
 4200 0038 002B     		cmp	r3, #0
 4201 003a 40D1     		bne	.L252
5086:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4202              		.loc 1 5086 0 discriminator 1
 4203 003c 7B68     		ldr	r3, [r7, #4]
 4204 003e 5B6C     		ldr	r3, [r3, #68]
 4205 0040 03F48053 		and	r3, r3, #4096
5085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
 4206              		.loc 1 5085 0 discriminator 1
 4207 0044 002B     		cmp	r3, #0
 4208 0046 3AD1     		bne	.L252
5087:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5088:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
5089:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
 4209              		.loc 1 5089 0
 4210 0048 7B68     		ldr	r3, [r7, #4]
 4211 004a 1B68     		ldr	r3, [r3]
 4212 004c 7A68     		ldr	r2, [r7, #4]
 4213 004e 1268     		ldr	r2, [r2]
 4214 0050 D268     		ldr	r2, [r2, #12]
 4215 0052 22F00102 		bic	r2, r2, #1
 4216 0056 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccumkl9n.s 			page 164


5090:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5091:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
5092:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
5093:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);   
 4217              		.loc 1 5093 0
 4218 0058 7B68     		ldr	r3, [r7, #4]
 4219 005a DB6B     		ldr	r3, [r3, #60]
 4220 005c 1846     		mov	r0, r3
 4221 005e FFF7FEFF 		bl	HAL_DMA_Abort
 4222 0062 0346     		mov	r3, r0
 4223 0064 FB73     		strb	r3, [r7, #15]
5094:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5095:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
5096:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
 4224              		.loc 1 5096 0
 4225 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4226 0068 002B     		cmp	r3, #0
 4227 006a 05D0     		beq	.L253
5097:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5098:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
5099:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);     
 4228              		.loc 1 5099 0
 4229 006c 7B68     		ldr	r3, [r7, #4]
 4230 006e 5B6C     		ldr	r3, [r3, #68]
 4231 0070 43F04002 		orr	r2, r3, #64
 4232 0074 7B68     		ldr	r3, [r7, #4]
 4233 0076 5A64     		str	r2, [r3, #68]
 4234              	.L253:
5100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
 4235              		.loc 1 5103 0
 4236 0078 7B68     		ldr	r3, [r7, #4]
 4237 007a 1B68     		ldr	r3, [r3]
 4238 007c 7A68     		ldr	r2, [r7, #4]
 4239 007e 1268     		ldr	r2, [r2]
 4240 0080 5268     		ldr	r2, [r2, #4]
 4241 0082 22F01002 		bic	r2, r2, #16
 4242 0086 5A60     		str	r2, [r3, #4]
5104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
5106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
5107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
5108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 4243              		.loc 1 5108 0
 4244 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4245 008a 002B     		cmp	r3, #0
 4246 008c 05D1     		bne	.L254
5109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 4247              		.loc 1 5110 0
 4248 008e 7868     		ldr	r0, [r7, #4]
 4249 0090 FFF7FEFF 		bl	ADC_Disable
 4250 0094 0346     		mov	r3, r0
 4251 0096 FB73     		strb	r3, [r7, #15]
 4252 0098 02E0     		b	.L255
ARM GAS  /tmp/ccumkl9n.s 			page 165


 4253              	.L254:
5111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
 4254              		.loc 1 5114 0
 4255 009a 7868     		ldr	r0, [r7, #4]
 4256 009c FFF7FEFF 		bl	ADC_Disable
 4257              	.L255:
5115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if ADC is effectively disabled */
5118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 4258              		.loc 1 5118 0
 4259 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4260 00a2 002B     		cmp	r3, #0
 4261 00a4 0AD1     		bne	.L256
5119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
5121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 4262              		.loc 1 5121 0
 4263 00a6 7B68     		ldr	r3, [r7, #4]
 4264 00a8 5B6C     		ldr	r3, [r3, #68]
 4265 00aa 23F48853 		bic	r3, r3, #4352
 4266 00ae 23F00103 		bic	r3, r3, #1
 4267 00b2 43F00102 		orr	r2, r3, #1
 4268 00b6 7B68     		ldr	r3, [r7, #4]
 4269 00b8 5A64     		str	r2, [r3, #68]
5118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 4270              		.loc 1 5118 0
 4271 00ba 06E0     		b	.L257
 4272              	.L256:
 4273 00bc 05E0     		b	.L257
 4274              	.L252:
5122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY);
5124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 4275              		.loc 1 5131 0
 4276 00be 7B68     		ldr	r3, [r7, #4]
 4277 00c0 5B6C     		ldr	r3, [r3, #68]
 4278 00c2 23F48072 		bic	r2, r3, #256
 4279 00c6 7B68     		ldr	r3, [r7, #4]
 4280 00c8 5A64     		str	r2, [r3, #68]
 4281              	.L257:
5132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 4282              		.loc 1 5135 0
 4283 00ca 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 166


 4284 00cc 0022     		movs	r2, #0
 4285 00ce 83F84020 		strb	r2, [r3, #64]
5136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 4286              		.loc 1 5138 0
 4287 00d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4288              	.L251:
5139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4289              		.loc 1 5139 0
 4290 00d4 1846     		mov	r0, r3
 4291 00d6 1037     		adds	r7, r7, #16
 4292              	.LCFI122:
 4293              		.cfi_def_cfa_offset 8
 4294 00d8 BD46     		mov	sp, r7
 4295              	.LCFI123:
 4296              		.cfi_def_cfa_register 13
 4297              		@ sp needed
 4298 00da 80BD     		pop	{r7, pc}
 4299              		.cfi_endproc
 4300              	.LFE146:
 4302              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 4303              		.align	2
 4304              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 4305              		.thumb
 4306              		.thumb_func
 4308              	HAL_ADCEx_InjectedConvCpltCallback:
 4309              	.LFB147:
5140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
5144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  With ADC configured in multimode, for ADC master:
5146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Stop ADC group regular conversion (potential conversion on going
5147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected is not impacted),
5148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         disable ADC DMA transfer, disable ADC peripheral
5149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         if no conversion is on going on group injected.
5150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Interruptions disabled in this function:
5151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA transfer complete
5152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - DMA half transfer
5153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - overrun
5154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To stop ADC conversion of both groups regular and injected and to
5155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         to disable ADC peripheral, instead of using 2 functions
5156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_RegularMultiModeStop_DMA() and
5157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_InjectedStop(), use function
5158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         @ref HAL_ADCEx_MultiModeStop_DMA.
5159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, this function also stop conversion
5160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         on ADC group injected.
5161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. To disable multimode
5162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         (set with HAL_ADCEx_MultiModeConfigChannel() ), ADC must be 
5163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_ReInit().
5164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function 
5165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA must be called after this function with handle of
5166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel of ADC slave.
5167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle of ADC master (handle of ADC slave must not be used)
5168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
ARM GAS  /tmp/ccumkl9n.s 			page 167


5169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef* hadc)
5171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
5172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart;
5174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
5175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
5178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Stop potential ADC conversion on going and disable ADC peripheral        */
5183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conditioned to:                                                          */
5184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC regular group conversion stop:                                 */
5185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   On this STM32 family, conversion on the other group                    */
5186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   (group injected) can continue (groups regular and injected             */
5187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversion stop commands are independent)                              */
5188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - For ADC disable:                                                       */
5189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   No conversion on the other group (group injected) must be intended to  */
5190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   continue (groups regular and injected are both impacted by             */
5191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   ADC disable)                                                           */
5192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going, on regular group only */
5194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
5195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversion on ADC group regular is             */
5197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* effectively stopped and if no conversion on the other group              */
5198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* (ADC group injected) is intended to continue.                            */
5199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET) &&
5200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == RESET)     )
5201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
5203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 2 ADC slaves)        */
5204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
5205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
5207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
5209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
5210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Process unlocked */
5212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
5213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
5215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
5218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
5219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Wait until ADSTP=0 for ADC master and ADC slave*/
5221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
5222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(ADC_IS_CONVERSION_ONGOING_REGULAR(hadc)          || 
5224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSlave)   )
5225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccumkl9n.s 			page 168


5226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
5227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine (ADC master) to error */
5229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
5230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Process unlocked */
5232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
5233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
5235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
5239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
5240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: In case of ADC slave using its own DMA channel (multimode        */
5241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       parameter "DMAAccessMode" set to disabled):                      */
5242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       DMA channel of ADC slave should stopped after this function with */
5243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       function HAL_ADC_Stop_DMA.                                       */
5244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
5245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
5247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
5248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
5250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
5251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
5254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
5255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
5259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
5260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to retain a potential failing status.                                  */
5261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
5262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Check if ADC are effectively disabled */
5264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) != HAL_ERROR)          &&
5265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_Disable(&tmphadcSlave) != HAL_ERROR)   )
5266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
5268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Change ADC state (ADC master) */
5270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
5271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
5272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
5273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC instances anyway */
5278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(hadc);
5279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_Disable(&tmphadcSlave);
5280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine (ADC master) to error */
5282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
ARM GAS  /tmp/ccumkl9n.s 			page 169


5283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Conversion on ADC group regular group is stopped, but ADC is not         */
5287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled since conversion on ADC group injected is still on going.       */
5288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Set ADC state */
5291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
5292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx    */
5303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non blocking mode 
5312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
5316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 4310              		.loc 1 5316 0
 4311              		.cfi_startproc
 4312              		@ args = 0, pretend = 0, frame = 8
 4313              		@ frame_needed = 1, uses_anonymous_args = 0
 4314              		@ link register save eliminated.
 4315 0000 80B4     		push	{r7}
 4316              	.LCFI124:
 4317              		.cfi_def_cfa_offset 4
 4318              		.cfi_offset 7, -4
 4319 0002 83B0     		sub	sp, sp, #12
 4320              	.LCFI125:
 4321              		.cfi_def_cfa_offset 16
 4322 0004 00AF     		add	r7, sp, #0
 4323              	.LCFI126:
 4324              		.cfi_def_cfa_register 7
 4325 0006 7860     		str	r0, [r7, #4]
5317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
5321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             the HAL_ADCEx_InjectedConvCpltCallback could be implemented in the user file
5322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
ARM GAS  /tmp/ccumkl9n.s 			page 170


 4326              		.loc 1 5323 0
 4327 0008 0C37     		adds	r7, r7, #12
 4328              	.LCFI127:
 4329              		.cfi_def_cfa_offset 4
 4330 000a BD46     		mov	sp, r7
 4331              	.LCFI128:
 4332              		.cfi_def_cfa_register 13
 4333              		@ sp needed
 4334 000c 5DF8047B 		ldr	r7, [sp], #4
 4335              	.LCFI129:
 4336              		.cfi_restore 7
 4337              		.cfi_def_cfa_offset 0
 4338 0010 7047     		bx	lr
 4339              		.cfi_endproc
 4340              	.LFE147:
 4342 0012 00BF     		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 4343              		.align	2
 4344              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 4345              		.thumb
 4346              		.thumb_func
 4348              	HAL_ADCEx_InjectedQueueOverflowCallback:
 4349              	.LFB148:
5324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow flag callback. 
5331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
5332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
5333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
5334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             contexts).
5335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef* hadc)
5339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 4350              		.loc 1 5339 0
 4351              		.cfi_startproc
 4352              		@ args = 0, pretend = 0, frame = 8
 4353              		@ frame_needed = 1, uses_anonymous_args = 0
 4354              		@ link register save eliminated.
 4355 0000 80B4     		push	{r7}
 4356              	.LCFI130:
 4357              		.cfi_def_cfa_offset 4
 4358              		.cfi_offset 7, -4
 4359 0002 83B0     		sub	sp, sp, #12
 4360              	.LCFI131:
 4361              		.cfi_def_cfa_offset 16
 4362 0004 00AF     		add	r7, sp, #0
 4363              	.LCFI132:
 4364              		.cfi_def_cfa_register 7
 4365 0006 7860     		str	r0, [r7, #4]
5340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccumkl9n.s 			page 171


5343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented 
5345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             in the user file.
5346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4366              		.loc 1 5347 0
 4367 0008 0C37     		adds	r7, r7, #12
 4368              	.LCFI133:
 4369              		.cfi_def_cfa_offset 4
 4370 000a BD46     		mov	sp, r7
 4371              	.LCFI134:
 4372              		.cfi_def_cfa_register 13
 4373              		@ sp needed
 4374 000c 5DF8047B 		ldr	r7, [sp], #4
 4375              	.LCFI135:
 4376              		.cfi_restore 7
 4377              		.cfi_def_cfa_offset 0
 4378 0010 7047     		bx	lr
 4379              		.cfi_endproc
 4380              	.LFE148:
 4382 0012 00BF     		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 4383              		.align	2
 4384              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 4385              		.thumb
 4386              		.thumb_func
 4388              	HAL_ADCEx_LevelOutOfWindow2Callback:
 4389              	.LFB149:
5348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                         
5349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non blocking mode. 
5351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef* hadc)
5355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 4390              		.loc 1 5355 0
 4391              		.cfi_startproc
 4392              		@ args = 0, pretend = 0, frame = 8
 4393              		@ frame_needed = 1, uses_anonymous_args = 0
 4394              		@ link register save eliminated.
 4395 0000 80B4     		push	{r7}
 4396              	.LCFI136:
 4397              		.cfi_def_cfa_offset 4
 4398              		.cfi_offset 7, -4
 4399 0002 83B0     		sub	sp, sp, #12
 4400              	.LCFI137:
 4401              		.cfi_def_cfa_offset 16
 4402 0004 00AF     		add	r7, sp, #0
 4403              	.LCFI138:
 4404              		.cfi_def_cfa_register 7
 4405 0006 7860     		str	r0, [r7, #4]
5356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADC_LevelOoutOfWindow2Callback must be implemented in the user file.
5361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
ARM GAS  /tmp/ccumkl9n.s 			page 172


5362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4406              		.loc 1 5362 0
 4407 0008 0C37     		adds	r7, r7, #12
 4408              	.LCFI139:
 4409              		.cfi_def_cfa_offset 4
 4410 000a BD46     		mov	sp, r7
 4411              	.LCFI140:
 4412              		.cfi_def_cfa_register 13
 4413              		@ sp needed
 4414 000c 5DF8047B 		ldr	r7, [sp], #4
 4415              	.LCFI141:
 4416              		.cfi_restore 7
 4417              		.cfi_def_cfa_offset 0
 4418 0010 7047     		bx	lr
 4419              		.cfi_endproc
 4420              	.LFE149:
 4422 0012 00BF     		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 4423              		.align	2
 4424              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 4425              		.thumb
 4426              		.thumb_func
 4428              	HAL_ADCEx_LevelOutOfWindow3Callback:
 4429              	.LFB150:
5363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non blocking mode. 
5366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef* hadc)
5370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 4430              		.loc 1 5370 0
 4431              		.cfi_startproc
 4432              		@ args = 0, pretend = 0, frame = 8
 4433              		@ frame_needed = 1, uses_anonymous_args = 0
 4434              		@ link register save eliminated.
 4435 0000 80B4     		push	{r7}
 4436              	.LCFI142:
 4437              		.cfi_def_cfa_offset 4
 4438              		.cfi_offset 7, -4
 4439 0002 83B0     		sub	sp, sp, #12
 4440              	.LCFI143:
 4441              		.cfi_def_cfa_offset 16
 4442 0004 00AF     		add	r7, sp, #0
 4443              	.LCFI144:
 4444              		.cfi_def_cfa_register 7
 4445 0006 7860     		str	r0, [r7, #4]
5371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
5372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   UNUSED(hadc);
5373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
5375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             function HAL_ADC_LevelOoutOfWindow3Callback must be implemented in the user file.
5376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 4446              		.loc 1 5377 0
 4447 0008 0C37     		adds	r7, r7, #12
 4448              	.LCFI145:
ARM GAS  /tmp/ccumkl9n.s 			page 173


 4449              		.cfi_def_cfa_offset 4
 4450 000a BD46     		mov	sp, r7
 4451              	.LCFI146:
 4452              		.cfi_def_cfa_register 13
 4453              		@ sp needed
 4454 000c 5DF8047B 		ldr	r7, [sp], #4
 4455              	.LCFI147:
 4456              		.cfi_restore 7
 4457              		.cfi_def_cfa_offset 0
 4458 0010 7047     		bx	lr
 4459              		.cfi_endproc
 4460              	.LFE150:
 4462 0012 00BF     		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 4463              		.align	2
 4464              		.global	HAL_ADC_ConfigChannel
 4465              		.thumb
 4466              		.thumb_func
 4468              	HAL_ADC_ConfigChannel:
 4469              	.LFB151:
5378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
5385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group3 ADCEx Peripheral Control functions
5388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
5389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *
5390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @verbatim   
5391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================
5392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
5393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  ===============================================================================  
5394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
5395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure channels on regular group
5396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure channels on injected group
5397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure multimode
5398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (+) Configure the analog watchdog
5399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** @endverbatim
5401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
5402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the the selected channel to be linked to the regular
5411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         group.
5412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
ARM GAS  /tmp/ccumkl9n.s 			page 174


5416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes channel into regular group, following  
5422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
5423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
5424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
5425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_ChannelConfTypeDef".
5428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfig: Structure ADC channel for regular group.
5430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
5431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
5433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 4470              		.loc 1 5433 0
 4471              		.cfi_startproc
 4472              		@ args = 0, pretend = 0, frame = 112
 4473              		@ frame_needed = 1, uses_anonymous_args = 0
 4474              		@ link register save eliminated.
 4475 0000 90B4     		push	{r4, r7}
 4476              	.LCFI148:
 4477              		.cfi_def_cfa_offset 8
 4478              		.cfi_offset 4, -8
 4479              		.cfi_offset 7, -4
 4480 0002 9CB0     		sub	sp, sp, #112
 4481              	.LCFI149:
 4482              		.cfi_def_cfa_offset 120
 4483 0004 00AF     		add	r7, sp, #0
 4484              	.LCFI150:
 4485              		.cfi_def_cfa_register 7
 4486 0006 7860     		str	r0, [r7, #4]
 4487 0008 3960     		str	r1, [r7]
5434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 4488              		.loc 1 5434 0
 4489 000a 0023     		movs	r3, #0
 4490 000c 87F86F30 		strb	r3, [r7, #111]
5435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
5436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
5437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
5438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 4491              		.loc 1 5438 0
 4492 0010 0023     		movs	r3, #0
 4493 0012 FB60     		str	r3, [r7, #12]
5439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
5443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
5444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
5445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
5446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
5447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccumkl9n.s 			page 175


5449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of channel number: Channels 1 to 14 are available in        */  
5450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* differential mode. Channels 15U, 16U, 17U, 18 can be used only in           */
5451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* single-ended mode.                                                       */
5452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
5453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfig->Channel));
5455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(sConfig->Channel));
5459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 4494              		.loc 1 5462 0
 4495 0014 7B68     		ldr	r3, [r7, #4]
 4496 0016 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 4497 001a 012B     		cmp	r3, #1
 4498 001c 01D1     		bne	.L263
 4499              		.loc 1 5462 0 is_stmt 0 discriminator 1
 4500 001e 0223     		movs	r3, #2
 4501 0020 95E2     		b	.L304
 4502              	.L263:
 4503              		.loc 1 5462 0 discriminator 2
 4504 0022 7B68     		ldr	r3, [r7, #4]
 4505 0024 0122     		movs	r2, #1
 4506 0026 83F84020 		strb	r2, [r3, #64]
5463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
5467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
5468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel number                                                        */
5469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel rank                                                          */
5470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET)
 4507              		.loc 1 5470 0 is_stmt 1 discriminator 2
 4508 002a 7B68     		ldr	r3, [r7, #4]
 4509 002c 1B68     		ldr	r3, [r3]
 4510 002e 9B68     		ldr	r3, [r3, #8]
 4511 0030 03F00403 		and	r3, r3, #4
 4512 0034 002B     		cmp	r3, #0
 4513 0036 40F07B82 		bne	.L265
5471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Regular sequence configuration */
5473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 1 to 4U */
5474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->Rank < 5U)
 4514              		.loc 1 5474 0
 4515 003a 3B68     		ldr	r3, [r7]
 4516 003c 5B68     		ldr	r3, [r3, #4]
 4517 003e 042B     		cmp	r3, #4
 4518 0040 1CD8     		bhi	.L266
5475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR1,
 4519              		.loc 1 5476 0
 4520 0042 7B68     		ldr	r3, [r7, #4]
 4521 0044 1968     		ldr	r1, [r3]
 4522 0046 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 176


 4523 0048 1B68     		ldr	r3, [r3]
 4524 004a 186B     		ldr	r0, [r3, #48]
 4525 004c 3B68     		ldr	r3, [r7]
 4526 004e 5A68     		ldr	r2, [r3, #4]
 4527 0050 1346     		mov	r3, r2
 4528 0052 5B00     		lsls	r3, r3, #1
 4529 0054 1344     		add	r3, r3, r2
 4530 0056 5B00     		lsls	r3, r3, #1
 4531 0058 1A46     		mov	r2, r3
 4532 005a 1F23     		movs	r3, #31
 4533 005c 9340     		lsls	r3, r3, r2
 4534 005e DB43     		mvns	r3, r3
 4535 0060 1840     		ands	r0, r0, r3
 4536 0062 3B68     		ldr	r3, [r7]
 4537 0064 1C68     		ldr	r4, [r3]
 4538 0066 3B68     		ldr	r3, [r7]
 4539 0068 5A68     		ldr	r2, [r3, #4]
 4540 006a 1346     		mov	r3, r2
 4541 006c 5B00     		lsls	r3, r3, #1
 4542 006e 1344     		add	r3, r3, r2
 4543 0070 5B00     		lsls	r3, r3, #1
 4544 0072 04FA03F3 		lsl	r3, r4, r3
 4545 0076 0343     		orrs	r3, r3, r0
 4546 0078 0B63     		str	r3, [r1, #48]
 4547 007a 63E0     		b	.L267
 4548              	.L266:
5477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
5478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
5479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 5 to 9U */
5481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else if (sConfig->Rank < 10U)
 4549              		.loc 1 5481 0
 4550 007c 3B68     		ldr	r3, [r7]
 4551 007e 5B68     		ldr	r3, [r3, #4]
 4552 0080 092B     		cmp	r3, #9
 4553 0082 1ED8     		bhi	.L268
5482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR2,
 4554              		.loc 1 5483 0
 4555 0084 7B68     		ldr	r3, [r7, #4]
 4556 0086 1968     		ldr	r1, [r3]
 4557 0088 7B68     		ldr	r3, [r7, #4]
 4558 008a 1B68     		ldr	r3, [r3]
 4559 008c 586B     		ldr	r0, [r3, #52]
 4560 008e 3B68     		ldr	r3, [r7]
 4561 0090 5A68     		ldr	r2, [r3, #4]
 4562 0092 1346     		mov	r3, r2
 4563 0094 5B00     		lsls	r3, r3, #1
 4564 0096 1344     		add	r3, r3, r2
 4565 0098 5B00     		lsls	r3, r3, #1
 4566 009a 1E3B     		subs	r3, r3, #30
 4567 009c 1A46     		mov	r2, r3
 4568 009e 1F23     		movs	r3, #31
 4569 00a0 9340     		lsls	r3, r3, r2
 4570 00a2 DB43     		mvns	r3, r3
 4571 00a4 1840     		ands	r0, r0, r3
 4572 00a6 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccumkl9n.s 			page 177


 4573 00a8 1C68     		ldr	r4, [r3]
 4574 00aa 3B68     		ldr	r3, [r7]
 4575 00ac 5A68     		ldr	r2, [r3, #4]
 4576 00ae 1346     		mov	r3, r2
 4577 00b0 5B00     		lsls	r3, r3, #1
 4578 00b2 1344     		add	r3, r3, r2
 4579 00b4 5B00     		lsls	r3, r3, #1
 4580 00b6 1E3B     		subs	r3, r3, #30
 4581 00b8 04FA03F3 		lsl	r3, r4, r3
 4582 00bc 0343     		orrs	r3, r3, r0
 4583 00be 4B63     		str	r3, [r1, #52]
 4584 00c0 40E0     		b	.L267
 4585              	.L268:
5484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR2_RK(ADC_SQR2_SQ5, sConfig->Rank)    ,
5485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
5486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 10 to 14U */
5488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else if (sConfig->Rank < 15U)
 4586              		.loc 1 5488 0
 4587 00c2 3B68     		ldr	r3, [r7]
 4588 00c4 5B68     		ldr	r3, [r3, #4]
 4589 00c6 0E2B     		cmp	r3, #14
 4590 00c8 1ED8     		bhi	.L269
5489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR3                        ,
 4591              		.loc 1 5490 0
 4592 00ca 7B68     		ldr	r3, [r7, #4]
 4593 00cc 1968     		ldr	r1, [r3]
 4594 00ce 7B68     		ldr	r3, [r7, #4]
 4595 00d0 1B68     		ldr	r3, [r3]
 4596 00d2 986B     		ldr	r0, [r3, #56]
 4597 00d4 3B68     		ldr	r3, [r7]
 4598 00d6 5A68     		ldr	r2, [r3, #4]
 4599 00d8 1346     		mov	r3, r2
 4600 00da 5B00     		lsls	r3, r3, #1
 4601 00dc 1344     		add	r3, r3, r2
 4602 00de 5B00     		lsls	r3, r3, #1
 4603 00e0 3C3B     		subs	r3, r3, #60
 4604 00e2 1A46     		mov	r2, r3
 4605 00e4 1F23     		movs	r3, #31
 4606 00e6 9340     		lsls	r3, r3, r2
 4607 00e8 DB43     		mvns	r3, r3
 4608 00ea 1840     		ands	r0, r0, r3
 4609 00ec 3B68     		ldr	r3, [r7]
 4610 00ee 1C68     		ldr	r4, [r3]
 4611 00f0 3B68     		ldr	r3, [r7]
 4612 00f2 5A68     		ldr	r2, [r3, #4]
 4613 00f4 1346     		mov	r3, r2
 4614 00f6 5B00     		lsls	r3, r3, #1
 4615 00f8 1344     		add	r3, r3, r2
 4616 00fa 5B00     		lsls	r3, r3, #1
 4617 00fc 3C3B     		subs	r3, r3, #60
 4618 00fe 04FA03F3 		lsl	r3, r4, r3
 4619 0102 0343     		orrs	r3, r3, r0
 4620 0104 8B63     		str	r3, [r1, #56]
 4621 0106 1DE0     		b	.L267
 4622              	.L269:
ARM GAS  /tmp/ccumkl9n.s 			page 178


5491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR3_RK(ADC_SQR3_SQ10, sConfig->Rank)   ,
5492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
5493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For Rank 15 to 16U */
5495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {   
5497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SQR4                        ,
 4623              		.loc 1 5497 0
 4624 0108 7B68     		ldr	r3, [r7, #4]
 4625 010a 1968     		ldr	r1, [r3]
 4626 010c 7B68     		ldr	r3, [r7, #4]
 4627 010e 1B68     		ldr	r3, [r3]
 4628 0110 D86B     		ldr	r0, [r3, #60]
 4629 0112 3B68     		ldr	r3, [r7]
 4630 0114 5A68     		ldr	r2, [r3, #4]
 4631 0116 1346     		mov	r3, r2
 4632 0118 5B00     		lsls	r3, r3, #1
 4633 011a 1344     		add	r3, r3, r2
 4634 011c 5B00     		lsls	r3, r3, #1
 4635 011e 5A3B     		subs	r3, r3, #90
 4636 0120 1A46     		mov	r2, r3
 4637 0122 1F23     		movs	r3, #31
 4638 0124 9340     		lsls	r3, r3, r2
 4639 0126 DB43     		mvns	r3, r3
 4640 0128 1840     		ands	r0, r0, r3
 4641 012a 3B68     		ldr	r3, [r7]
 4642 012c 1C68     		ldr	r4, [r3]
 4643 012e 3B68     		ldr	r3, [r7]
 4644 0130 5A68     		ldr	r2, [r3, #4]
 4645 0132 1346     		mov	r3, r2
 4646 0134 5B00     		lsls	r3, r3, #1
 4647 0136 1344     		add	r3, r3, r2
 4648 0138 5B00     		lsls	r3, r3, #1
 4649 013a 5A3B     		subs	r3, r3, #90
 4650 013c 04FA03F3 		lsl	r3, r4, r3
 4651 0140 0343     		orrs	r3, r3, r0
 4652 0142 CB63     		str	r3, [r1, #60]
 4653              	.L267:
5498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR4_RK(ADC_SQR4_SQ15, sConfig->Rank)   ,
5499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SQR4_RK(sConfig->Channel, sConfig->Rank) );
5500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
5505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
5506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
5507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
5508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 4654              		.loc 1 5508 0
 4655 0144 7B68     		ldr	r3, [r7, #4]
 4656 0146 1B68     		ldr	r3, [r3]
 4657 0148 9B68     		ldr	r3, [r3, #8]
 4658 014a 03F00C03 		and	r3, r3, #12
 4659 014e 002B     		cmp	r3, #0
 4660 0150 40F0E480 		bne	.L270
5509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
ARM GAS  /tmp/ccumkl9n.s 			page 179


5510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Channel sampling time configuration */
5511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For channels 10 to 18U */
5512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->Channel >= ADC_CHANNEL_10)
 4661              		.loc 1 5512 0
 4662 0154 3B68     		ldr	r3, [r7]
 4663 0156 1B68     		ldr	r3, [r3]
 4664 0158 092B     		cmp	r3, #9
 4665 015a 1CD9     		bls	.L271
5513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR2                             ,
 4666              		.loc 1 5514 0
 4667 015c 7B68     		ldr	r3, [r7, #4]
 4668 015e 1968     		ldr	r1, [r3]
 4669 0160 7B68     		ldr	r3, [r7, #4]
 4670 0162 1B68     		ldr	r3, [r3]
 4671 0164 9869     		ldr	r0, [r3, #24]
 4672 0166 3B68     		ldr	r3, [r7]
 4673 0168 1A68     		ldr	r2, [r3]
 4674 016a 1346     		mov	r3, r2
 4675 016c 5B00     		lsls	r3, r3, #1
 4676 016e 1344     		add	r3, r3, r2
 4677 0170 1E3B     		subs	r3, r3, #30
 4678 0172 1A46     		mov	r2, r3
 4679 0174 0723     		movs	r3, #7
 4680 0176 9340     		lsls	r3, r3, r2
 4681 0178 DB43     		mvns	r3, r3
 4682 017a 1840     		ands	r0, r0, r3
 4683 017c 3B68     		ldr	r3, [r7]
 4684 017e 9C68     		ldr	r4, [r3, #8]
 4685 0180 3B68     		ldr	r3, [r7]
 4686 0182 1A68     		ldr	r2, [r3]
 4687 0184 1346     		mov	r3, r2
 4688 0186 5B00     		lsls	r3, r3, #1
 4689 0188 1344     		add	r3, r3, r2
 4690 018a 1E3B     		subs	r3, r3, #30
 4691 018c 04FA03F3 		lsl	r3, r4, r3
 4692 0190 0343     		orrs	r3, r3, r0
 4693 0192 8B61     		str	r3, [r1, #24]
 4694 0194 19E0     		b	.L272
 4695              	.L271:
5515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel)      ,
5516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
5517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* For channels 1 to 9U */
5519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR1                             ,
 4696              		.loc 1 5520 0
 4697 0196 7B68     		ldr	r3, [r7, #4]
 4698 0198 1968     		ldr	r1, [r3]
 4699 019a 7B68     		ldr	r3, [r7, #4]
 4700 019c 1B68     		ldr	r3, [r3]
 4701 019e 5869     		ldr	r0, [r3, #20]
 4702 01a0 3B68     		ldr	r3, [r7]
 4703 01a2 1A68     		ldr	r2, [r3]
 4704 01a4 1346     		mov	r3, r2
 4705 01a6 5B00     		lsls	r3, r3, #1
 4706 01a8 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccumkl9n.s 			page 180


 4707 01aa 1A46     		mov	r2, r3
 4708 01ac 0723     		movs	r3, #7
 4709 01ae 9340     		lsls	r3, r3, r2
 4710 01b0 DB43     		mvns	r3, r3
 4711 01b2 1840     		ands	r0, r0, r3
 4712 01b4 3B68     		ldr	r3, [r7]
 4713 01b6 9C68     		ldr	r4, [r3, #8]
 4714 01b8 3B68     		ldr	r3, [r7]
 4715 01ba 1A68     		ldr	r2, [r3]
 4716 01bc 1346     		mov	r3, r2
 4717 01be 5B00     		lsls	r3, r3, #1
 4718 01c0 1344     		add	r3, r3, r2
 4719 01c2 04FA03F3 		lsl	r3, r4, r3
 4720 01c6 0343     		orrs	r3, r3, r0
 4721 01c8 4B61     		str	r3, [r1, #20]
 4722              	.L272:
5521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel)       ,
5522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
5523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
5527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the offset in function of the selected ADC resolution. */
5529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11U, the LSB (right bits) are set  */
5530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to 0.                                                                  */
5531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfig->Offset);
 4723              		.loc 1 5531 0
 4724 01ca 3B68     		ldr	r3, [r7]
 4725 01cc 5B69     		ldr	r3, [r3, #20]
 4726 01ce 7A68     		ldr	r2, [r7, #4]
 4727 01d0 1268     		ldr	r2, [r2]
 4728 01d2 D268     		ldr	r2, [r2, #12]
 4729 01d4 02F01802 		and	r2, r2, #24
 4730 01d8 D208     		lsrs	r2, r2, #3
 4731 01da 5200     		lsls	r2, r2, #1
 4732 01dc 9340     		lsls	r3, r3, r2
 4733 01de BB66     		str	r3, [r7, #104]
5532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the selected offset register:                                */
5534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Enable offset                                                        */
5535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set channel number                                                   */
5536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set offset value                                                     */
5537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch (sConfig->OffsetNumber)
 4734              		.loc 1 5537 0
 4735 01e0 3B68     		ldr	r3, [r7]
 4736 01e2 1B69     		ldr	r3, [r3, #16]
 4737 01e4 013B     		subs	r3, r3, #1
 4738 01e6 032B     		cmp	r3, #3
 4739 01e8 4ED8     		bhi	.L273
 4740 01ea 01A2     		adr	r2, .L275
 4741 01ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4742              		.p2align 2
 4743              	.L275:
 4744 01f0 01020000 		.word	.L274+1
 4745 01f4 23020000 		.word	.L276+1
 4746 01f8 45020000 		.word	.L277+1
ARM GAS  /tmp/ccumkl9n.s 			page 181


 4747 01fc 67020000 		.word	.L278+1
 4748              		.p2align 1
 4749              	.L274:
5538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_1:
5540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 1U */
5541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR1               ,
 4750              		.loc 1 5541 0
 4751 0200 7B68     		ldr	r3, [r7, #4]
 4752 0202 1A68     		ldr	r2, [r3]
 4753 0204 7B68     		ldr	r3, [r7, #4]
 4754 0206 1B68     		ldr	r3, [r3]
 4755 0208 196E     		ldr	r1, [r3, #96]
 4756 020a A14B     		ldr	r3, .L306
 4757 020c 0B40     		ands	r3, r3, r1
 4758 020e 3968     		ldr	r1, [r7]
 4759 0210 0968     		ldr	r1, [r1]
 4760 0212 8806     		lsls	r0, r1, #26
 4761 0214 B96E     		ldr	r1, [r7, #104]
 4762 0216 0143     		orrs	r1, r1, r0
 4763 0218 0B43     		orrs	r3, r3, r1
 4764 021a 43F00043 		orr	r3, r3, #-2147483648
 4765 021e 1366     		str	r3, [r2, #96]
5542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
5543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1                   ,
5544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_EN               |
5545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4766              		.loc 1 5547 0
 4767 0220 7CE0     		b	.L270
 4768              	.L276:
5548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_2:
5550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 2U */
5551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR2               ,
 4769              		.loc 1 5551 0
 4770 0222 7B68     		ldr	r3, [r7, #4]
 4771 0224 1A68     		ldr	r2, [r3]
 4772 0226 7B68     		ldr	r3, [r7, #4]
 4773 0228 1B68     		ldr	r3, [r3]
 4774 022a 596E     		ldr	r1, [r3, #100]
 4775 022c 984B     		ldr	r3, .L306
 4776 022e 0B40     		ands	r3, r3, r1
 4777 0230 3968     		ldr	r1, [r7]
 4778 0232 0968     		ldr	r1, [r1]
 4779 0234 8806     		lsls	r0, r1, #26
 4780 0236 B96E     		ldr	r1, [r7, #104]
 4781 0238 0143     		orrs	r1, r1, r0
 4782 023a 0B43     		orrs	r3, r3, r1
 4783 023c 43F00043 		orr	r3, r3, #-2147483648
 4784 0240 5366     		str	r3, [r2, #100]
5552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
5553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2                   ,
5554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_EN               |
5555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
ARM GAS  /tmp/ccumkl9n.s 			page 182


5557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4785              		.loc 1 5557 0
 4786 0242 6BE0     		b	.L270
 4787              	.L277:
5558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_3:
5560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 3U */
5561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR3               ,
 4788              		.loc 1 5561 0
 4789 0244 7B68     		ldr	r3, [r7, #4]
 4790 0246 1A68     		ldr	r2, [r3]
 4791 0248 7B68     		ldr	r3, [r7, #4]
 4792 024a 1B68     		ldr	r3, [r3]
 4793 024c 996E     		ldr	r1, [r3, #104]
 4794 024e 904B     		ldr	r3, .L306
 4795 0250 0B40     		ands	r3, r3, r1
 4796 0252 3968     		ldr	r1, [r7]
 4797 0254 0968     		ldr	r1, [r1]
 4798 0256 8806     		lsls	r0, r1, #26
 4799 0258 B96E     		ldr	r1, [r7, #104]
 4800 025a 0143     		orrs	r1, r1, r0
 4801 025c 0B43     		orrs	r3, r3, r1
 4802 025e 43F00043 		orr	r3, r3, #-2147483648
 4803 0262 9366     		str	r3, [r2, #104]
5562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
5563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3                   ,
5564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_EN               |
5565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
5566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4804              		.loc 1 5567 0
 4805 0264 5AE0     		b	.L270
 4806              	.L278:
5568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_4:
5570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 4U */
5571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR4               ,
 4807              		.loc 1 5571 0
 4808 0266 7B68     		ldr	r3, [r7, #4]
 4809 0268 1A68     		ldr	r2, [r3]
 4810 026a 7B68     		ldr	r3, [r7, #4]
 4811 026c 1B68     		ldr	r3, [r3]
 4812 026e D96E     		ldr	r1, [r3, #108]
 4813 0270 874B     		ldr	r3, .L306
 4814 0272 0B40     		ands	r3, r3, r1
 4815 0274 3968     		ldr	r1, [r7]
 4816 0276 0968     		ldr	r1, [r1]
 4817 0278 8806     		lsls	r0, r1, #26
 4818 027a B96E     		ldr	r1, [r7, #104]
 4819 027c 0143     		orrs	r1, r1, r0
 4820 027e 0B43     		orrs	r3, r3, r1
 4821 0280 43F00043 		orr	r3, r3, #-2147483648
 4822 0284 D366     		str	r3, [r2, #108]
5572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
5573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4                   ,
5574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_EN               |
5575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfig->Channel) |
ARM GAS  /tmp/ccumkl9n.s 			page 183


5576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                    );
5577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4823              		.loc 1 5577 0
 4824 0286 49E0     		b	.L270
 4825              	.L273:
5578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_OFFSET_NONE */
5580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default :
5581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is        */
5582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled. If this is the case, offset OFRx is disabled.                 */
5583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 4826              		.loc 1 5583 0
 4827 0288 7B68     		ldr	r3, [r7, #4]
 4828 028a 1B68     		ldr	r3, [r3]
 4829 028c 1B6E     		ldr	r3, [r3, #96]
 4830 028e 03F0F842 		and	r2, r3, #2080374784
 4831 0292 3B68     		ldr	r3, [r7]
 4832 0294 1B68     		ldr	r3, [r3]
 4833 0296 9B06     		lsls	r3, r3, #26
 4834 0298 9A42     		cmp	r2, r3
 4835 029a 07D1     		bne	.L279
5584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR1*/
5586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN);
 4836              		.loc 1 5586 0
 4837 029c 7B68     		ldr	r3, [r7, #4]
 4838 029e 1B68     		ldr	r3, [r3]
 4839 02a0 7A68     		ldr	r2, [r7, #4]
 4840 02a2 1268     		ldr	r2, [r2]
 4841 02a4 126E     		ldr	r2, [r2, #96]
 4842 02a6 22F00042 		bic	r2, r2, #-2147483648
 4843 02aa 1A66     		str	r2, [r3, #96]
 4844              	.L279:
5587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 4845              		.loc 1 5588 0
 4846 02ac 7B68     		ldr	r3, [r7, #4]
 4847 02ae 1B68     		ldr	r3, [r3]
 4848 02b0 5B6E     		ldr	r3, [r3, #100]
 4849 02b2 03F0F842 		and	r2, r3, #2080374784
 4850 02b6 3B68     		ldr	r3, [r7]
 4851 02b8 1B68     		ldr	r3, [r3]
 4852 02ba 9B06     		lsls	r3, r3, #26
 4853 02bc 9A42     		cmp	r2, r3
 4854 02be 07D1     		bne	.L280
5589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR2*/
5591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN); 
 4855              		.loc 1 5591 0
 4856 02c0 7B68     		ldr	r3, [r7, #4]
 4857 02c2 1B68     		ldr	r3, [r3]
 4858 02c4 7A68     		ldr	r2, [r7, #4]
 4859 02c6 1268     		ldr	r2, [r2]
 4860 02c8 526E     		ldr	r2, [r2, #100]
 4861 02ca 22F00042 		bic	r2, r2, #-2147483648
 4862 02ce 5A66     		str	r2, [r3, #100]
 4863              	.L280:
ARM GAS  /tmp/ccumkl9n.s 			page 184


5592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 4864              		.loc 1 5593 0
 4865 02d0 7B68     		ldr	r3, [r7, #4]
 4866 02d2 1B68     		ldr	r3, [r3]
 4867 02d4 9B6E     		ldr	r3, [r3, #104]
 4868 02d6 03F0F842 		and	r2, r3, #2080374784
 4869 02da 3B68     		ldr	r3, [r7]
 4870 02dc 1B68     		ldr	r3, [r3]
 4871 02de 9B06     		lsls	r3, r3, #26
 4872 02e0 9A42     		cmp	r2, r3
 4873 02e2 07D1     		bne	.L281
5594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR3*/
5596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN);
 4874              		.loc 1 5596 0
 4875 02e4 7B68     		ldr	r3, [r7, #4]
 4876 02e6 1B68     		ldr	r3, [r3]
 4877 02e8 7A68     		ldr	r2, [r7, #4]
 4878 02ea 1268     		ldr	r2, [r2]
 4879 02ec 926E     		ldr	r2, [r2, #104]
 4880 02ee 22F00042 		bic	r2, r2, #-2147483648
 4881 02f2 9A66     		str	r2, [r3, #104]
 4882              	.L281:
5597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
 4883              		.loc 1 5598 0
 4884 02f4 7B68     		ldr	r3, [r7, #4]
 4885 02f6 1B68     		ldr	r3, [r3]
 4886 02f8 DB6E     		ldr	r3, [r3, #108]
 4887 02fa 03F0F842 		and	r2, r3, #2080374784
 4888 02fe 3B68     		ldr	r3, [r7]
 4889 0300 1B68     		ldr	r3, [r3]
 4890 0302 9B06     		lsls	r3, r3, #26
 4891 0304 9A42     		cmp	r2, r3
 4892 0306 08D1     		bne	.L282
5599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR4*/
5601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN);
 4893              		.loc 1 5601 0
 4894 0308 7B68     		ldr	r3, [r7, #4]
 4895 030a 1B68     		ldr	r3, [r3]
 4896 030c 7A68     		ldr	r2, [r7, #4]
 4897 030e 1268     		ldr	r2, [r2]
 4898 0310 D26E     		ldr	r2, [r2, #108]
 4899 0312 22F00042 		bic	r2, r2, #-2147483648
 4900 0316 DA66     		str	r2, [r3, #108]
5602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 4901              		.loc 1 5603 0
 4902 0318 FFE7     		b	.L305
 4903              	.L282:
 4904              	.L305:
 4905 031a 00BF     		nop
 4906              	.L270:
5604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
ARM GAS  /tmp/ccumkl9n.s 			page 185


5606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
5608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
5610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
5611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
5612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
5613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 4907              		.loc 1 5613 0
 4908 031c 7B68     		ldr	r3, [r7, #4]
 4909 031e 1B68     		ldr	r3, [r3]
 4910 0320 9B68     		ldr	r3, [r3, #8]
 4911 0322 03F00303 		and	r3, r3, #3
 4912 0326 012B     		cmp	r3, #1
 4913 0328 08D1     		bne	.L283
 4914              		.loc 1 5613 0 is_stmt 0 discriminator 1
 4915 032a 7B68     		ldr	r3, [r7, #4]
 4916 032c 1B68     		ldr	r3, [r3]
 4917 032e 1B68     		ldr	r3, [r3]
 4918 0330 03F00103 		and	r3, r3, #1
 4919 0334 002B     		cmp	r3, #0
 4920 0336 01D0     		beq	.L283
 4921              		.loc 1 5613 0 discriminator 3
 4922 0338 0123     		movs	r3, #1
 4923 033a 00E0     		b	.L284
 4924              	.L283:
 4925              		.loc 1 5613 0 discriminator 4
 4926 033c 0023     		movs	r3, #0
 4927              	.L284:
 4928              		.loc 1 5613 0 discriminator 6
 4929 033e 002B     		cmp	r3, #0
 4930 0340 40F0FF80 		bne	.L303
5614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of differential mode */
5616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
 4931              		.loc 1 5616 0 is_stmt 1
 4932 0344 3B68     		ldr	r3, [r7]
 4933 0346 DB68     		ldr	r3, [r3, #12]
 4934 0348 012B     		cmp	r3, #1
 4935 034a 0FD0     		beq	.L286
5617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable differential mode (default mode: single-ended) */
5619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
 4936              		.loc 1 5619 0
 4937 034c 7B68     		ldr	r3, [r7, #4]
 4938 034e 1B68     		ldr	r3, [r3]
 4939 0350 7A68     		ldr	r2, [r7, #4]
 4940 0352 1268     		ldr	r2, [r2]
 4941 0354 D2F8B010 		ldr	r1, [r2, #176]
 4942 0358 3A68     		ldr	r2, [r7]
 4943 035a 1268     		ldr	r2, [r2]
 4944 035c 1046     		mov	r0, r2
 4945 035e 0122     		movs	r2, #1
 4946 0360 8240     		lsls	r2, r2, r0
 4947 0362 D243     		mvns	r2, r2
 4948 0364 0A40     		ands	r2, r2, r1
 4949 0366 C3F8B020 		str	r2, [r3, #176]
ARM GAS  /tmp/ccumkl9n.s 			page 186


 4950 036a 4AE0     		b	.L287
 4951              	.L286:
5620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
5622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable differential mode */
5624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfig->Channel));
 4952              		.loc 1 5624 0
 4953 036c 7B68     		ldr	r3, [r7, #4]
 4954 036e 1B68     		ldr	r3, [r3]
 4955 0370 7A68     		ldr	r2, [r7, #4]
 4956 0372 1268     		ldr	r2, [r2]
 4957 0374 D2F8B010 		ldr	r1, [r2, #176]
 4958 0378 3A68     		ldr	r2, [r7]
 4959 037a 1268     		ldr	r2, [r2]
 4960 037c 1046     		mov	r0, r2
 4961 037e 0122     		movs	r2, #1
 4962 0380 8240     		lsls	r2, r2, r0
 4963 0382 0A43     		orrs	r2, r2, r1
 4964 0384 C3F8B020 		str	r2, [r3, #176]
5625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Channel sampling time configuration (channel ADC_INx +1              */
5627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* corresponding to differential negative input).                       */
5628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For channels 10 to 18U */
5629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfig->Channel >= ADC_CHANNEL_10)
 4965              		.loc 1 5629 0
 4966 0388 3B68     		ldr	r3, [r7]
 4967 038a 1B68     		ldr	r3, [r3]
 4968 038c 092B     		cmp	r3, #9
 4969 038e 1CD9     		bls	.L288
5630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR2,
 4970              		.loc 1 5631 0
 4971 0390 7B68     		ldr	r3, [r7, #4]
 4972 0392 1968     		ldr	r1, [r3]
 4973 0394 7B68     		ldr	r3, [r7, #4]
 4974 0396 1B68     		ldr	r3, [r3]
 4975 0398 9869     		ldr	r0, [r3, #24]
 4976 039a 3B68     		ldr	r3, [r7]
 4977 039c 1A68     		ldr	r2, [r3]
 4978 039e 1346     		mov	r3, r2
 4979 03a0 5B00     		lsls	r3, r3, #1
 4980 03a2 1344     		add	r3, r3, r2
 4981 03a4 1B3B     		subs	r3, r3, #27
 4982 03a6 1A46     		mov	r2, r3
 4983 03a8 0723     		movs	r3, #7
 4984 03aa 9340     		lsls	r3, r3, r2
 4985 03ac DB43     		mvns	r3, r3
 4986 03ae 1840     		ands	r0, r0, r3
 4987 03b0 3B68     		ldr	r3, [r7]
 4988 03b2 9C68     		ldr	r4, [r3, #8]
 4989 03b4 3B68     		ldr	r3, [r7]
 4990 03b6 1A68     		ldr	r2, [r3]
 4991 03b8 1346     		mov	r3, r2
 4992 03ba 5B00     		lsls	r3, r3, #1
 4993 03bc 1344     		add	r3, r3, r2
 4994 03be 1B3B     		subs	r3, r3, #27
ARM GAS  /tmp/ccumkl9n.s 			page 187


 4995 03c0 04FA03F3 		lsl	r3, r4, r3
 4996 03c4 0343     		orrs	r3, r3, r0
 4997 03c6 8B61     		str	r3, [r1, #24]
 4998 03c8 1BE0     		b	.L287
 4999              	.L288:
5632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfig->Channel +1U)      ,
5633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel +1U) );
5634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else /* For channels 1 to 9U */
5636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR1,
 5000              		.loc 1 5637 0
 5001 03ca 7B68     		ldr	r3, [r7, #4]
 5002 03cc 1968     		ldr	r1, [r3]
 5003 03ce 7B68     		ldr	r3, [r7, #4]
 5004 03d0 1B68     		ldr	r3, [r3]
 5005 03d2 5869     		ldr	r0, [r3, #20]
 5006 03d4 3B68     		ldr	r3, [r7]
 5007 03d6 1B68     		ldr	r3, [r3]
 5008 03d8 5A1C     		adds	r2, r3, #1
 5009 03da 1346     		mov	r3, r2
 5010 03dc 5B00     		lsls	r3, r3, #1
 5011 03de 1344     		add	r3, r3, r2
 5012 03e0 1A46     		mov	r2, r3
 5013 03e2 0723     		movs	r3, #7
 5014 03e4 9340     		lsls	r3, r3, r2
 5015 03e6 DB43     		mvns	r3, r3
 5016 03e8 1840     		ands	r0, r0, r3
 5017 03ea 3B68     		ldr	r3, [r7]
 5018 03ec 9C68     		ldr	r4, [r3, #8]
 5019 03ee 3B68     		ldr	r3, [r7]
 5020 03f0 1B68     		ldr	r3, [r3]
 5021 03f2 5A1C     		adds	r2, r3, #1
 5022 03f4 1346     		mov	r3, r2
 5023 03f6 5B00     		lsls	r3, r3, #1
 5024 03f8 1344     		add	r3, r3, r2
 5025 03fa 04FA03F3 		lsl	r3, r4, r3
 5026 03fe 0343     		orrs	r3, r3, r0
 5027 0400 4B61     		str	r3, [r1, #20]
 5028              	.L287:
5638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfig->Channel +1U)       ,
5639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel +1U) );
5640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Management of internal measurement channels: VrefInt/TempSensor/Vbat   */
5645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
5646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
5647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
5648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* HAL_ADC_DeInit().                                                      */
5649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
5650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
5651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
5652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
5653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
5654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
ARM GAS  /tmp/ccumkl9n.s 			page 188


 5029              		.loc 1 5654 0
 5030 0402 244B     		ldr	r3, .L306+4
 5031 0404 7B66     		str	r3, [r7, #100]
5655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
5657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
5658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (( (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
 5032              		.loc 1 5658 0
 5033 0406 3B68     		ldr	r3, [r7]
 5034 0408 1B68     		ldr	r3, [r3]
 5035 040a 102B     		cmp	r3, #16
 5036 040c 05D1     		bne	.L289
5659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5037              		.loc 1 5659 0 discriminator 1
 5038 040e 7B6E     		ldr	r3, [r7, #100]
 5039 0410 9B68     		ldr	r3, [r3, #8]
 5040 0412 03F40003 		and	r3, r3, #8388608
5658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5041              		.loc 1 5658 0 discriminator 1
 5042 0416 002B     		cmp	r3, #0
 5043 0418 14D0     		beq	.L290
 5044              	.L289:
5660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
 5045              		.loc 1 5660 0
 5046 041a 3B68     		ldr	r3, [r7]
 5047 041c 1B68     		ldr	r3, [r3]
5659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5048              		.loc 1 5659 0
 5049 041e 112B     		cmp	r3, #17
 5050 0420 05D1     		bne	.L291
5661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 5051              		.loc 1 5661 0
 5052 0422 7B6E     		ldr	r3, [r7, #100]
 5053 0424 9B68     		ldr	r3, [r3, #8]
 5054 0426 03F08073 		and	r3, r3, #16777216
5660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VBAT)       &&
 5055              		.loc 1 5660 0
 5056 042a 002B     		cmp	r3, #0
 5057 042c 0AD0     		beq	.L290
 5058              	.L291:
5662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 5059              		.loc 1 5662 0
 5060 042e 3B68     		ldr	r3, [r7]
 5061 0430 1B68     		ldr	r3, [r3]
5661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 5062              		.loc 1 5661 0
 5063 0432 122B     		cmp	r3, #18
 5064 0434 40F08580 		bne	.L303
5663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 5065              		.loc 1 5663 0
 5066 0438 7B6E     		ldr	r3, [r7, #100]
 5067 043a 9B68     		ldr	r3, [r3, #8]
 5068 043c 03F48003 		and	r3, r3, #4194304
5662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfig->Channel == ADC_CHANNEL_VREFINT)    &&
 5069              		.loc 1 5662 0
 5070 0440 002B     		cmp	r3, #0
 5071 0442 7ED1     		bne	.L303
ARM GAS  /tmp/ccumkl9n.s 			page 189


 5072              	.L290:
5664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
5665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
5667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set handle of the other ADC sharing the same common register         */
5668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
 5073              		.loc 1 5668 0
 5074 0444 0023     		movs	r3, #0
 5075 0446 3B61     		str	r3, [r7, #16]
5669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
5671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
5672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                                    &&
 5076              		.loc 1 5672 0
 5077 0448 7B68     		ldr	r3, [r7, #4]
 5078 044a 1B68     		ldr	r3, [r3]
 5079 044c 9B68     		ldr	r3, [r3, #8]
 5080 044e 03F00303 		and	r3, r3, #3
 5081 0452 012B     		cmp	r3, #1
 5082 0454 08D1     		bne	.L292
 5083              		.loc 1 5672 0 is_stmt 0 discriminator 1
 5084 0456 7B68     		ldr	r3, [r7, #4]
 5085 0458 1B68     		ldr	r3, [r3]
 5086 045a 1B68     		ldr	r3, [r3]
 5087 045c 03F00103 		and	r3, r3, #1
 5088 0460 002B     		cmp	r3, #0
 5089 0462 01D0     		beq	.L292
 5090              		.loc 1 5672 0 discriminator 3
 5091 0464 0123     		movs	r3, #1
 5092 0466 00E0     		b	.L293
 5093              	.L292:
 5094              		.loc 1 5672 0 discriminator 4
 5095 0468 0023     		movs	r3, #0
 5096              	.L293:
 5097              		.loc 1 5672 0 discriminator 6
 5098 046a 002B     		cmp	r3, #0
 5099 046c 55D1     		bne	.L294
5673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 5100              		.loc 1 5673 0 is_stmt 1 discriminator 7
 5101 046e 3B69     		ldr	r3, [r7, #16]
5672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 5102              		.loc 1 5672 0 discriminator 7
 5103 0470 002B     		cmp	r3, #0
 5104 0472 14D0     		beq	.L295
5674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 5105              		.loc 1 5674 0
 5106 0474 3B69     		ldr	r3, [r7, #16]
 5107 0476 9B68     		ldr	r3, [r3, #8]
 5108 0478 03F00303 		and	r3, r3, #3
 5109 047c 012B     		cmp	r3, #1
 5110 047e 0BD1     		bne	.L296
 5111              		.loc 1 5674 0 is_stmt 0 discriminator 1
 5112 0480 3B69     		ldr	r3, [r7, #16]
 5113 0482 1B68     		ldr	r3, [r3]
 5114 0484 03F00103 		and	r3, r3, #1
 5115 0488 002B     		cmp	r3, #0
 5116 048a 05D0     		beq	.L296
ARM GAS  /tmp/ccumkl9n.s 			page 190


 5117              		.loc 1 5674 0 discriminator 3
 5118 048c 0123     		movs	r3, #1
 5119 048e 04E0     		b	.L297
 5120              	.L307:
 5121              		.align	2
 5122              	.L306:
 5123 0490 00F0FF83 		.word	-2080378880
 5124 0494 00030050 		.word	1342178048
 5125              	.L296:
 5126              		.loc 1 5674 0 discriminator 4
 5127 0498 0023     		movs	r3, #0
 5128              	.L297:
5673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 5129              		.loc 1 5673 0 is_stmt 1
 5130 049a 002B     		cmp	r3, #0
 5131 049c 3DD1     		bne	.L294
 5132              	.L295:
5675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_16 is selected, enable Temp. sensor measurement path    */
5677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Temp. sensor internal channels available on ADC1 only        */
5678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && (hadc->Instance == ADC1))
 5133              		.loc 1 5678 0
 5134 049e 3B68     		ldr	r3, [r7]
 5135 04a0 1B68     		ldr	r3, [r3]
 5136 04a2 102B     		cmp	r3, #16
 5137 04a4 1DD1     		bne	.L298
 5138              		.loc 1 5678 0 is_stmt 0 discriminator 1
 5139 04a6 7B68     		ldr	r3, [r7, #4]
 5140 04a8 1B68     		ldr	r3, [r3]
 5141 04aa B3F1A04F 		cmp	r3, #1342177280
 5142 04ae 18D1     		bne	.L298
5679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
 5143              		.loc 1 5680 0 is_stmt 1
 5144 04b0 7B6E     		ldr	r3, [r7, #100]
 5145 04b2 9B68     		ldr	r3, [r3, #8]
 5146 04b4 43F40002 		orr	r2, r3, #8388608
 5147 04b8 7B6E     		ldr	r3, [r7, #100]
 5148 04ba 9A60     		str	r2, [r3, #8]
5681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
5682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
5683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
5684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 5149              		.loc 1 5684 0
 5150 04bc 264B     		ldr	r3, .L308
 5151 04be 1B68     		ldr	r3, [r3]
 5152 04c0 264A     		ldr	r2, .L308+4
 5153 04c2 A2FB0323 		umull	r2, r3, r2, r3
 5154 04c6 9A0C     		lsrs	r2, r3, #18
 5155 04c8 1346     		mov	r3, r2
 5156 04ca 9B00     		lsls	r3, r3, #2
 5157 04cc 1344     		add	r3, r3, r2
 5158 04ce 5B00     		lsls	r3, r3, #1
 5159 04d0 FB60     		str	r3, [r7, #12]
5685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 5160              		.loc 1 5685 0
 5161 04d2 02E0     		b	.L299
ARM GAS  /tmp/ccumkl9n.s 			page 191


 5162              	.L300:
5686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
5687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
 5163              		.loc 1 5687 0
 5164 04d4 FB68     		ldr	r3, [r7, #12]
 5165 04d6 013B     		subs	r3, r3, #1
 5166 04d8 FB60     		str	r3, [r7, #12]
 5167              	.L299:
5685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 5168              		.loc 1 5685 0
 5169 04da FB68     		ldr	r3, [r7, #12]
 5170 04dc 002B     		cmp	r3, #0
 5171 04de F9D1     		bne	.L300
5678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5172              		.loc 1 5678 0
 5173 04e0 25E0     		b	.L285
 5174              	.L298:
5688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
5689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_17 is selected, enable VBAT measurement path            */
5691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VBAT internal channels available on ADC1 only                */
5692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && (hadc->Instance == ADC1))
 5175              		.loc 1 5692 0
 5176 04e2 3B68     		ldr	r3, [r7]
 5177 04e4 1B68     		ldr	r3, [r3]
 5178 04e6 112B     		cmp	r3, #17
 5179 04e8 0BD1     		bne	.L302
 5180              		.loc 1 5692 0 is_stmt 0 discriminator 1
 5181 04ea 7B68     		ldr	r3, [r7, #4]
 5182 04ec 1B68     		ldr	r3, [r3]
 5183 04ee B3F1A04F 		cmp	r3, #1342177280
 5184 04f2 06D1     		bne	.L302
5693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
 5185              		.loc 1 5694 0 is_stmt 1
 5186 04f4 7B6E     		ldr	r3, [r7, #100]
 5187 04f6 9B68     		ldr	r3, [r3, #8]
 5188 04f8 43F08072 		orr	r2, r3, #16777216
 5189 04fc 7B6E     		ldr	r3, [r7, #100]
 5190 04fe 9A60     		str	r2, [r3, #8]
 5191 0500 0AE0     		b	.L301
 5192              	.L302:
5695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_18 is selected, enable VREFINT measurement path         */
5697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VrefInt internal channels available on all ADCs, but only    */
5698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       one ADC is allowed to be connected to VrefInt at the same    */
5699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       time.                                                        */
5700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if (sConfig->Channel == ADC_CHANNEL_VREFINT)
 5193              		.loc 1 5700 0
 5194 0502 3B68     		ldr	r3, [r7]
 5195 0504 1B68     		ldr	r3, [r3]
 5196 0506 122B     		cmp	r3, #18
 5197 0508 06D1     		bne	.L301
5701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
5702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
 5198              		.loc 1 5702 0
 5199 050a 7B6E     		ldr	r3, [r7, #100]
ARM GAS  /tmp/ccumkl9n.s 			page 192


 5200 050c 9B68     		ldr	r3, [r3, #8]
 5201 050e 43F48002 		orr	r2, r3, #4194304
 5202 0512 7B6E     		ldr	r3, [r7, #100]
 5203 0514 9A60     		str	r2, [r3, #8]
5678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5204              		.loc 1 5678 0
 5205 0516 0AE0     		b	.L285
 5206              	.L301:
5678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 5207              		.loc 1 5678 0 is_stmt 0 discriminator 1
 5208 0518 09E0     		b	.L285
 5209              	.L294:
5703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
5704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been          */
5706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* enabled and other ADC of the common group are enabled, internal      */
5707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
5708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else  
5709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
5711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 5210              		.loc 1 5711 0 is_stmt 1
 5211 051a 7B68     		ldr	r3, [r7, #4]
 5212 051c 5B6C     		ldr	r3, [r3, #68]
 5213 051e 43F02002 		orr	r2, r3, #32
 5214 0522 7B68     		ldr	r3, [r7, #4]
 5215 0524 5A64     		str	r2, [r3, #68]
5712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
5713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 5216              		.loc 1 5713 0
 5217 0526 0123     		movs	r3, #1
 5218 0528 87F86F30 		strb	r3, [r7, #111]
 5219 052c 09E0     		b	.L303
 5220              	.L285:
 5221 052e 08E0     		b	.L303
 5222              	.L265:
5714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If a conversion is on going on regular group, no update on regular       */
5721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* channel could be done on neither of the channel configuration structure  */
5722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* parameters.                                                              */
5723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
5726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 5223              		.loc 1 5726 0
 5224 0530 7B68     		ldr	r3, [r7, #4]
 5225 0532 5B6C     		ldr	r3, [r3, #68]
 5226 0534 43F02002 		orr	r2, r3, #32
 5227 0538 7B68     		ldr	r3, [r7, #4]
 5228 053a 5A64     		str	r2, [r3, #68]
5727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
ARM GAS  /tmp/ccumkl9n.s 			page 193


 5229              		.loc 1 5728 0
 5230 053c 0123     		movs	r3, #1
 5231 053e 87F86F30 		strb	r3, [r7, #111]
 5232              	.L303:
5729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 5233              		.loc 1 5732 0
 5234 0542 7B68     		ldr	r3, [r7, #4]
 5235 0544 0022     		movs	r2, #0
 5236 0546 83F84020 		strb	r2, [r3, #64]
5733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 5237              		.loc 1 5735 0
 5238 054a 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 5239              	.L304:
5736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 5240              		.loc 1 5736 0 discriminator 3
 5241 054e 1846     		mov	r0, r3
 5242 0550 7037     		adds	r7, r7, #112
 5243              	.LCFI151:
 5244              		.cfi_def_cfa_offset 8
 5245 0552 BD46     		mov	sp, r7
 5246              	.LCFI152:
 5247              		.cfi_def_cfa_register 13
 5248              		@ sp needed
 5249 0554 90BC     		pop	{r4, r7}
 5250              	.LCFI153:
 5251              		.cfi_restore 7
 5252              		.cfi_restore 4
 5253              		.cfi_def_cfa_offset 0
 5254 0556 7047     		bx	lr
 5255              	.L309:
 5256              		.align	2
 5257              	.L308:
 5258 0558 00000000 		.word	SystemCoreClock
 5259 055c 83DE1B43 		.word	1125899907
 5260              		.cfi_endproc
 5261              	.LFE151:
 5263              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 5264              		.align	2
 5265              		.global	HAL_ADCEx_InjectedConfigChannel
 5266              		.thumb
 5267              		.thumb_func
 5269              	HAL_ADCEx_InjectedConfigChannel:
 5270              	.LFB152:
5737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
5738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
5739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
5740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
5741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
5743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the the selected channel to be linked to the regular
5745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         group.
ARM GAS  /tmp/ccumkl9n.s 			page 194


5746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
5750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes channel into regular group, following  
5756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
5757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_ChannelConfTypeDef" on the fly, without reseting 
5758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
5759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_ChannelConfTypeDef".
5762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfig: Structure of ADC channel for regular group.
5764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
5765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
5767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** { 
5768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
5769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
5770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
5774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
5775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
5776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
5779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Regular sequence configuration */
5782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 1 to 6U */
5783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->Rank < 7U)
5784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR3                        ,
5786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank)    ,
5787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR3_RK(sConfig->Channel, sConfig->Rank) );
5788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 7 to 12U */
5790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfig->Rank < 13U)
5791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR2                        ,
5793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank)    ,
5794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR2_RK(sConfig->Channel, sConfig->Rank) );
5795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For Rank 13 to 16U */
5797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SQR1                        ,
5800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank)   ,
5801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SQR1_RK(sConfig->Channel, sConfig->Rank) );
5802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
ARM GAS  /tmp/ccumkl9n.s 			page 195


5803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Channel sampling time configuration */
5806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For channels 10 to 18U */
5807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfig->Channel > ADC_CHANNEL_10)
5808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1                             ,
5810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel)      ,
5811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel) );
5812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else   /* For channels 0 to 9U */
5814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2                             ,
5816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel)       ,
5817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel) );
5818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
5821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
5822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) ||
5823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfig->Channel == ADC_CHANNEL_VREFINT)      )
5824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
5826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
5828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Delay for temperature sensor stabilization time */
5830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Compute number of CPU cycles to wait for */
5831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
5832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       while(wait_loop_index != 0U)
5833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         wait_loop_index--;
5835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
5837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* if ADC1 Channel_18 is selected, enable VBAT measurement path */
5839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfig->Channel == ADC_CHANNEL_VBAT)
5840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_VBAT);
5842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
5845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
5846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
5847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
5849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
5850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
5851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
5852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
5853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
5854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
5855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
5856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
5857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
5858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
5859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         linked to the injected group.
ARM GAS  /tmp/ccumkl9n.s 			page 196


5860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
5861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
5862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
5863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without reseting the ADC.
5864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
5865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
5866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef".
5867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
5868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
5869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
5870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
5871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
5872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
5873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
5874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
5875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To reset injected sequencer, function HAL_ADCEx_InjectedStop() can
5876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be used.
5877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use: a context must be fully 
5878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * defined before start of injected conversion: all channels configured 
5879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * consecutively for the same ADC instance. Therefore, Number of calls of 
5880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * HAL_ADCEx_InjectedConfigChannel() must correspond to value of parameter 
5881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * InjectedNbrOfConversion for each context.
5882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *  - Example 1: If 1 context intended to be used (or not use of this feature: 
5883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    QueueInjectedContext=DISABLE) and usage of the 3 first injected ranks 
5884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion=3), HAL_ADCEx_InjectedConfigChannel() must be  
5885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    called once for each channel (3 times) before launching a conversion.   
5886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    This function must not be called to configure the 4th injected channel:   
5887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
5888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts intended to be used and usage of the 3 first 
5889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    injected ranks (InjectedNbrOfConversion=3),  
5890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and  
5891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can  
5892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *    start once the 1st context is set. The 2nd context can be set on the fly.
5893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
5894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfigInjected: Structure of ADC injected group and ADC channel for
5895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected group.
5896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
5897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
5898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
5899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 5271              		.loc 1 5899 0
 5272              		.cfi_startproc
 5273              		@ args = 0, pretend = 0, frame = 112
 5274              		@ frame_needed = 1, uses_anonymous_args = 0
 5275              		@ link register save eliminated.
 5276 0000 90B4     		push	{r4, r7}
 5277              	.LCFI154:
 5278              		.cfi_def_cfa_offset 8
 5279              		.cfi_offset 4, -8
 5280              		.cfi_offset 7, -4
 5281 0002 9CB0     		sub	sp, sp, #112
 5282              	.LCFI155:
 5283              		.cfi_def_cfa_offset 120
 5284 0004 00AF     		add	r7, sp, #0
 5285              	.LCFI156:
 5286              		.cfi_def_cfa_register 7
 5287 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 197


 5288 0008 3960     		str	r1, [r7]
5900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 5289              		.loc 1 5900 0
 5290 000a 0023     		movs	r3, #0
 5291 000c 87F86F30 		strb	r3, [r7, #111]
5901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
5902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
5903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
5904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
 5292              		.loc 1 5904 0
 5293 0010 0023     		movs	r3, #0
 5294 0012 BB60     		str	r3, [r7, #8]
5905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Injected context queue feature: temporary JSQR variables defined in      */
5907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* static to be passed over calls of this function                          */
5908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
 5295              		.loc 1 5908 0
 5296 0014 0023     		movs	r3, #0
 5297 0016 BB66     		str	r3, [r7, #104]
5909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
5911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
5912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
5913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
5914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
5915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
5916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
5917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
5918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
5919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
5920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
5922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
5924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
5925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
5926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification of channel number: Channels 1 to 14 are available in        */  
5929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* differential mode. Channels 15U, 16U, 17U, 18 can be used only in           */
5930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* single-ended mode.                                                       */
5931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
5932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
5934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
5936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(sConfigInjected->InjectedChannel));
5938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
5939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
5941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 5298              		.loc 1 5941 0
 5299 0018 7B68     		ldr	r3, [r7, #4]
 5300 001a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 5301 001e 012B     		cmp	r3, #1
 5302 0020 01D1     		bne	.L311
ARM GAS  /tmp/ccumkl9n.s 			page 198


 5303              		.loc 1 5941 0 is_stmt 0 discriminator 1
 5304 0022 0223     		movs	r3, #2
 5305 0024 EEE2     		b	.L359
 5306              	.L311:
 5307              		.loc 1 5941 0 discriminator 2
 5308 0026 7B68     		ldr	r3, [r7, #4]
 5309 0028 0122     		movs	r2, #1
 5310 002a 83F84020 		strb	r2, [r3, #64]
5942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of Injected group sequencer.                               */
5944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
5945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
5946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*                                                                          */
5947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
5948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
5949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1U)                              */
5950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
5951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
5952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1U) and can  */
5953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
5954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
5955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
5956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
5957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
5958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
5959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
5960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
5961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
5962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
5963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
5964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
 5311              		.loc 1 5964 0 is_stmt 1 discriminator 2
 5312 002e 7B68     		ldr	r3, [r7, #4]
 5313 0030 1B69     		ldr	r3, [r3, #16]
 5314 0032 002B     		cmp	r3, #0
 5315 0034 03D0     		beq	.L313
5965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U)  )
 5316              		.loc 1 5965 0 discriminator 1
 5317 0036 3B68     		ldr	r3, [r7]
 5318 0038 9B69     		ldr	r3, [r3, #24]
5964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U)  )
 5319              		.loc 1 5964 0 discriminator 1
 5320 003a 012B     		cmp	r3, #1
 5321 003c 32D1     		bne	.L314
 5322              	.L313:
5966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
5967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
5968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
5969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
5970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
5971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
5972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 used)        */
5973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
5974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
 5323              		.loc 1 5974 0
 5324 003e 3B68     		ldr	r3, [r7]
 5325 0040 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 199


 5326 0042 012B     		cmp	r3, #1
 5327 0044 24D1     		bne	.L315
5975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
5976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
5977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* software start.                                                      */
5978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
5979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
5980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       software start.                                                */
5981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 5328              		.loc 1 5981 0
 5329 0046 3B68     		ldr	r3, [r7]
 5330 0048 9B6A     		ldr	r3, [r3, #40]
 5331 004a 012B     		cmp	r3, #1
 5332 004c 0CD0     		beq	.L316
5982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmp_JSQR_ContextQueueBeingBuilt, ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_
 5333              		.loc 1 5983 0
 5334 004e 3B68     		ldr	r3, [r7]
 5335 0050 1B68     		ldr	r3, [r3]
 5336 0052 1A02     		lsls	r2, r3, #8
 5337 0054 3B68     		ldr	r3, [r7]
 5338 0056 9B6A     		ldr	r3, [r3, #40]
 5339 0058 1A43     		orrs	r2, r2, r3
 5340 005a 3B68     		ldr	r3, [r7]
 5341 005c DB6A     		ldr	r3, [r3, #44]
 5342 005e 1343     		orrs	r3, r3, r2
 5343 0060 BA6E     		ldr	r2, [r7, #104]
 5344 0062 1343     		orrs	r3, r3, r2
 5345 0064 BB66     		str	r3, [r7, #104]
 5346 0066 05E0     		b	.L317
 5347              	.L316:
5984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Extern
5985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                  sConfigInjected->ExternalTrigInjecConvEdge        
5986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
5988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
5989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(tmp_JSQR_ContextQueueBeingBuilt, ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_
 5348              		.loc 1 5989 0
 5349 0068 3B68     		ldr	r3, [r7]
 5350 006a 1B68     		ldr	r3, [r3]
 5351 006c 1B02     		lsls	r3, r3, #8
 5352 006e BA6E     		ldr	r2, [r7, #104]
 5353 0070 1343     		orrs	r3, r3, r2
 5354 0072 BB66     		str	r3, [r7, #104]
 5355              	.L317:
5990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
5991:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
5992:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC register JSQR */
5993:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR           ,
 5356              		.loc 1 5993 0
 5357 0074 7B68     		ldr	r3, [r7, #4]
 5358 0076 1A68     		ldr	r2, [r3]
 5359 0078 7B68     		ldr	r3, [r7, #4]
 5360 007a 1B68     		ldr	r3, [r3]
 5361 007c D96C     		ldr	r1, [r3, #76]
 5362 007e 9A4B     		ldr	r3, .L361
 5363 0080 0B40     		ands	r3, r3, r1
ARM GAS  /tmp/ccumkl9n.s 			page 200


 5364 0082 B96E     		ldr	r1, [r7, #104]
 5365 0084 0B43     		orrs	r3, r3, r1
 5366 0086 D364     		str	r3, [r2, #76]
5994:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4    |
5995:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3    |
5996:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2    |
5997:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1    |
5998:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JEXTEN  |
5999:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JEXTSEL |
6000:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                    ,
6001:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmp_JSQR_ContextQueueBeingBuilt );
6002:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6003:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
6004:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
 5367              		.loc 1 6004 0
 5368 0088 7B68     		ldr	r3, [r7, #4]
 5369 008a BA6E     		ldr	r2, [r7, #104]
 5370 008c DA64     		str	r2, [r3, #76]
5974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5371              		.loc 1 5974 0
 5372 008e 60E0     		b	.L319
 5373              	.L315:
6005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6006:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
6007:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
6008:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6009:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6010:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
6011:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 5374              		.loc 1 6011 0
 5375 0090 7B68     		ldr	r3, [r7, #4]
 5376 0092 5B6C     		ldr	r3, [r3, #68]
 5377 0094 43F02002 		orr	r2, r3, #32
 5378 0098 7B68     		ldr	r3, [r7, #4]
 5379 009a 5A64     		str	r2, [r3, #68]
6012:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6013:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
 5380              		.loc 1 6013 0
 5381 009c 0123     		movs	r3, #1
 5382 009e 87F86F30 		strb	r3, [r7, #111]
5974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 5383              		.loc 1 5974 0
 5384 00a2 56E0     		b	.L319
 5385              	.L314:
6014:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6015:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6017:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6018:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6019:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
6020:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* sequencer.                                                             */
6021:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
6022:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
6023:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6024:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
6025:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger                      */
6026:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
ARM GAS  /tmp/ccumkl9n.s 			page 201


 5386              		.loc 1 6026 0
 5387 00a4 7B68     		ldr	r3, [r7, #4]
 5388 00a6 1B6D     		ldr	r3, [r3, #80]
 5389 00a8 002B     		cmp	r3, #0
 5390 00aa 21D1     		bne	.L320
6027:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6028:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
6029:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  being built                                                         */
6030:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
 5391              		.loc 1 6030 0
 5392 00ac 3B68     		ldr	r3, [r7]
 5393 00ae 9A69     		ldr	r2, [r3, #24]
 5394 00b0 7B68     		ldr	r3, [r7, #4]
 5395 00b2 1A65     		str	r2, [r3, #80]
6031:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Initialize value that will be set into register JSQR */
6032:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 5396              		.loc 1 6032 0
 5397 00b4 7B68     		ldr	r3, [r7, #4]
 5398 00b6 0022     		movs	r2, #0
 5399 00b8 DA64     		str	r2, [r3, #76]
6033:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6034:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
6035:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
6036:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
6037:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
6038:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6039:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
6040:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* software start.                                                      */
6041:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
6042:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
6043:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       software start.                                                */
6044:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 5400              		.loc 1 6044 0
 5401 00ba 3B68     		ldr	r3, [r7]
 5402 00bc 9B6A     		ldr	r3, [r3, #40]
 5403 00be 012B     		cmp	r3, #1
 5404 00c0 0ED0     		beq	.L321
6045:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6046:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->InjectionConfig.ContextQueue, (sConfigInjected->InjectedNbrOfConversion - 1U)
 5405              		.loc 1 6046 0
 5406 00c2 7B68     		ldr	r3, [r7, #4]
 5407 00c4 DA6C     		ldr	r2, [r3, #76]
 5408 00c6 3B68     		ldr	r3, [r7]
 5409 00c8 9B69     		ldr	r3, [r3, #24]
 5410 00ca 591E     		subs	r1, r3, #1
 5411 00cc 3B68     		ldr	r3, [r7]
 5412 00ce 9B6A     		ldr	r3, [r3, #40]
 5413 00d0 1943     		orrs	r1, r1, r3
 5414 00d2 3B68     		ldr	r3, [r7]
 5415 00d4 DB6A     		ldr	r3, [r3, #44]
 5416 00d6 0B43     		orrs	r3, r3, r1
 5417 00d8 1A43     		orrs	r2, r2, r3
 5418 00da 7B68     		ldr	r3, [r7, #4]
 5419 00dc DA64     		str	r2, [r3, #76]
 5420 00de 07E0     		b	.L320
 5421              	.L321:
6047:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     ADC_JSQR_JEXTSEL_SET(hadc, sConfigInjected->Ext
ARM GAS  /tmp/ccumkl9n.s 			page 202


6048:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                                     sConfigInjected->ExternalTrigInjecConvEdge     
6049:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6050:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6051:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6052:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->InjectionConfig.ContextQueue, (sConfigInjected->InjectedNbrOfConversion - 1U)
 5422              		.loc 1 6052 0
 5423 00e0 7B68     		ldr	r3, [r7, #4]
 5424 00e2 DA6C     		ldr	r2, [r3, #76]
 5425 00e4 3B68     		ldr	r3, [r7]
 5426 00e6 9B69     		ldr	r3, [r3, #24]
 5427 00e8 013B     		subs	r3, r3, #1
 5428 00ea 1A43     		orrs	r2, r2, r3
 5429 00ec 7B68     		ldr	r3, [r7, #4]
 5430 00ee DA64     		str	r2, [r3, #76]
 5431              	.L320:
6053:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6054:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6055:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6056:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6057:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* 2. Continue setting of context under definition with parameter       */
6058:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    related to each channel: channel rank sequence                    */
6059:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6060:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the JSQx bits for the selected rank */
6061:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->InjectionConfig.ContextQueue                                          ,
 5432              		.loc 1 6061 0
 5433 00f0 7B68     		ldr	r3, [r7, #4]
 5434 00f2 D96C     		ldr	r1, [r3, #76]
 5435 00f4 3B68     		ldr	r3, [r7]
 5436 00f6 5A68     		ldr	r2, [r3, #4]
 5437 00f8 1346     		mov	r3, r2
 5438 00fa 5B00     		lsls	r3, r3, #1
 5439 00fc 1344     		add	r3, r3, r2
 5440 00fe 5B00     		lsls	r3, r3, #1
 5441 0100 0233     		adds	r3, r3, #2
 5442 0102 1A46     		mov	r2, r3
 5443 0104 1F23     		movs	r3, #31
 5444 0106 9340     		lsls	r3, r3, r2
 5445 0108 DB43     		mvns	r3, r3
 5446 010a 1940     		ands	r1, r1, r3
 5447 010c 3B68     		ldr	r3, [r7]
 5448 010e 1868     		ldr	r0, [r3]
 5449 0110 3B68     		ldr	r3, [r7]
 5450 0112 5A68     		ldr	r2, [r3, #4]
 5451 0114 1346     		mov	r3, r2
 5452 0116 5B00     		lsls	r3, r3, #1
 5453 0118 1344     		add	r3, r3, r2
 5454 011a 5B00     		lsls	r3, r3, #1
 5455 011c 0233     		adds	r3, r3, #2
 5456 011e 00FA03F3 		lsl	r3, r0, r3
 5457 0122 41EA0302 		orr	r2, r1, r3
 5458 0126 7B68     		ldr	r3, [r7, #4]
 5459 0128 DA64     		str	r2, [r3, #76]
6062:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank)                   ,
6063:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjected->InjectedRank) );
6064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6065:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Decrease channel count after setting into temporary JSQR variable */
6066:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount --;
ARM GAS  /tmp/ccumkl9n.s 			page 203


 5460              		.loc 1 6066 0
 5461 012a 7B68     		ldr	r3, [r7, #4]
 5462 012c 1B6D     		ldr	r3, [r3, #80]
 5463 012e 5A1E     		subs	r2, r3, #1
 5464 0130 7B68     		ldr	r3, [r7, #4]
 5465 0132 1A65     		str	r2, [r3, #80]
6067:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6068:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* 3. End of context setting: If last channel set, then write context   */
6069:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    into register JSQR and make it enter into queue                   */
6070:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (hadc->InjectionConfig.ChannelCount == 0U)
 5466              		.loc 1 6070 0
 5467 0134 7B68     		ldr	r3, [r7, #4]
 5468 0136 1B6D     		ldr	r3, [r3, #80]
 5469 0138 002B     		cmp	r3, #0
 5470 013a 0AD1     		bne	.L319
6071:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6072:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC register JSQR */
6073:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->JSQR              ,
 5471              		.loc 1 6073 0
 5472 013c 7B68     		ldr	r3, [r7, #4]
 5473 013e 1A68     		ldr	r2, [r3]
 5474 0140 7B68     		ldr	r3, [r7, #4]
 5475 0142 1B68     		ldr	r3, [r3]
 5476 0144 D96C     		ldr	r1, [r3, #76]
 5477 0146 684B     		ldr	r3, .L361
 5478 0148 0B40     		ands	r3, r3, r1
 5479 014a 7968     		ldr	r1, [r7, #4]
 5480 014c C96C     		ldr	r1, [r1, #76]
 5481 014e 0B43     		orrs	r3, r3, r1
 5482 0150 D364     		str	r3, [r2, #76]
 5483              	.L319:
6074:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ4    |
6075:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ3    |
6076:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ2    |
6077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JSQ1    |
6078:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JEXTEN  |
6079:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JEXTSEL |
6080:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_JSQR_JL                       ,
6081:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    hadc->InjectionConfig.ContextQueue );
6082:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6083:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6084:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6086:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6087:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6088:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6089:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
6090:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
6091:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
6092:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
6093:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
6094:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_INJECTED(hadc) == RESET)
 5484              		.loc 1 6094 0
 5485 0152 7B68     		ldr	r3, [r7, #4]
 5486 0154 1B68     		ldr	r3, [r3]
 5487 0156 9B68     		ldr	r3, [r3, #8]
 5488 0158 03F00803 		and	r3, r3, #8
ARM GAS  /tmp/ccumkl9n.s 			page 204


 5489 015c 002B     		cmp	r3, #0
 5490 015e 2DD1     		bne	.L322
6095:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {     
6096:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
6097:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
 5491              		.loc 1 6097 0
 5492 0160 3B68     		ldr	r3, [r7]
 5493 0162 1B6A     		ldr	r3, [r3, #32]
 5494 0164 002B     		cmp	r3, #0
 5495 0166 10D1     		bne	.L323
6098:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6099:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                                            ,
 5496              		.loc 1 6099 0
 5497 0168 7B68     		ldr	r3, [r7, #4]
 5498 016a 1B68     		ldr	r3, [r3]
 5499 016c 7A68     		ldr	r2, [r7, #4]
 5500 016e 1268     		ldr	r2, [r2]
 5501 0170 D268     		ldr	r2, [r2, #12]
 5502 0172 22F44011 		bic	r1, r2, #3145728
 5503 0176 3A68     		ldr	r2, [r7]
 5504 0178 526A     		ldr	r2, [r2, #36]
 5505 017a 5005     		lsls	r0, r2, #21
 5506 017c 3A68     		ldr	r2, [r7]
 5507 017e D269     		ldr	r2, [r2, #28]
 5508 0180 1205     		lsls	r2, r2, #20
 5509 0182 0243     		orrs	r2, r2, r0
 5510 0184 0A43     		orrs	r2, r2, r1
 5511 0186 DA60     		str	r2, [r3, #12]
 5512 0188 18E0     		b	.L322
 5513              	.L323:
6100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
6101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JDISCEN                                                                ,
6102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext)           | 
6103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS(sConfigInjected->InjectedDiscontinuousConvMode)   )
6104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
6106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* discarded.                                                             */
6107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                                ,
 5514              		.loc 1 6109 0
 5515 018a 7B68     		ldr	r3, [r7, #4]
 5516 018c 1B68     		ldr	r3, [r3]
 5517 018e 7A68     		ldr	r2, [r7, #4]
 5518 0190 1268     		ldr	r2, [r2]
 5519 0192 D268     		ldr	r2, [r2, #12]
 5520 0194 22F44011 		bic	r1, r2, #3145728
 5521 0198 3A68     		ldr	r2, [r7]
 5522 019a 526A     		ldr	r2, [r2, #36]
 5523 019c 5205     		lsls	r2, r2, #21
 5524 019e 0A43     		orrs	r2, r2, r1
 5525 01a0 DA60     		str	r2, [r3, #12]
6110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JQM    |
6111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JDISCEN                                                    ,
6112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE(sConfigInjected->QueueInjectedContext) );
6113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If injected discontinuous mode was intended to be set and could not  */
ARM GAS  /tmp/ccumkl9n.s 			page 205


6115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* due to auto-injected enabled, error is reported.                     */
6116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
 5526              		.loc 1 6116 0
 5527 01a2 3B68     		ldr	r3, [r7]
 5528 01a4 DB69     		ldr	r3, [r3, #28]
 5529 01a6 012B     		cmp	r3, #1
 5530 01a8 08D1     		bne	.L322
6117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 5531              		.loc 1 6119 0
 5532 01aa 7B68     		ldr	r3, [r7, #4]
 5533 01ac 5B6C     		ldr	r3, [r3, #68]
 5534 01ae 43F02002 		orr	r2, r3, #32
 5535 01b2 7B68     		ldr	r3, [r7, #4]
 5536 01b4 5A64     		str	r2, [r3, #68]
6120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 5537              		.loc 1 6121 0
 5538 01b6 0123     		movs	r3, #1
 5539 01b8 87F86F30 		strb	r3, [r7, #111]
 5540              	.L322:
6122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
6131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
6132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
6133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
6134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
6135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 5541              		.loc 1 6135 0
 5542 01bc 7B68     		ldr	r3, [r7, #4]
 5543 01be 1B68     		ldr	r3, [r3]
 5544 01c0 9B68     		ldr	r3, [r3, #8]
 5545 01c2 03F00C03 		and	r3, r3, #12
 5546 01c6 002B     		cmp	r3, #0
 5547 01c8 40F00F81 		bne	.L324
6136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {    
6137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
6138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
6139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 5548              		.loc 1 6139 0
 5549 01cc 3B68     		ldr	r3, [r7]
 5550 01ce 9B6A     		ldr	r3, [r3, #40]
 5551 01d0 012B     		cmp	r3, #1
 5552 01d2 0CD1     		bne	.L325
6140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                                              ,
 5553              		.loc 1 6141 0
 5554 01d4 7B68     		ldr	r3, [r7, #4]
 5555 01d6 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccumkl9n.s 			page 206


 5556 01d8 7A68     		ldr	r2, [r7, #4]
 5557 01da 1268     		ldr	r2, [r2]
 5558 01dc D268     		ldr	r2, [r2, #12]
 5559 01de 22F00071 		bic	r1, r2, #33554432
 5560 01e2 3A68     		ldr	r2, [r7]
 5561 01e4 126A     		ldr	r2, [r2, #32]
 5562 01e6 5206     		lsls	r2, r2, #25
 5563 01e8 0A43     		orrs	r2, r2, r1
 5564 01ea DA60     		str	r2, [r3, #12]
 5565 01ec 14E0     		b	.L326
 5566              	.L325:
6142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JAUTO                                                    ,
6143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_AUTO_CONVERSION(sConfigInjected->AutoInjectedConv) );
6144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
6146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
6147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable Automatic injected conversion */
6150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 5567              		.loc 1 6150 0
 5568 01ee 7B68     		ldr	r3, [r7, #4]
 5569 01f0 1B68     		ldr	r3, [r3]
 5570 01f2 7A68     		ldr	r2, [r7, #4]
 5571 01f4 1268     		ldr	r2, [r2]
 5572 01f6 D268     		ldr	r2, [r2, #12]
 5573 01f8 22F00072 		bic	r2, r2, #33554432
 5574 01fc DA60     		str	r2, [r3, #12]
6151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 5575              		.loc 1 6152 0
 5576 01fe 3B68     		ldr	r3, [r7]
 5577 0200 1B6A     		ldr	r3, [r3, #32]
 5578 0202 012B     		cmp	r3, #1
 5579 0204 08D1     		bne	.L326
6153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 5580              		.loc 1 6155 0
 5581 0206 7B68     		ldr	r3, [r7, #4]
 5582 0208 5B6C     		ldr	r3, [r3, #68]
 5583 020a 43F02002 		orr	r2, r3, #32
 5584 020e 7B68     		ldr	r3, [r7, #4]
 5585 0210 5A64     		str	r2, [r3, #68]
6156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 5586              		.loc 1 6157 0
 5587 0212 0123     		movs	r3, #1
 5588 0214 87F86F30 		strb	r3, [r7, #111]
 5589              	.L326:
6158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Channel sampling time configuration */
6163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* For channels 10 to 18U */
6164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
ARM GAS  /tmp/ccumkl9n.s 			page 207


 5590              		.loc 1 6164 0
 5591 0218 3B68     		ldr	r3, [r7]
 5592 021a 1B68     		ldr	r3, [r3]
 5593 021c 092B     		cmp	r3, #9
 5594 021e 1CD9     		bls	.L327
6165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR2                                                             
 5595              		.loc 1 6166 0
 5596 0220 7B68     		ldr	r3, [r7, #4]
 5597 0222 1968     		ldr	r1, [r3]
 5598 0224 7B68     		ldr	r3, [r7, #4]
 5599 0226 1B68     		ldr	r3, [r3]
 5600 0228 9869     		ldr	r0, [r3, #24]
 5601 022a 3B68     		ldr	r3, [r7]
 5602 022c 1A68     		ldr	r2, [r3]
 5603 022e 1346     		mov	r3, r2
 5604 0230 5B00     		lsls	r3, r3, #1
 5605 0232 1344     		add	r3, r3, r2
 5606 0234 1E3B     		subs	r3, r3, #30
 5607 0236 1A46     		mov	r2, r3
 5608 0238 0723     		movs	r3, #7
 5609 023a 9340     		lsls	r3, r3, r2
 5610 023c DB43     		mvns	r3, r3
 5611 023e 1840     		ands	r0, r0, r3
 5612 0240 3B68     		ldr	r3, [r7]
 5613 0242 9C68     		ldr	r4, [r3, #8]
 5614 0244 3B68     		ldr	r3, [r7]
 5615 0246 1A68     		ldr	r2, [r3]
 5616 0248 1346     		mov	r3, r2
 5617 024a 5B00     		lsls	r3, r3, #1
 5618 024c 1344     		add	r3, r3, r2
 5619 024e 1E3B     		subs	r3, r3, #30
 5620 0250 04FA03F3 		lsl	r3, r4, r3
 5621 0254 0343     		orrs	r3, r3, r0
 5622 0256 8B61     		str	r3, [r1, #24]
 5623 0258 19E0     		b	.L328
 5624              	.L327:
6167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel)                      
6168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel)
6169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* For channels 1 to 9U */
6171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->SMPR1                                                             
 5625              		.loc 1 6172 0
 5626 025a 7B68     		ldr	r3, [r7, #4]
 5627 025c 1968     		ldr	r1, [r3]
 5628 025e 7B68     		ldr	r3, [r7, #4]
 5629 0260 1B68     		ldr	r3, [r3]
 5630 0262 5869     		ldr	r0, [r3, #20]
 5631 0264 3B68     		ldr	r3, [r7]
 5632 0266 1A68     		ldr	r2, [r3]
 5633 0268 1346     		mov	r3, r2
 5634 026a 5B00     		lsls	r3, r3, #1
 5635 026c 1344     		add	r3, r3, r2
 5636 026e 1A46     		mov	r2, r3
 5637 0270 0723     		movs	r3, #7
 5638 0272 9340     		lsls	r3, r3, r2
ARM GAS  /tmp/ccumkl9n.s 			page 208


 5639 0274 DB43     		mvns	r3, r3
 5640 0276 1840     		ands	r0, r0, r3
 5641 0278 3B68     		ldr	r3, [r7]
 5642 027a 9C68     		ldr	r4, [r3, #8]
 5643 027c 3B68     		ldr	r3, [r7]
 5644 027e 1A68     		ldr	r2, [r3]
 5645 0280 1346     		mov	r3, r2
 5646 0282 5B00     		lsls	r3, r3, #1
 5647 0284 1344     		add	r3, r3, r2
 5648 0286 04FA03F3 		lsl	r3, r4, r3
 5649 028a 0343     		orrs	r3, r3, r0
 5650 028c 4B61     		str	r3, [r1, #20]
 5651              	.L328:
6173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel)                       
6174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel)
6175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
6178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the offset in function of the selected ADC resolution. */
6180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11U, the LSB (right bits) are set  */
6181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* to 0.                                                                  */
6182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
 5652              		.loc 1 6182 0
 5653 028e 3B68     		ldr	r3, [r7]
 5654 0290 5B69     		ldr	r3, [r3, #20]
 5655 0292 7A68     		ldr	r2, [r7, #4]
 5656 0294 1268     		ldr	r2, [r2]
 5657 0296 D268     		ldr	r2, [r2, #12]
 5658 0298 02F01802 		and	r2, r2, #24
 5659 029c D208     		lsrs	r2, r2, #3
 5660 029e 5200     		lsls	r2, r2, #1
 5661 02a0 9340     		lsls	r3, r3, r2
 5662 02a2 7B66     		str	r3, [r7, #100]
6183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configure the selected offset register:                                */
6185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Enable offset                                                        */
6186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set channel number                                                   */
6187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* - Set offset value                                                     */
6188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch (sConfigInjected->InjectedOffsetNumber)
 5663              		.loc 1 6188 0
 5664 02a4 3B68     		ldr	r3, [r7]
 5665 02a6 1B69     		ldr	r3, [r3, #16]
 5666 02a8 013B     		subs	r3, r3, #1
 5667 02aa 032B     		cmp	r3, #3
 5668 02ac 53D8     		bhi	.L329
 5669 02ae 01A2     		adr	r2, .L331
 5670 02b0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5671              		.p2align 2
 5672              	.L331:
 5673 02b4 C5020000 		.word	.L330+1
 5674 02b8 F1020000 		.word	.L332+1
 5675 02bc 13030000 		.word	.L333+1
 5676 02c0 35030000 		.word	.L334+1
 5677              		.p2align 1
 5678              	.L330:
6189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
ARM GAS  /tmp/ccumkl9n.s 			page 209


6190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_1:
6191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 1U */
6192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR1                               ,
 5679              		.loc 1 6192 0
 5680 02c4 7B68     		ldr	r3, [r7, #4]
 5681 02c6 1A68     		ldr	r2, [r3]
 5682 02c8 7B68     		ldr	r3, [r7, #4]
 5683 02ca 1B68     		ldr	r3, [r3]
 5684 02cc 196E     		ldr	r1, [r3, #96]
 5685 02ce 074B     		ldr	r3, .L361+4
 5686 02d0 0B40     		ands	r3, r3, r1
 5687 02d2 3968     		ldr	r1, [r7]
 5688 02d4 0968     		ldr	r1, [r1]
 5689 02d6 8806     		lsls	r0, r1, #26
 5690 02d8 796E     		ldr	r1, [r7, #100]
 5691 02da 0143     		orrs	r1, r1, r0
 5692 02dc 0B43     		orrs	r3, r3, r1
 5693 02de 43F00043 		orr	r3, r3, #-2147483648
 5694 02e2 1366     		str	r3, [r2, #96]
6193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_CH |
6194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1                                   ,
6195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR1_OFFSET1_EN                               |
6196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 5695              		.loc 1 6198 0
 5696 02e4 81E0     		b	.L324
 5697              	.L362:
 5698 02e6 00BF     		.align	2
 5699              	.L361:
 5700 02e8 00200882 		.word	-2113396736
 5701 02ec 00F0FF83 		.word	-2080378880
 5702              	.L332:
6199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_2:
6201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 2U */
6202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR2                               ,
 5703              		.loc 1 6202 0
 5704 02f0 7B68     		ldr	r3, [r7, #4]
 5705 02f2 1A68     		ldr	r2, [r3]
 5706 02f4 7B68     		ldr	r3, [r7, #4]
 5707 02f6 1B68     		ldr	r3, [r3]
 5708 02f8 596E     		ldr	r1, [r3, #100]
 5709 02fa 984B     		ldr	r3, .L363
 5710 02fc 0B40     		ands	r3, r3, r1
 5711 02fe 3968     		ldr	r1, [r7]
 5712 0300 0968     		ldr	r1, [r1]
 5713 0302 8806     		lsls	r0, r1, #26
 5714 0304 796E     		ldr	r1, [r7, #100]
 5715 0306 0143     		orrs	r1, r1, r0
 5716 0308 0B43     		orrs	r3, r3, r1
 5717 030a 43F00043 		orr	r3, r3, #-2147483648
 5718 030e 5366     		str	r3, [r2, #100]
6203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_CH |
6204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2                                   ,
6205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR2_OFFSET2_EN                               |
6206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
ARM GAS  /tmp/ccumkl9n.s 			page 210


6207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 5719              		.loc 1 6208 0
 5720 0310 6BE0     		b	.L324
 5721              	.L333:
6209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_3:
6211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 3U */
6212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR3                               ,
 5722              		.loc 1 6212 0
 5723 0312 7B68     		ldr	r3, [r7, #4]
 5724 0314 1A68     		ldr	r2, [r3]
 5725 0316 7B68     		ldr	r3, [r7, #4]
 5726 0318 1B68     		ldr	r3, [r3]
 5727 031a 996E     		ldr	r1, [r3, #104]
 5728 031c 8F4B     		ldr	r3, .L363
 5729 031e 0B40     		ands	r3, r3, r1
 5730 0320 3968     		ldr	r1, [r7]
 5731 0322 0968     		ldr	r1, [r1]
 5732 0324 8806     		lsls	r0, r1, #26
 5733 0326 796E     		ldr	r1, [r7, #100]
 5734 0328 0143     		orrs	r1, r1, r0
 5735 032a 0B43     		orrs	r3, r3, r1
 5736 032c 43F00043 		orr	r3, r3, #-2147483648
 5737 0330 9366     		str	r3, [r2, #104]
6213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_CH |
6214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3                                   ,
6215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR3_OFFSET3_EN                               |
6216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 5738              		.loc 1 6218 0
 5739 0332 5AE0     		b	.L324
 5740              	.L334:
6219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_OFFSET_4:
6221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure offset register 4U */
6222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->OFR4                               ,
 5741              		.loc 1 6222 0
 5742 0334 7B68     		ldr	r3, [r7, #4]
 5743 0336 1A68     		ldr	r2, [r3]
 5744 0338 7B68     		ldr	r3, [r7, #4]
 5745 033a 1B68     		ldr	r3, [r3]
 5746 033c D96E     		ldr	r1, [r3, #108]
 5747 033e 874B     		ldr	r3, .L363
 5748 0340 0B40     		ands	r3, r3, r1
 5749 0342 3968     		ldr	r1, [r7]
 5750 0344 0968     		ldr	r1, [r1]
 5751 0346 8806     		lsls	r0, r1, #26
 5752 0348 796E     		ldr	r1, [r7, #100]
 5753 034a 0143     		orrs	r1, r1, r0
 5754 034c 0B43     		orrs	r3, r3, r1
 5755 034e 43F00043 		orr	r3, r3, #-2147483648
 5756 0352 D366     		str	r3, [r2, #108]
6223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_CH |
6224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4                                   ,
6225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR4_OFFSET4_EN                               |
ARM GAS  /tmp/ccumkl9n.s 			page 211


6226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_OFR_CHANNEL(sConfigInjected->InjectedChannel) |
6227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpOffsetShifted                                    );
6228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 5757              		.loc 1 6228 0
 5758 0354 49E0     		b	.L324
 5759              	.L329:
6229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_OFFSET_NONE */
6231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default :
6232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is        */
6233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enabled. If this is the case, offset OFRx is disabled.                 */
6234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
 5760              		.loc 1 6234 0
 5761 0356 7B68     		ldr	r3, [r7, #4]
 5762 0358 1B68     		ldr	r3, [r3]
 5763 035a 1B6E     		ldr	r3, [r3, #96]
 5764 035c 03F0F842 		and	r2, r3, #2080374784
 5765 0360 3B68     		ldr	r3, [r7]
 5766 0362 1B68     		ldr	r3, [r3]
 5767 0364 9B06     		lsls	r3, r3, #26
 5768 0366 9A42     		cmp	r2, r3
 5769 0368 07D1     		bne	.L335
6235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR1*/
6237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN);
 5770              		.loc 1 6237 0
 5771 036a 7B68     		ldr	r3, [r7, #4]
 5772 036c 1B68     		ldr	r3, [r3]
 5773 036e 7A68     		ldr	r2, [r7, #4]
 5774 0370 1268     		ldr	r2, [r2]
 5775 0372 126E     		ldr	r2, [r2, #96]
 5776 0374 22F00042 		bic	r2, r2, #-2147483648
 5777 0378 1A66     		str	r2, [r3, #96]
 5778              	.L335:
6238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
 5779              		.loc 1 6239 0
 5780 037a 7B68     		ldr	r3, [r7, #4]
 5781 037c 1B68     		ldr	r3, [r3]
 5782 037e 5B6E     		ldr	r3, [r3, #100]
 5783 0380 03F0F842 		and	r2, r3, #2080374784
 5784 0384 3B68     		ldr	r3, [r7]
 5785 0386 1B68     		ldr	r3, [r3]
 5786 0388 9B06     		lsls	r3, r3, #26
 5787 038a 9A42     		cmp	r2, r3
 5788 038c 07D1     		bne	.L336
6240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR2*/
6242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN); 
 5789              		.loc 1 6242 0
 5790 038e 7B68     		ldr	r3, [r7, #4]
 5791 0390 1B68     		ldr	r3, [r3]
 5792 0392 7A68     		ldr	r2, [r7, #4]
 5793 0394 1268     		ldr	r2, [r2]
 5794 0396 526E     		ldr	r2, [r2, #100]
 5795 0398 22F00042 		bic	r2, r2, #-2147483648
 5796 039c 5A66     		str	r2, [r3, #100]
ARM GAS  /tmp/ccumkl9n.s 			page 212


 5797              	.L336:
6243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
 5798              		.loc 1 6244 0
 5799 039e 7B68     		ldr	r3, [r7, #4]
 5800 03a0 1B68     		ldr	r3, [r3]
 5801 03a2 9B6E     		ldr	r3, [r3, #104]
 5802 03a4 03F0F842 		and	r2, r3, #2080374784
 5803 03a8 3B68     		ldr	r3, [r7]
 5804 03aa 1B68     		ldr	r3, [r3]
 5805 03ac 9B06     		lsls	r3, r3, #26
 5806 03ae 9A42     		cmp	r2, r3
 5807 03b0 07D1     		bne	.L337
6245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR3*/
6247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN);
 5808              		.loc 1 6247 0
 5809 03b2 7B68     		ldr	r3, [r7, #4]
 5810 03b4 1B68     		ldr	r3, [r3]
 5811 03b6 7A68     		ldr	r2, [r7, #4]
 5812 03b8 1268     		ldr	r2, [r2]
 5813 03ba 926E     		ldr	r2, [r2, #104]
 5814 03bc 22F00042 		bic	r2, r2, #-2147483648
 5815 03c0 9A66     		str	r2, [r3, #104]
 5816              	.L337:
6248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfigInjected->Inject
 5817              		.loc 1 6249 0
 5818 03c2 7B68     		ldr	r3, [r7, #4]
 5819 03c4 1B68     		ldr	r3, [r3]
 5820 03c6 DB6E     		ldr	r3, [r3, #108]
 5821 03c8 03F0F842 		and	r2, r3, #2080374784
 5822 03cc 3B68     		ldr	r3, [r7]
 5823 03ce 1B68     		ldr	r3, [r3]
 5824 03d0 9B06     		lsls	r3, r3, #26
 5825 03d2 9A42     		cmp	r2, r3
 5826 03d4 08D1     		bne	.L338
6250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable offset OFR4*/
6252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN);
 5827              		.loc 1 6252 0
 5828 03d6 7B68     		ldr	r3, [r7, #4]
 5829 03d8 1B68     		ldr	r3, [r3]
 5830 03da 7A68     		ldr	r2, [r7, #4]
 5831 03dc 1268     		ldr	r2, [r2]
 5832 03de D26E     		ldr	r2, [r2, #108]
 5833 03e0 22F00042 		bic	r2, r2, #-2147483648
 5834 03e4 DA66     		str	r2, [r3, #108]
6253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
 5835              		.loc 1 6254 0
 5836 03e6 FFE7     		b	.L360
 5837              	.L338:
 5838              	.L360:
 5839 03e8 00BF     		nop
 5840              	.L324:
6255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
ARM GAS  /tmp/ccumkl9n.s 			page 213


6256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
6262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
6263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
6264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 5841              		.loc 1 6264 0
 5842 03ea 7B68     		ldr	r3, [r7, #4]
 5843 03ec 1B68     		ldr	r3, [r3]
 5844 03ee 9B68     		ldr	r3, [r3, #8]
 5845 03f0 03F00303 		and	r3, r3, #3
 5846 03f4 012B     		cmp	r3, #1
 5847 03f6 08D1     		bne	.L339
 5848              		.loc 1 6264 0 is_stmt 0 discriminator 1
 5849 03f8 7B68     		ldr	r3, [r7, #4]
 5850 03fa 1B68     		ldr	r3, [r3]
 5851 03fc 1B68     		ldr	r3, [r3]
 5852 03fe 03F00103 		and	r3, r3, #1
 5853 0402 002B     		cmp	r3, #0
 5854 0404 01D0     		beq	.L339
 5855              		.loc 1 6264 0 discriminator 3
 5856 0406 0123     		movs	r3, #1
 5857 0408 00E0     		b	.L340
 5858              	.L339:
 5859              		.loc 1 6264 0 discriminator 4
 5860 040a 0023     		movs	r3, #0
 5861              	.L340:
 5862              		.loc 1 6264 0 discriminator 6
 5863 040c 002B     		cmp	r3, #0
 5864 040e 40F0F380 		bne	.L341
6265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of differential mode */
6267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 5865              		.loc 1 6267 0 is_stmt 1
 5866 0412 3B68     		ldr	r3, [r7]
 5867 0414 DB68     		ldr	r3, [r3, #12]
 5868 0416 012B     		cmp	r3, #1
 5869 0418 0FD0     		beq	.L342
6268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable differential mode (default mode: single-ended) */
6270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfigInjected->InjectedChannel));
 5870              		.loc 1 6270 0
 5871 041a 7B68     		ldr	r3, [r7, #4]
 5872 041c 1B68     		ldr	r3, [r3]
 5873 041e 7A68     		ldr	r2, [r7, #4]
 5874 0420 1268     		ldr	r2, [r2]
 5875 0422 D2F8B010 		ldr	r1, [r2, #176]
 5876 0426 3A68     		ldr	r2, [r7]
 5877 0428 1268     		ldr	r2, [r2]
 5878 042a 1046     		mov	r0, r2
 5879 042c 0122     		movs	r2, #1
 5880 042e 8240     		lsls	r2, r2, r0
 5881 0430 D243     		mvns	r2, r2
 5882 0432 0A40     		ands	r2, r2, r1
ARM GAS  /tmp/ccumkl9n.s 			page 214


 5883 0434 C3F8B020 		str	r2, [r3, #176]
 5884 0438 4AE0     		b	.L343
 5885              	.L342:
6271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Enable differential mode */
6275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_CHANNEL(sConfigInjected->InjectedChannel));
 5886              		.loc 1 6275 0
 5887 043a 7B68     		ldr	r3, [r7, #4]
 5888 043c 1B68     		ldr	r3, [r3]
 5889 043e 7A68     		ldr	r2, [r7, #4]
 5890 0440 1268     		ldr	r2, [r2]
 5891 0442 D2F8B010 		ldr	r1, [r2, #176]
 5892 0446 3A68     		ldr	r2, [r7]
 5893 0448 1268     		ldr	r2, [r2]
 5894 044a 1046     		mov	r0, r2
 5895 044c 0122     		movs	r2, #1
 5896 044e 8240     		lsls	r2, r2, r0
 5897 0450 0A43     		orrs	r2, r2, r1
 5898 0452 C3F8B020 		str	r2, [r3, #176]
6276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Channel sampling time configuration (channel ADC_INx +1              */
6278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* corresponding to differential negative input).                       */
6279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* For channels 10 to 18U */
6280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->InjectedChannel >= ADC_CHANNEL_10)
 5899              		.loc 1 6280 0
 5900 0456 3B68     		ldr	r3, [r7]
 5901 0458 1B68     		ldr	r3, [r3]
 5902 045a 092B     		cmp	r3, #9
 5903 045c 1CD9     		bls	.L344
6281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR2,
 5904              		.loc 1 6282 0
 5905 045e 7B68     		ldr	r3, [r7, #4]
 5906 0460 1968     		ldr	r1, [r3]
 5907 0462 7B68     		ldr	r3, [r7, #4]
 5908 0464 1B68     		ldr	r3, [r3]
 5909 0466 9869     		ldr	r0, [r3, #24]
 5910 0468 3B68     		ldr	r3, [r7]
 5911 046a 1A68     		ldr	r2, [r3]
 5912 046c 1346     		mov	r3, r2
 5913 046e 5B00     		lsls	r3, r3, #1
 5914 0470 1344     		add	r3, r3, r2
 5915 0472 1B3B     		subs	r3, r3, #27
 5916 0474 1A46     		mov	r2, r3
 5917 0476 0723     		movs	r3, #7
 5918 0478 9340     		lsls	r3, r3, r2
 5919 047a DB43     		mvns	r3, r3
 5920 047c 1840     		ands	r0, r0, r3
 5921 047e 3B68     		ldr	r3, [r7]
 5922 0480 9C68     		ldr	r4, [r3, #8]
 5923 0482 3B68     		ldr	r3, [r7]
 5924 0484 1A68     		ldr	r2, [r3]
 5925 0486 1346     		mov	r3, r2
 5926 0488 5B00     		lsls	r3, r3, #1
 5927 048a 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccumkl9n.s 			page 215


 5928 048c 1B3B     		subs	r3, r3, #27
 5929 048e 04FA03F3 		lsl	r3, r4, r3
 5930 0492 0343     		orrs	r3, r3, r0
 5931 0494 8B61     		str	r3, [r1, #24]
 5932 0496 1BE0     		b	.L343
 5933              	.L344:
6283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(ADC_SMPR2_SMP10, sConfigInjected->InjectedChannel +1U),
6284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChanne
6285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else /* For channels 1 to 9U */
6287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(hadc->Instance->SMPR1,
 5934              		.loc 1 6288 0
 5935 0498 7B68     		ldr	r3, [r7, #4]
 5936 049a 1968     		ldr	r1, [r3]
 5937 049c 7B68     		ldr	r3, [r7, #4]
 5938 049e 1B68     		ldr	r3, [r3]
 5939 04a0 5869     		ldr	r0, [r3, #20]
 5940 04a2 3B68     		ldr	r3, [r7]
 5941 04a4 1B68     		ldr	r3, [r3]
 5942 04a6 5A1C     		adds	r2, r3, #1
 5943 04a8 1346     		mov	r3, r2
 5944 04aa 5B00     		lsls	r3, r3, #1
 5945 04ac 1344     		add	r3, r3, r2
 5946 04ae 1A46     		mov	r2, r3
 5947 04b0 0723     		movs	r3, #7
 5948 04b2 9340     		lsls	r3, r3, r2
 5949 04b4 DB43     		mvns	r3, r3
 5950 04b6 1840     		ands	r0, r0, r3
 5951 04b8 3B68     		ldr	r3, [r7]
 5952 04ba 9C68     		ldr	r4, [r3, #8]
 5953 04bc 3B68     		ldr	r3, [r7]
 5954 04be 1B68     		ldr	r3, [r3]
 5955 04c0 5A1C     		adds	r2, r3, #1
 5956 04c2 1346     		mov	r3, r2
 5957 04c4 5B00     		lsls	r3, r3, #1
 5958 04c6 1344     		add	r3, r3, r2
 5959 04c8 04FA03F3 		lsl	r3, r4, r3
 5960 04cc 0343     		orrs	r3, r3, r0
 5961 04ce 4B61     		str	r3, [r1, #20]
 5962              	.L343:
6289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(ADC_SMPR1_SMP0, sConfigInjected->InjectedChannel +1U),
6290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChanne
6291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Management of internal measurement channels: VrefInt/TempSensor/Vbat   */
6296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* internal measurement paths enable: If internal channel selected,       */
6297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* enable dedicated internal buffers and path.                            */
6298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: these internal measurement paths can be disabled using           */
6299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* HAL_ADC_deInit().                                                      */
6300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        
6301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Configuration of common ADC parameters                                 */
6302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
6303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may be up to 4 ADC and 2 common   */
6304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
ARM GAS  /tmp/ccumkl9n.s 			page 216


6305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 5963              		.loc 1 6305 0
 5964 04d0 234B     		ldr	r3, .L363+4
 5965 04d2 3B66     		str	r3, [r7, #96]
6306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
6308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
6309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (( (sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) &&
 5966              		.loc 1 6309 0
 5967 04d4 3B68     		ldr	r3, [r7]
 5968 04d6 1B68     		ldr	r3, [r3]
 5969 04d8 102B     		cmp	r3, #16
 5970 04da 05D1     		bne	.L345
6310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5971              		.loc 1 6310 0 discriminator 1
 5972 04dc 3B6E     		ldr	r3, [r7, #96]
 5973 04de 9B68     		ldr	r3, [r3, #8]
 5974 04e0 03F40003 		and	r3, r3, #8388608
6309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5975              		.loc 1 6309 0 discriminator 1
 5976 04e4 002B     		cmp	r3, #0
 5977 04e6 13D0     		beq	.L346
 5978              	.L345:
6311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)       &&
 5979              		.loc 1 6311 0
 5980 04e8 3B68     		ldr	r3, [r7]
 5981 04ea 1B68     		ldr	r3, [r3]
6310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_TSEN))            ) ||
 5982              		.loc 1 6310 0
 5983 04ec 112B     		cmp	r3, #17
 5984 04ee 05D1     		bne	.L347
6312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 5985              		.loc 1 6312 0
 5986 04f0 3B6E     		ldr	r3, [r7, #96]
 5987 04f2 9B68     		ldr	r3, [r3, #8]
 5988 04f4 03F08073 		and	r3, r3, #16777216
6311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)       &&
 5989              		.loc 1 6311 0
 5990 04f8 002B     		cmp	r3, #0
 5991 04fa 09D0     		beq	.L346
 5992              	.L347:
6313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
 5993              		.loc 1 6313 0
 5994 04fc 3B68     		ldr	r3, [r7]
 5995 04fe 1B68     		ldr	r3, [r3]
6312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VBATEN))          ) ||
 5996              		.loc 1 6312 0
 5997 0500 122B     		cmp	r3, #18
 5998 0502 79D1     		bne	.L341
6314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_VREFEN)))
 5999              		.loc 1 6314 0
 6000 0504 3B6E     		ldr	r3, [r7, #96]
 6001 0506 9B68     		ldr	r3, [r3, #8]
 6002 0508 03F48003 		and	r3, r3, #4194304
6313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         ( (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)    &&
 6003              		.loc 1 6313 0
 6004 050c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccumkl9n.s 			page 217


 6005 050e 73D1     		bne	.L341
 6006              	.L346:
6315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        )
6316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of common ADC parameters (continuation)                */
6318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set handle of the other ADC sharing the same common register         */
6319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
 6007              		.loc 1 6319 0
 6008 0510 0023     		movs	r3, #0
 6009 0512 FB60     		str	r3, [r7, #12]
6320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to change common parameters only when all ADCs   */
6322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* of the common group are disabled.                                    */
6323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                                    &&
 6010              		.loc 1 6323 0
 6011 0514 7B68     		ldr	r3, [r7, #4]
 6012 0516 1B68     		ldr	r3, [r3]
 6013 0518 9B68     		ldr	r3, [r3, #8]
 6014 051a 03F00303 		and	r3, r3, #3
 6015 051e 012B     		cmp	r3, #1
 6016 0520 08D1     		bne	.L348
 6017              		.loc 1 6323 0 is_stmt 0 discriminator 1
 6018 0522 7B68     		ldr	r3, [r7, #4]
 6019 0524 1B68     		ldr	r3, [r3]
 6020 0526 1B68     		ldr	r3, [r3]
 6021 0528 03F00103 		and	r3, r3, #1
 6022 052c 002B     		cmp	r3, #0
 6023 052e 01D0     		beq	.L348
 6024              		.loc 1 6323 0 discriminator 3
 6025 0530 0123     		movs	r3, #1
 6026 0532 00E0     		b	.L349
 6027              	.L348:
 6028              		.loc 1 6323 0 discriminator 4
 6029 0534 0023     		movs	r3, #0
 6030              	.L349:
 6031              		.loc 1 6323 0 discriminator 6
 6032 0536 002B     		cmp	r3, #0
 6033 0538 55D1     		bne	.L350
6324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6034              		.loc 1 6324 0 is_stmt 1 discriminator 7
 6035 053a FB68     		ldr	r3, [r7, #12]
6323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6036              		.loc 1 6323 0 discriminator 7
 6037 053c 002B     		cmp	r3, #0
 6038 053e 14D0     		beq	.L351
6325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )   )
 6039              		.loc 1 6325 0
 6040 0540 FB68     		ldr	r3, [r7, #12]
 6041 0542 9B68     		ldr	r3, [r3, #8]
 6042 0544 03F00303 		and	r3, r3, #3
 6043 0548 012B     		cmp	r3, #1
 6044 054a 0BD1     		bne	.L352
 6045              		.loc 1 6325 0 is_stmt 0 discriminator 1
 6046 054c FB68     		ldr	r3, [r7, #12]
 6047 054e 1B68     		ldr	r3, [r3]
 6048 0550 03F00103 		and	r3, r3, #1
 6049 0554 002B     		cmp	r3, #0
ARM GAS  /tmp/ccumkl9n.s 			page 218


 6050 0556 05D0     		beq	.L352
 6051              		.loc 1 6325 0 discriminator 3
 6052 0558 0123     		movs	r3, #1
 6053 055a 04E0     		b	.L353
 6054              	.L364:
 6055              		.align	2
 6056              	.L363:
 6057 055c 00F0FF83 		.word	-2080378880
 6058 0560 00030050 		.word	1342178048
 6059              	.L352:
 6060              		.loc 1 6325 0 discriminator 4
 6061 0564 0023     		movs	r3, #0
 6062              	.L353:
6324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           ( (tmphadcSharingSameCommonRegister.Instance == NULL)         ||
 6063              		.loc 1 6324 0 is_stmt 1
 6064 0566 002B     		cmp	r3, #0
 6065 0568 3DD1     		bne	.L350
 6066              	.L351:
6326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_16 is selected, enable Temp. sensor measurement path    */
6328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Temp. sensor internal channels available on ADC1 only        */
6329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) && (hadc->Instance == ADC1
 6067              		.loc 1 6329 0
 6068 056a 3B68     		ldr	r3, [r7]
 6069 056c 1B68     		ldr	r3, [r3]
 6070 056e 102B     		cmp	r3, #16
 6071 0570 1DD1     		bne	.L354
 6072              		.loc 1 6329 0 is_stmt 0 discriminator 1
 6073 0572 7B68     		ldr	r3, [r7, #4]
 6074 0574 1B68     		ldr	r3, [r3]
 6075 0576 B3F1A04F 		cmp	r3, #1342177280
 6076 057a 18D1     		bne	.L354
6330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_TSEN);
 6077              		.loc 1 6331 0 is_stmt 1
 6078 057c 3B6E     		ldr	r3, [r7, #96]
 6079 057e 9B68     		ldr	r3, [r3, #8]
 6080 0580 43F40002 		orr	r2, r3, #8388608
 6081 0584 3B6E     		ldr	r3, [r7, #96]
 6082 0586 9A60     		str	r2, [r3, #8]
6332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
6333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Delay for temperature sensor stabilization time */
6334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Compute number of CPU cycles to wait for */
6335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 6083              		.loc 1 6335 0
 6084 0588 214B     		ldr	r3, .L365
 6085 058a 1B68     		ldr	r3, [r3]
 6086 058c 214A     		ldr	r2, .L365+4
 6087 058e A2FB0323 		umull	r2, r3, r2, r3
 6088 0592 9A0C     		lsrs	r2, r3, #18
 6089 0594 1346     		mov	r3, r2
 6090 0596 9B00     		lsls	r3, r3, #2
 6091 0598 1344     		add	r3, r3, r2
 6092 059a 5B00     		lsls	r3, r3, #1
 6093 059c BB60     		str	r3, [r7, #8]
6336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 6094              		.loc 1 6336 0
ARM GAS  /tmp/ccumkl9n.s 			page 219


 6095 059e 02E0     		b	.L355
 6096              	.L356:
6337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           {
6338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****             wait_loop_index--;
 6097              		.loc 1 6338 0
 6098 05a0 BB68     		ldr	r3, [r7, #8]
 6099 05a2 013B     		subs	r3, r3, #1
 6100 05a4 BB60     		str	r3, [r7, #8]
 6101              	.L355:
6336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           while(wait_loop_index != 0U)
 6102              		.loc 1 6336 0
 6103 05a6 BB68     		ldr	r3, [r7, #8]
 6104 05a8 002B     		cmp	r3, #0
 6105 05aa F9D1     		bne	.L356
6329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6106              		.loc 1 6329 0
 6107 05ac 24E0     		b	.L341
 6108              	.L354:
6339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           }
6340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_17 is selected, enable VBAT measurement path            */
6342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VBAT internal channels available on ADC1 only                */
6343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT) && (hadc->Instance == ADC1)
 6109              		.loc 1 6343 0
 6110 05ae 3B68     		ldr	r3, [r7]
 6111 05b0 1B68     		ldr	r3, [r3]
 6112 05b2 112B     		cmp	r3, #17
 6113 05b4 0BD1     		bne	.L358
 6114              		.loc 1 6343 0 is_stmt 0 discriminator 1
 6115 05b6 7B68     		ldr	r3, [r7, #4]
 6116 05b8 1B68     		ldr	r3, [r3]
 6117 05ba B3F1A04F 		cmp	r3, #1342177280
 6118 05be 06D1     		bne	.L358
6344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VBATEN);
 6119              		.loc 1 6345 0 is_stmt 1
 6120 05c0 3B6E     		ldr	r3, [r7, #96]
 6121 05c2 9B68     		ldr	r3, [r3, #8]
 6122 05c4 43F08072 		orr	r2, r3, #16777216
 6123 05c8 3B6E     		ldr	r3, [r7, #96]
 6124 05ca 9A60     		str	r2, [r3, #8]
 6125 05cc 0AE0     		b	.L357
 6126              	.L358:
6346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* If Channel_18 is selected, enable VREFINT measurement path         */
6348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: VrefInt internal channels available on all ADCs, but only    */
6349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       one ADC is allowed to be connected to VrefInt at the same    */
6350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       time.                                                        */
6351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else if (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)
 6127              		.loc 1 6351 0
 6128 05ce 3B68     		ldr	r3, [r7]
 6129 05d0 1B68     		ldr	r3, [r3]
 6130 05d2 122B     		cmp	r3, #18
 6131 05d4 06D1     		bne	.L357
6352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(tmpADC_Common->CCR, ADC_CCR_VREFEN);
 6132              		.loc 1 6353 0
ARM GAS  /tmp/ccumkl9n.s 			page 220


 6133 05d6 3B6E     		ldr	r3, [r7, #96]
 6134 05d8 9B68     		ldr	r3, [r3, #8]
 6135 05da 43F48002 		orr	r2, r3, #4194304
 6136 05de 3B6E     		ldr	r3, [r7, #96]
 6137 05e0 9A60     		str	r2, [r3, #8]
6329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6138              		.loc 1 6329 0
 6139 05e2 09E0     		b	.L341
 6140              	.L357:
6329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
 6141              		.loc 1 6329 0 is_stmt 0 discriminator 1
 6142 05e4 08E0     		b	.L341
 6143              	.L350:
6354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* If the requested internal measurement path has already been enabled  */
6357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* and other ADC of the common group are enabled, internal              */
6358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* measurement paths cannot be enabled.                                 */
6359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else  
6360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 6144              		.loc 1 6362 0 is_stmt 1
 6145 05e6 7B68     		ldr	r3, [r7, #4]
 6146 05e8 5B6C     		ldr	r3, [r3, #68]
 6147 05ea 43F02002 		orr	r2, r3, #32
 6148 05ee 7B68     		ldr	r3, [r7, #4]
 6149 05f0 5A64     		str	r2, [r3, #68]
6363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
 6150              		.loc 1 6364 0
 6151 05f2 0123     		movs	r3, #1
 6152 05f4 87F86F30 		strb	r3, [r7, #111]
 6153              	.L341:
6365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 6154              		.loc 1 6371 0
 6155 05f8 7B68     		ldr	r3, [r7, #4]
 6156 05fa 0022     		movs	r2, #0
 6157 05fc 83F84020 		strb	r2, [r3, #64]
6372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 6158              		.loc 1 6374 0
 6159 0600 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 6160              	.L359:
6375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 6161              		.loc 1 6375 0 discriminator 2
 6162 0604 1846     		mov	r0, r3
 6163 0606 7037     		adds	r7, r7, #112
 6164              	.LCFI157:
 6165              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccumkl9n.s 			page 221


 6166 0608 BD46     		mov	sp, r7
 6167              	.LCFI158:
 6168              		.cfi_def_cfa_register 13
 6169              		@ sp needed
 6170 060a 90BC     		pop	{r4, r7}
 6171              	.LCFI159:
 6172              		.cfi_restore 7
 6173              		.cfi_restore 4
 6174              		.cfi_def_cfa_offset 0
 6175 060c 7047     		bx	lr
 6176              	.L366:
 6177 060e 00BF     		.align	2
 6178              	.L365:
 6179 0610 00000000 		.word	SystemCoreClock
 6180 0614 83DE1B43 		.word	1125899907
 6181              		.cfi_endproc
 6182              	.LFE152:
 6184              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 6185              		.align	2
 6186              		.global	HAL_ADC_AnalogWDGConfig
 6187              		.thumb
 6188              		.thumb_func
 6190              	HAL_ADC_AnalogWDGConfig:
 6191              	.LFB153:
6376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
6377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
6378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
6379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
6380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
6382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the ADC injected group and the selected channel to be
6384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         linked to the injected group.
6385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this 
6387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
6388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without reseting the ADC.
6389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state: 
6390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         this function must be called when ADC is not under conversion.
6391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
6392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
6393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The recommended sampling time is at least:
6394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For devices STM32F37x: 17.1us for temperature sensor
6395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          - For the other STM32F3 devices: 2.2us for each of channels 
6396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            Vbat/VrefInt/TempSensor.
6397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         These internal paths can be be disabled using function 
6398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
6399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
6400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  sConfigInjected: Structure of ADC injected group and ADC channel for
6401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         injected group.
6402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
6403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef* hadc, ADC_InjectionConfTypeDef
6405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
6407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0U;
6408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
ARM GAS  /tmp/ccumkl9n.s 			page 222


6409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CHANNEL(sConfigInjected->InjectedChannel));
6412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
6413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
6414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(sConfigInjected->ExternalTrigInjecConv));
6415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(sConfigInjected->InjectedOffset));
6416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
6418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
6420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
6421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
6422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
6428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is disabled, injected channels sequence length is set to  */
6429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   0x00: 1 channel converted (channel on regular rank 1U)                  */
6430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Parameter "InjectedNbrOfConversion" is discarded.                      */
6431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   Note: Scan mode is present by hardware on this device and, if          */
6432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   disabled, discards automatically nb of conversions. Anyway, nb of      */
6433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   conversions is forced to 0x00 for alignment over all STM32 devices.    */
6434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* - if scan mode is enabled, injected channels sequence length is set to   */
6435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*   parameter "InjectedNbrOfConversion".                                   */
6436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
6437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
6439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for all injected ranks */
6441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                           ,
6442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL   |
6443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ4 |
6444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ3 |
6445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ2 |
6446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JSQ1                                  ,
6447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,
6448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       ADC_INJECTED_RANK_1,
6449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                       0x01U)                      );
6450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If another injected rank than rank1 was intended to be set, and could  */
6452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* not due to ScanConvMode disabled, error is reported.                   */
6453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
6456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmp_hal_status = HAL_ERROR;
6459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Since injected channels rank conv. order depends on total number of   */
6464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* injected conversions, selected rank must be below or equal to total   */
6465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* number of injected conversions to be updated.                         */
ARM GAS  /tmp/ccumkl9n.s 			page 223


6466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank <= sConfigInjected->InjectedNbrOfConversion)
6467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
6469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the SQx bits for the selected rank */
6470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                         ,
6471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                                 |
6473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
6474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion)     ,
6476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL_SHIFT(sConfigInjected->InjectedNbrOfConversion) |
6478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(sConfigInjected->InjectedChannel,      
6479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion)      );
6481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the old SQx bits for the selected rank */
6485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR                                     ,
6486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_JL                                             |
6488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JSQR_RK_JL(ADC_JSQR_JSQ1,                         
6489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedRank,         
6490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                                 sConfigInjected->InjectedNbrOfConversion) ,
6491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  
6492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  0x00000000                                                );
6493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
6497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
6499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - external trigger to start conversion                                  */
6500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update not conditioned to ADC state:                          */
6501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
6502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
6503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: In case of ADC already enabled, caution to not launch an unwanted  */
6504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*       conversion while modifying register CR2 by writing 1 to bit ADON.  */
6505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
6506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {    
6507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->CR2                   ,
6508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CR2_JEXTSEL |
6509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_CR2_ADON                          ,
6510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                sConfigInjected->ExternalTrigInjecConv );
6511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of injected group                                          */
6514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Automatic injected conversion                                         */
6515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode                                           */
6516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Automatic injected conversion can be enabled if injected group         */
6518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* external triggers are disabled.                                        */
6519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == ENABLE)
6520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
6522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/ccumkl9n.s 			page 224


6523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO);
6524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Injected discontinuous can be enabled only if auto-injected mode is    */
6535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* disabled.                                                              */  
6536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedDiscontinuousConvMode == ENABLE)
6537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == DISABLE)
6539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CR1, ADC_CR1_JDISCEN);
6541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       } 
6542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
6545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
6546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
6548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* InjectedChannel sampling time configuration */
6553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* For channels 10 to 18 */
6554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedChannel > ADC_CHANNEL_10)
6555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR1,
6557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(ADC_SMPR1_SMP10, sConfigInjected->InjectedChannel),
6558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR1(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
6559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else /* For channels 1 to 9 */
6561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     MODIFY_REG(hadc->Instance->SMPR2,
6563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(ADC_SMPR2_SMP0, sConfigInjected->InjectedChannel),
6564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                ADC_SMPR2(sConfigInjected->InjectedSamplingTime, sConfigInjected->InjectedChannel) )
6565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configure the offset: offset enable/disable, InjectedChannel, offset value */
6569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   switch(sConfigInjected->InjectedRank)
6570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 1:
6572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 1 offset */
6573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR1,
6574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR1_JOFFSET1,
6575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 2:
6578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 2 offset */
6579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR2,
ARM GAS  /tmp/ccumkl9n.s 			page 225


6580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR2_JOFFSET2,
6581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 3:
6584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set injected channel 3 offset */
6585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR3,
6586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR3_JOFFSET3,
6587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case 4:
6590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
6591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JOFR4,
6592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_JOFR4_JOFFSET4,
6593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  sConfigInjected->InjectedOffset);
6594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       break;
6595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If ADC1 Channel_16 or Channel_17 is selected, enable Temperature sensor  */
6598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* and VREFINT measurement path.                                            */
6599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR) ||
6600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       (sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)      )
6601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (READ_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE) == RESET)
6603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->Instance->CR2, ADC_CR2_TSVREFE);
6605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR))
6607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Delay for temperature sensor stabilization time */
6609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Compute number of CPU cycles to wait for */
6610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         wait_loop_index = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
6611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         while(wait_loop_index != 0U)
6612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           wait_loop_index--;
6614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* if ADC1 Channel_18 is selected, enable VBAT measurement path */
6619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else if (sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)
6620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_VBAT);
6622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
6629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
6631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
6633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
6634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
6635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
6636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
ARM GAS  /tmp/ccumkl9n.s 			page 226


6637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the analog watchdog.
6638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes the selected analog watchdog, following  
6640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
6641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without reseting 
6642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADC.
6643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
6644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
6645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_AnalogWDGConfTypeDef".
6646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
6647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
6648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
6651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 6192              		.loc 1 6651 0
 6193              		.cfi_startproc
 6194              		@ args = 0, pretend = 0, frame = 32
 6195              		@ frame_needed = 1, uses_anonymous_args = 0
 6196              		@ link register save eliminated.
 6197 0000 80B4     		push	{r7}
 6198              	.LCFI160:
 6199              		.cfi_def_cfa_offset 4
 6200              		.cfi_offset 7, -4
 6201 0002 89B0     		sub	sp, sp, #36
 6202              	.LCFI161:
 6203              		.cfi_def_cfa_offset 40
 6204 0004 00AF     		add	r7, sp, #0
 6205              	.LCFI162:
 6206              		.cfi_def_cfa_register 7
 6207 0006 7860     		str	r0, [r7, #4]
 6208 0008 3960     		str	r1, [r7]
6652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6209              		.loc 1 6652 0
 6210 000a 0023     		movs	r3, #0
 6211 000c FB77     		strb	r3, [r7, #31]
6653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpAWDHighThresholdShifted;
6655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpAWDLowThresholdShifted;
6656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpADCFlagAWD2orAWD3;
6658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmpADCITAWD2orAWD3;
6659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
6663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
6664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
6665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verify if threshold is within the selected ADC resolution */
6667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
6668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
6669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
 6212              		.loc 1 6670 0
 6213 000e 3B68     		ldr	r3, [r7]
 6214 0010 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccumkl9n.s 			page 227


 6215 0012 B3F5400F 		cmp	r3, #12582912
 6216 0016 03D0     		beq	.L368
6671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 6217              		.loc 1 6671 0 discriminator 1
 6218 0018 3B68     		ldr	r3, [r7]
 6219 001a 5B68     		ldr	r3, [r3, #4]
6670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 6220              		.loc 1 6670 0 discriminator 1
 6221 001c B3F1A07F 		cmp	r3, #20971520
 6222              	.L368:
6672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
6673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
6675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 6223              		.loc 1 6678 0
 6224 0020 7B68     		ldr	r3, [r7, #4]
 6225 0022 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6226 0026 012B     		cmp	r3, #1
 6227 0028 01D1     		bne	.L369
 6228              		.loc 1 6678 0 is_stmt 0 discriminator 1
 6229 002a 0223     		movs	r3, #2
 6230 002c 30E1     		b	.L370
 6231              	.L369:
 6232              		.loc 1 6678 0 discriminator 2
 6233 002e 7B68     		ldr	r3, [r7, #4]
 6234 0030 0122     		movs	r2, #1
 6235 0032 83F84020 		strb	r2, [r3, #64]
6679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
6683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Analog watchdog channels                                              */
6684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Analog watchdog thresholds                                            */
6685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc) == RESET)
 6236              		.loc 1 6685 0 is_stmt 1 discriminator 2
 6237 0036 7B68     		ldr	r3, [r7, #4]
 6238 0038 1B68     		ldr	r3, [r3]
 6239 003a 9B68     		ldr	r3, [r3, #8]
 6240 003c 03F00C03 		and	r3, r3, #12
 6241 0040 002B     		cmp	r3, #0
 6242 0042 40F01881 		bne	.L371
6686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Analog watchdogs configuration */
6689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
 6243              		.loc 1 6689 0
 6244 0046 3B68     		ldr	r3, [r7]
 6245 0048 1B68     		ldr	r3, [r3]
 6246 004a 012B     		cmp	r3, #1
 6247 004c 4DD1     		bne	.L372
6690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of analog watchdog:                                    */
6692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set the analog watchdog enable mode: regular and/or injected      */
6693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    groups, one or overall group of channels.                         */
ARM GAS  /tmp/ccumkl9n.s 			page 228


6694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set the Analog watchdog channel (is not used if watchdog          */
6695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    mode "all channels": ADC_CFGR_AWD1SGL=0U).                         */
6696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR                             ,
 6248              		.loc 1 6696 0
 6249 004e 7B68     		ldr	r3, [r7, #4]
 6250 0050 1A68     		ldr	r2, [r3]
 6251 0052 7B68     		ldr	r3, [r7, #4]
 6252 0054 1B68     		ldr	r3, [r3]
 6253 0056 DB68     		ldr	r3, [r3, #12]
 6254 0058 23F0FB43 		bic	r3, r3, #2105540608
 6255 005c 23F48003 		bic	r3, r3, #4194304
 6256 0060 3968     		ldr	r1, [r7]
 6257 0062 4868     		ldr	r0, [r1, #4]
 6258 0064 3968     		ldr	r1, [r7]
 6259 0066 8968     		ldr	r1, [r1, #8]
 6260 0068 8906     		lsls	r1, r1, #26
 6261 006a 0143     		orrs	r1, r1, r0
 6262 006c 0B43     		orrs	r3, r3, r1
 6263 006e D360     		str	r3, [r2, #12]
6697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1SGL |
6698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_JAWD1EN |
6699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1EN  |
6700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1CH                                  ,
6701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  AnalogWDGConfig->WatchdogMode                   |
6702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CFGR_AWD1CH_SHIFT(AnalogWDGConfig->Channel)   );
6703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Shift the offset in function of the selected ADC resolution:         */
6705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Thresholds have to be left-aligned on bit 11U, the LSB (right bits)   */
6706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* are set to 0                                                         */ 
6707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
 6264              		.loc 1 6707 0
 6265 0070 3B68     		ldr	r3, [r7]
 6266 0072 1B69     		ldr	r3, [r3, #16]
 6267 0074 7A68     		ldr	r2, [r7, #4]
 6268 0076 1268     		ldr	r2, [r2]
 6269 0078 D268     		ldr	r2, [r2, #12]
 6270 007a 02F01802 		and	r2, r2, #24
 6271 007e D208     		lsrs	r2, r2, #3
 6272 0080 5200     		lsls	r2, r2, #1
 6273 0082 9340     		lsls	r3, r3, r2
 6274 0084 3B61     		str	r3, [r7, #16]
6708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 6275              		.loc 1 6708 0
 6276 0086 3B68     		ldr	r3, [r7]
 6277 0088 5B69     		ldr	r3, [r3, #20]
 6278 008a 7A68     		ldr	r2, [r7, #4]
 6279 008c 1268     		ldr	r2, [r2]
 6280 008e D268     		ldr	r2, [r2, #12]
 6281 0090 02F01802 		and	r2, r2, #24
 6282 0094 D208     		lsrs	r2, r2, #3
 6283 0096 5200     		lsls	r2, r2, #1
 6284 0098 9340     		lsls	r3, r3, r2
 6285 009a FB60     		str	r3, [r7, #12]
6709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set the high and low thresholds */
6711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->TR1                                ,
 6286              		.loc 1 6711 0
ARM GAS  /tmp/ccumkl9n.s 			page 229


 6287 009c 7B68     		ldr	r3, [r7, #4]
 6288 009e 1B68     		ldr	r3, [r3]
 6289 00a0 7A68     		ldr	r2, [r7, #4]
 6290 00a2 1268     		ldr	r2, [r2]
 6291 00a4 126A     		ldr	r2, [r2, #32]
 6292 00a6 02F0F021 		and	r1, r2, #-268374016
 6293 00aa 3A69     		ldr	r2, [r7, #16]
 6294 00ac 1004     		lsls	r0, r2, #16
 6295 00ae FA68     		ldr	r2, [r7, #12]
 6296 00b0 0243     		orrs	r2, r2, r0
 6297 00b2 0A43     		orrs	r2, r2, r1
 6298 00b4 1A62     		str	r2, [r3, #32]
6712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TR1_HT1 |
6713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TR1_LT1                                        ,
6714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  tmpAWDLowThresholdShifted                           );
6716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC Analog watchdog flag (in case of left enabled by       */
6718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
6719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or HAL_ADC_PollForEvent().                                           */
6720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_IT_AWD1);
 6299              		.loc 1 6720 0
 6300 00b6 7B68     		ldr	r3, [r7, #4]
 6301 00b8 1B68     		ldr	r3, [r3]
 6302 00ba 8022     		movs	r2, #128
 6303 00bc 1A60     		str	r2, [r3]
6721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure ADC Analog watchdog interrupt */
6723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
 6304              		.loc 1 6723 0
 6305 00be 3B68     		ldr	r3, [r7]
 6306 00c0 DB68     		ldr	r3, [r3, #12]
 6307 00c2 012B     		cmp	r3, #1
 6308 00c4 08D1     		bne	.L373
6724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Enable the ADC Analog watchdog interrupt */
6726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD1);
 6309              		.loc 1 6726 0
 6310 00c6 7B68     		ldr	r3, [r7, #4]
 6311 00c8 1B68     		ldr	r3, [r3]
 6312 00ca 7A68     		ldr	r2, [r7, #4]
 6313 00cc 1268     		ldr	r2, [r2]
 6314 00ce 5268     		ldr	r2, [r2, #4]
 6315 00d0 42F08002 		orr	r2, r2, #128
 6316 00d4 5A60     		str	r2, [r3, #4]
 6317 00d6 D6E0     		b	.L387
 6318              	.L373:
6727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Disable the ADC Analog watchdog interrupt */
6731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD1);
 6319              		.loc 1 6731 0
 6320 00d8 7B68     		ldr	r3, [r7, #4]
 6321 00da 1B68     		ldr	r3, [r3]
 6322 00dc 7A68     		ldr	r2, [r7, #4]
 6323 00de 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccumkl9n.s 			page 230


 6324 00e0 5268     		ldr	r2, [r2, #4]
 6325 00e2 22F08002 		bic	r2, r2, #128
 6326 00e6 5A60     		str	r2, [r3, #4]
 6327 00e8 CDE0     		b	.L387
 6328              	.L372:
6732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
6736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
6737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Shift the threshold in function of the selected ADC resolution */
6739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* have to be left-aligned on bit 7U, the LSB (right bits) are set to 0    */
6740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
 6329              		.loc 1 6740 0
 6330 00ea 7B68     		ldr	r3, [r7, #4]
 6331 00ec 1B68     		ldr	r3, [r3]
 6332 00ee DB68     		ldr	r3, [r3, #12]
 6333 00f0 03F01803 		and	r3, r3, #24
 6334 00f4 182B     		cmp	r3, #24
 6335 00f6 0FD0     		beq	.L376
 6336              		.loc 1 6740 0 is_stmt 0 discriminator 1
 6337 00f8 3B68     		ldr	r3, [r7]
 6338 00fa 1969     		ldr	r1, [r3, #16]
 6339 00fc 7B68     		ldr	r3, [r7, #4]
 6340 00fe 1B68     		ldr	r3, [r3]
 6341 0100 DB68     		ldr	r3, [r3, #12]
 6342 0102 03F01803 		and	r3, r3, #24
 6343 0106 DA08     		lsrs	r2, r3, #3
 6344 0108 1346     		mov	r3, r2
 6345 010a DB07     		lsls	r3, r3, #31
 6346 010c 9B1A     		subs	r3, r3, r2
 6347 010e 5B00     		lsls	r3, r3, #1
 6348 0110 0433     		adds	r3, r3, #4
 6349 0112 21FA03F3 		lsr	r3, r1, r3
 6350 0116 02E0     		b	.L377
 6351              	.L376:
 6352              		.loc 1 6740 0 discriminator 2
 6353 0118 3B68     		ldr	r3, [r7]
 6354 011a 1B69     		ldr	r3, [r3, #16]
 6355 011c 9B00     		lsls	r3, r3, #2
 6356              	.L377:
 6357              		.loc 1 6740 0 discriminator 4
 6358 011e 3B61     		str	r3, [r7, #16]
6741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 6359              		.loc 1 6741 0 is_stmt 1 discriminator 4
 6360 0120 7B68     		ldr	r3, [r7, #4]
 6361 0122 1B68     		ldr	r3, [r3]
 6362 0124 DB68     		ldr	r3, [r3, #12]
 6363 0126 03F01803 		and	r3, r3, #24
 6364 012a 182B     		cmp	r3, #24
 6365 012c 0FD0     		beq	.L378
 6366              		.loc 1 6741 0 is_stmt 0 discriminator 1
 6367 012e 3B68     		ldr	r3, [r7]
 6368 0130 5969     		ldr	r1, [r3, #20]
 6369 0132 7B68     		ldr	r3, [r7, #4]
 6370 0134 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccumkl9n.s 			page 231


 6371 0136 DB68     		ldr	r3, [r3, #12]
 6372 0138 03F01803 		and	r3, r3, #24
 6373 013c DA08     		lsrs	r2, r3, #3
 6374 013e 1346     		mov	r3, r2
 6375 0140 DB07     		lsls	r3, r3, #31
 6376 0142 9B1A     		subs	r3, r3, r2
 6377 0144 5B00     		lsls	r3, r3, #1
 6378 0146 0433     		adds	r3, r3, #4
 6379 0148 21FA03F3 		lsr	r3, r1, r3
 6380 014c 02E0     		b	.L379
 6381              	.L378:
 6382              		.loc 1 6741 0 discriminator 2
 6383 014e 3B68     		ldr	r3, [r7]
 6384 0150 5B69     		ldr	r3, [r3, #20]
 6385 0152 9B00     		lsls	r3, r3, #2
 6386              	.L379:
 6387              		.loc 1 6741 0 discriminator 4
 6388 0154 FB60     		str	r3, [r7, #12]
6742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
 6389              		.loc 1 6743 0 is_stmt 1 discriminator 4
 6390 0156 3B68     		ldr	r3, [r7]
 6391 0158 1B68     		ldr	r3, [r3]
 6392 015a 022B     		cmp	r3, #2
 6393 015c 38D1     		bne	.L380
6744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
6746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* enables the watchdog.                                              */
6747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Conditional register reset, because several channels can be  */
6748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       set by successive calls of this function.                    */
6749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE) 
 6394              		.loc 1 6749 0
 6395 015e 3B68     		ldr	r3, [r7]
 6396 0160 5B68     		ldr	r3, [r3, #4]
 6397 0162 002B     		cmp	r3, #0
 6398 0164 1BD0     		beq	.L381
6750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the high and low thresholds */
6752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           MODIFY_REG(hadc->Instance->TR2                                ,
 6399              		.loc 1 6752 0
 6400 0166 7B68     		ldr	r3, [r7, #4]
 6401 0168 1B68     		ldr	r3, [r3]
 6402 016a 7A68     		ldr	r2, [r7, #4]
 6403 016c 1268     		ldr	r2, [r2]
 6404 016e 526A     		ldr	r2, [r2, #36]
 6405 0170 02F0FF21 		and	r1, r2, #-16711936
 6406 0174 3A69     		ldr	r2, [r7, #16]
 6407 0176 1004     		lsls	r0, r2, #16
 6408 0178 FA68     		ldr	r2, [r7, #12]
 6409 017a 0243     		orrs	r2, r2, r0
 6410 017c 0A43     		orrs	r2, r2, r1
 6411 017e 5A62     		str	r2, [r3, #36]
6753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR2_HT2 |
6754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR2_LT2                                        ,
6755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      tmpAWDLowThresholdShifted                           );
6757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
ARM GAS  /tmp/ccumkl9n.s 			page 232


6758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->AWD2CR, ADC_CFGR_AWD23CR(AnalogWDGConfig->Channel));
 6412              		.loc 1 6758 0
 6413 0180 7B68     		ldr	r3, [r7, #4]
 6414 0182 1B68     		ldr	r3, [r3]
 6415 0184 7A68     		ldr	r2, [r7, #4]
 6416 0186 1268     		ldr	r2, [r2]
 6417 0188 D2F8A010 		ldr	r1, [r2, #160]
 6418 018c 3A68     		ldr	r2, [r7]
 6419 018e 9268     		ldr	r2, [r2, #8]
 6420 0190 1046     		mov	r0, r2
 6421 0192 0122     		movs	r2, #1
 6422 0194 8240     		lsls	r2, r2, r0
 6423 0196 0A43     		orrs	r2, r2, r1
 6424 0198 C3F8A020 		str	r2, [r3, #160]
 6425 019c 11E0     		b	.L382
 6426              	.L381:
6759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
6761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 6427              		.loc 1 6762 0
 6428 019e 7B68     		ldr	r3, [r7, #4]
 6429 01a0 1B68     		ldr	r3, [r3]
 6430 01a2 7A68     		ldr	r2, [r7, #4]
 6431 01a4 1268     		ldr	r2, [r2]
 6432 01a6 526A     		ldr	r2, [r2, #36]
 6433 01a8 02F0FF22 		and	r2, r2, #-16711936
 6434 01ac 5A62     		str	r2, [r3, #36]
6763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 6435              		.loc 1 6763 0
 6436 01ae 7B68     		ldr	r3, [r7, #4]
 6437 01b0 1A68     		ldr	r2, [r3]
 6438 01b2 7B68     		ldr	r3, [r7, #4]
 6439 01b4 1B68     		ldr	r3, [r3]
 6440 01b6 D3F8A030 		ldr	r3, [r3, #160]
 6441 01ba DB0C     		lsrs	r3, r3, #19
 6442 01bc DB04     		lsls	r3, r3, #19
 6443 01be C2F8A030 		str	r3, [r2, #160]
 6444              	.L382:
6764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                 
6766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
6767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* settings.                                                          */
6768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD2;
 6445              		.loc 1 6768 0
 6446 01c2 4FF48073 		mov	r3, #256
 6447 01c6 BB61     		str	r3, [r7, #24]
6769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD2;
 6448              		.loc 1 6769 0
 6449 01c8 4FF48073 		mov	r3, #256
 6450 01cc 7B61     		str	r3, [r7, #20]
 6451 01ce 37E0     		b	.L383
 6452              	.L380:
6770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
6772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
ARM GAS  /tmp/ccumkl9n.s 			page 233


6774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set the Analog watchdog channel or group of channels. This also    */
6775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* enables the watchdog.                                              */
6776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Note: Conditionnal register reset, because several channels can be */
6777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /*       set by successive calls of this function.                    */
6778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (AnalogWDGConfig->WatchdogMode != ADC_ANALOGWATCHDOG_NONE) 
 6453              		.loc 1 6778 0
 6454 01d0 3B68     		ldr	r3, [r7]
 6455 01d2 5B68     		ldr	r3, [r3, #4]
 6456 01d4 002B     		cmp	r3, #0
 6457 01d6 1BD0     		beq	.L384
6779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set the high and low thresholds */
6781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           MODIFY_REG(hadc->Instance->TR3                                ,
 6458              		.loc 1 6781 0
 6459 01d8 7B68     		ldr	r3, [r7, #4]
 6460 01da 1B68     		ldr	r3, [r3]
 6461 01dc 7A68     		ldr	r2, [r7, #4]
 6462 01de 1268     		ldr	r2, [r2]
 6463 01e0 926A     		ldr	r2, [r2, #40]
 6464 01e2 02F0FF21 		and	r1, r2, #-16711936
 6465 01e6 3A69     		ldr	r2, [r7, #16]
 6466 01e8 1004     		lsls	r0, r2, #16
 6467 01ea FA68     		ldr	r2, [r7, #12]
 6468 01ec 0243     		orrs	r2, r2, r0
 6469 01ee 0A43     		orrs	r2, r2, r1
 6470 01f0 9A62     		str	r2, [r3, #40]
6782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR3_HT3 |
6783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TR3_LT3                                        ,
6784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      ADC_TRX_HIGHTHRESHOLD(tmpAWDHighThresholdShifted) |
6785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                      tmpAWDLowThresholdShifted                           );
6786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
6787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->Instance->AWD3CR, ADC_CFGR_AWD23CR(AnalogWDGConfig->Channel));
 6471              		.loc 1 6787 0
 6472 01f2 7B68     		ldr	r3, [r7, #4]
 6473 01f4 1B68     		ldr	r3, [r3]
 6474 01f6 7A68     		ldr	r2, [r7, #4]
 6475 01f8 1268     		ldr	r2, [r2]
 6476 01fa D2F8A410 		ldr	r1, [r2, #164]
 6477 01fe 3A68     		ldr	r2, [r7]
 6478 0200 9268     		ldr	r2, [r2, #8]
 6479 0202 1046     		mov	r0, r2
 6480 0204 0122     		movs	r2, #1
 6481 0206 8240     		lsls	r2, r2, r0
 6482 0208 0A43     		orrs	r2, r2, r1
 6483 020a C3F8A420 		str	r2, [r3, #164]
 6484 020e 11E0     		b	.L385
 6485              	.L384:
6788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         else
6790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
6791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 6486              		.loc 1 6791 0
 6487 0210 7B68     		ldr	r3, [r7, #4]
 6488 0212 1B68     		ldr	r3, [r3]
 6489 0214 7A68     		ldr	r2, [r7, #4]
 6490 0216 1268     		ldr	r2, [r2]
 6491 0218 926A     		ldr	r2, [r2, #40]
ARM GAS  /tmp/ccumkl9n.s 			page 234


 6492 021a 02F0FF22 		and	r2, r2, #-16711936
 6493 021e 9A62     		str	r2, [r3, #40]
6792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 6494              		.loc 1 6792 0
 6495 0220 7B68     		ldr	r3, [r7, #4]
 6496 0222 1A68     		ldr	r2, [r3]
 6497 0224 7B68     		ldr	r3, [r7, #4]
 6498 0226 1B68     		ldr	r3, [r3]
 6499 0228 D3F8A430 		ldr	r3, [r3, #164]
 6500 022c DB0C     		lsrs	r3, r3, #19
 6501 022e DB04     		lsls	r3, r3, #19
 6502 0230 C2F8A430 		str	r3, [r2, #164]
 6503              	.L385:
6793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
6794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
6795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set temporary variable to flag and IT of AWD2 or AWD3 for further  */
6796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* settings.                                                          */
6797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCFlagAWD2orAWD3 = ADC_FLAG_AWD3;
 6504              		.loc 1 6797 0
 6505 0234 4FF40073 		mov	r3, #512
 6506 0238 BB61     		str	r3, [r7, #24]
6798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmpADCITAWD2orAWD3 = ADC_IT_AWD3;
 6507              		.loc 1 6798 0
 6508 023a 4FF40073 		mov	r3, #512
 6509 023e 7B61     		str	r3, [r7, #20]
 6510              	.L383:
6799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear the ADC Analog watchdog flag (in case of left enabled by       */
6802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* previous ADC operations) to be ready to use for HAL_ADC_IRQHandler() */
6803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* or HAL_ADC_PollForEvent().                                           */
6804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, tmpADCFlagAWD2orAWD3);
 6511              		.loc 1 6804 0
 6512 0240 7B68     		ldr	r3, [r7, #4]
 6513 0242 1B68     		ldr	r3, [r3]
 6514 0244 BA69     		ldr	r2, [r7, #24]
 6515 0246 1A60     		str	r2, [r3]
6805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configure ADC Analog watchdog interrupt */
6807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
 6516              		.loc 1 6807 0
 6517 0248 3B68     		ldr	r3, [r7]
 6518 024a DB68     		ldr	r3, [r3, #12]
 6519 024c 012B     		cmp	r3, #1
 6520 024e 08D1     		bne	.L386
6808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, tmpADCITAWD2orAWD3);
 6521              		.loc 1 6809 0
 6522 0250 7B68     		ldr	r3, [r7, #4]
 6523 0252 1B68     		ldr	r3, [r3]
 6524 0254 7A68     		ldr	r2, [r7, #4]
 6525 0256 1268     		ldr	r2, [r2]
 6526 0258 5168     		ldr	r1, [r2, #4]
 6527 025a 7A69     		ldr	r2, [r7, #20]
 6528 025c 0A43     		orrs	r2, r2, r1
 6529 025e 5A60     		str	r2, [r3, #4]
 6530 0260 11E0     		b	.L387
ARM GAS  /tmp/ccumkl9n.s 			page 235


 6531              	.L386:
6810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       else
6812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
6813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         __HAL_ADC_DISABLE_IT(hadc, tmpADCITAWD2orAWD3);
 6532              		.loc 1 6813 0
 6533 0262 7B68     		ldr	r3, [r7, #4]
 6534 0264 1B68     		ldr	r3, [r3]
 6535 0266 7A68     		ldr	r2, [r7, #4]
 6536 0268 1268     		ldr	r2, [r2]
 6537 026a 5168     		ldr	r1, [r2, #4]
 6538 026c 7A69     		ldr	r2, [r7, #20]
 6539 026e D243     		mvns	r2, r2
 6540 0270 0A40     		ands	r2, r2, r1
 6541 0272 5A60     		str	r2, [r3, #4]
 6542 0274 07E0     		b	.L387
 6543              	.L371:
6814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
6815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
6816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If a conversion is on going on regular or injected groups, no update     */
6819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
6820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
6823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 6544              		.loc 1 6823 0
 6545 0276 7B68     		ldr	r3, [r7, #4]
 6546 0278 5B6C     		ldr	r3, [r3, #68]
 6547 027a 43F02002 		orr	r2, r3, #32
 6548 027e 7B68     		ldr	r3, [r7, #4]
 6549 0280 5A64     		str	r2, [r3, #68]
6824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 6550              		.loc 1 6825 0
 6551 0282 0123     		movs	r3, #1
 6552 0284 FB77     		strb	r3, [r7, #31]
 6553              	.L387:
6826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 6554              		.loc 1 6830 0
 6555 0286 7B68     		ldr	r3, [r7, #4]
 6556 0288 0022     		movs	r2, #0
 6557 028a 83F84020 		strb	r2, [r3, #64]
6831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
 6558              		.loc 1 6833 0
 6559 028e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6560              	.L370:
6834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 6561              		.loc 1 6834 0
 6562 0290 1846     		mov	r0, r3
ARM GAS  /tmp/ccumkl9n.s 			page 236


 6563 0292 2437     		adds	r7, r7, #36
 6564              	.LCFI163:
 6565              		.cfi_def_cfa_offset 4
 6566 0294 BD46     		mov	sp, r7
 6567              	.LCFI164:
 6568              		.cfi_def_cfa_register 13
 6569              		@ sp needed
 6570 0296 5DF8047B 		ldr	r7, [sp], #4
 6571              	.LCFI165:
 6572              		.cfi_restore 7
 6573              		.cfi_def_cfa_offset 0
 6574 029a 7047     		bx	lr
 6575              		.cfi_endproc
 6576              	.LFE153:
 6578              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 6579              		.align	2
 6580              		.thumb
 6581              		.thumb_func
 6583              	ADC_DMAConvCplt:
 6584              	.LFB154:
6835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
6836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
6837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F334x8 || STM32F328xx || */
6838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F301x8 || STM32F302x8 || STM32F318xx    */
6839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
6841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Configures the analog watchdog.
6843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Analog watchdog thresholds can be modified while ADC conversion
6844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         is on going.
6845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         In this case, some constraints must be taken into account:
6846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the programmed threshold values are effective from the next
6847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         ADC EOC (end of unitary conversion).
6848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         Considering that registers write delay may happen due to
6849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         bus activity, this might cause an uncertainty on the
6850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         effective timing of the new programmed threshold values.
6851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
6852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  AnalogWDGConfig: Structure of ADC analog watchdog configuration
6853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
6856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
6859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
6860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
6861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->HighThreshold));
6862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(AnalogWDGConfig->LowThreshold));
6863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
6865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
6866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC)  )
6867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
6869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
ARM GAS  /tmp/ccumkl9n.s 			page 237


6872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Analog watchdog configuration */
6875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configure ADC Analog watchdog interrupt */
6877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(AnalogWDGConfig->ITMode == ENABLE)
6878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC Analog watchdog interrupt */
6880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE_IT(hadc, ADC_IT_AWD);
6881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
6883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Disable the ADC Analog watchdog interrupt */
6885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_AWD);
6886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Configuration of analog watchdog:                                        */
6889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Set the analog watchdog enable mode: regular and/or injected groups,  */
6890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    one or all channels.                                                  */
6891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Set the Analog watchdog channel (is not used if watchdog              */
6892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*    mode "all channels": ADC_CFGR_AWD1SGL=0U).                             */
6893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   MODIFY_REG(hadc->Instance->CR1            ,
6894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDSGL |
6895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_JAWDEN |
6896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDEN  |
6897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              ADC_CR1_AWDCH                  ,
6898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              AnalogWDGConfig->WatchdogMode |
6899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****              AnalogWDGConfig->Channel       );
6900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set the high threshold */
6902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   WRITE_REG(hadc->Instance->HTR, AnalogWDGConfig->HighThreshold);
6903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set the low threshold */
6905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   WRITE_REG(hadc->Instance->LTR, AnalogWDGConfig->LowThreshold);
6906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
6908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
6909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
6911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
6912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
6913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F373xC || STM32F378xx */
6914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
6916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
6917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
6918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx)
6919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
6920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
6921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
6922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following  
6923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters 
6924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without reseting 
6925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         the ADCs (both ADCs of the common group).
6926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
6927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure 
6928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
ARM GAS  /tmp/ccumkl9n.s 			page 238


6929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   To change back configuration from multimode to single mode, ADC must
6930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
6931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
6932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  multimode : Structure of ADC multimode configuration
6933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status
6934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
6935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef* hadc, ADC_MultiModeTypeDef* m
6936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
6937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
6938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
6939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSharingSameCommonRegister;
6940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
6942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
6943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_MODE(multimode->Mode));
6944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if(multimode->Mode != ADC_MODE_INDEPENDENT)
6945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_DMA_ACCESS_MODE(multimode->DMAAccessMode));
6947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
6948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
6949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process locked */
6951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
6952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set handle of the other ADC sharing the same common register             */
6955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_COMMON_ADC_OTHER(hadc, &tmphadcSharingSameCommonRegister);
6956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
6957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
6958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
6959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
6960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Multimode DMA configuration                                           */
6961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /*  - Multimode DMA mode                                                    */
6962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if ( (ADC_IS_CONVERSION_ONGOING_REGULAR(hadc) == RESET) 
6963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     && (ADC_IS_CONVERSION_ONGOING_REGULAR(&tmphadcSharingSameCommonRegister) == RESET) )
6964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
6965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Pointer to the common control register to which is belonging hadc      */
6966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (Depending on STM32F3 product, there may have up to 4 ADC and 2 common */
6967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* control registers)                                                     */
6968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmpADC_Common = ADC_COMMON_REGISTER(hadc);
6969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
6970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode paramaters.          */
6971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
6972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
6973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(multimode->Mode != ADC_MODE_INDEPENDENT)
6974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
6975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Configuration of ADC common group ADC1&ADC2, ADC3&ADC4 if available    */
6976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* (ADC2, ADC3, ADC4 availability depends on STM32 product)               */
6977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - DMA access mode                                                     */
6978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR                                          ,
6979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_MDMA  |
6980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_DMACFG                                              ,
6981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  multimode->DMAAccessMode                                   |
6982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                  ADC_CCR_MULTI_DMACONTREQ(hadc->Init.DMAContinuousRequests)   );
6983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
6984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:              */
6985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                            */
ARM GAS  /tmp/ccumkl9n.s 			page 239


6986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Set delay between two sampling phases                               */
6987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                   */
6988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 12 clock cycles for 12 bits                             */
6989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 10 clock cycles for 10 bits,                            */
6990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 8 bits                               */
6991:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 6 bits                               */
6992:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clamped to maximum delay  */
6993:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*    range                                                               */
6994:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Note: If ADC is not in the appropriate state to modify these           */
6995:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       parameters, their setting is bypassed without error reporting    */
6996:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       (as it can be the expected behaviour in case of intended action  */
6997:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       to update parameter above (which fulfills the ADC state          */
6998:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       condition: no conversion on going on group regular)              */
6999:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*       on the fly).                                                     */
7000:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                              &&
7001:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
7002:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7003:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR                                          ,
7004:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_CCR_MULTI |
7005:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    ADC_CCR_DELAY                                               ,
7006:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    multimode->Mode                                            |
7007:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****                    multimode->TwoSamplingDelay                                  );
7008:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7009:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7010:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
7011:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7012:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
7013:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7014:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
7015:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
7016:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
7017:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if ((ADC_IS_ENABLE(hadc) == RESET)                              &&
7018:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           (ADC_IS_ENABLE(&tmphadcSharingSameCommonRegister) == RESET)   )
7019:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7020:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MULTI | ADC_CCR_DELAY);
7021:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7022:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7023:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7024:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
7025:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
7026:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
7027:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7028:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
7029:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
7030:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7031:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
7032:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7033:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7034:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7035:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Process unlocked */
7036:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
7037:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7038:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return function status */
7039:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return tmp_hal_status;
7040:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** } 
7041:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #endif /* STM32F302xE || STM32F303xE || STM32F398xx || */
7042:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F302xC || STM32F303xC || STM32F358xx || */
ARM GAS  /tmp/ccumkl9n.s 			page 240


7043:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        /* STM32F303x8 || STM32F328xx || STM32F334x8    */
7044:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7045:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7046:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
7047:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7048:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7049:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7050:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @}
7051:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7052:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7053:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Functions ADCEx Private Functions
7054:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @{
7055:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7056:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7057:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA transfer complete callback. 
7058:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma: pointer to DMA handle.
7059:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7060:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7061:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
7062:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 6585              		.loc 1 7062 0
 6586              		.cfi_startproc
 6587              		@ args = 0, pretend = 0, frame = 16
 6588              		@ frame_needed = 1, uses_anonymous_args = 0
 6589 0000 80B5     		push	{r7, lr}
 6590              	.LCFI166:
 6591              		.cfi_def_cfa_offset 8
 6592              		.cfi_offset 7, -8
 6593              		.cfi_offset 14, -4
 6594 0002 84B0     		sub	sp, sp, #16
 6595              	.LCFI167:
 6596              		.cfi_def_cfa_offset 24
 6597 0004 00AF     		add	r7, sp, #0
 6598              	.LCFI168:
 6599              		.cfi_def_cfa_register 7
 6600 0006 7860     		str	r0, [r7, #4]
7063:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
7064:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 6601              		.loc 1 7064 0
 6602 0008 7B68     		ldr	r3, [r7, #4]
 6603 000a 5B6A     		ldr	r3, [r3, #36]
 6604 000c FB60     		str	r3, [r7, #12]
7065:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****  
7066:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Update state machine on conversion status if not in error state */
7067:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 6605              		.loc 1 7067 0
 6606 000e FB68     		ldr	r3, [r7, #12]
 6607 0010 5B6C     		ldr	r3, [r3, #68]
 6608 0012 03F05003 		and	r3, r3, #80
 6609 0016 002B     		cmp	r3, #0
 6610 0018 26D1     		bne	.L389
7068:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7069:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Update ADC state machine */
7070:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 6611              		.loc 1 7070 0
 6612 001a FB68     		ldr	r3, [r7, #12]
 6613 001c 5B6C     		ldr	r3, [r3, #68]
ARM GAS  /tmp/ccumkl9n.s 			page 241


 6614 001e 43F40072 		orr	r2, r3, #512
 6615 0022 FB68     		ldr	r3, [r7, #12]
 6616 0024 5A64     		str	r2, [r3, #68]
7071:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7072:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Determine whether any further conversion upcoming on group regular     */
7073:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* by external trigger, continuous mode or scan sequence on going.        */
7074:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Note: On STM32F3 devices, in case of sequencer enabled                 */
7075:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       (several ranks selected), end of conversion flag is raised       */
7076:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /*       at the end of the sequence.                                      */
7077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if(ADC_IS_SOFTWARE_START_REGULAR(hadc)        && 
 6617              		.loc 1 7077 0
 6618 0026 FB68     		ldr	r3, [r7, #12]
 6619 0028 1B68     		ldr	r3, [r3]
 6620 002a DB68     		ldr	r3, [r3, #12]
 6621 002c 03F44063 		and	r3, r3, #3072
 6622 0030 002B     		cmp	r3, #0
 6623 0032 15D1     		bne	.L390
7078:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 6624              		.loc 1 7078 0 discriminator 1
 6625 0034 FB68     		ldr	r3, [r7, #12]
 6626 0036 DB69     		ldr	r3, [r3, #28]
7077:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****        (hadc->Init.ContinuousConvMode == DISABLE)   )
 6627              		.loc 1 7077 0 discriminator 1
 6628 0038 002B     		cmp	r3, #0
 6629 003a 11D1     		bne	.L390
7079:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7080:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC state */
7081:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 6630              		.loc 1 7081 0
 6631 003c FB68     		ldr	r3, [r7, #12]
 6632 003e 5B6C     		ldr	r3, [r3, #68]
 6633 0040 23F48072 		bic	r2, r3, #256
 6634 0044 FB68     		ldr	r3, [r7, #12]
 6635 0046 5A64     		str	r2, [r3, #68]
7082:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7083:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 6636              		.loc 1 7083 0
 6637 0048 FB68     		ldr	r3, [r7, #12]
 6638 004a 5B6C     		ldr	r3, [r3, #68]
 6639 004c 03F48053 		and	r3, r3, #4096
 6640 0050 002B     		cmp	r3, #0
 6641 0052 05D1     		bne	.L390
7084:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7085:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 6642              		.loc 1 7085 0
 6643 0054 FB68     		ldr	r3, [r7, #12]
 6644 0056 5B6C     		ldr	r3, [r3, #68]
 6645 0058 43F00102 		orr	r2, r3, #1
 6646 005c FB68     		ldr	r3, [r7, #12]
 6647 005e 5A64     		str	r2, [r3, #68]
 6648              	.L390:
7086:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7087:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7088:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7089:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Conversion complete callback */
7090:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     HAL_ADC_ConvCpltCallback(hadc); 
 6649              		.loc 1 7090 0
ARM GAS  /tmp/ccumkl9n.s 			page 242


 6650 0060 F868     		ldr	r0, [r7, #12]
 6651 0062 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 6652 0066 04E0     		b	.L388
 6653              	.L389:
7091:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7092:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   else
7093:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7094:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Call DMA error callback */
7095:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     hadc->DMA_Handle->XferErrorCallback(hdma);
 6654              		.loc 1 7095 0
 6655 0068 FB68     		ldr	r3, [r7, #12]
 6656 006a DB6B     		ldr	r3, [r3, #60]
 6657 006c 1B6B     		ldr	r3, [r3, #48]
 6658 006e 7868     		ldr	r0, [r7, #4]
 6659 0070 9847     		blx	r3
 6660              	.L388:
7096:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7097:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 6661              		.loc 1 7097 0
 6662 0072 1037     		adds	r7, r7, #16
 6663              	.LCFI169:
 6664              		.cfi_def_cfa_offset 8
 6665 0074 BD46     		mov	sp, r7
 6666              	.LCFI170:
 6667              		.cfi_def_cfa_register 13
 6668              		@ sp needed
 6669 0076 80BD     		pop	{r7, pc}
 6670              		.cfi_endproc
 6671              	.LFE154:
 6673              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 6674              		.align	2
 6675              		.thumb
 6676              		.thumb_func
 6678              	ADC_DMAHalfConvCplt:
 6679              	.LFB155:
7098:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7099:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA half transfer complete callback. 
7101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma: pointer to DMA handle.
7102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)   
7105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 6680              		.loc 1 7105 0
 6681              		.cfi_startproc
 6682              		@ args = 0, pretend = 0, frame = 16
 6683              		@ frame_needed = 1, uses_anonymous_args = 0
 6684 0000 80B5     		push	{r7, lr}
 6685              	.LCFI171:
 6686              		.cfi_def_cfa_offset 8
 6687              		.cfi_offset 7, -8
 6688              		.cfi_offset 14, -4
 6689 0002 84B0     		sub	sp, sp, #16
 6690              	.LCFI172:
 6691              		.cfi_def_cfa_offset 24
 6692 0004 00AF     		add	r7, sp, #0
 6693              	.LCFI173:
ARM GAS  /tmp/ccumkl9n.s 			page 243


 6694              		.cfi_def_cfa_register 7
 6695 0006 7860     		str	r0, [r7, #4]
7106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
7107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 6696              		.loc 1 7107 0
 6697 0008 7B68     		ldr	r3, [r7, #4]
 6698 000a 5B6A     		ldr	r3, [r3, #36]
 6699 000c FB60     		str	r3, [r7, #12]
7108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Half conversion callback */
7110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_ADC_ConvHalfCpltCallback(hadc); 
 6700              		.loc 1 7110 0
 6701 000e F868     		ldr	r0, [r7, #12]
 6702 0010 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
7111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 6703              		.loc 1 7111 0
 6704 0014 1037     		adds	r7, r7, #16
 6705              	.LCFI174:
 6706              		.cfi_def_cfa_offset 8
 6707 0016 BD46     		mov	sp, r7
 6708              	.LCFI175:
 6709              		.cfi_def_cfa_register 13
 6710              		@ sp needed
 6711 0018 80BD     		pop	{r7, pc}
 6712              		.cfi_endproc
 6713              	.LFE155:
 6715 001a 00BF     		.section	.text.ADC_DMAError,"ax",%progbits
 6716              		.align	2
 6717              		.thumb
 6718              		.thumb_func
 6720              	ADC_DMAError:
 6721              	.LFB156:
7112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  DMA error callback 
7115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hdma: pointer to DMA handle.
7116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval None
7117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)   
7119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 6722              		.loc 1 7119 0
 6723              		.cfi_startproc
 6724              		@ args = 0, pretend = 0, frame = 16
 6725              		@ frame_needed = 1, uses_anonymous_args = 0
 6726 0000 80B5     		push	{r7, lr}
 6727              	.LCFI176:
 6728              		.cfi_def_cfa_offset 8
 6729              		.cfi_offset 7, -8
 6730              		.cfi_offset 14, -4
 6731 0002 84B0     		sub	sp, sp, #16
 6732              	.LCFI177:
 6733              		.cfi_def_cfa_offset 24
 6734 0004 00AF     		add	r7, sp, #0
 6735              	.LCFI178:
 6736              		.cfi_def_cfa_register 7
 6737 0006 7860     		str	r0, [r7, #4]
7120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
ARM GAS  /tmp/ccumkl9n.s 			page 244


7121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 6738              		.loc 1 7121 0
 6739 0008 7B68     		ldr	r3, [r7, #4]
 6740 000a 5B6A     		ldr	r3, [r3, #36]
 6741 000c FB60     		str	r3, [r7, #12]
7122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC state */
7124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 6742              		.loc 1 7124 0
 6743 000e FB68     		ldr	r3, [r7, #12]
 6744 0010 5B6C     		ldr	r3, [r3, #68]
 6745 0012 43F04002 		orr	r2, r3, #64
 6746 0016 FB68     		ldr	r3, [r7, #12]
 6747 0018 5A64     		str	r2, [r3, #68]
7125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Set ADC error code to DMA error */
7127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 6748              		.loc 1 7127 0
 6749 001a FB68     		ldr	r3, [r7, #12]
 6750 001c 9B6C     		ldr	r3, [r3, #72]
 6751 001e 43F00402 		orr	r2, r3, #4
 6752 0022 FB68     		ldr	r3, [r7, #12]
 6753 0024 9A64     		str	r2, [r3, #72]
7128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Error callback */
7130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   HAL_ADC_ErrorCallback(hadc); 
 6754              		.loc 1 7130 0
 6755 0026 F868     		ldr	r0, [r7, #12]
 6756 0028 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
7131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 6757              		.loc 1 7131 0
 6758 002c 1037     		adds	r7, r7, #16
 6759              	.LCFI179:
 6760              		.cfi_def_cfa_offset 8
 6761 002e BD46     		mov	sp, r7
 6762              	.LCFI180:
 6763              		.cfi_def_cfa_register 13
 6764              		@ sp needed
 6765 0030 80BD     		pop	{r7, pc}
 6766              		.cfi_endproc
 6767              	.LFE156:
 6769 0032 00BF     		.section	.text.ADC_Enable,"ax",%progbits
 6770              		.align	2
 6771              		.thumb
 6772              		.thumb_func
 6774              	ADC_Enable:
 6775              	.LFB157:
7132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** #if defined(STM32F302xE) || defined(STM32F303xE) || defined(STM32F398xx) || \
7134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F302xC) || defined(STM32F303xC) || defined(STM32F358xx) || \
7135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F303x8) || defined(STM32F334x8) || defined(STM32F328xx) || \
7136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     defined(STM32F301x8) || defined(STM32F302x8) || defined(STM32F318xx)
7137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Enable the selected ADC.
7139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
7140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
7141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
ARM GAS  /tmp/ccumkl9n.s 			page 245


7142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
7145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 6776              		.loc 1 7145 0
 6777              		.cfi_startproc
 6778              		@ args = 0, pretend = 0, frame = 16
 6779              		@ frame_needed = 1, uses_anonymous_args = 0
 6780 0000 80B5     		push	{r7, lr}
 6781              	.LCFI181:
 6782              		.cfi_def_cfa_offset 8
 6783              		.cfi_offset 7, -8
 6784              		.cfi_offset 14, -4
 6785 0002 84B0     		sub	sp, sp, #16
 6786              	.LCFI182:
 6787              		.cfi_def_cfa_offset 24
 6788 0004 00AF     		add	r7, sp, #0
 6789              	.LCFI183:
 6790              		.cfi_def_cfa_register 7
 6791 0006 7860     		str	r0, [r7, #4]
7146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
 6792              		.loc 1 7146 0
 6793 0008 0023     		movs	r3, #0
 6794 000a FB60     		str	r3, [r7, #12]
7147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
7149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
7150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
7151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* causes: ADC clock not running, ...).                                     */
7152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) == RESET)
 6795              		.loc 1 7152 0
 6796 000c 7B68     		ldr	r3, [r7, #4]
 6797 000e 1B68     		ldr	r3, [r3]
 6798 0010 9B68     		ldr	r3, [r3, #8]
 6799 0012 03F00303 		and	r3, r3, #3
 6800 0016 012B     		cmp	r3, #1
 6801 0018 08D1     		bne	.L395
 6802              		.loc 1 7152 0 is_stmt 0 discriminator 1
 6803 001a 7B68     		ldr	r3, [r7, #4]
 6804 001c 1B68     		ldr	r3, [r3]
 6805 001e 1B68     		ldr	r3, [r3]
 6806 0020 03F00103 		and	r3, r3, #1
 6807 0024 002B     		cmp	r3, #0
 6808 0026 01D0     		beq	.L395
 6809              		.loc 1 7152 0 discriminator 3
 6810 0028 0123     		movs	r3, #1
 6811 002a 00E0     		b	.L396
 6812              	.L395:
 6813              		.loc 1 7152 0 discriminator 4
 6814 002c 0023     		movs	r3, #0
 6815              	.L396:
 6816              		.loc 1 7152 0 discriminator 6
 6817 002e 002B     		cmp	r3, #0
 6818 0030 3CD1     		bne	.L397
7153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if conditions to enable the ADC are fulfilled */
7155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_ENABLING_CONDITIONS(hadc) == RESET)
ARM GAS  /tmp/ccumkl9n.s 			page 246


 6819              		.loc 1 7155 0 is_stmt 1
 6820 0032 7B68     		ldr	r3, [r7, #4]
 6821 0034 1B68     		ldr	r3, [r3]
 6822 0036 9A68     		ldr	r2, [r3, #8]
 6823 0038 1F4B     		ldr	r3, .L402
 6824 003a 1340     		ands	r3, r3, r2
 6825 003c 002B     		cmp	r3, #0
 6826 003e 0DD0     		beq	.L398
7156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
7158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 6827              		.loc 1 7158 0
 6828 0040 7B68     		ldr	r3, [r7, #4]
 6829 0042 5B6C     		ldr	r3, [r3, #68]
 6830 0044 43F01002 		orr	r2, r3, #16
 6831 0048 7B68     		ldr	r3, [r7, #4]
 6832 004a 5A64     		str	r2, [r3, #68]
7159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
7161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 6833              		.loc 1 7161 0
 6834 004c 7B68     		ldr	r3, [r7, #4]
 6835 004e 9B6C     		ldr	r3, [r3, #72]
 6836 0050 43F00102 		orr	r2, r3, #1
 6837 0054 7B68     		ldr	r3, [r7, #4]
 6838 0056 9A64     		str	r2, [r3, #72]
7162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
 6839              		.loc 1 7163 0
 6840 0058 0123     		movs	r3, #1
 6841 005a 28E0     		b	.L399
 6842              	.L398:
7164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
7167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     __HAL_ADC_ENABLE(hadc);
 6843              		.loc 1 7167 0
 6844 005c 7B68     		ldr	r3, [r7, #4]
 6845 005e 1B68     		ldr	r3, [r3]
 6846 0060 7A68     		ldr	r2, [r7, #4]
 6847 0062 1268     		ldr	r2, [r2]
 6848 0064 9268     		ldr	r2, [r2, #8]
 6849 0066 42F00102 		orr	r2, r2, #1
 6850 006a 9A60     		str	r2, [r3, #8]
7168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for ADC effectively enabled */
7170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();  
 6851              		.loc 1 7170 0
 6852 006c FFF7FEFF 		bl	HAL_GetTick
 6853 0070 F860     		str	r0, [r7, #12]
7171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == RESET)
 6854              		.loc 1 7172 0
 6855 0072 14E0     		b	.L400
 6856              	.L401:
7173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
ARM GAS  /tmp/ccumkl9n.s 			page 247


 6857              		.loc 1 7174 0
 6858 0074 FFF7FEFF 		bl	HAL_GetTick
 6859 0078 0246     		mov	r2, r0
 6860 007a FB68     		ldr	r3, [r7, #12]
 6861 007c D31A     		subs	r3, r2, r3
 6862 007e 022B     		cmp	r3, #2
 6863 0080 0DD9     		bls	.L400
7175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 6864              		.loc 1 7177 0
 6865 0082 7B68     		ldr	r3, [r7, #4]
 6866 0084 5B6C     		ldr	r3, [r3, #68]
 6867 0086 43F01002 		orr	r2, r3, #16
 6868 008a 7B68     		ldr	r3, [r7, #4]
 6869 008c 5A64     		str	r2, [r3, #68]
7178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 6870              		.loc 1 7180 0
 6871 008e 7B68     		ldr	r3, [r7, #4]
 6872 0090 9B6C     		ldr	r3, [r3, #72]
 6873 0092 43F00102 		orr	r2, r3, #1
 6874 0096 7B68     		ldr	r3, [r7, #4]
 6875 0098 9A64     		str	r2, [r3, #72]
7181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 6876              		.loc 1 7182 0
 6877 009a 0123     		movs	r3, #1
 6878 009c 07E0     		b	.L399
 6879              	.L400:
7172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 6880              		.loc 1 7172 0
 6881 009e 7B68     		ldr	r3, [r7, #4]
 6882 00a0 1B68     		ldr	r3, [r3]
 6883 00a2 1B68     		ldr	r3, [r3]
 6884 00a4 03F00103 		and	r3, r3, #1
 6885 00a8 002B     		cmp	r3, #0
 6886 00aa E3D0     		beq	.L401
 6887              	.L397:
7183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 6888              		.loc 1 7188 0
 6889 00ac 0023     		movs	r3, #0
 6890              	.L399:
7189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 6891              		.loc 1 7189 0
 6892 00ae 1846     		mov	r0, r3
 6893 00b0 1037     		adds	r7, r7, #16
 6894              	.LCFI184:
 6895              		.cfi_def_cfa_offset 8
 6896 00b2 BD46     		mov	sp, r7
 6897              	.LCFI185:
ARM GAS  /tmp/ccumkl9n.s 			page 248


 6898              		.cfi_def_cfa_register 13
 6899              		@ sp needed
 6900 00b4 80BD     		pop	{r7, pc}
 6901              	.L403:
 6902 00b6 00BF     		.align	2
 6903              	.L402:
 6904 00b8 3F000080 		.word	-2147483585
 6905              		.cfi_endproc
 6906              	.LFE157:
 6908              		.section	.text.ADC_Disable,"ax",%progbits
 6909              		.align	2
 6910              		.thumb
 6911              		.thumb_func
 6913              	ADC_Disable:
 6914              	.LFB158:
7190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Disable the selected ADC.
7193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
7194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *         stopped.
7195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
7196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc)
7199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 6915              		.loc 1 7199 0
 6916              		.cfi_startproc
 6917              		@ args = 0, pretend = 0, frame = 16
 6918              		@ frame_needed = 1, uses_anonymous_args = 0
 6919 0000 80B5     		push	{r7, lr}
 6920              	.LCFI186:
 6921              		.cfi_def_cfa_offset 8
 6922              		.cfi_offset 7, -8
 6923              		.cfi_offset 14, -4
 6924 0002 84B0     		sub	sp, sp, #16
 6925              	.LCFI187:
 6926              		.cfi_def_cfa_offset 24
 6927 0004 00AF     		add	r7, sp, #0
 6928              	.LCFI188:
 6929              		.cfi_def_cfa_register 7
 6930 0006 7860     		str	r0, [r7, #4]
7200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
 6931              		.loc 1 7200 0
 6932 0008 0023     		movs	r3, #0
 6933 000a FB60     		str	r3, [r7, #12]
7201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification if ADC is not already disabled:                             */
7203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
7204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* disabled.                                                                */
7205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_ENABLE(hadc) != RESET )
 6934              		.loc 1 7205 0
 6935 000c 7B68     		ldr	r3, [r7, #4]
 6936 000e 1B68     		ldr	r3, [r3]
 6937 0010 9B68     		ldr	r3, [r3, #8]
 6938 0012 03F00303 		and	r3, r3, #3
 6939 0016 012B     		cmp	r3, #1
 6940 0018 08D1     		bne	.L405
ARM GAS  /tmp/ccumkl9n.s 			page 249


 6941              		.loc 1 7205 0 is_stmt 0 discriminator 1
 6942 001a 7B68     		ldr	r3, [r7, #4]
 6943 001c 1B68     		ldr	r3, [r3]
 6944 001e 1B68     		ldr	r3, [r3]
 6945 0020 03F00103 		and	r3, r3, #1
 6946 0024 002B     		cmp	r3, #0
 6947 0026 01D0     		beq	.L405
 6948              		.loc 1 7205 0 discriminator 3
 6949 0028 0123     		movs	r3, #1
 6950 002a 00E0     		b	.L406
 6951              	.L405:
 6952              		.loc 1 7205 0 discriminator 4
 6953 002c 0023     		movs	r3, #0
 6954              	.L406:
 6955              		.loc 1 7205 0 discriminator 6
 6956 002e 002B     		cmp	r3, #0
 6957 0030 40D0     		beq	.L407
7206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Check if conditions to disable the ADC are fulfilled */
7208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ADC_DISABLING_CONDITIONS(hadc) != RESET)
 6958              		.loc 1 7208 0 is_stmt 1
 6959 0032 7B68     		ldr	r3, [r7, #4]
 6960 0034 1B68     		ldr	r3, [r3]
 6961 0036 9B68     		ldr	r3, [r3, #8]
 6962 0038 03F00D03 		and	r3, r3, #13
 6963 003c 012B     		cmp	r3, #1
 6964 003e 0FD1     		bne	.L408
7209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Disable the ADC peripheral */
7211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_DISABLE(hadc);
 6965              		.loc 1 7211 0
 6966 0040 7B68     		ldr	r3, [r7, #4]
 6967 0042 1B68     		ldr	r3, [r3]
 6968 0044 7A68     		ldr	r2, [r7, #4]
 6969 0046 1268     		ldr	r2, [r2]
 6970 0048 9268     		ldr	r2, [r2, #8]
 6971 004a 42F00202 		orr	r2, r2, #2
 6972 004e 9A60     		str	r2, [r3, #8]
 6973 0050 7B68     		ldr	r3, [r7, #4]
 6974 0052 1B68     		ldr	r3, [r3]
 6975 0054 0322     		movs	r2, #3
 6976 0056 1A60     		str	r2, [r3]
7212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     else
7214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
7216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
7217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Set ADC error code to ADC IP internal error */
7219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
7220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       return HAL_ERROR;
7222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****      
7224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for ADC effectively disabled */
7225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 6977              		.loc 1 7225 0
ARM GAS  /tmp/ccumkl9n.s 			page 250


 6978 0058 FFF7FEFF 		bl	HAL_GetTick
 6979 005c F860     		str	r0, [r7, #12]
7226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while(HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADEN))
 6980              		.loc 1 7227 0
 6981 005e 22E0     		b	.L411
 6982              	.L408:
7216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6983              		.loc 1 7216 0
 6984 0060 7B68     		ldr	r3, [r7, #4]
 6985 0062 5B6C     		ldr	r3, [r3, #68]
 6986 0064 43F01002 		orr	r2, r3, #16
 6987 0068 7B68     		ldr	r3, [r7, #4]
 6988 006a 5A64     		str	r2, [r3, #68]
7219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
 6989              		.loc 1 7219 0
 6990 006c 7B68     		ldr	r3, [r7, #4]
 6991 006e 9B6C     		ldr	r3, [r3, #72]
 6992 0070 43F00102 		orr	r2, r3, #1
 6993 0074 7B68     		ldr	r3, [r7, #4]
 6994 0076 9A64     		str	r2, [r3, #72]
7221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
 6995              		.loc 1 7221 0
 6996 0078 0123     		movs	r3, #1
 6997 007a 1CE0     		b	.L410
 6998              	.L412:
7228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 6999              		.loc 1 7229 0
 7000 007c FFF7FEFF 		bl	HAL_GetTick
 7001 0080 0246     		mov	r2, r0
 7002 0082 FB68     		ldr	r3, [r7, #12]
 7003 0084 D31A     		subs	r3, r2, r3
 7004 0086 022B     		cmp	r3, #2
 7005 0088 0DD9     		bls	.L411
7230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7006              		.loc 1 7232 0
 7007 008a 7B68     		ldr	r3, [r7, #4]
 7008 008c 5B6C     		ldr	r3, [r3, #68]
 7009 008e 43F01002 		orr	r2, r3, #16
 7010 0092 7B68     		ldr	r3, [r7, #4]
 7011 0094 5A64     		str	r2, [r3, #68]
7233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7012              		.loc 1 7235 0
 7013 0096 7B68     		ldr	r3, [r7, #4]
 7014 0098 9B6C     		ldr	r3, [r3, #72]
 7015 009a 43F00102 		orr	r2, r3, #1
 7016 009e 7B68     		ldr	r3, [r7, #4]
 7017 00a0 9A64     		str	r2, [r3, #72]
7236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 7018              		.loc 1 7237 0
 7019 00a2 0123     		movs	r3, #1
ARM GAS  /tmp/ccumkl9n.s 			page 251


 7020 00a4 07E0     		b	.L410
 7021              	.L411:
7227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 7022              		.loc 1 7227 0
 7023 00a6 7B68     		ldr	r3, [r7, #4]
 7024 00a8 1B68     		ldr	r3, [r3]
 7025 00aa 9B68     		ldr	r3, [r3, #8]
 7026 00ac 03F00103 		and	r3, r3, #1
 7027 00b0 002B     		cmp	r3, #0
 7028 00b2 E3D1     		bne	.L412
 7029              	.L407:
7238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   
7242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 7030              		.loc 1 7243 0
 7031 00b4 0023     		movs	r3, #0
 7032              	.L410:
7244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 7033              		.loc 1 7244 0
 7034 00b6 1846     		mov	r0, r3
 7035 00b8 1037     		adds	r7, r7, #16
 7036              	.LCFI189:
 7037              		.cfi_def_cfa_offset 8
 7038 00ba BD46     		mov	sp, r7
 7039              	.LCFI190:
 7040              		.cfi_def_cfa_register 13
 7041              		@ sp needed
 7042 00bc 80BD     		pop	{r7, pc}
 7043              		.cfi_endproc
 7044              	.LFE158:
 7046 00be 00BF     		.section	.text.ADC_ConversionStop,"ax",%progbits
 7047              		.align	2
 7048              		.thumb
 7049              		.thumb_func
 7051              	ADC_ConversionStop:
 7052              	.LFB159:
7245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** /**
7248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion.
7249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  hadc: ADC handle
7250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @param  ConversionGroup: ADC group regular and/or injected.
7251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
7252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_REGULAR_GROUP: ADC regular conversion type.
7253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_INJECTED_GROUP: ADC injected conversion type.
7254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   *            @arg ADC_REGULAR_INJECTED_GROUP: ADC regular and injected conversion type.
7255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   * @retval HAL status.
7256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   */
7257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** static HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc, uint32_t ConversionGroup)
7258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** {
 7053              		.loc 1 7258 0
 7054              		.cfi_startproc
 7055              		@ args = 0, pretend = 0, frame = 24
 7056              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccumkl9n.s 			page 252


 7057 0000 80B5     		push	{r7, lr}
 7058              	.LCFI191:
 7059              		.cfi_def_cfa_offset 8
 7060              		.cfi_offset 7, -8
 7061              		.cfi_offset 14, -4
 7062 0002 86B0     		sub	sp, sp, #24
 7063              	.LCFI192:
 7064              		.cfi_def_cfa_offset 32
 7065 0004 00AF     		add	r7, sp, #0
 7066              	.LCFI193:
 7067              		.cfi_def_cfa_register 7
 7068 0006 7860     		str	r0, [r7, #4]
 7069 0008 3960     		str	r1, [r7]
7259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART = 0U;
 7070              		.loc 1 7259 0
 7071 000a 0023     		movs	r3, #0
 7072 000c 7B61     		str	r3, [r7, #20]
7260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t tickstart = 0U;
 7073              		.loc 1 7260 0
 7074 000e 0023     		movs	r3, #0
 7075 0010 FB60     		str	r3, [r7, #12]
7261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0U;
 7076              		.loc 1 7261 0
 7077 0012 0023     		movs	r3, #0
 7078 0014 3B61     		str	r3, [r7, #16]
7262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Check the parameters */
7264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
7265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
7266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
7268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* groups) to bypass this function if not needed.                           */
7269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   if (ADC_IS_CONVERSION_ONGOING_REGULAR_INJECTED(hadc))
 7079              		.loc 1 7269 0
 7080 0016 7B68     		ldr	r3, [r7, #4]
 7081 0018 1B68     		ldr	r3, [r3]
 7082 001a 9B68     		ldr	r3, [r3, #8]
 7083 001c 03F00C03 		and	r3, r3, #12
 7084 0020 002B     		cmp	r3, #0
 7085 0022 00F09280 		beq	.L414
7270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   {
7271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Particular case of continuous auto-injection mode combined with        */
7272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* auto-delay mode.                                                       */
7273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
7274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
7275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Procedure to be followed: Wait until JEOS=1U, clear JEOS, set ADSTP=1   */
7276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* (see reference manual).                                                */
7277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if ((HAL_IS_BIT_SET(hadc->Instance->CFGR, ADC_CFGR_JAUTO)) &&
 7086              		.loc 1 7277 0
 7087 0026 7B68     		ldr	r3, [r7, #4]
 7088 0028 1B68     		ldr	r3, [r3]
 7089 002a DB68     		ldr	r3, [r3, #12]
 7090 002c 03F00073 		and	r3, r3, #33554432
 7091 0030 002B     		cmp	r3, #0
 7092 0032 2AD0     		beq	.L415
7278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode==ENABLE)               &&
 7093              		.loc 1 7278 0 discriminator 1
ARM GAS  /tmp/ccumkl9n.s 			page 253


 7094 0034 7B68     		ldr	r3, [r7, #4]
 7095 0036 DB69     		ldr	r3, [r3, #28]
7277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode==ENABLE)               &&
 7096              		.loc 1 7277 0 discriminator 1
 7097 0038 012B     		cmp	r3, #1
 7098 003a 26D1     		bne	.L415
7279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.LowPowerAutoWait==ENABLE)                   )
 7099              		.loc 1 7279 0
 7100 003c 7B68     		ldr	r3, [r7, #4]
 7101 003e 9B69     		ldr	r3, [r3, #24]
7278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****          (hadc->Init.ContinuousConvMode==ENABLE)               &&
 7102              		.loc 1 7278 0
 7103 0040 012B     		cmp	r3, #1
 7104 0042 22D1     		bne	.L415
7280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Use stop of regular group */
7282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       ConversionGroup = ADC_REGULAR_GROUP;
 7105              		.loc 1 7282 0
 7106 0044 0C23     		movs	r3, #12
 7107 0046 3B60     		str	r3, [r7]
7283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
7285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == RESET)
 7108              		.loc 1 7285 0
 7109 0048 14E0     		b	.L416
 7110              	.L419:
7286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES *4U))
 7111              		.loc 1 7287 0
 7112 004a 3B69     		ldr	r3, [r7, #16]
 7113 004c 414A     		ldr	r2, .L429
 7114 004e 9342     		cmp	r3, r2
 7115 0050 0DD9     		bls	.L417
7288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         {
7289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
7290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7116              		.loc 1 7290 0
 7117 0052 7B68     		ldr	r3, [r7, #4]
 7118 0054 5B6C     		ldr	r3, [r3, #68]
 7119 0056 43F01002 		orr	r2, r3, #16
 7120 005a 7B68     		ldr	r3, [r7, #4]
 7121 005c 5A64     		str	r2, [r3, #68]
7291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
7292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           /* Set ADC error code to ADC IP internal error */
7293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7122              		.loc 1 7293 0
 7123 005e 7B68     		ldr	r3, [r7, #4]
 7124 0060 9B6C     		ldr	r3, [r3, #72]
 7125 0062 43F00102 		orr	r2, r3, #1
 7126 0066 7B68     		ldr	r3, [r7, #4]
 7127 0068 9A64     		str	r2, [r3, #72]
7294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           
7295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           return HAL_ERROR;
 7128              		.loc 1 7295 0
 7129 006a 0123     		movs	r3, #1
 7130 006c 6EE0     		b	.L418
 7131              	.L417:
ARM GAS  /tmp/ccumkl9n.s 			page 254


7296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         }
7297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         Conversion_Timeout_CPU_cycles ++;
 7132              		.loc 1 7297 0
 7133 006e 3B69     		ldr	r3, [r7, #16]
 7134 0070 0133     		adds	r3, r3, #1
 7135 0072 3B61     		str	r3, [r7, #16]
 7136              	.L416:
7285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
 7137              		.loc 1 7285 0
 7138 0074 7B68     		ldr	r3, [r7, #4]
 7139 0076 1B68     		ldr	r3, [r3]
 7140 0078 1B68     		ldr	r3, [r3]
 7141 007a 03F04003 		and	r3, r3, #64
 7142 007e 002B     		cmp	r3, #0
 7143 0080 E3D0     		beq	.L419
7298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Clear JEOS */
7301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
 7144              		.loc 1 7301 0
 7145 0082 7B68     		ldr	r3, [r7, #4]
 7146 0084 1B68     		ldr	r3, [r3]
 7147 0086 4022     		movs	r2, #64
 7148 0088 1A60     		str	r2, [r3]
 7149              	.L415:
7302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going on regular group */
7305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ConversionGroup != ADC_INJECTED_GROUP)
 7150              		.loc 1 7305 0
 7151 008a 3B68     		ldr	r3, [r7]
 7152 008c 602B     		cmp	r3, #96
 7153 008e 15D0     		beq	.L420
7306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0U */
7308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_ADSTART) && 
 7154              		.loc 1 7308 0
 7155 0090 7B68     		ldr	r3, [r7, #4]
 7156 0092 1B68     		ldr	r3, [r3]
 7157 0094 9B68     		ldr	r3, [r3, #8]
 7158 0096 03F00403 		and	r3, r3, #4
 7159 009a 002B     		cmp	r3, #0
 7160 009c 0ED0     		beq	.L420
7309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 7161              		.loc 1 7309 0 discriminator 1
 7162 009e 7B68     		ldr	r3, [r7, #4]
 7163 00a0 1B68     		ldr	r3, [r3]
 7164 00a2 9B68     		ldr	r3, [r3, #8]
 7165 00a4 03F00203 		and	r3, r3, #2
7308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)     )
 7166              		.loc 1 7308 0 discriminator 1
 7167 00a8 002B     		cmp	r3, #0
 7168 00aa 07D1     		bne	.L420
7310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Stop conversions on regular group */
7312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->Instance->CR |= ADC_CR_ADSTP;
 7169              		.loc 1 7312 0
ARM GAS  /tmp/ccumkl9n.s 			page 255


 7170 00ac 7B68     		ldr	r3, [r7, #4]
 7171 00ae 1B68     		ldr	r3, [r3]
 7172 00b0 7A68     		ldr	r2, [r7, #4]
 7173 00b2 1268     		ldr	r2, [r2]
 7174 00b4 9268     		ldr	r2, [r2, #8]
 7175 00b6 42F01002 		orr	r2, r2, #16
 7176 00ba 9A60     		str	r2, [r3, #8]
 7177              	.L420:
7313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Stop potential conversion on going on injected group */
7317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     if (ConversionGroup != ADC_REGULAR_GROUP)
 7178              		.loc 1 7317 0
 7179 00bc 3B68     		ldr	r3, [r7]
 7180 00be 0C2B     		cmp	r3, #12
 7181 00c0 15D0     		beq	.L421
7318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0U */
7320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if (HAL_IS_BIT_SET(hadc->Instance->CR, ADC_CR_JADSTART) && 
 7182              		.loc 1 7320 0
 7183 00c2 7B68     		ldr	r3, [r7, #4]
 7184 00c4 1B68     		ldr	r3, [r3]
 7185 00c6 9B68     		ldr	r3, [r3, #8]
 7186 00c8 03F00803 		and	r3, r3, #8
 7187 00cc 002B     		cmp	r3, #0
 7188 00ce 0ED0     		beq	.L421
7321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 7189              		.loc 1 7321 0 discriminator 1
 7190 00d0 7B68     		ldr	r3, [r7, #4]
 7191 00d2 1B68     		ldr	r3, [r3]
 7192 00d4 9B68     		ldr	r3, [r3, #8]
 7193 00d6 03F00203 		and	r3, r3, #2
7320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****           HAL_IS_BIT_CLR(hadc->Instance->CR, ADC_CR_ADDIS)      )
 7194              		.loc 1 7320 0 discriminator 1
 7195 00da 002B     		cmp	r3, #0
 7196 00dc 07D1     		bne	.L421
7322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Stop conversions on injected group */
7324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         hadc->Instance->CR |= ADC_CR_JADSTP;
 7197              		.loc 1 7324 0
 7198 00de 7B68     		ldr	r3, [r7, #4]
 7199 00e0 1B68     		ldr	r3, [r3]
 7200 00e2 7A68     		ldr	r2, [r7, #4]
 7201 00e4 1268     		ldr	r2, [r2]
 7202 00e6 9268     		ldr	r2, [r2, #8]
 7203 00e8 42F02002 		orr	r2, r2, #32
 7204 00ec 9A60     		str	r2, [r3, #8]
 7205              	.L421:
7325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** 
7328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Selection of start and stop bits in function of regular or injected group */
7329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     switch(ConversionGroup)
 7206              		.loc 1 7329 0
 7207 00ee 3B68     		ldr	r3, [r7]
 7208 00f0 602B     		cmp	r3, #96
ARM GAS  /tmp/ccumkl9n.s 			page 256


 7209 00f2 04D0     		beq	.L423
 7210 00f4 6C2B     		cmp	r3, #108
 7211 00f6 05D1     		bne	.L428
7330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_REGULAR_INJECTED_GROUP:
7332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
 7212              		.loc 1 7332 0
 7213 00f8 0C23     		movs	r3, #12
 7214 00fa 7B61     		str	r3, [r7, #20]
7333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
 7215              		.loc 1 7333 0
 7216 00fc 05E0     		b	.L425
 7217              	.L423:
7334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     case ADC_INJECTED_GROUP:
7335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
 7218              		.loc 1 7335 0
 7219 00fe 0823     		movs	r3, #8
 7220 0100 7B61     		str	r3, [r7, #20]
7336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
 7221              		.loc 1 7336 0
 7222 0102 02E0     		b	.L425
 7223              	.L428:
7337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Case ADC_REGULAR_GROUP */
7338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     default:
7339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
 7224              		.loc 1 7339 0
 7225 0104 0423     		movs	r3, #4
 7226 0106 7B61     		str	r3, [r7, #20]
7340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         break;
 7227              		.loc 1 7340 0
 7228 0108 00BF     		nop
 7229              	.L425:
7341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     /* Wait for conversion effectively stopped */
7344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 7230              		.loc 1 7344 0
 7231 010a FFF7FEFF 		bl	HAL_GetTick
 7232 010e F860     		str	r0, [r7, #12]
7345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       
7346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     while((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != RESET)
 7233              		.loc 1 7346 0
 7234 0110 14E0     		b	.L426
 7235              	.L427:
7347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
7348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
 7236              		.loc 1 7348 0
 7237 0112 FFF7FEFF 		bl	HAL_GetTick
 7238 0116 0246     		mov	r2, r0
 7239 0118 FB68     		ldr	r3, [r7, #12]
 7240 011a D31A     		subs	r3, r2, r3
 7241 011c 0B2B     		cmp	r3, #11
 7242 011e 0DD9     		bls	.L426
7349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       {
7350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
7351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 7243              		.loc 1 7351 0
ARM GAS  /tmp/ccumkl9n.s 			page 257


 7244 0120 7B68     		ldr	r3, [r7, #4]
 7245 0122 5B6C     		ldr	r3, [r3, #68]
 7246 0124 43F01002 		orr	r2, r3, #16
 7247 0128 7B68     		ldr	r3, [r7, #4]
 7248 012a 5A64     		str	r2, [r3, #68]
7352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         /* Set ADC error code to ADC IP internal error */
7354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 7249              		.loc 1 7354 0
 7250 012c 7B68     		ldr	r3, [r7, #4]
 7251 012e 9B6C     		ldr	r3, [r3, #72]
 7252 0130 43F00102 		orr	r2, r3, #1
 7253 0134 7B68     		ldr	r3, [r7, #4]
 7254 0136 9A64     		str	r2, [r3, #72]
7355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         
7356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****         return HAL_ERROR;
 7255              		.loc 1 7356 0
 7256 0138 0123     		movs	r3, #1
 7257 013a 07E0     		b	.L418
 7258              	.L426:
7346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     {
 7259              		.loc 1 7346 0
 7260 013c 7B68     		ldr	r3, [r7, #4]
 7261 013e 1B68     		ldr	r3, [r3]
 7262 0140 9A68     		ldr	r2, [r3, #8]
 7263 0142 7B69     		ldr	r3, [r7, #20]
 7264 0144 1340     		ands	r3, r3, r2
 7265 0146 002B     		cmp	r3, #0
 7266 0148 E3D1     		bne	.L427
 7267              	.L414:
7357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****       }
7358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     }
7359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****     
7360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   }
7361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****    
7362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   /* Return HAL status */
7363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c ****   return HAL_OK;
 7268              		.loc 1 7363 0
 7269 014a 0023     		movs	r3, #0
 7270              	.L418:
7364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_adc_ex.c **** }
 7271              		.loc 1 7364 0
 7272 014c 1846     		mov	r0, r3
 7273 014e 1837     		adds	r7, r7, #24
 7274              	.LCFI194:
 7275              		.cfi_def_cfa_offset 8
 7276 0150 BD46     		mov	sp, r7
 7277              	.LCFI195:
 7278              		.cfi_def_cfa_register 13
 7279              		@ sp needed
 7280 0152 80BD     		pop	{r7, pc}
 7281              	.L430:
 7282              		.align	2
 7283              	.L429:
 7284 0154 FF930900 		.word	627711
 7285              		.cfi_endproc
 7286              	.LFE159:
ARM GAS  /tmp/ccumkl9n.s 			page 258


 7288              		.text
 7289              	.Letext0:
 7290              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 7291              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 7292              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 7293              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 7294              		.file 6 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 7295              		.file 7 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 7296              		.file 8 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 7297              		.file 9 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 7298              		.file 10 "../../Drivers/CMSIS/Include/core_cm4.h"
 7299              		.file 11 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
ARM GAS  /tmp/ccumkl9n.s 			page 259


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_adc_ex.c
     /tmp/ccumkl9n.s:21     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccumkl9n.s:26     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccumkl9n.s:6913   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccumkl9n.s:475    .text.HAL_ADC_Init:00000000000002f8 $d
     /tmp/ccumkl9n.s:483    .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccumkl9n.s:488    .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccumkl9n.s:7051   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/ccumkl9n.s:849    .text.HAL_ADC_DeInit:0000000000000270 $d
     /tmp/ccumkl9n.s:860    .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccumkl9n.s:865    .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccumkl9n.s:6774   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccumkl9n.s:1009   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccumkl9n.s:1014   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccumkl9n.s:1097   .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccumkl9n.s:1102   .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccumkl9n.s:1331   .text.HAL_ADC_PollForConversion:0000000000000168 $d
     /tmp/ccumkl9n.s:1336   .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccumkl9n.s:1341   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccumkl9n.s:1528   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccumkl9n.s:1533   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccumkl9n.s:1726   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccumkl9n.s:1731   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccumkl9n.s:1822   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccumkl9n.s:1827   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccumkl9n.s:2015   .text.HAL_ADC_Start_DMA:000000000000012c $d
     /tmp/ccumkl9n.s:6583   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccumkl9n.s:6678   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccumkl9n.s:6720   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccumkl9n.s:2022   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccumkl9n.s:2027   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccumkl9n.s:2154   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccumkl9n.s:2159   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccumkl9n.s:2199   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccumkl9n.s:2204   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccumkl9n.s:4308   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 HAL_ADCEx_InjectedConvCpltCallback
     /tmp/ccumkl9n.s:4388   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow2Callback
     /tmp/ccumkl9n.s:4428   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 HAL_ADCEx_LevelOutOfWindow3Callback
     /tmp/ccumkl9n.s:4348   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 HAL_ADCEx_InjectedQueueOverflowCallback
     /tmp/ccumkl9n.s:2716   .text.HAL_ADC_IRQHandler:000000000000037c $d
     /tmp/ccumkl9n.s:2721   .text.HAL_ADCEx_Calibration_Start:0000000000000000 $t
     /tmp/ccumkl9n.s:2726   .text.HAL_ADCEx_Calibration_Start:0000000000000000 HAL_ADCEx_Calibration_Start
     /tmp/ccumkl9n.s:2871   .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 $t
     /tmp/ccumkl9n.s:2876   .text.HAL_ADCEx_Calibration_GetValue:0000000000000000 HAL_ADCEx_Calibration_GetValue
     /tmp/ccumkl9n.s:2930   .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 $t
     /tmp/ccumkl9n.s:2935   .text.HAL_ADCEx_Calibration_SetValue:0000000000000000 HAL_ADCEx_Calibration_SetValue
     /tmp/ccumkl9n.s:3072   .text.HAL_ADCEx_InjectedStart:0000000000000000 $t
     /tmp/ccumkl9n.s:3077   .text.HAL_ADCEx_InjectedStart:0000000000000000 HAL_ADCEx_InjectedStart
     /tmp/ccumkl9n.s:3205   .text.HAL_ADCEx_InjectedStop:0000000000000000 $t
     /tmp/ccumkl9n.s:3210   .text.HAL_ADCEx_InjectedStop:0000000000000000 HAL_ADCEx_InjectedStop
     /tmp/ccumkl9n.s:3338   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 $t
     /tmp/ccumkl9n.s:3343   .text.HAL_ADCEx_InjectedPollForConversion:0000000000000000 HAL_ADCEx_InjectedPollForConversion
     /tmp/ccumkl9n.s:3510   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 $t
     /tmp/ccumkl9n.s:3515   .text.HAL_ADCEx_InjectedStart_IT:0000000000000000 HAL_ADCEx_InjectedStart_IT
     /tmp/ccumkl9n.s:3694   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 $t
     /tmp/ccumkl9n.s:3699   .text.HAL_ADCEx_InjectedStop_IT:0000000000000000 HAL_ADCEx_InjectedStop_IT
ARM GAS  /tmp/ccumkl9n.s 			page 260


     /tmp/ccumkl9n.s:3835   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 $t
     /tmp/ccumkl9n.s:3840   .text.HAL_ADCEx_InjectedGetValue:0000000000000000 HAL_ADCEx_InjectedGetValue
     /tmp/ccumkl9n.s:3924   .text.HAL_ADCEx_RegularStop:0000000000000000 $t
     /tmp/ccumkl9n.s:3929   .text.HAL_ADCEx_RegularStop:0000000000000000 HAL_ADCEx_RegularStop
     /tmp/ccumkl9n.s:4033   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 $t
     /tmp/ccumkl9n.s:4038   .text.HAL_ADCEx_RegularStop_IT:0000000000000000 HAL_ADCEx_RegularStop_IT
     /tmp/ccumkl9n.s:4150   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 $t
     /tmp/ccumkl9n.s:4155   .text.HAL_ADCEx_RegularStop_DMA:0000000000000000 HAL_ADCEx_RegularStop_DMA
     /tmp/ccumkl9n.s:4303   .text.HAL_ADCEx_InjectedConvCpltCallback:0000000000000000 $t
     /tmp/ccumkl9n.s:4343   .text.HAL_ADCEx_InjectedQueueOverflowCallback:0000000000000000 $t
     /tmp/ccumkl9n.s:4383   .text.HAL_ADCEx_LevelOutOfWindow2Callback:0000000000000000 $t
     /tmp/ccumkl9n.s:4423   .text.HAL_ADCEx_LevelOutOfWindow3Callback:0000000000000000 $t
     /tmp/ccumkl9n.s:4463   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccumkl9n.s:4468   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccumkl9n.s:4744   .text.HAL_ADC_ConfigChannel:00000000000001f0 $d
     /tmp/ccumkl9n.s:4748   .text.HAL_ADC_ConfigChannel:0000000000000200 $t
     /tmp/ccumkl9n.s:5123   .text.HAL_ADC_ConfigChannel:0000000000000490 $d
     /tmp/ccumkl9n.s:5127   .text.HAL_ADC_ConfigChannel:0000000000000498 $t
     /tmp/ccumkl9n.s:5258   .text.HAL_ADC_ConfigChannel:0000000000000558 $d
     /tmp/ccumkl9n.s:5264   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 $t
     /tmp/ccumkl9n.s:5269   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000000 HAL_ADCEx_InjectedConfigChannel
     /tmp/ccumkl9n.s:5673   .text.HAL_ADCEx_InjectedConfigChannel:00000000000002b4 $d
     /tmp/ccumkl9n.s:5677   .text.HAL_ADCEx_InjectedConfigChannel:00000000000002c4 $t
     /tmp/ccumkl9n.s:5700   .text.HAL_ADCEx_InjectedConfigChannel:00000000000002e8 $d
     /tmp/ccumkl9n.s:5704   .text.HAL_ADCEx_InjectedConfigChannel:00000000000002f0 $t
     /tmp/ccumkl9n.s:6057   .text.HAL_ADCEx_InjectedConfigChannel:000000000000055c $d
     /tmp/ccumkl9n.s:6061   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000564 $t
     /tmp/ccumkl9n.s:6179   .text.HAL_ADCEx_InjectedConfigChannel:0000000000000610 $d
     /tmp/ccumkl9n.s:6185   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccumkl9n.s:6190   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccumkl9n.s:6579   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccumkl9n.s:6674   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccumkl9n.s:6716   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccumkl9n.s:6770   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccumkl9n.s:6904   .text.ADC_Enable:00000000000000b8 $d
     /tmp/ccumkl9n.s:6909   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccumkl9n.s:7047   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccumkl9n.s:7284   .text.ADC_ConversionStop:0000000000000154 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_ADC_MspInit
SystemCoreClock
HAL_ADC_MspDeInit
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_ADC_ConvCpltCallback
HAL_ADC_LevelOutOfWindowCallback
HAL_ADC_ErrorCallback
HAL_ADC_ConvHalfCpltCallback
