ARM GAS  /tmp/ccU7DcYz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_flash_ex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_FLASHEx_Erase
  23              		.thumb
  24              		.thumb_func
  26              	HAL_FLASHEx_Erase:
  27              	.LFB123:
  28              		.file 1 "../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c"
   1:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
   2:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ******************************************************************************
   3:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @file    stm32f3xx_hal_flash_ex.c
   4:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   6:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *    
   7:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following 
   8:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *          functionalities of the FLASH peripheral:
   9:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *           + Extended Initialization/de-initialization functions
  10:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *           + Extended I/O operation functions
  11:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *           + Extended Peripheral Control functions 
  12:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         
  13:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   @verbatim
  14:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ==============================================================================
  15:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****                ##### Flash peripheral extended features  #####
  16:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ==============================================================================
  17:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****            
  18:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  19:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ==============================================================================
  20:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory 
  21:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****        of all STM32F3xxx devices. It includes
  22:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****        
  23:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         (++) Set/Reset the write protection
  24:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         (++) Program the user Option Bytes
  25:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         (++) Get the Read protection Level
  26:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
  27:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   @endverbatim
  28:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ******************************************************************************
  29:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @attention
  30:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
ARM GAS  /tmp/ccU7DcYz.s 			page 2


  31:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  32:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
  33:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  34:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * are permitted provided that the following conditions are met:
  35:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  36:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer.
  37:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  38:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  39:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *      and/or other materials provided with the distribution.
  40:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  41:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *      may be used to endorse or promote products derived from this software
  42:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *      without specific prior written permission.
  43:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
  44:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  45:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  46:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  47:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  48:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  49:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  50:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  51:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  52:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  53:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  54:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
  55:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ******************************************************************************  
  56:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
  57:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
  58:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  59:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #include "stm32f3xx_hal.h"
  60:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
  61:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @addtogroup STM32F3xx_HAL_Driver
  62:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @{
  63:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
  64:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  65:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
  66:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @addtogroup FLASH
  67:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @{
  68:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
  69:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Variables
  70:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  * @{
  71:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  */
  72:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Variables used for Erase pages under interruption*/
  73:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
  74:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
  75:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
  76:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
  77:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
  78:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
  79:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
  80:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
  81:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
  82:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  83:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  84:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @{
  85:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
  86:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
  87:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccU7DcYz.s 			page 3


  88:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  89:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Constants FLASHEx Private Constants
  90:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  * @{
  91:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  */
  92:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #define FLASH_POSITION_IWDGSW_BIT        (uint32_t)POSITION_VAL(FLASH_OBR_IWDG_SW)
  93:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #define FLASH_POSITION_OB_USERDATA0_BIT  (uint32_t)POSITION_VAL(FLASH_OBR_DATA0)
  94:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #define FLASH_POSITION_OB_USERDATA1_BIT  (uint32_t)POSITION_VAL(FLASH_OBR_DATA1)
  95:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
  96:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
  97:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
  98:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
  99:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
 100:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Macros FLASHEx Private Macros
 101:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @{
 102:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 103:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 104:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
 105:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */ 
 106:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 107:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
 108:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
 109:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Functions FLASHEx Private Functions
 110:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  * @{
 111:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  */
 112:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Erase operations */
 113:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static void              FLASH_MassErase(void);
 114:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** void    FLASH_PageErase(uint32_t PageAddress);
 115:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 116:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Option bytes control */
 117:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WriteProtectPage);
 118:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WriteProtectPage);
 119:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t ReadProtectLevel);
 120:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t UserConfig);
 121:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_ProgramData(uint32_t Address, uint8_t Data);
 122:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static uint32_t          FLASH_OB_GetWRP(void);
 123:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static uint32_t          FLASH_OB_GetRDP(void);
 124:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static uint8_t           FLASH_OB_GetUser(void);
 125:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 126:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 127:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
 128:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 129:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 130:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /* Exported functions ---------------------------------------------------------*/
 131:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASHEx Exported Functions
 132:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @{
 133:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 134:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 135:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 FLASHEx Memory Erasing functions
 136:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  *  @brief   FLASH Memory Erasing functions
 137:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 138:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** @verbatim   
 139:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ==============================================================================
 140:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****                 ##### FLASH Erasing Programming functions ##### 
 141:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ==============================================================================
 142:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 143:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     [..] The FLASH Memory Erasing functions, includes the following functions:
 144:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     (+) @ref HAL_FLASHEx_Erase: return only when erase has been done
ARM GAS  /tmp/ccU7DcYz.s 			page 4


 145:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     (+) @ref HAL_FLASHEx_Erase_IT: end of erase is done when @ref HAL_FLASH_EndOfOperationCallback 
 146:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         is called with parameter 0xFFFFFFFF
 147:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 148:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     [..] Any operation of erase should follow these steps:
 149:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_Unlock() function to enable the flash control register and 
 150:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         program memory access.
 151:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     (#) Call the desired function to erase page.
 152:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_Lock() to disable the flash program memory access 
 153:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****        (recommended to protect the FLASH memory against possible unwanted operation).
 154:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 155:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** @endverbatim
 156:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @{
 157:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 158:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 159:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 160:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 161:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory pages
 162:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 163:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         must be called before.
 164:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access 
 165:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 166:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 167:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 168:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 169:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param[out]  PageError pointer to variable  that
 170:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         contains the configuration information on faulty page in case of error
 171:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         (0xFFFFFFFF means that all the pages have been correctly erased)
 172:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 173:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 174:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 175:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *PageError)
 176:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
  29              		.loc 1 176 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  45 0008 3960     		str	r1, [r7]
 177:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  46              		.loc 1 177 0
  47 000a 0123     		movs	r3, #1
  48 000c FB73     		strb	r3, [r7, #15]
 178:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint32_t address = 0U;
  49              		.loc 1 178 0
  50 000e 0023     		movs	r3, #0
  51 0010 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccU7DcYz.s 			page 5


 179:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 180:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Process Locked */
 181:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
  52              		.loc 1 181 0
  53 0012 2E4B     		ldr	r3, .L10
  54 0014 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  55 0016 012B     		cmp	r3, #1
  56 0018 01D1     		bne	.L2
  57              		.loc 1 181 0 is_stmt 0 discriminator 1
  58 001a 0223     		movs	r3, #2
  59 001c 52E0     		b	.L3
  60              	.L2:
  61              		.loc 1 181 0 discriminator 2
  62 001e 2B4B     		ldr	r3, .L10
  63 0020 0122     		movs	r2, #1
  64 0022 1A76     		strb	r2, [r3, #24]
 182:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 183:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Check the parameters */
 184:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 185:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 186:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
  65              		.loc 1 186 0 is_stmt 1 discriminator 2
  66 0024 7B68     		ldr	r3, [r7, #4]
  67 0026 1B68     		ldr	r3, [r3]
  68 0028 012B     		cmp	r3, #1
  69 002a 15D1     		bne	.L4
 187:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 188:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Mass Erase requested for Bank1 */
 189:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 190:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if (FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK)
  70              		.loc 1 190 0
  71 002c 4CF25030 		movw	r0, #50000
  72 0030 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  73 0034 0346     		mov	r3, r0
  74 0036 002B     		cmp	r3, #0
  75 0038 40D1     		bne	.L6
 191:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 192:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /*Mass erase to be done*/
 193:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         FLASH_MassErase();
  76              		.loc 1 193 0
  77 003a FFF7FEFF 		bl	FLASH_MassErase
 194:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 195:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 196:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
  78              		.loc 1 196 0
  79 003e 4CF25030 		movw	r0, #50000
  80 0042 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  81 0046 0346     		mov	r3, r0
  82 0048 FB73     		strb	r3, [r7, #15]
 197:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 198:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the MER Bit */
 199:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, FLASH_CR_MER);
  83              		.loc 1 199 0
  84 004a 214A     		ldr	r2, .L10+4
  85 004c 204B     		ldr	r3, .L10+4
  86 004e 1B69     		ldr	r3, [r3, #16]
  87 0050 23F00403 		bic	r3, r3, #4
ARM GAS  /tmp/ccU7DcYz.s 			page 6


  88 0054 1361     		str	r3, [r2, #16]
  89 0056 31E0     		b	.L6
  90              	.L4:
 200:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 201:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 202:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   else
 203:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 204:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Page Erase is requested */
 205:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Check the parameters */
 206:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 207:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NB_PAGES(pEraseInit->PageAddress, pEraseInit->NbPages));
 208:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     
 209:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Page Erase requested on address located on bank1 */
 210:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 211:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if (FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK)
  91              		.loc 1 211 0
  92 0058 4CF25030 		movw	r0, #50000
  93 005c FFF7FEFF 		bl	FLASH_WaitForLastOperation
  94 0060 0346     		mov	r3, r0
  95 0062 002B     		cmp	r3, #0
  96 0064 2AD1     		bne	.L6
 212:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 213:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /*Initialization of PageError variable*/
 214:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         *PageError = 0xFFFFFFFFU;
  97              		.loc 1 214 0
  98 0066 3B68     		ldr	r3, [r7]
  99 0068 4FF0FF32 		mov	r2, #-1
 100 006c 1A60     		str	r2, [r3]
 215:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 216:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Erase page by page to be done*/
 217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         for(address = pEraseInit->PageAddress;
 101              		.loc 1 217 0
 102 006e 7B68     		ldr	r3, [r7, #4]
 103 0070 5B68     		ldr	r3, [r3, #4]
 104 0072 BB60     		str	r3, [r7, #8]
 105 0074 19E0     		b	.L7
 106              	.L9:
 218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****             address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****             address += FLASH_PAGE_SIZE)
 220:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         {
 221:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           FLASH_PageErase(address);
 107              		.loc 1 221 0
 108 0076 B868     		ldr	r0, [r7, #8]
 109 0078 FFF7FEFF 		bl	FLASH_PageErase
 222:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           
 223:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           /* Wait for last operation to be completed */
 224:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 110              		.loc 1 224 0
 111 007c 4CF25030 		movw	r0, #50000
 112 0080 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 113 0084 0346     		mov	r3, r0
 114 0086 FB73     		strb	r3, [r7, #15]
 225:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           
 226:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           /* If the erase operation is completed, disable the PER Bit */
 227:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           CLEAR_BIT(FLASH->CR, FLASH_CR_PER);
 115              		.loc 1 227 0
 116 0088 114A     		ldr	r2, .L10+4
ARM GAS  /tmp/ccU7DcYz.s 			page 7


 117 008a 114B     		ldr	r3, .L10+4
 118 008c 1B69     		ldr	r3, [r3, #16]
 119 008e 23F00203 		bic	r3, r3, #2
 120 0092 1361     		str	r3, [r2, #16]
 228:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           
 229:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           if (status != HAL_OK)
 121              		.loc 1 229 0
 122 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 123 0096 002B     		cmp	r3, #0
 124 0098 03D0     		beq	.L8
 230:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           {
 231:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****             /* In case of error, stop erase procedure and return the faulty address */
 232:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****             *PageError = address;
 125              		.loc 1 232 0
 126 009a 3B68     		ldr	r3, [r7]
 127 009c BA68     		ldr	r2, [r7, #8]
 128 009e 1A60     		str	r2, [r3]
 233:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****             break;
 129              		.loc 1 233 0
 130 00a0 0CE0     		b	.L6
 131              	.L8:
 219:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         {
 132              		.loc 1 219 0
 133 00a2 BB68     		ldr	r3, [r7, #8]
 134 00a4 03F50063 		add	r3, r3, #2048
 135 00a8 BB60     		str	r3, [r7, #8]
 136              	.L7:
 218:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****             address += FLASH_PAGE_SIZE)
 137              		.loc 1 218 0 discriminator 1
 138 00aa 7B68     		ldr	r3, [r7, #4]
 139 00ac 9B68     		ldr	r3, [r3, #8]
 140 00ae DA02     		lsls	r2, r3, #11
 141 00b0 7B68     		ldr	r3, [r7, #4]
 142 00b2 5B68     		ldr	r3, [r3, #4]
 143 00b4 1A44     		add	r2, r2, r3
 217:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****             address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 144              		.loc 1 217 0 discriminator 1
 145 00b6 BB68     		ldr	r3, [r7, #8]
 146 00b8 9A42     		cmp	r2, r3
 147 00ba DCD8     		bhi	.L9
 148              	.L6:
 234:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****           }
 235:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         }
 236:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 237:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 238:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 239:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Process Unlocked */
 240:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 149              		.loc 1 240 0
 150 00bc 034B     		ldr	r3, .L10
 151 00be 0022     		movs	r2, #0
 152 00c0 1A76     		strb	r2, [r3, #24]
 241:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 242:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status;
 153              		.loc 1 242 0
 154 00c2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 155              	.L3:
ARM GAS  /tmp/ccU7DcYz.s 			page 8


 243:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 156              		.loc 1 243 0
 157 00c4 1846     		mov	r0, r3
 158 00c6 1037     		adds	r7, r7, #16
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 8
 161 00c8 BD46     		mov	sp, r7
 162              	.LCFI4:
 163              		.cfi_def_cfa_register 13
 164              		@ sp needed
 165 00ca 80BD     		pop	{r7, pc}
 166              	.L11:
 167              		.align	2
 168              	.L10:
 169 00cc 00000000 		.word	pFlash
 170 00d0 00200240 		.word	1073881088
 171              		.cfi_endproc
 172              	.LFE123:
 174              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 175              		.align	2
 176              		.global	HAL_FLASHEx_Erase_IT
 177              		.thumb
 178              		.thumb_func
 180              	HAL_FLASHEx_Erase_IT:
 181              	.LFB124:
 244:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 245:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 246:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory pages with interrupt enabled
 247:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 248:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         must be called before.
 249:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access 
 250:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 251:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 252:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 253:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 254:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 255:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 256:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 257:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 182              		.loc 1 257 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 16
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 80B5     		push	{r7, lr}
 187              	.LCFI5:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 84B0     		sub	sp, sp, #16
 192              	.LCFI6:
 193              		.cfi_def_cfa_offset 24
 194 0004 00AF     		add	r7, sp, #0
 195              	.LCFI7:
 196              		.cfi_def_cfa_register 7
 197 0006 7860     		str	r0, [r7, #4]
 258:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 198              		.loc 1 258 0
ARM GAS  /tmp/ccU7DcYz.s 			page 9


 199 0008 0023     		movs	r3, #0
 200 000a FB73     		strb	r3, [r7, #15]
 259:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 260:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Process Locked */
 261:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 201              		.loc 1 261 0
 202 000c 1A4B     		ldr	r3, .L18
 203 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 204 0010 012B     		cmp	r3, #1
 205 0012 01D1     		bne	.L13
 206              		.loc 1 261 0 is_stmt 0 discriminator 1
 207 0014 0223     		movs	r3, #2
 208 0016 2AE0     		b	.L14
 209              	.L13:
 210              		.loc 1 261 0 discriminator 2
 211 0018 174B     		ldr	r3, .L18
 212 001a 0122     		movs	r2, #1
 213 001c 1A76     		strb	r2, [r3, #24]
 262:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 263:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* If procedure already ongoing, reject the next one */
 264:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if (pFlash.ProcedureOnGoing != FLASH_PROC_NONE)
 214              		.loc 1 264 0 is_stmt 1 discriminator 2
 215 001e 164B     		ldr	r3, .L18
 216 0020 1B78     		ldrb	r3, [r3]
 217 0022 DBB2     		uxtb	r3, r3
 218 0024 002B     		cmp	r3, #0
 219 0026 01D0     		beq	.L15
 265:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 266:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     return HAL_ERROR;
 220              		.loc 1 266 0
 221 0028 0123     		movs	r3, #1
 222 002a 20E0     		b	.L14
 223              	.L15:
 267:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 268:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 269:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Check the parameters */
 270:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 271:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 272:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Enable End of FLASH Operation and Error source interrupts */
 273:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_ERR);
 224              		.loc 1 273 0
 225 002c 134A     		ldr	r2, .L18+4
 226 002e 134B     		ldr	r3, .L18+4
 227 0030 1B69     		ldr	r3, [r3, #16]
 228 0032 43F4A053 		orr	r3, r3, #5120
 229 0036 1361     		str	r3, [r2, #16]
 274:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 275:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 230              		.loc 1 275 0
 231 0038 7B68     		ldr	r3, [r7, #4]
 232 003a 1B68     		ldr	r3, [r3]
 233 003c 012B     		cmp	r3, #1
 234 003e 05D1     		bne	.L16
 276:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 277:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /*Mass erase to be done*/
 278:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE;
 235              		.loc 1 278 0
ARM GAS  /tmp/ccU7DcYz.s 			page 10


 236 0040 0D4B     		ldr	r3, .L18
 237 0042 0222     		movs	r2, #2
 238 0044 1A70     		strb	r2, [r3]
 279:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         FLASH_MassErase();
 239              		.loc 1 279 0
 240 0046 FFF7FEFF 		bl	FLASH_MassErase
 241 004a 0FE0     		b	.L17
 242              	.L16:
 280:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 281:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   else
 282:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 283:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Erase by page to be done*/
 284:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 285:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Check the parameters */
 286:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 287:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NB_PAGES(pEraseInit->PageAddress, pEraseInit->NbPages));
 288:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 289:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PAGEERASE;
 243              		.loc 1 289 0
 244 004c 0A4B     		ldr	r3, .L18
 245 004e 0122     		movs	r2, #1
 246 0050 1A70     		strb	r2, [r3]
 290:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.DataRemaining = pEraseInit->NbPages;
 247              		.loc 1 290 0
 248 0052 7B68     		ldr	r3, [r7, #4]
 249 0054 9B68     		ldr	r3, [r3, #8]
 250 0056 084A     		ldr	r2, .L18
 251 0058 5360     		str	r3, [r2, #4]
 291:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.Address = pEraseInit->PageAddress;
 252              		.loc 1 291 0
 253 005a 7B68     		ldr	r3, [r7, #4]
 254 005c 5B68     		ldr	r3, [r3, #4]
 255 005e 064A     		ldr	r2, .L18
 256 0060 9360     		str	r3, [r2, #8]
 292:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 293:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /*Erase 1st page and wait for IT*/
 294:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     FLASH_PageErase(pEraseInit->PageAddress);
 257              		.loc 1 294 0
 258 0062 7B68     		ldr	r3, [r7, #4]
 259 0064 5B68     		ldr	r3, [r3, #4]
 260 0066 1846     		mov	r0, r3
 261 0068 FFF7FEFF 		bl	FLASH_PageErase
 262              	.L17:
 295:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 296:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 297:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status;
 263              		.loc 1 297 0
 264 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 265              	.L14:
 298:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 266              		.loc 1 298 0
 267 006e 1846     		mov	r0, r3
 268 0070 1037     		adds	r7, r7, #16
 269              	.LCFI8:
 270              		.cfi_def_cfa_offset 8
 271 0072 BD46     		mov	sp, r7
 272              	.LCFI9:
ARM GAS  /tmp/ccU7DcYz.s 			page 11


 273              		.cfi_def_cfa_register 13
 274              		@ sp needed
 275 0074 80BD     		pop	{r7, pc}
 276              	.L19:
 277 0076 00BF     		.align	2
 278              	.L18:
 279 0078 00000000 		.word	pFlash
 280 007c 00200240 		.word	1073881088
 281              		.cfi_endproc
 282              	.LFE124:
 284              		.section	.text.HAL_FLASHEx_OBErase,"ax",%progbits
 285              		.align	2
 286              		.global	HAL_FLASHEx_OBErase
 287              		.thumb
 288              		.thumb_func
 290              	HAL_FLASHEx_OBErase:
 291              	.LFB125:
 299:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 300:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 301:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
 302:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 303:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 304:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group2 Option Bytes Programming functions
 305:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  *  @brief   Option Bytes Programming functions
 306:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 307:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** @verbatim   
 308:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ==============================================================================
 309:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****                 ##### Option Bytes Programming functions ##### 
 310:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   ==============================================================================  
 311:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     [..]
 312:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to control the FLASH 
 313:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     option bytes operations.
 314:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 315:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** @endverbatim
 316:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @{
 317:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 318:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 319:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 320:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Erases the FLASH option bytes.
 321:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   This functions erases all option bytes except the Read protection (RDP).
 322:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 323:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 324:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
 325:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         (system reset will occur)
 326:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL status
 327:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 328:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 329:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBErase(void)
 330:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 292              		.loc 1 330 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 8
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296 0000 80B5     		push	{r7, lr}
 297              	.LCFI10:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 7, -8
ARM GAS  /tmp/ccU7DcYz.s 			page 12


 300              		.cfi_offset 14, -4
 301 0002 82B0     		sub	sp, sp, #8
 302              	.LCFI11:
 303              		.cfi_def_cfa_offset 16
 304 0004 00AF     		add	r7, sp, #0
 305              	.LCFI12:
 306              		.cfi_def_cfa_register 7
 331:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint8_t rdptmp = OB_RDP_LEVEL_0;
 307              		.loc 1 331 0
 308 0006 AA23     		movs	r3, #170
 309 0008 BB71     		strb	r3, [r7, #6]
 332:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 310              		.loc 1 332 0
 311 000a 0123     		movs	r3, #1
 312 000c FB71     		strb	r3, [r7, #7]
 333:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 334:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Get the actual read protection Option Byte value */
 335:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   rdptmp = FLASH_OB_GetRDP();
 313              		.loc 1 335 0
 314 000e FFF7FEFF 		bl	FLASH_OB_GetRDP
 315 0012 0346     		mov	r3, r0
 316 0014 BB71     		strb	r3, [r7, #6]
 336:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 337:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 338:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 317              		.loc 1 338 0
 318 0016 4CF25030 		movw	r0, #50000
 319 001a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 320 001e 0346     		mov	r3, r0
 321 0020 FB71     		strb	r3, [r7, #7]
 339:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 340:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if(status == HAL_OK)
 322              		.loc 1 340 0
 323 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 324 0024 002B     		cmp	r3, #0
 325 0026 23D1     		bne	.L21
 341:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 342:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Clean the error context */
 343:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 326              		.loc 1 343 0
 327 0028 144B     		ldr	r3, .L23
 328 002a 0022     		movs	r2, #0
 329 002c DA61     		str	r2, [r3, #28]
 344:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 345:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to erase the option bytes */
 346:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTER);
 330              		.loc 1 346 0
 331 002e 144A     		ldr	r2, .L23+4
 332 0030 134B     		ldr	r3, .L23+4
 333 0032 1B69     		ldr	r3, [r3, #16]
 334 0034 43F02003 		orr	r3, r3, #32
 335 0038 1361     		str	r3, [r2, #16]
 347:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 336              		.loc 1 347 0
 337 003a 114A     		ldr	r2, .L23+4
 338 003c 104B     		ldr	r3, .L23+4
 339 003e 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccU7DcYz.s 			page 13


 340 0040 43F04003 		orr	r3, r3, #64
 341 0044 1361     		str	r3, [r2, #16]
 348:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 349:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 350:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 342              		.loc 1 350 0
 343 0046 4CF25030 		movw	r0, #50000
 344 004a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 345 004e 0346     		mov	r3, r0
 346 0050 FB71     		strb	r3, [r7, #7]
 351:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 352:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* If the erase operation is completed, disable the OPTER Bit */
 353:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTER);
 347              		.loc 1 353 0
 348 0052 0B4A     		ldr	r2, .L23+4
 349 0054 0A4B     		ldr	r3, .L23+4
 350 0056 1B69     		ldr	r3, [r3, #16]
 351 0058 23F02003 		bic	r3, r3, #32
 352 005c 1361     		str	r3, [r2, #16]
 354:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 355:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if(status == HAL_OK)
 353              		.loc 1 355 0
 354 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 355 0060 002B     		cmp	r3, #0
 356 0062 05D1     		bne	.L21
 356:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 357:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Restore the last read protection Option Byte value */
 358:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       status = FLASH_OB_RDP_LevelConfig(rdptmp);
 357              		.loc 1 358 0
 358 0064 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 359 0066 1846     		mov	r0, r3
 360 0068 FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 361 006c 0346     		mov	r3, r0
 362 006e FB71     		strb	r3, [r7, #7]
 363              	.L21:
 359:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 360:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 361:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 362:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Return the erase status */
 363:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status;
 364              		.loc 1 363 0
 365 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 364:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 366              		.loc 1 364 0
 367 0072 1846     		mov	r0, r3
 368 0074 0837     		adds	r7, r7, #8
 369              	.LCFI13:
 370              		.cfi_def_cfa_offset 8
 371 0076 BD46     		mov	sp, r7
 372              	.LCFI14:
 373              		.cfi_def_cfa_register 13
 374              		@ sp needed
 375 0078 80BD     		pop	{r7, pc}
 376              	.L24:
 377 007a 00BF     		.align	2
 378              	.L23:
 379 007c 00000000 		.word	pFlash
ARM GAS  /tmp/ccU7DcYz.s 			page 14


 380 0080 00200240 		.word	1073881088
 381              		.cfi_endproc
 382              	.LFE125:
 384              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 385              		.align	2
 386              		.global	HAL_FLASHEx_OBProgram
 387              		.thumb
 388              		.thumb_func
 390              	HAL_FLASHEx_OBProgram:
 391              	.LFB126:
 365:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 366:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 367:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Program option bytes
 368:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 369:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 370:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
 371:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         (system reset will occur)
 372:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 373:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 374:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 375:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 376:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 377:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 378:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 379:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 392              		.loc 1 379 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 16
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396 0000 80B5     		push	{r7, lr}
 397              	.LCFI15:
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 84B0     		sub	sp, sp, #16
 402              	.LCFI16:
 403              		.cfi_def_cfa_offset 24
 404 0004 00AF     		add	r7, sp, #0
 405              	.LCFI17:
 406              		.cfi_def_cfa_register 7
 407 0006 7860     		str	r0, [r7, #4]
 380:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 408              		.loc 1 380 0
 409 0008 0123     		movs	r3, #1
 410 000a FB73     		strb	r3, [r7, #15]
 381:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 382:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Process Locked */
 383:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 411              		.loc 1 383 0
 412 000c 394B     		ldr	r3, .L34
 413 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 414 0010 012B     		cmp	r3, #1
 415 0012 01D1     		bne	.L26
 416              		.loc 1 383 0 is_stmt 0 discriminator 1
 417 0014 0223     		movs	r3, #2
 418 0016 69E0     		b	.L27
 419              	.L26:
ARM GAS  /tmp/ccU7DcYz.s 			page 15


 420              		.loc 1 383 0 discriminator 2
 421 0018 364B     		ldr	r3, .L34
 422 001a 0122     		movs	r2, #1
 423 001c 1A76     		strb	r2, [r3, #24]
 384:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 385:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Check the parameters */
 386:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 387:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 388:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Write protection configuration */
 389:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 424              		.loc 1 389 0 is_stmt 1 discriminator 2
 425 001e 7B68     		ldr	r3, [r7, #4]
 426 0020 1B68     		ldr	r3, [r3]
 427 0022 03F00103 		and	r3, r3, #1
 428 0026 002B     		cmp	r3, #0
 429 0028 1AD0     		beq	.L28
 390:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 391:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 392:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if (pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 430              		.loc 1 392 0
 431 002a 7B68     		ldr	r3, [r7, #4]
 432 002c 5B68     		ldr	r3, [r3, #4]
 433 002e 012B     		cmp	r3, #1
 434 0030 07D1     		bne	.L29
 393:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 394:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Enable of Write protection on the selected page */
 395:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       status = FLASH_OB_EnableWRP(pOBInit->WRPPage);
 435              		.loc 1 395 0
 436 0032 7B68     		ldr	r3, [r7, #4]
 437 0034 9B68     		ldr	r3, [r3, #8]
 438 0036 1846     		mov	r0, r3
 439 0038 FFF7FEFF 		bl	FLASH_OB_EnableWRP
 440 003c 0346     		mov	r3, r0
 441 003e FB73     		strb	r3, [r7, #15]
 442 0040 06E0     		b	.L30
 443              	.L29:
 396:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 397:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     else
 398:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 399:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Disable of Write protection on the selected page */
 400:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       status = FLASH_OB_DisableWRP(pOBInit->WRPPage);
 444              		.loc 1 400 0
 445 0042 7B68     		ldr	r3, [r7, #4]
 446 0044 9B68     		ldr	r3, [r3, #8]
 447 0046 1846     		mov	r0, r3
 448 0048 FFF7FEFF 		bl	FLASH_OB_DisableWRP
 449 004c 0346     		mov	r3, r0
 450 004e FB73     		strb	r3, [r7, #15]
 451              	.L30:
 401:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 402:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if (status != HAL_OK)
 452              		.loc 1 402 0
 453 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 454 0052 002B     		cmp	r3, #0
 455 0054 04D0     		beq	.L28
 403:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 404:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Process Unlocked */
ARM GAS  /tmp/ccU7DcYz.s 			page 16


 405:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 456              		.loc 1 405 0
 457 0056 274B     		ldr	r3, .L34
 458 0058 0022     		movs	r2, #0
 459 005a 1A76     		strb	r2, [r3, #24]
 406:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       return status;
 460              		.loc 1 406 0
 461 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 462 005e 45E0     		b	.L27
 463              	.L28:
 407:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 408:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 409:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 410:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Read protection configuration */
 411:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 464              		.loc 1 411 0
 465 0060 7B68     		ldr	r3, [r7, #4]
 466 0062 1B68     		ldr	r3, [r3]
 467 0064 03F00203 		and	r3, r3, #2
 468 0068 002B     		cmp	r3, #0
 469 006a 0ED0     		beq	.L31
 412:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 413:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = FLASH_OB_RDP_LevelConfig(pOBInit->RDPLevel);
 470              		.loc 1 413 0
 471 006c 7B68     		ldr	r3, [r7, #4]
 472 006e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 473 0070 1846     		mov	r0, r3
 474 0072 FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 475 0076 0346     		mov	r3, r0
 476 0078 FB73     		strb	r3, [r7, #15]
 414:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if (status != HAL_OK)
 477              		.loc 1 414 0
 478 007a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 479 007c 002B     		cmp	r3, #0
 480 007e 04D0     		beq	.L31
 415:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 416:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Process Unlocked */
 417:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 481              		.loc 1 417 0
 482 0080 1C4B     		ldr	r3, .L34
 483 0082 0022     		movs	r2, #0
 484 0084 1A76     		strb	r2, [r3, #24]
 418:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       return status;
 485              		.loc 1 418 0
 486 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 487 0088 30E0     		b	.L27
 488              	.L31:
 419:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 420:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 421:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 422:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* USER configuration */
 423:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 489              		.loc 1 423 0
 490 008a 7B68     		ldr	r3, [r7, #4]
 491 008c 1B68     		ldr	r3, [r3]
 492 008e 03F00403 		and	r3, r3, #4
 493 0092 002B     		cmp	r3, #0
ARM GAS  /tmp/ccU7DcYz.s 			page 17


 494 0094 0ED0     		beq	.L32
 424:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 425:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig);
 495              		.loc 1 425 0
 496 0096 7B68     		ldr	r3, [r7, #4]
 497 0098 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 498 009a 1846     		mov	r0, r3
 499 009c FFF7FEFF 		bl	FLASH_OB_UserConfig
 500 00a0 0346     		mov	r3, r0
 501 00a2 FB73     		strb	r3, [r7, #15]
 426:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if (status != HAL_OK)
 502              		.loc 1 426 0
 503 00a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 504 00a6 002B     		cmp	r3, #0
 505 00a8 04D0     		beq	.L32
 427:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 428:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Process Unlocked */
 429:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 506              		.loc 1 429 0
 507 00aa 124B     		ldr	r3, .L34
 508 00ac 0022     		movs	r2, #0
 509 00ae 1A76     		strb	r2, [r3, #24]
 430:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       return status;
 510              		.loc 1 430 0
 511 00b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 512 00b2 1BE0     		b	.L27
 513              	.L32:
 431:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 432:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 433:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 434:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* DATA configuration*/
 435:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_DATA) == OPTIONBYTE_DATA)
 514              		.loc 1 435 0
 515 00b4 7B68     		ldr	r3, [r7, #4]
 516 00b6 1B68     		ldr	r3, [r3]
 517 00b8 03F00803 		and	r3, r3, #8
 518 00bc 002B     		cmp	r3, #0
 519 00be 11D0     		beq	.L33
 436:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 437:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = FLASH_OB_ProgramData(pOBInit->DATAAddress, pOBInit->DATAData);
 520              		.loc 1 437 0
 521 00c0 7B68     		ldr	r3, [r7, #4]
 522 00c2 1A69     		ldr	r2, [r3, #16]
 523 00c4 7B68     		ldr	r3, [r7, #4]
 524 00c6 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 525 00c8 1046     		mov	r0, r2
 526 00ca 1946     		mov	r1, r3
 527 00cc FFF7FEFF 		bl	FLASH_OB_ProgramData
 528 00d0 0346     		mov	r3, r0
 529 00d2 FB73     		strb	r3, [r7, #15]
 438:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if (status != HAL_OK)
 530              		.loc 1 438 0
 531 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 532 00d6 002B     		cmp	r3, #0
 533 00d8 04D0     		beq	.L33
 439:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 440:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Process Unlocked */
ARM GAS  /tmp/ccU7DcYz.s 			page 18


 441:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 534              		.loc 1 441 0
 535 00da 064B     		ldr	r3, .L34
 536 00dc 0022     		movs	r2, #0
 537 00de 1A76     		strb	r2, [r3, #24]
 442:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       return status;
 538              		.loc 1 442 0
 539 00e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 540 00e2 03E0     		b	.L27
 541              	.L33:
 443:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 444:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 445:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 446:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Process Unlocked */
 447:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 542              		.loc 1 447 0
 543 00e4 034B     		ldr	r3, .L34
 544 00e6 0022     		movs	r2, #0
 545 00e8 1A76     		strb	r2, [r3, #24]
 448:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 449:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status;
 546              		.loc 1 449 0
 547 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 548              	.L27:
 450:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 549              		.loc 1 450 0
 550 00ec 1846     		mov	r0, r3
 551 00ee 1037     		adds	r7, r7, #16
 552              	.LCFI18:
 553              		.cfi_def_cfa_offset 8
 554 00f0 BD46     		mov	sp, r7
 555              	.LCFI19:
 556              		.cfi_def_cfa_register 13
 557              		@ sp needed
 558 00f2 80BD     		pop	{r7, pc}
 559              	.L35:
 560              		.align	2
 561              	.L34:
 562 00f4 00000000 		.word	pFlash
 563              		.cfi_endproc
 564              	.LFE126:
 566              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 567              		.align	2
 568              		.global	HAL_FLASHEx_OBGetConfig
 569              		.thumb
 570              		.thumb_func
 572              	HAL_FLASHEx_OBGetConfig:
 573              	.LFB127:
 451:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 452:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 453:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Get the Option byte configuration
 454:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 455:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 456:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 457:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval None
 458:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 459:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
ARM GAS  /tmp/ccU7DcYz.s 			page 19


 460:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 574              		.loc 1 460 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0000 80B5     		push	{r7, lr}
 579              	.LCFI20:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 7, -8
 582              		.cfi_offset 14, -4
 583 0002 82B0     		sub	sp, sp, #8
 584              	.LCFI21:
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              	.LCFI22:
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 461:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER;
 590              		.loc 1 461 0
 591 0008 7B68     		ldr	r3, [r7, #4]
 592 000a 0722     		movs	r2, #7
 593 000c 1A60     		str	r2, [r3]
 462:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 463:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /*Get WRP*/
 464:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   pOBInit->WRPPage = FLASH_OB_GetWRP();
 594              		.loc 1 464 0
 595 000e FFF7FEFF 		bl	FLASH_OB_GetWRP
 596 0012 0246     		mov	r2, r0
 597 0014 7B68     		ldr	r3, [r7, #4]
 598 0016 9A60     		str	r2, [r3, #8]
 465:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 466:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /*Get RDP Level*/
 467:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   pOBInit->RDPLevel = FLASH_OB_GetRDP();
 599              		.loc 1 467 0
 600 0018 FFF7FEFF 		bl	FLASH_OB_GetRDP
 601 001c 0346     		mov	r3, r0
 602 001e DAB2     		uxtb	r2, r3
 603 0020 7B68     		ldr	r3, [r7, #4]
 604 0022 1A73     		strb	r2, [r3, #12]
 468:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 469:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /*Get USER*/
 470:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   pOBInit->USERConfig = FLASH_OB_GetUser();
 605              		.loc 1 470 0
 606 0024 FFF7FEFF 		bl	FLASH_OB_GetUser
 607 0028 0346     		mov	r3, r0
 608 002a 1A46     		mov	r2, r3
 609 002c 7B68     		ldr	r3, [r7, #4]
 610 002e 5A73     		strb	r2, [r3, #13]
 471:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 611              		.loc 1 471 0
 612 0030 0837     		adds	r7, r7, #8
 613              	.LCFI23:
 614              		.cfi_def_cfa_offset 8
 615 0032 BD46     		mov	sp, r7
 616              	.LCFI24:
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
ARM GAS  /tmp/ccU7DcYz.s 			page 20


 619 0034 80BD     		pop	{r7, pc}
 620              		.cfi_endproc
 621              	.LFE127:
 623 0036 00BF     		.section	.text.HAL_FLASHEx_OBGetUserData,"ax",%progbits
 624              		.align	2
 625              		.global	HAL_FLASHEx_OBGetUserData
 626              		.thumb
 627              		.thumb_func
 629              	HAL_FLASHEx_OBGetUserData:
 630              	.LFB128:
 472:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 473:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 474:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Get the Option byte user data
 475:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  DATAAdress Address of the option byte DATA
 476:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 477:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *            @arg @ref OB_DATA_ADDRESS_DATA0
 478:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *            @arg @ref OB_DATA_ADDRESS_DATA1
 479:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval Value programmed in USER data
 480:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 481:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** uint32_t HAL_FLASHEx_OBGetUserData(uint32_t DATAAdress)
 482:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 631              		.loc 1 482 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 32
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 636 0000 80B4     		push	{r7}
 637              	.LCFI25:
 638              		.cfi_def_cfa_offset 4
 639              		.cfi_offset 7, -4
 640 0002 89B0     		sub	sp, sp, #36
 641              	.LCFI26:
 642              		.cfi_def_cfa_offset 40
 643 0004 00AF     		add	r7, sp, #0
 644              	.LCFI27:
 645              		.cfi_def_cfa_register 7
 646 0006 7860     		str	r0, [r7, #4]
 483:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint32_t value = 0U;
 647              		.loc 1 483 0
 648 0008 0023     		movs	r3, #0
 649 000a FB61     		str	r3, [r7, #28]
 484:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 485:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if (DATAAdress == OB_DATA_ADDRESS_DATA0)
 650              		.loc 1 485 0
 651 000c 7B68     		ldr	r3, [r7, #4]
 652 000e 164A     		ldr	r2, .L43
 653 0010 9342     		cmp	r3, r2
 654 0012 11D1     		bne	.L38
 486:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 487:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Get value programmed in OB USER Data0 */
 488:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     value = READ_BIT(FLASH->OBR, FLASH_OBR_DATA0) >> FLASH_POSITION_OB_USERDATA0_BIT;
 655              		.loc 1 488 0
 656 0014 154B     		ldr	r3, .L43+4
 657 0016 DB69     		ldr	r3, [r3, #28]
 658 0018 03F47F02 		and	r2, r3, #16711680
 659 001c 4FF47F03 		mov	r3, #16711680
 660 0020 BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccU7DcYz.s 			page 21


 661              	.LBB8:
 662              	.LBB9:
 663              		.file 2 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
ARM GAS  /tmp/ccU7DcYz.s 			page 22


  55:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccU7DcYz.s 			page 23


 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccU7DcYz.s 			page 24


 169:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccU7DcYz.s 			page 25


 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
ARM GAS  /tmp/ccU7DcYz.s 			page 26


 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
ARM GAS  /tmp/ccU7DcYz.s 			page 27


 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
ARM GAS  /tmp/ccU7DcYz.s 			page 28


 397:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  /tmp/ccU7DcYz.s 			page 29


 454:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccU7DcYz.s 			page 30


 511:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:../../Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 664              		.loc 2 531 0
 665 0022 BB69     		ldr	r3, [r7, #24]
 666              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 667 0024 93FAA3F3 		rbit r3, r3
 668              	@ 0 "" 2
 669              		.thumb
 670 0028 7B61     		str	r3, [r7, #20]
 532:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 533:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 538:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 539:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 540:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 541:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 542:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 544:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 671              		.loc 2 544 0
 672 002a 7B69     		ldr	r3, [r7, #20]
 673              	.LBE9:
 674              	.LBE8:
 675              		.loc 1 488 0
 676 002c B3FA83F3 		clz	r3, r3
 677 0030 22FA03F3 		lsr	r3, r2, r3
 678 0034 FB61     		str	r3, [r7, #28]
 679 0036 10E0     		b	.L40
 680              	.L38:
 489:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 490:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   else
 491:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 492:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Get value programmed in OB USER Data1 */
 493:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     value = READ_BIT(FLASH->OBR, FLASH_OBR_DATA1) >> FLASH_POSITION_OB_USERDATA1_BIT;
 681              		.loc 1 493 0
ARM GAS  /tmp/ccU7DcYz.s 			page 31


 682 0038 0C4B     		ldr	r3, .L43+4
 683 003a DB69     		ldr	r3, [r3, #28]
 684 003c 03F07F42 		and	r2, r3, #-16777216
 685 0040 4FF07F43 		mov	r3, #-16777216
 686 0044 3B61     		str	r3, [r7, #16]
 687              	.LBB10:
 688              	.LBB11:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 689              		.loc 2 531 0
 690 0046 3B69     		ldr	r3, [r7, #16]
 691              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 692 0048 93FAA3F3 		rbit r3, r3
 693              	@ 0 "" 2
 694              		.thumb
 695 004c FB60     		str	r3, [r7, #12]
 696              		.loc 2 544 0
 697 004e FB68     		ldr	r3, [r7, #12]
 698              	.LBE11:
 699              	.LBE10:
 700              		.loc 1 493 0
 701 0050 B3FA83F3 		clz	r3, r3
 702 0054 22FA03F3 		lsr	r3, r2, r3
 703 0058 FB61     		str	r3, [r7, #28]
 704              	.L40:
 494:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 495:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 496:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return value;
 705              		.loc 1 496 0
 706 005a FB69     		ldr	r3, [r7, #28]
 497:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 707              		.loc 1 497 0
 708 005c 1846     		mov	r0, r3
 709 005e 2437     		adds	r7, r7, #36
 710              	.LCFI28:
 711              		.cfi_def_cfa_offset 4
 712 0060 BD46     		mov	sp, r7
 713              	.LCFI29:
 714              		.cfi_def_cfa_register 13
 715              		@ sp needed
 716 0062 5DF8047B 		ldr	r7, [sp], #4
 717              	.LCFI30:
 718              		.cfi_restore 7
 719              		.cfi_def_cfa_offset 0
 720 0066 7047     		bx	lr
 721              	.L44:
 722              		.align	2
 723              	.L43:
 724 0068 04F8FF1F 		.word	536868868
 725 006c 00200240 		.word	1073881088
 726              		.cfi_endproc
 727              	.LFE128:
 729              		.section	.text.FLASH_MassErase,"ax",%progbits
 730              		.align	2
 731              		.thumb
 732              		.thumb_func
 734              	FLASH_MassErase:
 735              	.LFB129:
ARM GAS  /tmp/ccU7DcYz.s 			page 32


 498:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 499:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 500:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
 501:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 502:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 503:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 504:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
 505:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 506:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 507:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
 508:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  * @{
 509:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  */
 510:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 511:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 512:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Full erase of FLASH memory Bank 
 513:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *
 514:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval None
 515:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 516:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static void FLASH_MassErase(void)
 517:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 736              		.loc 1 517 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 1, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741 0000 80B4     		push	{r7}
 742              	.LCFI31:
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 00AF     		add	r7, sp, #0
 746              	.LCFI32:
 747              		.cfi_def_cfa_register 7
 518:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Clean the error context */
 519:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 748              		.loc 1 519 0
 749 0004 094B     		ldr	r3, .L46
 750 0006 0022     		movs	r2, #0
 751 0008 DA61     		str	r2, [r3, #28]
 520:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 521:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Only bank1 will be erased*/
 522:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_MER);
 752              		.loc 1 522 0
 753 000a 094A     		ldr	r2, .L46+4
 754 000c 084B     		ldr	r3, .L46+4
 755 000e 1B69     		ldr	r3, [r3, #16]
 756 0010 43F00403 		orr	r3, r3, #4
 757 0014 1361     		str	r3, [r2, #16]
 523:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 758              		.loc 1 523 0
 759 0016 064A     		ldr	r2, .L46+4
 760 0018 054B     		ldr	r3, .L46+4
 761 001a 1B69     		ldr	r3, [r3, #16]
 762 001c 43F04003 		orr	r3, r3, #64
 763 0020 1361     		str	r3, [r2, #16]
 524:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 764              		.loc 1 524 0
 765 0022 BD46     		mov	sp, r7
ARM GAS  /tmp/ccU7DcYz.s 			page 33


 766              	.LCFI33:
 767              		.cfi_def_cfa_register 13
 768              		@ sp needed
 769 0024 5DF8047B 		ldr	r7, [sp], #4
 770              	.LCFI34:
 771              		.cfi_restore 7
 772              		.cfi_def_cfa_offset 0
 773 0028 7047     		bx	lr
 774              	.L47:
 775 002a 00BF     		.align	2
 776              	.L46:
 777 002c 00000000 		.word	pFlash
 778 0030 00200240 		.word	1073881088
 779              		.cfi_endproc
 780              	.LFE129:
 782              		.section	.text.FLASH_OB_EnableWRP,"ax",%progbits
 783              		.align	2
 784              		.thumb
 785              		.thumb_func
 787              	FLASH_OB_EnableWRP:
 788              	.LFB130:
 525:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 526:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 527:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired pages
 528:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   An option byte erase is done automatically in this function. 
 529:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 530:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash page i if
 531:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 532:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * 
 533:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  WriteProtectPage specifies the page(s) to be write protected.
 534:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 535:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL status 
 536:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 537:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WriteProtectPage)
 538:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 789              		.loc 1 538 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 24
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793 0000 80B5     		push	{r7, lr}
 794              	.LCFI35:
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 86B0     		sub	sp, sp, #24
 799              	.LCFI36:
 800              		.cfi_def_cfa_offset 32
 801 0004 00AF     		add	r7, sp, #0
 802              	.LCFI37:
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 539:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 805              		.loc 1 539 0
 806 0008 0023     		movs	r3, #0
 807 000a FB75     		strb	r3, [r7, #23]
 540:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint16_t WRP0_Data = 0xFFFFU;
 808              		.loc 1 540 0
ARM GAS  /tmp/ccU7DcYz.s 			page 34


 809 000c 4FF6FF73 		movw	r3, #65535
 810 0010 BB82     		strh	r3, [r7, #20]	@ movhi
 541:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP1_WRP1)
 542:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint16_t WRP1_Data = 0xFFFFU;
 811              		.loc 1 542 0
 812 0012 4FF6FF73 		movw	r3, #65535
 813 0016 7B82     		strh	r3, [r7, #18]	@ movhi
 543:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP1_WRP1 */
 544:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP2_WRP2)
 545:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint16_t WRP2_Data = 0xFFFFU;
 814              		.loc 1 545 0
 815 0018 4FF6FF73 		movw	r3, #65535
 816 001c 3B82     		strh	r3, [r7, #16]	@ movhi
 546:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP2_WRP2 */
 547:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP3_WRP3)
 548:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint16_t WRP3_Data = 0xFFFFU;
 817              		.loc 1 548 0
 818 001e 4FF6FF73 		movw	r3, #65535
 819 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 549:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP3_WRP3 */
 550:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 551:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Check the parameters */
 552:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WriteProtectPage));
 553:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     
 554:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Get current write protected pages and the new pages to be protected ******/
 555:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
 820              		.loc 1 555 0
 821 0024 FFF7FEFF 		bl	FLASH_OB_GetWRP
 822 0028 0346     		mov	r3, r0
 823 002a DA43     		mvns	r2, r3
 824 002c 7B68     		ldr	r3, [r7, #4]
 825 002e 1343     		orrs	r3, r3, r2
 826 0030 DB43     		mvns	r3, r3
 827 0032 7B60     		str	r3, [r7, #4]
 556:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 557:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES0TO15MASK)
 558:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
 828              		.loc 1 558 0
 829 0034 7B68     		ldr	r3, [r7, #4]
 830 0036 9BB2     		uxth	r3, r3
 831 0038 DBB2     		uxtb	r3, r3
 832 003a BB82     		strh	r3, [r7, #20]	@ movhi
 559:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES0TO31MASK */
 560:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 561:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES16TO31MASK)
 562:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
 833              		.loc 1 562 0
 834 003c 7B68     		ldr	r3, [r7, #4]
 835 003e 03F47F43 		and	r3, r3, #65280
 836 0042 1B0A     		lsrs	r3, r3, #8
 837 0044 7B82     		strh	r3, [r7, #18]	@ movhi
 563:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO63MASK */
 564:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  
 565:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES32TO47MASK)
 566:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
 567:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO47MASK */
 568:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
ARM GAS  /tmp/ccU7DcYz.s 			page 35


 569:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES48TO127MASK)
 570:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO127MASK) >> 24U); 
 571:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO255MASK)
 572:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO255MASK) >> 24U); 
 573:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES48TO63MASK */
 574:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 575:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 576:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 838              		.loc 1 576 0
 839 0046 4CF25030 		movw	r0, #50000
 840 004a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 841 004e 0346     		mov	r3, r0
 842 0050 FB75     		strb	r3, [r7, #23]
 577:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 578:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if(status == HAL_OK)
 843              		.loc 1 578 0
 844 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 845 0054 002B     		cmp	r3, #0
 846 0056 62D1     		bne	.L49
 579:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   { 
 580:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Clean the error context */
 581:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 847              		.loc 1 581 0
 848 0058 334B     		ldr	r3, .L55
 849 005a 0022     		movs	r2, #0
 850 005c DA61     		str	r2, [r3, #28]
 582:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 583:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* To be able to write again option byte, need to perform a option byte erase */
 584:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = HAL_FLASHEx_OBErase();
 851              		.loc 1 584 0
 852 005e FFF7FEFF 		bl	HAL_FLASHEx_OBErase
 853 0062 0346     		mov	r3, r0
 854 0064 FB75     		strb	r3, [r7, #23]
 585:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if (status == HAL_OK)  
 855              		.loc 1 585 0
 856 0066 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 857 0068 002B     		cmp	r3, #0
 858 006a 58D1     		bne	.L49
 586:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 587:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Enable write protection */
 588:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 859              		.loc 1 588 0
 860 006c 2F4A     		ldr	r2, .L55+4
 861 006e 2F4B     		ldr	r3, .L55+4
 862 0070 1B69     		ldr	r3, [r3, #16]
 863 0072 43F01003 		orr	r3, r3, #16
 864 0076 1361     		str	r3, [r2, #16]
 589:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 590:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP0_WRP0)
 591:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if(WRP0_Data != 0xFFU)
 865              		.loc 1 591 0
 866 0078 BB8A     		ldrh	r3, [r7, #20]
 867 007a FF2B     		cmp	r3, #255
 868 007c 0DD0     		beq	.L50
 592:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 593:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         OB->WRP0 &= WRP0_Data;
 869              		.loc 1 593 0
ARM GAS  /tmp/ccU7DcYz.s 			page 36


 870 007e 2C49     		ldr	r1, .L55+8
 871 0080 2B4B     		ldr	r3, .L55+8
 872 0082 1B89     		ldrh	r3, [r3, #8]	@ movhi
 873 0084 9AB2     		uxth	r2, r3
 874 0086 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 875 0088 1340     		ands	r3, r3, r2
 876 008a 9BB2     		uxth	r3, r3
 877 008c 0B81     		strh	r3, [r1, #8]	@ movhi
 594:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 595:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 596:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 878              		.loc 1 596 0
 879 008e 4CF25030 		movw	r0, #50000
 880 0092 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 881 0096 0346     		mov	r3, r0
 882 0098 FB75     		strb	r3, [r7, #23]
 883              	.L50:
 597:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 598:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP0_WRP0 */
 599:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 600:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP1_WRP1)
 601:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP1_Data != 0xFFU))
 884              		.loc 1 601 0
 885 009a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 886 009c 002B     		cmp	r3, #0
 887 009e 10D1     		bne	.L51
 888              		.loc 1 601 0 is_stmt 0 discriminator 1
 889 00a0 7B8A     		ldrh	r3, [r7, #18]
 890 00a2 FF2B     		cmp	r3, #255
 891 00a4 0DD0     		beq	.L51
 602:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 603:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         OB->WRP1 &= WRP1_Data;
 892              		.loc 1 603 0 is_stmt 1
 893 00a6 2249     		ldr	r1, .L55+8
 894 00a8 214B     		ldr	r3, .L55+8
 895 00aa 5B89     		ldrh	r3, [r3, #10]	@ movhi
 896 00ac 9AB2     		uxth	r2, r3
 897 00ae 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 898 00b0 1340     		ands	r3, r3, r2
 899 00b2 9BB2     		uxth	r3, r3
 900 00b4 4B81     		strh	r3, [r1, #10]	@ movhi
 604:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 605:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 606:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 901              		.loc 1 606 0
 902 00b6 4CF25030 		movw	r0, #50000
 903 00ba FFF7FEFF 		bl	FLASH_WaitForLastOperation
 904 00be 0346     		mov	r3, r0
 905 00c0 FB75     		strb	r3, [r7, #23]
 906              	.L51:
 607:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 608:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP1_WRP1 */
 609:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 610:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP2_WRP2)
 611:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP2_Data != 0xFFU))
 907              		.loc 1 611 0
 908 00c2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  /tmp/ccU7DcYz.s 			page 37


 909 00c4 002B     		cmp	r3, #0
 910 00c6 10D1     		bne	.L52
 911              		.loc 1 611 0 is_stmt 0 discriminator 1
 912 00c8 3B8A     		ldrh	r3, [r7, #16]
 913 00ca FF2B     		cmp	r3, #255
 914 00cc 0DD0     		beq	.L52
 612:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 613:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         OB->WRP2 &= WRP2_Data;
 915              		.loc 1 613 0 is_stmt 1
 916 00ce 1849     		ldr	r1, .L55+8
 917 00d0 174B     		ldr	r3, .L55+8
 918 00d2 9B89     		ldrh	r3, [r3, #12]	@ movhi
 919 00d4 9AB2     		uxth	r2, r3
 920 00d6 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 921 00d8 1340     		ands	r3, r3, r2
 922 00da 9BB2     		uxth	r3, r3
 923 00dc 8B81     		strh	r3, [r1, #12]	@ movhi
 614:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 615:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 616:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 924              		.loc 1 616 0
 925 00de 4CF25030 		movw	r0, #50000
 926 00e2 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 927 00e6 0346     		mov	r3, r0
 928 00e8 FB75     		strb	r3, [r7, #23]
 929              	.L52:
 617:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 618:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP2_WRP2 */
 619:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 620:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP3_WRP3)
 621:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP3_Data != 0xFFU))
 930              		.loc 1 621 0
 931 00ea FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 932 00ec 002B     		cmp	r3, #0
 933 00ee 10D1     		bne	.L53
 934              		.loc 1 621 0 is_stmt 0 discriminator 1
 935 00f0 FB89     		ldrh	r3, [r7, #14]
 936 00f2 FF2B     		cmp	r3, #255
 937 00f4 0DD0     		beq	.L53
 622:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 623:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         OB->WRP3 &= WRP3_Data;
 938              		.loc 1 623 0 is_stmt 1
 939 00f6 0E49     		ldr	r1, .L55+8
 940 00f8 0D4B     		ldr	r3, .L55+8
 941 00fa DB89     		ldrh	r3, [r3, #14]	@ movhi
 942 00fc 9AB2     		uxth	r2, r3
 943 00fe FB89     		ldrh	r3, [r7, #14]	@ movhi
 944 0100 1340     		ands	r3, r3, r2
 945 0102 9BB2     		uxth	r3, r3
 946 0104 CB81     		strh	r3, [r1, #14]	@ movhi
 624:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 625:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 626:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 947              		.loc 1 626 0
 948 0106 4CF25030 		movw	r0, #50000
 949 010a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 950 010e 0346     		mov	r3, r0
ARM GAS  /tmp/ccU7DcYz.s 			page 38


 951 0110 FB75     		strb	r3, [r7, #23]
 952              	.L53:
 627:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 628:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP3_WRP3 */
 629:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 630:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 631:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 953              		.loc 1 631 0
 954 0112 064A     		ldr	r2, .L55+4
 955 0114 054B     		ldr	r3, .L55+4
 956 0116 1B69     		ldr	r3, [r3, #16]
 957 0118 23F01003 		bic	r3, r3, #16
 958 011c 1361     		str	r3, [r2, #16]
 959              	.L49:
 632:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 633:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 634:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 635:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status;
 960              		.loc 1 635 0
 961 011e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 636:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 962              		.loc 1 636 0
 963 0120 1846     		mov	r0, r3
 964 0122 1837     		adds	r7, r7, #24
 965              	.LCFI38:
 966              		.cfi_def_cfa_offset 8
 967 0124 BD46     		mov	sp, r7
 968              	.LCFI39:
 969              		.cfi_def_cfa_register 13
 970              		@ sp needed
 971 0126 80BD     		pop	{r7, pc}
 972              	.L56:
 973              		.align	2
 974              	.L55:
 975 0128 00000000 		.word	pFlash
 976 012c 00200240 		.word	1073881088
 977 0130 00F8FF1F 		.word	536868864
 978              		.cfi_endproc
 979              	.LFE130:
 981              		.section	.text.FLASH_OB_DisableWRP,"ax",%progbits
 982              		.align	2
 983              		.thumb
 984              		.thumb_func
 986              	FLASH_OB_DisableWRP:
 987              	.LFB131:
 637:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 638:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 639:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired pages
 640:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   An option byte erase is done automatically in this function. 
 641:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 642:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash page i if   
 643:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 644:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * 
 645:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  WriteProtectPage specifies the page(s) to be write unprotected.
 646:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 647:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL status 
 648:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
ARM GAS  /tmp/ccU7DcYz.s 			page 39


 649:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WriteProtectPage)
 650:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 988              		.loc 1 650 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 24
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992 0000 80B5     		push	{r7, lr}
 993              	.LCFI40:
 994              		.cfi_def_cfa_offset 8
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 86B0     		sub	sp, sp, #24
 998              	.LCFI41:
 999              		.cfi_def_cfa_offset 32
 1000 0004 00AF     		add	r7, sp, #0
 1001              	.LCFI42:
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
 651:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1004              		.loc 1 651 0
 1005 0008 0023     		movs	r3, #0
 1006 000a FB75     		strb	r3, [r7, #23]
 652:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint16_t WRP0_Data = 0xFFFFU;
 1007              		.loc 1 652 0
 1008 000c 4FF6FF73 		movw	r3, #65535
 1009 0010 BB82     		strh	r3, [r7, #20]	@ movhi
 653:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP1_WRP1)
 654:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint16_t WRP1_Data = 0xFFFFU;
 1010              		.loc 1 654 0
 1011 0012 4FF6FF73 		movw	r3, #65535
 1012 0016 7B82     		strh	r3, [r7, #18]	@ movhi
 655:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP1_WRP1 */
 656:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP2_WRP2)
 657:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint16_t WRP2_Data = 0xFFFFU;
 1013              		.loc 1 657 0
 1014 0018 4FF6FF73 		movw	r3, #65535
 1015 001c 3B82     		strh	r3, [r7, #16]	@ movhi
 658:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP2_WRP2 */
 659:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP3_WRP3)
 660:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint16_t WRP3_Data = 0xFFFFU;
 1016              		.loc 1 660 0
 1017 001e 4FF6FF73 		movw	r3, #65535
 1018 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 661:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP3_WRP3 */
 662:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 663:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Check the parameters */
 664:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WriteProtectPage));
 665:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 666:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Get current write protected pages and the new pages to be unprotected ******/
 667:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
 1019              		.loc 1 667 0
 1020 0024 FFF7FEFF 		bl	FLASH_OB_GetWRP
 1021 0028 0246     		mov	r2, r0
 1022 002a 7B68     		ldr	r3, [r7, #4]
 1023 002c 1343     		orrs	r3, r3, r2
 1024 002e 7B60     		str	r3, [r7, #4]
 668:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
ARM GAS  /tmp/ccU7DcYz.s 			page 40


 669:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES0TO15MASK)
 670:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
 1025              		.loc 1 670 0
 1026 0030 7B68     		ldr	r3, [r7, #4]
 1027 0032 9BB2     		uxth	r3, r3
 1028 0034 DBB2     		uxtb	r3, r3
 1029 0036 BB82     		strh	r3, [r7, #20]	@ movhi
 671:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES0TO31MASK */
 672:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 673:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES16TO31MASK)
 674:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8U);
 1030              		.loc 1 674 0
 1031 0038 7B68     		ldr	r3, [r7, #4]
 1032 003a 03F47F43 		and	r3, r3, #65280
 1033 003e 1B0A     		lsrs	r3, r3, #8
 1034 0040 7B82     		strh	r3, [r7, #18]	@ movhi
 675:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO63MASK */
 676:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  
 677:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES32TO47MASK)
 678:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16U);
 679:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO47MASK */
 680:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 681:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES48TO127MASK)
 682:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO127MASK) >> 24U); 
 683:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO255MASK)
 684:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO255MASK) >> 24U); 
 685:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES48TO63MASK */
 686:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 687:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     
 688:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 689:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1035              		.loc 1 689 0
 1036 0042 4CF25030 		movw	r0, #50000
 1037 0046 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1038 004a 0346     		mov	r3, r0
 1039 004c FB75     		strb	r3, [r7, #23]
 690:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 691:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1040              		.loc 1 691 0
 1041 004e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1042 0050 002B     		cmp	r3, #0
 1043 0052 62D1     		bne	.L58
 692:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   { 
 693:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Clean the error context */
 694:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1044              		.loc 1 694 0
 1045 0054 334B     		ldr	r3, .L64
 1046 0056 0022     		movs	r2, #0
 1047 0058 DA61     		str	r2, [r3, #28]
 695:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 696:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* To be able to write again option byte, need to perform a option byte erase */
 697:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = HAL_FLASHEx_OBErase();
 1048              		.loc 1 697 0
 1049 005a FFF7FEFF 		bl	HAL_FLASHEx_OBErase
 1050 005e 0346     		mov	r3, r0
 1051 0060 FB75     		strb	r3, [r7, #23]
 698:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if (status == HAL_OK)  
ARM GAS  /tmp/ccU7DcYz.s 			page 41


 1052              		.loc 1 698 0
 1053 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1054 0064 002B     		cmp	r3, #0
 1055 0066 58D1     		bne	.L58
 699:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 700:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1056              		.loc 1 700 0
 1057 0068 2F4A     		ldr	r2, .L64+4
 1058 006a 2F4B     		ldr	r3, .L64+4
 1059 006c 1B69     		ldr	r3, [r3, #16]
 1060 006e 43F01003 		orr	r3, r3, #16
 1061 0072 1361     		str	r3, [r2, #16]
 701:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 702:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP0_WRP0)
 703:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if(WRP0_Data != 0xFFU)
 1062              		.loc 1 703 0
 1063 0074 BB8A     		ldrh	r3, [r7, #20]
 1064 0076 FF2B     		cmp	r3, #255
 1065 0078 0DD0     		beq	.L59
 704:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 705:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         OB->WRP0 |= WRP0_Data;
 1066              		.loc 1 705 0
 1067 007a 2C49     		ldr	r1, .L64+8
 1068 007c 2B4B     		ldr	r3, .L64+8
 1069 007e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 1070 0080 9AB2     		uxth	r2, r3
 1071 0082 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 1072 0084 1343     		orrs	r3, r3, r2
 1073 0086 9BB2     		uxth	r3, r3
 1074 0088 0B81     		strh	r3, [r1, #8]	@ movhi
 706:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 707:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 708:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1075              		.loc 1 708 0
 1076 008a 4CF25030 		movw	r0, #50000
 1077 008e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1078 0092 0346     		mov	r3, r0
 1079 0094 FB75     		strb	r3, [r7, #23]
 1080              	.L59:
 709:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 710:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP0_WRP0 */
 711:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 712:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP1_WRP1)
 713:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP1_Data != 0xFFU))
 1081              		.loc 1 713 0
 1082 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1083 0098 002B     		cmp	r3, #0
 1084 009a 10D1     		bne	.L60
 1085              		.loc 1 713 0 is_stmt 0 discriminator 1
 1086 009c 7B8A     		ldrh	r3, [r7, #18]
 1087 009e FF2B     		cmp	r3, #255
 1088 00a0 0DD0     		beq	.L60
 714:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 715:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         OB->WRP1 |= WRP1_Data;
 1089              		.loc 1 715 0 is_stmt 1
 1090 00a2 2249     		ldr	r1, .L64+8
 1091 00a4 214B     		ldr	r3, .L64+8
ARM GAS  /tmp/ccU7DcYz.s 			page 42


 1092 00a6 5B89     		ldrh	r3, [r3, #10]	@ movhi
 1093 00a8 9AB2     		uxth	r2, r3
 1094 00aa 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1095 00ac 1343     		orrs	r3, r3, r2
 1096 00ae 9BB2     		uxth	r3, r3
 1097 00b0 4B81     		strh	r3, [r1, #10]	@ movhi
 716:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 717:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 718:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1098              		.loc 1 718 0
 1099 00b2 4CF25030 		movw	r0, #50000
 1100 00b6 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1101 00ba 0346     		mov	r3, r0
 1102 00bc FB75     		strb	r3, [r7, #23]
 1103              	.L60:
 719:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 720:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP1_WRP1 */
 721:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 722:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP2_WRP2)
 723:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP2_Data != 0xFFU))
 1104              		.loc 1 723 0
 1105 00be FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1106 00c0 002B     		cmp	r3, #0
 1107 00c2 10D1     		bne	.L61
 1108              		.loc 1 723 0 is_stmt 0 discriminator 1
 1109 00c4 3B8A     		ldrh	r3, [r7, #16]
 1110 00c6 FF2B     		cmp	r3, #255
 1111 00c8 0DD0     		beq	.L61
 724:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 725:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         OB->WRP2 |= WRP2_Data;
 1112              		.loc 1 725 0 is_stmt 1
 1113 00ca 1849     		ldr	r1, .L64+8
 1114 00cc 174B     		ldr	r3, .L64+8
 1115 00ce 9B89     		ldrh	r3, [r3, #12]	@ movhi
 1116 00d0 9AB2     		uxth	r2, r3
 1117 00d2 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 1118 00d4 1343     		orrs	r3, r3, r2
 1119 00d6 9BB2     		uxth	r3, r3
 1120 00d8 8B81     		strh	r3, [r1, #12]	@ movhi
 726:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 727:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 728:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1121              		.loc 1 728 0
 1122 00da 4CF25030 		movw	r0, #50000
 1123 00de FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1124 00e2 0346     		mov	r3, r0
 1125 00e4 FB75     		strb	r3, [r7, #23]
 1126              	.L61:
 729:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 730:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP2_WRP2 */
 731:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 732:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(OB_WRP3_WRP3)
 733:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP3_Data != 0xFFU))
 1127              		.loc 1 733 0
 1128 00e6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1129 00e8 002B     		cmp	r3, #0
 1130 00ea 10D1     		bne	.L62
ARM GAS  /tmp/ccU7DcYz.s 			page 43


 1131              		.loc 1 733 0 is_stmt 0 discriminator 1
 1132 00ec FB89     		ldrh	r3, [r7, #14]
 1133 00ee FF2B     		cmp	r3, #255
 1134 00f0 0DD0     		beq	.L62
 734:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       {
 735:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         OB->WRP3 |= WRP3_Data;
 1135              		.loc 1 735 0 is_stmt 1
 1136 00f2 0E49     		ldr	r1, .L64+8
 1137 00f4 0D4B     		ldr	r3, .L64+8
 1138 00f6 DB89     		ldrh	r3, [r3, #14]	@ movhi
 1139 00f8 9AB2     		uxth	r2, r3
 1140 00fa FB89     		ldrh	r3, [r7, #14]	@ movhi
 1141 00fc 1343     		orrs	r3, r3, r2
 1142 00fe 9BB2     		uxth	r3, r3
 1143 0100 CB81     		strh	r3, [r1, #14]	@ movhi
 736:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         
 737:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 738:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1144              		.loc 1 738 0
 1145 0102 4CF25030 		movw	r0, #50000
 1146 0106 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1147 010a 0346     		mov	r3, r0
 1148 010c FB75     		strb	r3, [r7, #23]
 1149              	.L62:
 739:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       }
 740:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* OB_WRP3_WRP3 */
 741:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 742:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 743:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1150              		.loc 1 743 0
 1151 010e 064A     		ldr	r2, .L64+4
 1152 0110 054B     		ldr	r3, .L64+4
 1153 0112 1B69     		ldr	r3, [r3, #16]
 1154 0114 23F01003 		bic	r3, r3, #16
 1155 0118 1361     		str	r3, [r2, #16]
 1156              	.L58:
 744:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 745:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 746:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status;
 1157              		.loc 1 746 0
 1158 011a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 747:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 1159              		.loc 1 747 0
 1160 011c 1846     		mov	r0, r3
 1161 011e 1837     		adds	r7, r7, #24
 1162              	.LCFI43:
 1163              		.cfi_def_cfa_offset 8
 1164 0120 BD46     		mov	sp, r7
 1165              	.LCFI44:
 1166              		.cfi_def_cfa_register 13
 1167              		@ sp needed
 1168 0122 80BD     		pop	{r7, pc}
 1169              	.L65:
 1170              		.align	2
 1171              	.L64:
 1172 0124 00000000 		.word	pFlash
 1173 0128 00200240 		.word	1073881088
ARM GAS  /tmp/ccU7DcYz.s 			page 44


 1174 012c 00F8FF1F 		.word	536868864
 1175              		.cfi_endproc
 1176              	.LFE131:
 1178              		.section	.text.FLASH_OB_RDP_LevelConfig,"ax",%progbits
 1179              		.align	2
 1180              		.thumb
 1181              		.thumb_func
 1183              	FLASH_OB_RDP_LevelConfig:
 1184              	.LFB132:
 748:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 749:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 750:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
 751:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  ReadProtectLevel specifies the read protection level.
 752:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 753:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_0 No protection
 754:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
 755:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_2 Full chip protection
 756:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   Warning: When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
 757:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL status
 758:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 759:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t ReadProtectLevel)
 760:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 1185              		.loc 1 760 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 16
 1188              		@ frame_needed = 1, uses_anonymous_args = 0
 1189 0000 80B5     		push	{r7, lr}
 1190              	.LCFI45:
 1191              		.cfi_def_cfa_offset 8
 1192              		.cfi_offset 7, -8
 1193              		.cfi_offset 14, -4
 1194 0002 84B0     		sub	sp, sp, #16
 1195              	.LCFI46:
 1196              		.cfi_def_cfa_offset 24
 1197 0004 00AF     		add	r7, sp, #0
 1198              	.LCFI47:
 1199              		.cfi_def_cfa_register 7
 1200 0006 0346     		mov	r3, r0
 1201 0008 FB71     		strb	r3, [r7, #7]
 761:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1202              		.loc 1 761 0
 1203 000a 0023     		movs	r3, #0
 1204 000c FB73     		strb	r3, [r7, #15]
 762:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 763:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Check the parameters */
 764:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(ReadProtectLevel));
 765:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 766:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 767:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1205              		.loc 1 767 0
 1206 000e 4CF25030 		movw	r0, #50000
 1207 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1208 0016 0346     		mov	r3, r0
 1209 0018 FB73     		strb	r3, [r7, #15]
 768:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 769:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1210              		.loc 1 769 0
ARM GAS  /tmp/ccU7DcYz.s 			page 45


 1211 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1212 001c 002B     		cmp	r3, #0
 1213 001e 33D1     		bne	.L67
 770:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   { 
 771:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Clean the error context */
 772:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1214              		.loc 1 772 0
 1215 0020 1C4B     		ldr	r3, .L69
 1216 0022 0022     		movs	r2, #0
 1217 0024 DA61     		str	r2, [r3, #28]
 773:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     
 774:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to erase the option bytes */
 775:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTER);
 1218              		.loc 1 775 0
 1219 0026 1C4A     		ldr	r2, .L69+4
 1220 0028 1B4B     		ldr	r3, .L69+4
 1221 002a 1B69     		ldr	r3, [r3, #16]
 1222 002c 43F02003 		orr	r3, r3, #32
 1223 0030 1361     		str	r3, [r2, #16]
 776:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 1224              		.loc 1 776 0
 1225 0032 194A     		ldr	r2, .L69+4
 1226 0034 184B     		ldr	r3, .L69+4
 1227 0036 1B69     		ldr	r3, [r3, #16]
 1228 0038 43F04003 		orr	r3, r3, #64
 1229 003c 1361     		str	r3, [r2, #16]
 777:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 778:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 779:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1230              		.loc 1 779 0
 1231 003e 4CF25030 		movw	r0, #50000
 1232 0042 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1233 0046 0346     		mov	r3, r0
 1234 0048 FB73     		strb	r3, [r7, #15]
 780:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 781:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* If the erase operation is completed, disable the OPTER Bit */
 782:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTER);
 1235              		.loc 1 782 0
 1236 004a 134A     		ldr	r2, .L69+4
 1237 004c 124B     		ldr	r3, .L69+4
 1238 004e 1B69     		ldr	r3, [r3, #16]
 1239 0050 23F02003 		bic	r3, r3, #32
 1240 0054 1361     		str	r3, [r2, #16]
 783:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 784:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     if(status == HAL_OK)
 1241              		.loc 1 784 0
 1242 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1243 0058 002B     		cmp	r3, #0
 1244 005a 15D1     		bne	.L67
 785:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     {
 786:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Enable the Option Bytes Programming operation */
 787:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1245              		.loc 1 787 0
 1246 005c 0E4A     		ldr	r2, .L69+4
 1247 005e 0E4B     		ldr	r3, .L69+4
 1248 0060 1B69     		ldr	r3, [r3, #16]
 1249 0062 43F01003 		orr	r3, r3, #16
ARM GAS  /tmp/ccU7DcYz.s 			page 46


 1250 0066 1361     		str	r3, [r2, #16]
 788:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       
 789:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       WRITE_REG(OB->RDP, ReadProtectLevel);
 1251              		.loc 1 789 0
 1252 0068 0C4B     		ldr	r3, .L69+8
 1253 006a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1254 006c 92B2     		uxth	r2, r2
 1255 006e 1A80     		strh	r2, [r3]	@ movhi
 790:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       
 791:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 792:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE); 
 1256              		.loc 1 792 0
 1257 0070 4CF25030 		movw	r0, #50000
 1258 0074 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1259 0078 0346     		mov	r3, r0
 1260 007a FB73     		strb	r3, [r7, #15]
 793:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       
 794:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 795:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1261              		.loc 1 795 0
 1262 007c 064A     		ldr	r2, .L69+4
 1263 007e 064B     		ldr	r3, .L69+4
 1264 0080 1B69     		ldr	r3, [r3, #16]
 1265 0082 23F01003 		bic	r3, r3, #16
 1266 0086 1361     		str	r3, [r2, #16]
 1267              	.L67:
 796:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     }
 797:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 798:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 799:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status;
 1268              		.loc 1 799 0
 1269 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 800:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 1270              		.loc 1 800 0
 1271 008a 1846     		mov	r0, r3
 1272 008c 1037     		adds	r7, r7, #16
 1273              	.LCFI48:
 1274              		.cfi_def_cfa_offset 8
 1275 008e BD46     		mov	sp, r7
 1276              	.LCFI49:
 1277              		.cfi_def_cfa_register 13
 1278              		@ sp needed
 1279 0090 80BD     		pop	{r7, pc}
 1280              	.L70:
 1281 0092 00BF     		.align	2
 1282              	.L69:
 1283 0094 00000000 		.word	pFlash
 1284 0098 00200240 		.word	1073881088
 1285 009c 00F8FF1F 		.word	536868864
 1286              		.cfi_endproc
 1287              	.LFE132:
 1289              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 1290              		.align	2
 1291              		.thumb
 1292              		.thumb_func
 1294              	FLASH_OB_UserConfig:
 1295              	.LFB133:
ARM GAS  /tmp/ccU7DcYz.s 			page 47


 801:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 802:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 803:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte.    
 804:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   Programming of the OB should be performed only after an erase (otherwise PGERR occurs)
 805:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  UserConfig The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1), RST_STDBY
 806:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         VDDA_Analog_Monitoring(Bit5) and SRAM_Parity_Enable(Bit6). 
 807:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         And SDADC12_VDD_MONITOR(Bit7) for STM32F373 or STM32F378 . 
 808:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL status
 809:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 810:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t UserConfig)
 811:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 1296              		.loc 1 811 0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 16
 1299              		@ frame_needed = 1, uses_anonymous_args = 0
 1300 0000 80B5     		push	{r7, lr}
 1301              	.LCFI50:
 1302              		.cfi_def_cfa_offset 8
 1303              		.cfi_offset 7, -8
 1304              		.cfi_offset 14, -4
 1305 0002 84B0     		sub	sp, sp, #16
 1306              	.LCFI51:
 1307              		.cfi_def_cfa_offset 24
 1308 0004 00AF     		add	r7, sp, #0
 1309              	.LCFI52:
 1310              		.cfi_def_cfa_register 7
 1311 0006 0346     		mov	r3, r0
 1312 0008 FB71     		strb	r3, [r7, #7]
 812:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1313              		.loc 1 812 0
 1314 000a 0023     		movs	r3, #0
 1315 000c FB73     		strb	r3, [r7, #15]
 813:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 814:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Check the parameters */
 815:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE((UserConfig&OB_IWDG_SW)));
 816:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE((UserConfig&OB_STOP_NO_RST)));
 817:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE((UserConfig&OB_STDBY_NO_RST)));
 818:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT1((UserConfig&OB_BOOT1_SET)));
 819:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_VDDA_ANALOG((UserConfig&OB_VDDA_ANALOG_ON)));
 820:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_SRAM_PARITY((UserConfig&OB_SRAM_PARITY_RESET)));
 821:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(FLASH_OBR_SDADC12_VDD_MONITOR)
 822:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_SDACD_VDD_MONITOR((UserConfig&OB_SDACD_VDD_MONITOR_SET)));
 823:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* FLASH_OBR_SDADC12_VDD_MONITOR */
 824:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 825:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 826:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1316              		.loc 1 826 0
 1317 000e 4CF25030 		movw	r0, #50000
 1318 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1319 0016 0346     		mov	r3, r0
 1320 0018 FB73     		strb	r3, [r7, #15]
 827:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 828:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1321              		.loc 1 828 0
 1322 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1323 001c 002B     		cmp	r3, #0
 1324 001e 1BD1     		bne	.L72
ARM GAS  /tmp/ccU7DcYz.s 			page 48


 829:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {     
 830:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Clean the error context */
 831:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1325              		.loc 1 831 0
 1326 0020 104B     		ldr	r3, .L74
 1327 0022 0022     		movs	r2, #0
 1328 0024 DA61     		str	r2, [r3, #28]
 832:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 833:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Enable the Option Bytes Programming operation */
 834:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTPG); 
 1329              		.loc 1 834 0
 1330 0026 104A     		ldr	r2, .L74+4
 1331 0028 0F4B     		ldr	r3, .L74+4
 1332 002a 1B69     		ldr	r3, [r3, #16]
 1333 002c 43F01003 		orr	r3, r3, #16
 1334 0030 1361     		str	r3, [r2, #16]
 835:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  
 836:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if   defined(FLASH_OBR_SDADC12_VDD_MONITOR)
 837:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     OB->USER = (UserConfig | 0x08U);
 838:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #else
 839:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     OB->USER = (UserConfig | 0x88U);
 1335              		.loc 1 839 0
 1336 0032 0E4A     		ldr	r2, .L74+8
 1337 0034 FB79     		ldrb	r3, [r7, #7]
 1338 0036 63F07703 		orn	r3, r3, #119
 1339 003a DBB2     		uxtb	r3, r3
 1340 003c 9BB2     		uxth	r3, r3
 1341 003e 5380     		strh	r3, [r2, #2]	@ movhi
 840:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif
 841:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 842:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 843:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1342              		.loc 1 843 0
 1343 0040 4CF25030 		movw	r0, #50000
 1344 0044 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1345 0048 0346     		mov	r3, r0
 1346 004a FB73     		strb	r3, [r7, #15]
 844:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 845:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* if the program operation is completed, disable the OPTPG Bit */
 846:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1347              		.loc 1 846 0
 1348 004c 064A     		ldr	r2, .L74+4
 1349 004e 064B     		ldr	r3, .L74+4
 1350 0050 1B69     		ldr	r3, [r3, #16]
 1351 0052 23F01003 		bic	r3, r3, #16
 1352 0056 1361     		str	r3, [r2, #16]
 1353              	.L72:
 847:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 848:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 849:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status; 
 1354              		.loc 1 849 0
 1355 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 850:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 1356              		.loc 1 850 0
 1357 005a 1846     		mov	r0, r3
 1358 005c 1037     		adds	r7, r7, #16
 1359              	.LCFI53:
ARM GAS  /tmp/ccU7DcYz.s 			page 49


 1360              		.cfi_def_cfa_offset 8
 1361 005e BD46     		mov	sp, r7
 1362              	.LCFI54:
 1363              		.cfi_def_cfa_register 13
 1364              		@ sp needed
 1365 0060 80BD     		pop	{r7, pc}
 1366              	.L75:
 1367 0062 00BF     		.align	2
 1368              	.L74:
 1369 0064 00000000 		.word	pFlash
 1370 0068 00200240 		.word	1073881088
 1371 006c 00F8FF1F 		.word	536868864
 1372              		.cfi_endproc
 1373              	.LFE133:
 1375              		.section	.text.FLASH_OB_ProgramData,"ax",%progbits
 1376              		.align	2
 1377              		.thumb
 1378              		.thumb_func
 1380              	FLASH_OB_ProgramData:
 1381              	.LFB134:
 851:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 852:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 853:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Programs a half word at a specified Option Byte Data address.
 854:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @note   The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 855:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 856:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
 857:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         (system reset will occur)
 858:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         Programming of the OB should be performed only after an erase (otherwise PGERR occurs)
 859:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  Address specifies the address to be programmed.
 860:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         This parameter can be 0x1FFFF804 or 0x1FFFF806. 
 861:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  Data specifies the data to be programmed.
 862:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval HAL status
 863:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 864:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_ProgramData(uint32_t Address, uint8_t Data)
 865:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 1382              		.loc 1 865 0
 1383              		.cfi_startproc
 1384              		@ args = 0, pretend = 0, frame = 16
 1385              		@ frame_needed = 1, uses_anonymous_args = 0
 1386 0000 80B5     		push	{r7, lr}
 1387              	.LCFI55:
 1388              		.cfi_def_cfa_offset 8
 1389              		.cfi_offset 7, -8
 1390              		.cfi_offset 14, -4
 1391 0002 84B0     		sub	sp, sp, #16
 1392              	.LCFI56:
 1393              		.cfi_def_cfa_offset 24
 1394 0004 00AF     		add	r7, sp, #0
 1395              	.LCFI57:
 1396              		.cfi_def_cfa_register 7
 1397 0006 7860     		str	r0, [r7, #4]
 1398 0008 0B46     		mov	r3, r1
 1399 000a FB70     		strb	r3, [r7, #3]
 866:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1400              		.loc 1 866 0
 1401 000c 0123     		movs	r3, #1
 1402 000e FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccU7DcYz.s 			page 50


 867:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 868:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Check the parameters */
 869:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   assert_param(IS_OB_DATA_ADDRESS(Address));
 870:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 871:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 872:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1403              		.loc 1 872 0
 1404 0010 4CF25030 		movw	r0, #50000
 1405 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1406 0018 0346     		mov	r3, r0
 1407 001a FB73     		strb	r3, [r7, #15]
 873:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 874:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1408              		.loc 1 874 0
 1409 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1410 001e 002B     		cmp	r3, #0
 1411 0020 18D1     		bne	.L77
 875:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 876:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Clean the error context */
 877:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1412              		.loc 1 877 0
 1413 0022 0F4B     		ldr	r3, .L79
 1414 0024 0022     		movs	r2, #0
 1415 0026 DA61     		str	r2, [r3, #28]
 878:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 879:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Enables the Option Bytes Programming operation */
 880:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTPG); 
 1416              		.loc 1 880 0
 1417 0028 0E4A     		ldr	r2, .L79+4
 1418 002a 0E4B     		ldr	r3, .L79+4
 1419 002c 1B69     		ldr	r3, [r3, #16]
 1420 002e 43F01003 		orr	r3, r3, #16
 1421 0032 1361     		str	r3, [r2, #16]
 881:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     *(__IO uint16_t*)Address = Data;
 1422              		.loc 1 881 0
 1423 0034 7B68     		ldr	r3, [r7, #4]
 1424 0036 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1425 0038 92B2     		uxth	r2, r2
 1426 003a 1A80     		strh	r2, [r3]	@ movhi
 882:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     
 883:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 884:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1427              		.loc 1 884 0
 1428 003c 4CF25030 		movw	r0, #50000
 1429 0040 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1430 0044 0346     		mov	r3, r0
 1431 0046 FB73     		strb	r3, [r7, #15]
 885:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     
 886:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* If the program operation is completed, disable the OPTPG Bit */
 887:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 1432              		.loc 1 887 0
 1433 0048 064A     		ldr	r2, .L79+4
 1434 004a 064B     		ldr	r3, .L79+4
 1435 004c 1B69     		ldr	r3, [r3, #16]
 1436 004e 23F01003 		bic	r3, r3, #16
 1437 0052 1361     		str	r3, [r2, #16]
 1438              	.L77:
ARM GAS  /tmp/ccU7DcYz.s 			page 51


 888:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 889:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Return the Option Byte Data Program Status */
 890:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return status;
 1439              		.loc 1 890 0
 1440 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 891:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 1441              		.loc 1 891 0
 1442 0056 1846     		mov	r0, r3
 1443 0058 1037     		adds	r7, r7, #16
 1444              	.LCFI58:
 1445              		.cfi_def_cfa_offset 8
 1446 005a BD46     		mov	sp, r7
 1447              	.LCFI59:
 1448              		.cfi_def_cfa_register 13
 1449              		@ sp needed
 1450 005c 80BD     		pop	{r7, pc}
 1451              	.L80:
 1452 005e 00BF     		.align	2
 1453              	.L79:
 1454 0060 00000000 		.word	pFlash
 1455 0064 00200240 		.word	1073881088
 1456              		.cfi_endproc
 1457              	.LFE134:
 1459              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 1460              		.align	2
 1461              		.thumb
 1462              		.thumb_func
 1464              	FLASH_OB_GetWRP:
 1465              	.LFB135:
 892:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 893:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 894:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
 895:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval The FLASH Write Protection Option Bytes value
 896:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 897:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetWRP(void)
 898:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 1466              		.loc 1 898 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471 0000 80B4     		push	{r7}
 1472              	.LCFI60:
 1473              		.cfi_def_cfa_offset 4
 1474              		.cfi_offset 7, -4
 1475 0002 00AF     		add	r7, sp, #0
 1476              	.LCFI61:
 1477              		.cfi_def_cfa_register 7
 899:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
 900:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return (uint32_t)(READ_REG(FLASH->WRPR));
 1478              		.loc 1 900 0
 1479 0004 034B     		ldr	r3, .L83
 1480 0006 1B6A     		ldr	r3, [r3, #32]
 901:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 1481              		.loc 1 901 0
 1482 0008 1846     		mov	r0, r3
 1483 000a BD46     		mov	sp, r7
ARM GAS  /tmp/ccU7DcYz.s 			page 52


 1484              	.LCFI62:
 1485              		.cfi_def_cfa_register 13
 1486              		@ sp needed
 1487 000c 5DF8047B 		ldr	r7, [sp], #4
 1488              	.LCFI63:
 1489              		.cfi_restore 7
 1490              		.cfi_def_cfa_offset 0
 1491 0010 7047     		bx	lr
 1492              	.L84:
 1493 0012 00BF     		.align	2
 1494              	.L83:
 1495 0014 00200240 		.word	1073881088
 1496              		.cfi_endproc
 1497              	.LFE135:
 1499              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 1500              		.align	2
 1501              		.thumb
 1502              		.thumb_func
 1504              	FLASH_OB_GetRDP:
 1505              	.LFB136:
 902:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 903:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 904:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
 905:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval FLASH RDP level
 906:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 907:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_0 No protection
 908:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
 909:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_2 Full chip protection
 910:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 911:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetRDP(void)
 912:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 1506              		.loc 1 912 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 8
 1509              		@ frame_needed = 1, uses_anonymous_args = 0
 1510              		@ link register save eliminated.
 1511 0000 80B4     		push	{r7}
 1512              	.LCFI64:
 1513              		.cfi_def_cfa_offset 4
 1514              		.cfi_offset 7, -4
 1515 0002 83B0     		sub	sp, sp, #12
 1516              	.LCFI65:
 1517              		.cfi_def_cfa_offset 16
 1518 0004 00AF     		add	r7, sp, #0
 1519              	.LCFI66:
 1520              		.cfi_def_cfa_register 7
 913:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   uint32_t tmp_reg = 0U;
 1521              		.loc 1 913 0
 1522 0006 0023     		movs	r3, #0
 1523 0008 7B60     		str	r3, [r7, #4]
 914:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   
 915:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Read RDP level bits */
 916:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(FLASH_OBR_RDPRT)
 917:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   tmp_reg = READ_BIT(FLASH->OBR, FLASH_OBR_RDPRT);
 1524              		.loc 1 917 0
 1525 000a 0B4B     		ldr	r3, .L89
 1526 000c DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccU7DcYz.s 			page 53


 1527 000e 03F00603 		and	r3, r3, #6
 1528 0012 7B60     		str	r3, [r7, #4]
 918:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif
 919:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(FLASH_OBR_LEVEL1_PROT)
 920:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   tmp_reg = READ_BIT(FLASH->OBR, (FLASH_OBR_LEVEL1_PROT | FLASH_OBR_LEVEL2_PROT));
 921:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* FLASH_OBR_LEVEL1_PROT */
 922:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 923:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(FLASH_OBR_RDPRT)
 924:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if (tmp_reg == FLASH_OBR_RDPRT_1)
 1529              		.loc 1 924 0
 1530 0014 7B68     		ldr	r3, [r7, #4]
 1531 0016 022B     		cmp	r3, #2
 1532 0018 01D1     		bne	.L86
 925:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif
 926:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if defined(FLASH_OBR_LEVEL1_PROT)
 927:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   if (tmp_reg == FLASH_OBR_LEVEL1_PROT)
 928:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif /* FLASH_OBR_LEVEL1_PROT */
 929:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 930:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     return OB_RDP_LEVEL_1;
 1533              		.loc 1 930 0
 1534 001a BB23     		movs	r3, #187
 1535 001c 05E0     		b	.L87
 1536              	.L86:
 931:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 932:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #if   defined(FLASH_OBR_RDPRT)
 933:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   else if (tmp_reg == FLASH_OBR_RDPRT_2)
 1537              		.loc 1 933 0
 1538 001e 7B68     		ldr	r3, [r7, #4]
 1539 0020 062B     		cmp	r3, #6
 1540 0022 01D1     		bne	.L88
 934:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #elif defined(FLASH_OBR_LEVEL2_PROT)
 935:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   else if (tmp_reg == FLASH_OBR_LEVEL2_PROT)
 936:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** #endif
 937:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 938:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     return OB_RDP_LEVEL_2;
 1541              		.loc 1 938 0
 1542 0024 CC23     		movs	r3, #204
 1543 0026 00E0     		b	.L87
 1544              	.L88:
 939:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 940:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   else 
 941:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   {
 942:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     return OB_RDP_LEVEL_0;
 1545              		.loc 1 942 0
 1546 0028 AA23     		movs	r3, #170
 1547              	.L87:
 943:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   }
 944:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 1548              		.loc 1 944 0
 1549 002a 1846     		mov	r0, r3
 1550 002c 0C37     		adds	r7, r7, #12
 1551              	.LCFI67:
 1552              		.cfi_def_cfa_offset 4
 1553 002e BD46     		mov	sp, r7
 1554              	.LCFI68:
 1555              		.cfi_def_cfa_register 13
 1556              		@ sp needed
ARM GAS  /tmp/ccU7DcYz.s 			page 54


 1557 0030 5DF8047B 		ldr	r7, [sp], #4
 1558              	.LCFI69:
 1559              		.cfi_restore 7
 1560              		.cfi_def_cfa_offset 0
 1561 0034 7047     		bx	lr
 1562              	.L90:
 1563 0036 00BF     		.align	2
 1564              	.L89:
 1565 0038 00200240 		.word	1073881088
 1566              		.cfi_endproc
 1567              	.LFE136:
 1569              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 1570              		.align	2
 1571              		.thumb
 1572              		.thumb_func
 1574              	FLASH_OB_GetUser:
 1575              	.LFB137:
 945:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 946:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 947:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
 948:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval  The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1), RST_STDBY(Bit2), nB
 949:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         VDDA_Analog_Monitoring(Bit5) and SRAM_Parity_Enable(Bit6). 
 950:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         And SDADC12_VDD_MONITOR(Bit7) for STM32F373 or STM32F378 . 
 951:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 952:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
 953:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 1576              		.loc 1 953 0
 1577              		.cfi_startproc
 1578              		@ args = 0, pretend = 0, frame = 8
 1579              		@ frame_needed = 1, uses_anonymous_args = 0
 1580              		@ link register save eliminated.
 1581 0000 80B4     		push	{r7}
 1582              	.LCFI70:
 1583              		.cfi_def_cfa_offset 4
 1584              		.cfi_offset 7, -4
 1585 0002 83B0     		sub	sp, sp, #12
 1586              	.LCFI71:
 1587              		.cfi_def_cfa_offset 16
 1588 0004 00AF     		add	r7, sp, #0
 1589              	.LCFI72:
 1590              		.cfi_def_cfa_register 7
 954:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Return the User Option Byte */
 955:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   return (uint8_t)((READ_REG(FLASH->OBR) & FLASH_OBR_USER) >> FLASH_POSITION_IWDGSW_BIT);
 1591              		.loc 1 955 0
 1592 0006 0B4B     		ldr	r3, .L94
 1593 0008 DB69     		ldr	r3, [r3, #28]
 1594 000a 03F4EE42 		and	r2, r3, #30464
 1595 000e 4FF48073 		mov	r3, #256
 1596 0012 7B60     		str	r3, [r7, #4]
 1597              	.LBB12:
 1598              	.LBB13:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1599              		.loc 2 531 0
 1600 0014 7B68     		ldr	r3, [r7, #4]
 1601              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1602 0016 93FAA3F3 		rbit r3, r3
 1603              	@ 0 "" 2
ARM GAS  /tmp/ccU7DcYz.s 			page 55


 1604              		.thumb
 1605 001a 3B60     		str	r3, [r7]
 1606              		.loc 2 544 0
 1607 001c 3B68     		ldr	r3, [r7]
 1608              	.LBE13:
 1609              	.LBE12:
 1610              		.loc 1 955 0
 1611 001e B3FA83F3 		clz	r3, r3
 1612 0022 22FA03F3 		lsr	r3, r2, r3
 1613 0026 DBB2     		uxtb	r3, r3
 956:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 1614              		.loc 1 956 0
 1615 0028 1846     		mov	r0, r3
 1616 002a 0C37     		adds	r7, r7, #12
 1617              	.LCFI73:
 1618              		.cfi_def_cfa_offset 4
 1619 002c BD46     		mov	sp, r7
 1620              	.LCFI74:
 1621              		.cfi_def_cfa_register 13
 1622              		@ sp needed
 1623 002e 5DF8047B 		ldr	r7, [sp], #4
 1624              	.LCFI75:
 1625              		.cfi_restore 7
 1626              		.cfi_def_cfa_offset 0
 1627 0032 7047     		bx	lr
 1628              	.L95:
 1629              		.align	2
 1630              	.L94:
 1631 0034 00200240 		.word	1073881088
 1632              		.cfi_endproc
 1633              	.LFE137:
 1635              		.section	.text.FLASH_PageErase,"ax",%progbits
 1636              		.align	2
 1637              		.global	FLASH_PageErase
 1638              		.thumb
 1639              		.thumb_func
 1641              	FLASH_PageErase:
 1642              	.LFB138:
 957:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 958:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 959:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
 960:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 961:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 962:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 963:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @}
 964:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 965:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 966:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @addtogroup FLASH
 967:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @{
 968:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 969:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 970:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Functions
 971:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  * @{
 972:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****  */
 973:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 974:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** /**
 975:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory page
ARM GAS  /tmp/ccU7DcYz.s 			page 56


 976:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @param  PageAddress FLASH page to erase
 977:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series      
 978:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * 
 979:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   * @retval None
 980:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   */
 981:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** void FLASH_PageErase(uint32_t PageAddress)
 982:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** {
 1643              		.loc 1 982 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 8
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
 1648 0000 80B4     		push	{r7}
 1649              	.LCFI76:
 1650              		.cfi_def_cfa_offset 4
 1651              		.cfi_offset 7, -4
 1652 0002 83B0     		sub	sp, sp, #12
 1653              	.LCFI77:
 1654              		.cfi_def_cfa_offset 16
 1655 0004 00AF     		add	r7, sp, #0
 1656              	.LCFI78:
 1657              		.cfi_def_cfa_register 7
 1658 0006 7860     		str	r0, [r7, #4]
 983:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   /* Clean the error context */
 984:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1659              		.loc 1 984 0
 1660 0008 0B4B     		ldr	r3, .L97
 1661 000a 0022     		movs	r2, #0
 1662 000c DA61     		str	r2, [r3, #28]
 985:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** 
 986:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     /* Proceed to erase the page */
 987:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_PER);
 1663              		.loc 1 987 0
 1664 000e 0B4A     		ldr	r2, .L97+4
 1665 0010 0A4B     		ldr	r3, .L97+4
 1666 0012 1B69     		ldr	r3, [r3, #16]
 1667 0014 43F00203 		orr	r3, r3, #2
 1668 0018 1361     		str	r3, [r2, #16]
 988:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     WRITE_REG(FLASH->AR, PageAddress);
 1669              		.loc 1 988 0
 1670 001a 084A     		ldr	r2, .L97+4
 1671 001c 7B68     		ldr	r3, [r7, #4]
 1672 001e 5361     		str	r3, [r2, #20]
 989:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 1673              		.loc 1 989 0
 1674 0020 064A     		ldr	r2, .L97+4
 1675 0022 064B     		ldr	r3, .L97+4
 1676 0024 1B69     		ldr	r3, [r3, #16]
 1677 0026 43F04003 		orr	r3, r3, #64
 1678 002a 1361     		str	r3, [r2, #16]
 990:../../Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c **** }
 1679              		.loc 1 990 0
 1680 002c 0C37     		adds	r7, r7, #12
 1681              	.LCFI79:
 1682              		.cfi_def_cfa_offset 4
 1683 002e BD46     		mov	sp, r7
 1684              	.LCFI80:
ARM GAS  /tmp/ccU7DcYz.s 			page 57


 1685              		.cfi_def_cfa_register 13
 1686              		@ sp needed
 1687 0030 5DF8047B 		ldr	r7, [sp], #4
 1688              	.LCFI81:
 1689              		.cfi_restore 7
 1690              		.cfi_def_cfa_offset 0
 1691 0034 7047     		bx	lr
 1692              	.L98:
 1693 0036 00BF     		.align	2
 1694              	.L97:
 1695 0038 00000000 		.word	pFlash
 1696 003c 00200240 		.word	1073881088
 1697              		.cfi_endproc
 1698              	.LFE138:
 1700              		.text
 1701              	.Letext0:
 1702              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1703              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1704              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 1705              		.file 6 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1706              		.file 7 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_flash.h"
 1707              		.file 8 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_flash_ex.h"
 1708              		.file 9 "../../Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccU7DcYz.s 			page 58


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_flash_ex.c
     /tmp/ccU7DcYz.s:21     .text.HAL_FLASHEx_Erase:0000000000000000 $t
     /tmp/ccU7DcYz.s:26     .text.HAL_FLASHEx_Erase:0000000000000000 HAL_FLASHEx_Erase
     /tmp/ccU7DcYz.s:734    .text.FLASH_MassErase:0000000000000000 FLASH_MassErase
     /tmp/ccU7DcYz.s:1641   .text.FLASH_PageErase:0000000000000000 FLASH_PageErase
     /tmp/ccU7DcYz.s:169    .text.HAL_FLASHEx_Erase:00000000000000cc $d
     /tmp/ccU7DcYz.s:175    .text.HAL_FLASHEx_Erase_IT:0000000000000000 $t
     /tmp/ccU7DcYz.s:180    .text.HAL_FLASHEx_Erase_IT:0000000000000000 HAL_FLASHEx_Erase_IT
     /tmp/ccU7DcYz.s:279    .text.HAL_FLASHEx_Erase_IT:0000000000000078 $d
     /tmp/ccU7DcYz.s:285    .text.HAL_FLASHEx_OBErase:0000000000000000 $t
     /tmp/ccU7DcYz.s:290    .text.HAL_FLASHEx_OBErase:0000000000000000 HAL_FLASHEx_OBErase
     /tmp/ccU7DcYz.s:1504   .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
     /tmp/ccU7DcYz.s:1183   .text.FLASH_OB_RDP_LevelConfig:0000000000000000 FLASH_OB_RDP_LevelConfig
     /tmp/ccU7DcYz.s:379    .text.HAL_FLASHEx_OBErase:000000000000007c $d
     /tmp/ccU7DcYz.s:385    .text.HAL_FLASHEx_OBProgram:0000000000000000 $t
     /tmp/ccU7DcYz.s:390    .text.HAL_FLASHEx_OBProgram:0000000000000000 HAL_FLASHEx_OBProgram
     /tmp/ccU7DcYz.s:787    .text.FLASH_OB_EnableWRP:0000000000000000 FLASH_OB_EnableWRP
     /tmp/ccU7DcYz.s:986    .text.FLASH_OB_DisableWRP:0000000000000000 FLASH_OB_DisableWRP
     /tmp/ccU7DcYz.s:1294   .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
     /tmp/ccU7DcYz.s:1380   .text.FLASH_OB_ProgramData:0000000000000000 FLASH_OB_ProgramData
     /tmp/ccU7DcYz.s:562    .text.HAL_FLASHEx_OBProgram:00000000000000f4 $d
     /tmp/ccU7DcYz.s:567    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 $t
     /tmp/ccU7DcYz.s:572    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 HAL_FLASHEx_OBGetConfig
     /tmp/ccU7DcYz.s:1464   .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
     /tmp/ccU7DcYz.s:1574   .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
     /tmp/ccU7DcYz.s:624    .text.HAL_FLASHEx_OBGetUserData:0000000000000000 $t
     /tmp/ccU7DcYz.s:629    .text.HAL_FLASHEx_OBGetUserData:0000000000000000 HAL_FLASHEx_OBGetUserData
     /tmp/ccU7DcYz.s:724    .text.HAL_FLASHEx_OBGetUserData:0000000000000068 $d
     /tmp/ccU7DcYz.s:730    .text.FLASH_MassErase:0000000000000000 $t
     /tmp/ccU7DcYz.s:777    .text.FLASH_MassErase:000000000000002c $d
     /tmp/ccU7DcYz.s:783    .text.FLASH_OB_EnableWRP:0000000000000000 $t
     /tmp/ccU7DcYz.s:975    .text.FLASH_OB_EnableWRP:0000000000000128 $d
     /tmp/ccU7DcYz.s:982    .text.FLASH_OB_DisableWRP:0000000000000000 $t
     /tmp/ccU7DcYz.s:1172   .text.FLASH_OB_DisableWRP:0000000000000124 $d
     /tmp/ccU7DcYz.s:1179   .text.FLASH_OB_RDP_LevelConfig:0000000000000000 $t
     /tmp/ccU7DcYz.s:1283   .text.FLASH_OB_RDP_LevelConfig:0000000000000094 $d
     /tmp/ccU7DcYz.s:1290   .text.FLASH_OB_UserConfig:0000000000000000 $t
     /tmp/ccU7DcYz.s:1369   .text.FLASH_OB_UserConfig:0000000000000064 $d
     /tmp/ccU7DcYz.s:1376   .text.FLASH_OB_ProgramData:0000000000000000 $t
     /tmp/ccU7DcYz.s:1454   .text.FLASH_OB_ProgramData:0000000000000060 $d
     /tmp/ccU7DcYz.s:1460   .text.FLASH_OB_GetWRP:0000000000000000 $t
     /tmp/ccU7DcYz.s:1495   .text.FLASH_OB_GetWRP:0000000000000014 $d
     /tmp/ccU7DcYz.s:1500   .text.FLASH_OB_GetRDP:0000000000000000 $t
     /tmp/ccU7DcYz.s:1565   .text.FLASH_OB_GetRDP:0000000000000038 $d
     /tmp/ccU7DcYz.s:1570   .text.FLASH_OB_GetUser:0000000000000000 $t
     /tmp/ccU7DcYz.s:1631   .text.FLASH_OB_GetUser:0000000000000034 $d
     /tmp/ccU7DcYz.s:1636   .text.FLASH_PageErase:0000000000000000 $t
     /tmp/ccU7DcYz.s:1695   .text.FLASH_PageErase:0000000000000038 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash
