ARM GAS  /tmp/cc5UHLQe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.blink_task,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	blink_task:
  26              	.LFB128:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   *
   7:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/main.c    ****   * are permitted provided that the following conditions are met:
  11:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  13:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/main.c    ****   *      and/or other materials provided with the distribution.
  16:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  18:Src/main.c    ****   *      without specific prior written permission.
  19:Src/main.c    ****   *
  20:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/main.c    ****   *
  31:Src/main.c    ****   ******************************************************************************
ARM GAS  /tmp/cc5UHLQe.s 			page 2


  32:Src/main.c    ****   */
  33:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  34:Src/main.c    **** #include "main.h"
  35:Src/main.c    **** #include "stm32f3xx_hal.h"
  36:Src/main.c    **** #include "FreeRTOS.h"
  37:Src/main.c    **** #include "task.h"
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  44:Src/main.c    **** void SystemClock_Config(void);
  45:Src/main.c    **** void Error_Handler(void);
  46:Src/main.c    **** static void MX_GPIO_Init(void);
  47:Src/main.c    **** static void blink_task( void *pvParameters);
  48:Src/main.c    **** 
  49:Src/main.c    **** void blink_task(void *pvParameters)
  50:Src/main.c    **** {
  28              		.loc 1 50 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44              	.L2:
  51:Src/main.c    **** 	/*just to remove compiler warning*/
  52:Src/main.c    **** 	(void) pvParameters;
  53:Src/main.c    **** 	while(1){
  54:Src/main.c    **** 		  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);	// Debugging, watch Calculation Time
  45              		.loc 1 54 0 discriminator 1
  46 0008 0948     		ldr	r0, .L3
  47 000a 4FF40051 		mov	r1, #8192
  48 000e 0122     		movs	r2, #1
  49 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
  55:Src/main.c    **** 
  56:Src/main.c    **** 		  vTaskDelay(100);
  50              		.loc 1 56 0 discriminator 1
  51 0014 6420     		movs	r0, #100
  52 0016 FFF7FEFF 		bl	vTaskDelay
  57:Src/main.c    **** 
  58:Src/main.c    **** 		  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);	// Debugging, watch Calculation Time
  53              		.loc 1 58 0 discriminator 1
  54 001a 0548     		ldr	r0, .L3
  55 001c 4FF40051 		mov	r1, #8192
  56 0020 0022     		movs	r2, #0
  57 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/cc5UHLQe.s 			page 3


  59:Src/main.c    **** 		  vTaskDelay(100);
  58              		.loc 1 59 0 discriminator 1
  59 0026 6420     		movs	r0, #100
  60 0028 FFF7FEFF 		bl	vTaskDelay
  60:Src/main.c    **** 
  61:Src/main.c    **** 	}
  61              		.loc 1 61 0 discriminator 1
  62 002c ECE7     		b	.L2
  63              	.L4:
  64 002e 00BF     		.align	2
  65              	.L3:
  66 0030 00040048 		.word	1207960576
  67              		.cfi_endproc
  68              	.LFE128:
  70              		.section	.rodata
  71              		.align	2
  72              	.LC0:
  73 0000 426C696E 		.ascii	"Blink_task\000"
  73      6B5F7461 
  73      736B00
  74              		.section	.text.main,"ax",%progbits
  75              		.align	2
  76              		.global	main
  77              		.thumb
  78              		.thumb_func
  80              	main:
  81              	.LFB129:
  62:Src/main.c    **** }
  63:Src/main.c    **** 
  64:Src/main.c    **** 
  65:Src/main.c    **** int main(void)
  66:Src/main.c    **** {
  82              		.loc 1 66 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 7, -8
  90              		.cfi_offset 14, -4
  91 0002 82B0     		sub	sp, sp, #8
  92              	.LCFI4:
  93              		.cfi_def_cfa_offset 16
  94 0004 02AF     		add	r7, sp, #8
  95              	.LCFI5:
  96              		.cfi_def_cfa 7, 8
  67:Src/main.c    **** 
  68:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  69:Src/main.c    ****   HAL_Init();
  97              		.loc 1 69 0
  98 0006 FFF7FEFF 		bl	HAL_Init
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* Configure the system clock */
  72:Src/main.c    ****   SystemClock_Config();
  99              		.loc 1 72 0
 100 000a FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/cc5UHLQe.s 			page 4


  73:Src/main.c    **** 
  74:Src/main.c    ****   /* Initialize all configured peripherals */
  75:Src/main.c    ****   MX_GPIO_Init();
 101              		.loc 1 75 0
 102 000e FFF7FEFF 		bl	MX_GPIO_Init
  76:Src/main.c    **** 
  77:Src/main.c    ****   xTaskCreate(blink_task, "Blink_task", configMINIMAL_STACK_SIZE*2, NULL, 1, ( TaskHandle_t * )NULL
 103              		.loc 1 77 0
 104 0012 0123     		movs	r3, #1
 105 0014 0093     		str	r3, [sp]
 106 0016 0023     		movs	r3, #0
 107 0018 0193     		str	r3, [sp, #4]
 108 001a 0548     		ldr	r0, .L7
 109 001c 0549     		ldr	r1, .L7+4
 110 001e 4FF48072 		mov	r2, #256
 111 0022 0023     		movs	r3, #0
 112 0024 FFF7FEFF 		bl	xTaskCreate
  78:Src/main.c    ****   vTaskStartScheduler();
 113              		.loc 1 78 0
 114 0028 FFF7FEFF 		bl	vTaskStartScheduler
 115              	.L6:
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Infinite loop */
  81:Src/main.c    ****   while (1)
  82:Src/main.c    ****   {
  83:Src/main.c    **** 
  84:Src/main.c    ****   }
 116              		.loc 1 84 0 discriminator 1
 117 002c FEE7     		b	.L6
 118              	.L8:
 119 002e 00BF     		.align	2
 120              	.L7:
 121 0030 00000000 		.word	blink_task
 122 0034 00000000 		.word	.LC0
 123              		.cfi_endproc
 124              	.LFE129:
 126              		.section	.text.SystemClock_Config,"ax",%progbits
 127              		.align	2
 128              		.global	SystemClock_Config
 129              		.thumb
 130              		.thumb_func
 132              	SystemClock_Config:
 133              	.LFB130:
  85:Src/main.c    **** 
  86:Src/main.c    **** }
  87:Src/main.c    **** 
  88:Src/main.c    **** /** System Clock Configuration
  89:Src/main.c    **** */
  90:Src/main.c    **** void SystemClock_Config(void)
  91:Src/main.c    **** {
 134              		.loc 1 91 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 64
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              	.LCFI6:
 140              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc5UHLQe.s 			page 5


 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 90B0     		sub	sp, sp, #64
 144              	.LCFI7:
 145              		.cfi_def_cfa_offset 72
 146 0004 00AF     		add	r7, sp, #0
 147              	.LCFI8:
 148              		.cfi_def_cfa_register 7
  92:Src/main.c    **** 
  93:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  94:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  95:Src/main.c    **** 
  96:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
  97:Src/main.c    ****     */
  98:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 149              		.loc 1 98 0
 150 0006 0223     		movs	r3, #2
 151 0008 BB61     		str	r3, [r7, #24]
  99:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 152              		.loc 1 99 0
 153 000a 0123     		movs	r3, #1
 154 000c BB62     		str	r3, [r7, #40]
 100:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 155              		.loc 1 100 0
 156 000e 1023     		movs	r3, #16
 157 0010 FB62     		str	r3, [r7, #44]
 101:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 158              		.loc 1 101 0
 159 0012 0223     		movs	r3, #2
 160 0014 7B63     		str	r3, [r7, #52]
 102:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 161              		.loc 1 102 0
 162 0016 0023     		movs	r3, #0
 163 0018 BB63     		str	r3, [r7, #56]
 103:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 164              		.loc 1 103 0
 165 001a 4FF46013 		mov	r3, #3670016
 166 001e FB63     		str	r3, [r7, #60]
 104:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 167              		.loc 1 104 0
 168 0020 07F11803 		add	r3, r7, #24
 169 0024 1846     		mov	r0, r3
 170 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 171 002a 0346     		mov	r3, r0
 172 002c 002B     		cmp	r3, #0
 173 002e 01D0     		beq	.L10
 105:Src/main.c    ****   {
 106:Src/main.c    ****     Error_Handler();
 174              		.loc 1 106 0
 175 0030 FFF7FEFF 		bl	Error_Handler
 176              	.L10:
 107:Src/main.c    ****   }
 108:Src/main.c    **** 
 109:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 110:Src/main.c    ****     */
 111:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 177              		.loc 1 111 0
ARM GAS  /tmp/cc5UHLQe.s 			page 6


 178 0034 0F23     		movs	r3, #15
 179 0036 7B60     		str	r3, [r7, #4]
 112:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 113:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 180              		.loc 1 113 0
 181 0038 0223     		movs	r3, #2
 182 003a BB60     		str	r3, [r7, #8]
 114:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 183              		.loc 1 114 0
 184 003c 0023     		movs	r3, #0
 185 003e FB60     		str	r3, [r7, #12]
 115:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 186              		.loc 1 115 0
 187 0040 4FF48063 		mov	r3, #1024
 188 0044 3B61     		str	r3, [r7, #16]
 116:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 189              		.loc 1 116 0
 190 0046 0023     		movs	r3, #0
 191 0048 7B61     		str	r3, [r7, #20]
 117:Src/main.c    **** 
 118:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 192              		.loc 1 118 0
 193 004a 3B1D     		adds	r3, r7, #4
 194 004c 1846     		mov	r0, r3
 195 004e 0221     		movs	r1, #2
 196 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 197 0054 0346     		mov	r3, r0
 198 0056 002B     		cmp	r3, #0
 199 0058 01D0     		beq	.L11
 119:Src/main.c    ****   {
 120:Src/main.c    ****     Error_Handler();
 200              		.loc 1 120 0
 201 005a FFF7FEFF 		bl	Error_Handler
 202              	.L11:
 121:Src/main.c    ****   }
 122:Src/main.c    **** 
 123:Src/main.c    ****     /**Configure the Systick interrupt time 
 124:Src/main.c    ****     */
 125:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 203              		.loc 1 125 0
 204 005e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 205 0062 0246     		mov	r2, r0
 206 0064 094B     		ldr	r3, .L12
 207 0066 A3FB0223 		umull	r2, r3, r3, r2
 208 006a 9B09     		lsrs	r3, r3, #6
 209 006c 1846     		mov	r0, r3
 210 006e FFF7FEFF 		bl	HAL_SYSTICK_Config
 126:Src/main.c    **** 
 127:Src/main.c    ****     /**Configure the Systick 
 128:Src/main.c    ****     */
 129:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 211              		.loc 1 129 0
 212 0072 0420     		movs	r0, #4
 213 0074 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 132:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
ARM GAS  /tmp/cc5UHLQe.s 			page 7


 214              		.loc 1 132 0
 215 0078 4FF0FF30 		mov	r0, #-1
 216 007c 0F21     		movs	r1, #15
 217 007e 0022     		movs	r2, #0
 218 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 133:Src/main.c    **** }
 219              		.loc 1 133 0
 220 0084 4037     		adds	r7, r7, #64
 221              	.LCFI9:
 222              		.cfi_def_cfa_offset 8
 223 0086 BD46     		mov	sp, r7
 224              	.LCFI10:
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 0088 80BD     		pop	{r7, pc}
 228              	.L13:
 229 008a 00BF     		.align	2
 230              	.L12:
 231 008c D34D6210 		.word	274877907
 232              		.cfi_endproc
 233              	.LFE130:
 235              		.section	.text.MX_GPIO_Init,"ax",%progbits
 236              		.align	2
 237              		.thumb
 238              		.thumb_func
 240              	MX_GPIO_Init:
 241              	.LFB131:
 134:Src/main.c    **** 
 135:Src/main.c    **** /** Configure pins as 
 136:Src/main.c    ****         * Analog 
 137:Src/main.c    ****         * Input 
 138:Src/main.c    ****         * Output
 139:Src/main.c    ****         * EVENT_OUT
 140:Src/main.c    ****         * EXTI
 141:Src/main.c    **** */
 142:Src/main.c    **** static void MX_GPIO_Init(void)
 143:Src/main.c    **** {
 242              		.loc 1 143 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 40
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI11:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 8AB0     		sub	sp, sp, #40
 252              	.LCFI12:
 253              		.cfi_def_cfa_offset 48
 254 0004 00AF     		add	r7, sp, #0
 255              	.LCFI13:
 256              		.cfi_def_cfa_register 7
 257              	.LBB2:
 144:Src/main.c    **** 
 145:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 146:Src/main.c    **** 
 147:Src/main.c    ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/cc5UHLQe.s 			page 8


 148:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 258              		.loc 1 148 0
 259 0006 2A4A     		ldr	r2, .L15
 260 0008 294B     		ldr	r3, .L15
 261 000a 5B69     		ldr	r3, [r3, #20]
 262 000c 43F40023 		orr	r3, r3, #524288
 263 0010 5361     		str	r3, [r2, #20]
 264 0012 274B     		ldr	r3, .L15
 265 0014 5B69     		ldr	r3, [r3, #20]
 266 0016 03F40023 		and	r3, r3, #524288
 267 001a 3B61     		str	r3, [r7, #16]
 268 001c 3B69     		ldr	r3, [r7, #16]
 269              	.LBE2:
 270              	.LBB3:
 149:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 271              		.loc 1 149 0
 272 001e 244A     		ldr	r2, .L15
 273 0020 234B     		ldr	r3, .L15
 274 0022 5B69     		ldr	r3, [r3, #20]
 275 0024 43F48003 		orr	r3, r3, #4194304
 276 0028 5361     		str	r3, [r2, #20]
 277 002a 214B     		ldr	r3, .L15
 278 002c 5B69     		ldr	r3, [r3, #20]
 279 002e 03F48003 		and	r3, r3, #4194304
 280 0032 FB60     		str	r3, [r7, #12]
 281 0034 FB68     		ldr	r3, [r7, #12]
 282              	.LBE3:
 283              	.LBB4:
 150:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 284              		.loc 1 150 0
 285 0036 1E4A     		ldr	r2, .L15
 286 0038 1D4B     		ldr	r3, .L15
 287 003a 5B69     		ldr	r3, [r3, #20]
 288 003c 43F40033 		orr	r3, r3, #131072
 289 0040 5361     		str	r3, [r2, #20]
 290 0042 1B4B     		ldr	r3, .L15
 291 0044 5B69     		ldr	r3, [r3, #20]
 292 0046 03F40033 		and	r3, r3, #131072
 293 004a BB60     		str	r3, [r7, #8]
 294 004c BB68     		ldr	r3, [r7, #8]
 295              	.LBE4:
 296              	.LBB5:
 151:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 297              		.loc 1 151 0
 298 004e 184A     		ldr	r2, .L15
 299 0050 174B     		ldr	r3, .L15
 300 0052 5B69     		ldr	r3, [r3, #20]
 301 0054 43F48023 		orr	r3, r3, #262144
 302 0058 5361     		str	r3, [r2, #20]
 303 005a 154B     		ldr	r3, .L15
 304 005c 5B69     		ldr	r3, [r3, #20]
 305 005e 03F48023 		and	r3, r3, #262144
 306 0062 7B60     		str	r3, [r7, #4]
 307 0064 7B68     		ldr	r3, [r7, #4]
 308              	.LBE5:
 152:Src/main.c    **** 
 153:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/cc5UHLQe.s 			page 9


 154:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 309              		.loc 1 154 0
 310 0066 1348     		ldr	r0, .L15+4
 311 0068 4FF40051 		mov	r1, #8192
 312 006c 0022     		movs	r2, #0
 313 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 155:Src/main.c    **** 
 156:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 157:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 314              		.loc 1 157 0
 315 0072 4FF40053 		mov	r3, #8192
 316 0076 7B61     		str	r3, [r7, #20]
 158:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 317              		.loc 1 158 0
 318 0078 0F4B     		ldr	r3, .L15+8
 319 007a BB61     		str	r3, [r7, #24]
 159:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 320              		.loc 1 159 0
 321 007c 0023     		movs	r3, #0
 322 007e FB61     		str	r3, [r7, #28]
 160:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 323              		.loc 1 160 0
 324 0080 07F11403 		add	r3, r7, #20
 325 0084 0D48     		ldr	r0, .L15+12
 326 0086 1946     		mov	r1, r3
 327 0088 FFF7FEFF 		bl	HAL_GPIO_Init
 161:Src/main.c    **** 
 162:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 163:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
 328              		.loc 1 163 0
 329 008c 4FF40053 		mov	r3, #8192
 330 0090 7B61     		str	r3, [r7, #20]
 164:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 331              		.loc 1 164 0
 332 0092 0123     		movs	r3, #1
 333 0094 BB61     		str	r3, [r7, #24]
 165:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 334              		.loc 1 165 0
 335 0096 0023     		movs	r3, #0
 336 0098 FB61     		str	r3, [r7, #28]
 166:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 337              		.loc 1 166 0
 338 009a 0023     		movs	r3, #0
 339 009c 3B62     		str	r3, [r7, #32]
 167:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 340              		.loc 1 167 0
 341 009e 07F11403 		add	r3, r7, #20
 342 00a2 0448     		ldr	r0, .L15+4
 343 00a4 1946     		mov	r1, r3
 344 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 168:Src/main.c    **** 
 169:Src/main.c    **** }
 345              		.loc 1 169 0
 346 00aa 2837     		adds	r7, r7, #40
 347              	.LCFI14:
 348              		.cfi_def_cfa_offset 8
 349 00ac BD46     		mov	sp, r7
ARM GAS  /tmp/cc5UHLQe.s 			page 10


 350              	.LCFI15:
 351              		.cfi_def_cfa_register 13
 352              		@ sp needed
 353 00ae 80BD     		pop	{r7, pc}
 354              	.L16:
 355              		.align	2
 356              	.L15:
 357 00b0 00100240 		.word	1073876992
 358 00b4 00040048 		.word	1207960576
 359 00b8 00002110 		.word	270598144
 360 00bc 00080048 		.word	1207961600
 361              		.cfi_endproc
 362              	.LFE131:
 364              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 365              		.align	2
 366              		.global	HAL_TIM_PeriodElapsedCallback
 367              		.thumb
 368              		.thumb_func
 370              	HAL_TIM_PeriodElapsedCallback:
 371              	.LFB132:
 170:Src/main.c    **** 
 171:Src/main.c    **** 
 172:Src/main.c    **** /**
 173:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 174:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 175:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 176:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 177:Src/main.c    ****   * @param  htim : TIM handle
 178:Src/main.c    ****   * @retval None
 179:Src/main.c    ****   */
 180:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 181:Src/main.c    **** {
 372              		.loc 1 181 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 8
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376 0000 80B5     		push	{r7, lr}
 377              	.LCFI16:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 7, -8
 380              		.cfi_offset 14, -4
 381 0002 82B0     		sub	sp, sp, #8
 382              	.LCFI17:
 383              		.cfi_def_cfa_offset 16
 384 0004 00AF     		add	r7, sp, #0
 385              	.LCFI18:
 386              		.cfi_def_cfa_register 7
 387 0006 7860     		str	r0, [r7, #4]
 182:Src/main.c    **** /* USER CODE BEGIN Callback 0 */
 183:Src/main.c    **** 
 184:Src/main.c    **** /* USER CODE END Callback 0 */
 185:Src/main.c    ****   if (htim->Instance == TIM1) {
 388              		.loc 1 185 0
 389 0008 7B68     		ldr	r3, [r7, #4]
 390 000a 1B68     		ldr	r3, [r3]
 391 000c 034A     		ldr	r2, .L19
 392 000e 9342     		cmp	r3, r2
ARM GAS  /tmp/cc5UHLQe.s 			page 11


 393 0010 01D1     		bne	.L17
 186:Src/main.c    ****     HAL_IncTick();
 394              		.loc 1 186 0
 395 0012 FFF7FEFF 		bl	HAL_IncTick
 396              	.L17:
 187:Src/main.c    ****   }
 188:Src/main.c    **** /* USER CODE BEGIN Callback 1 */
 189:Src/main.c    **** 
 190:Src/main.c    **** /* USER CODE END Callback 1 */
 191:Src/main.c    **** }
 397              		.loc 1 191 0
 398 0016 0837     		adds	r7, r7, #8
 399              	.LCFI19:
 400              		.cfi_def_cfa_offset 8
 401 0018 BD46     		mov	sp, r7
 402              	.LCFI20:
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 001a 80BD     		pop	{r7, pc}
 406              	.L20:
 407              		.align	2
 408              	.L19:
 409 001c 002C0140 		.word	1073818624
 410              		.cfi_endproc
 411              	.LFE132:
 413              		.section	.text.Error_Handler,"ax",%progbits
 414              		.align	2
 415              		.global	Error_Handler
 416              		.thumb
 417              		.thumb_func
 419              	Error_Handler:
 420              	.LFB133:
 192:Src/main.c    **** 
 193:Src/main.c    **** 
 194:Src/main.c    **** /**
 195:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 196:Src/main.c    ****   * @param  None
 197:Src/main.c    ****   * @retval None
 198:Src/main.c    ****   */
 199:Src/main.c    **** void Error_Handler(void)
 200:Src/main.c    **** {
 421              		.loc 1 200 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426 0000 80B4     		push	{r7}
 427              	.LCFI21:
 428              		.cfi_def_cfa_offset 4
 429              		.cfi_offset 7, -4
 430 0002 00AF     		add	r7, sp, #0
 431              	.LCFI22:
 432              		.cfi_def_cfa_register 7
 433              	.L22:
 201:Src/main.c    ****   /* USER CODE BEGIN Error_Handler */
 202:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 203:Src/main.c    ****   while(1) 
ARM GAS  /tmp/cc5UHLQe.s 			page 12


 204:Src/main.c    ****   {
 205:Src/main.c    ****   }
 434              		.loc 1 205 0 discriminator 1
 435 0004 FEE7     		b	.L22
 436              		.cfi_endproc
 437              	.LFE133:
 439 0006 00BF     		.text
 440              	.Letext0:
 441              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 442              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 443              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 444              		.file 5 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 445              		.file 6 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 446              		.file 7 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 447              		.file 8 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 448              		.file 9 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 449              		.file 10 "../../../FreeRTOS_9_0/Source/include/task.h"
 450              		.file 11 "../../Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/cc5UHLQe.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc5UHLQe.s:21     .text.blink_task:0000000000000000 $t
     /tmp/cc5UHLQe.s:25     .text.blink_task:0000000000000000 blink_task
     /tmp/cc5UHLQe.s:66     .text.blink_task:0000000000000030 $d
     /tmp/cc5UHLQe.s:71     .rodata:0000000000000000 $d
     /tmp/cc5UHLQe.s:75     .text.main:0000000000000000 $t
     /tmp/cc5UHLQe.s:80     .text.main:0000000000000000 main
     /tmp/cc5UHLQe.s:132    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc5UHLQe.s:240    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc5UHLQe.s:121    .text.main:0000000000000030 $d
     /tmp/cc5UHLQe.s:127    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc5UHLQe.s:419    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc5UHLQe.s:231    .text.SystemClock_Config:000000000000008c $d
     /tmp/cc5UHLQe.s:236    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc5UHLQe.s:357    .text.MX_GPIO_Init:00000000000000b0 $d
     /tmp/cc5UHLQe.s:365    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc5UHLQe.s:370    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc5UHLQe.s:409    .text.HAL_TIM_PeriodElapsedCallback:000000000000001c $d
     /tmp/cc5UHLQe.s:414    .text.Error_Handler:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
vTaskDelay
HAL_Init
xTaskCreate
vTaskStartScheduler
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_GPIO_Init
HAL_IncTick
