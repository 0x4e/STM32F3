ARM GAS  /tmp/ccEhRfS9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_timebase_TIM.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	htim1,64,4
  21              		.global	uwIncrementState
  22              		.section	.bss.uwIncrementState,"aw",%nobits
  23              		.align	2
  26              	uwIncrementState:
  27 0000 00000000 		.space	4
  28              		.section	.text.HAL_InitTick,"ax",%progbits
  29              		.align	2
  30              		.global	HAL_InitTick
  31              		.thumb
  32              		.thumb_func
  34              	HAL_InitTick:
  35              	.LFB123:
  36              		.file 1 "Src/stm32f3xx_hal_timebase_TIM.c"
   1:Src/stm32f3xx_hal_timebase_TIM.c **** /**
   2:Src/stm32f3xx_hal_timebase_TIM.c ****   ******************************************************************************
   3:Src/stm32f3xx_hal_timebase_TIM.c ****   * @file    stm32f3xx_hal_timebase_TIM.c 
   4:Src/stm32f3xx_hal_timebase_TIM.c ****   * @brief   HAL time base based on the hardware TIM.
   5:Src/stm32f3xx_hal_timebase_TIM.c ****   ******************************************************************************
   6:Src/stm32f3xx_hal_timebase_TIM.c ****   *
   7:Src/stm32f3xx_hal_timebase_TIM.c ****   * Copyright (c) 2017 STMicroelectronics International N.V. 
   8:Src/stm32f3xx_hal_timebase_TIM.c ****   * All rights reserved.
   9:Src/stm32f3xx_hal_timebase_TIM.c ****   *
  10:Src/stm32f3xx_hal_timebase_TIM.c ****   * Redistribution and use in source and binary forms, with or without 
  11:Src/stm32f3xx_hal_timebase_TIM.c ****   * modification, are permitted, provided that the following conditions are met:
  12:Src/stm32f3xx_hal_timebase_TIM.c ****   *
  13:Src/stm32f3xx_hal_timebase_TIM.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  14:Src/stm32f3xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer.
  15:Src/stm32f3xx_hal_timebase_TIM.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  16:Src/stm32f3xx_hal_timebase_TIM.c ****   *    this list of conditions and the following disclaimer in the documentation
  17:Src/stm32f3xx_hal_timebase_TIM.c ****   *    and/or other materials provided with the distribution.
  18:Src/stm32f3xx_hal_timebase_TIM.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  19:Src/stm32f3xx_hal_timebase_TIM.c ****   *    contributors to this software may be used to endorse or promote products 
  20:Src/stm32f3xx_hal_timebase_TIM.c ****   *    derived from this software without specific written permission.
  21:Src/stm32f3xx_hal_timebase_TIM.c ****   * 4. This software, including modifications and/or derivative works of this 
  22:Src/stm32f3xx_hal_timebase_TIM.c ****   *    software, must execute solely and exclusively on microcontroller or
  23:Src/stm32f3xx_hal_timebase_TIM.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  24:Src/stm32f3xx_hal_timebase_TIM.c ****   * 5. Redistribution and use of this software other than as permitted under 
ARM GAS  /tmp/ccEhRfS9.s 			page 2


  25:Src/stm32f3xx_hal_timebase_TIM.c ****   *    this license is void and will automatically terminate your rights under 
  26:Src/stm32f3xx_hal_timebase_TIM.c ****   *    this license. 
  27:Src/stm32f3xx_hal_timebase_TIM.c ****   *
  28:Src/stm32f3xx_hal_timebase_TIM.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  29:Src/stm32f3xx_hal_timebase_TIM.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  30:Src/stm32f3xx_hal_timebase_TIM.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  31:Src/stm32f3xx_hal_timebase_TIM.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  32:Src/stm32f3xx_hal_timebase_TIM.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  33:Src/stm32f3xx_hal_timebase_TIM.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  34:Src/stm32f3xx_hal_timebase_TIM.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  35:Src/stm32f3xx_hal_timebase_TIM.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  36:Src/stm32f3xx_hal_timebase_TIM.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  37:Src/stm32f3xx_hal_timebase_TIM.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  38:Src/stm32f3xx_hal_timebase_TIM.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  39:Src/stm32f3xx_hal_timebase_TIM.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  40:Src/stm32f3xx_hal_timebase_TIM.c ****   *
  41:Src/stm32f3xx_hal_timebase_TIM.c ****   ******************************************************************************
  42:Src/stm32f3xx_hal_timebase_TIM.c ****   */
  43:Src/stm32f3xx_hal_timebase_TIM.c **** 
  44:Src/stm32f3xx_hal_timebase_TIM.c **** /* Includes ------------------------------------------------------------------*/
  45:Src/stm32f3xx_hal_timebase_TIM.c **** #include "stm32f3xx_hal.h"
  46:Src/stm32f3xx_hal_timebase_TIM.c **** #include "stm32f3xx_hal_tim.h"
  47:Src/stm32f3xx_hal_timebase_TIM.c **** /** @addtogroup STM32F7xx_HAL_Examples
  48:Src/stm32f3xx_hal_timebase_TIM.c ****   * @{
  49:Src/stm32f3xx_hal_timebase_TIM.c ****   */
  50:Src/stm32f3xx_hal_timebase_TIM.c **** 
  51:Src/stm32f3xx_hal_timebase_TIM.c **** /** @addtogroup HAL_TimeBase
  52:Src/stm32f3xx_hal_timebase_TIM.c ****   * @{
  53:Src/stm32f3xx_hal_timebase_TIM.c ****   */ 
  54:Src/stm32f3xx_hal_timebase_TIM.c **** 
  55:Src/stm32f3xx_hal_timebase_TIM.c **** /* Private typedef -----------------------------------------------------------*/
  56:Src/stm32f3xx_hal_timebase_TIM.c **** /* Private define ------------------------------------------------------------*/
  57:Src/stm32f3xx_hal_timebase_TIM.c **** /* Private macro -------------------------------------------------------------*/
  58:Src/stm32f3xx_hal_timebase_TIM.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f3xx_hal_timebase_TIM.c **** TIM_HandleTypeDef        htim1; 
  60:Src/stm32f3xx_hal_timebase_TIM.c **** uint32_t                 uwIncrementState = 0;
  61:Src/stm32f3xx_hal_timebase_TIM.c **** /* Private function prototypes -----------------------------------------------*/
  62:Src/stm32f3xx_hal_timebase_TIM.c **** /* Private functions ---------------------------------------------------------*/
  63:Src/stm32f3xx_hal_timebase_TIM.c **** 
  64:Src/stm32f3xx_hal_timebase_TIM.c **** /**
  65:Src/stm32f3xx_hal_timebase_TIM.c ****   * @brief  This function configures the TIM1 as a time base source. 
  66:Src/stm32f3xx_hal_timebase_TIM.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  67:Src/stm32f3xx_hal_timebase_TIM.c ****   *         Tick interrupt priority. 
  68:Src/stm32f3xx_hal_timebase_TIM.c ****   * @note   This function is called  automatically at the beginning of program after
  69:Src/stm32f3xx_hal_timebase_TIM.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  70:Src/stm32f3xx_hal_timebase_TIM.c ****   * @param  TickPriority: Tick interrupt priorty.
  71:Src/stm32f3xx_hal_timebase_TIM.c ****   * @retval HAL status
  72:Src/stm32f3xx_hal_timebase_TIM.c ****   */
  73:Src/stm32f3xx_hal_timebase_TIM.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  74:Src/stm32f3xx_hal_timebase_TIM.c **** {
  37              		.loc 1 74 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 48
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccEhRfS9.s 			page 3


  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 8CB0     		sub	sp, sp, #48
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 56
  49 0004 00AF     		add	r7, sp, #0
  50              	.LCFI2:
  51              		.cfi_def_cfa_register 7
  52 0006 7860     		str	r0, [r7, #4]
  75:Src/stm32f3xx_hal_timebase_TIM.c ****   RCC_ClkInitTypeDef    clkconfig;
  76:Src/stm32f3xx_hal_timebase_TIM.c ****   uint32_t              uwTimclock = 0;
  53              		.loc 1 76 0
  54 0008 0023     		movs	r3, #0
  55 000a FB62     		str	r3, [r7, #44]
  77:Src/stm32f3xx_hal_timebase_TIM.c ****   uint32_t              uwPrescalerValue = 0;
  56              		.loc 1 77 0
  57 000c 0023     		movs	r3, #0
  58 000e BB62     		str	r3, [r7, #40]
  78:Src/stm32f3xx_hal_timebase_TIM.c ****   uint32_t              pFLatency;
  79:Src/stm32f3xx_hal_timebase_TIM.c ****   
  80:Src/stm32f3xx_hal_timebase_TIM.c ****   /*Configure the TIM1 IRQ priority */
  81:Src/stm32f3xx_hal_timebase_TIM.c ****   HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, TickPriority ,0); 
  59              		.loc 1 81 0
  60 0010 1920     		movs	r0, #25
  61 0012 7968     		ldr	r1, [r7, #4]
  62 0014 0022     		movs	r2, #0
  63 0016 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  82:Src/stm32f3xx_hal_timebase_TIM.c ****   
  83:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Enable the TIM1 global Interrupt */
  84:Src/stm32f3xx_hal_timebase_TIM.c ****   HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn); 
  64              		.loc 1 84 0
  65 001a 1920     		movs	r0, #25
  66 001c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  67              	.LBB2:
  85:Src/stm32f3xx_hal_timebase_TIM.c ****   
  86:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Enable TIM1 clock */
  87:Src/stm32f3xx_hal_timebase_TIM.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  68              		.loc 1 87 0
  69 0020 1E4A     		ldr	r2, .L5
  70 0022 1E4B     		ldr	r3, .L5
  71 0024 9B69     		ldr	r3, [r3, #24]
  72 0026 43F40063 		orr	r3, r3, #2048
  73 002a 9361     		str	r3, [r2, #24]
  74 002c 1B4B     		ldr	r3, .L5
  75 002e 9B69     		ldr	r3, [r3, #24]
  76 0030 03F40063 		and	r3, r3, #2048
  77 0034 FB60     		str	r3, [r7, #12]
  78 0036 FB68     		ldr	r3, [r7, #12]
  79              	.LBE2:
  88:Src/stm32f3xx_hal_timebase_TIM.c ****   
  89:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Get clock configuration */
  90:Src/stm32f3xx_hal_timebase_TIM.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  80              		.loc 1 90 0
  81 0038 07F11402 		add	r2, r7, #20
  82 003c 07F11003 		add	r3, r7, #16
  83 0040 1046     		mov	r0, r2
  84 0042 1946     		mov	r1, r3
ARM GAS  /tmp/ccEhRfS9.s 			page 4


  85 0044 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  91:Src/stm32f3xx_hal_timebase_TIM.c ****   
  92:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Compute TIM1 clock */
  93:Src/stm32f3xx_hal_timebase_TIM.c ****   uwTimclock = HAL_RCC_GetPCLK2Freq();
  86              		.loc 1 93 0
  87 0048 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
  88 004c F862     		str	r0, [r7, #44]
  94:Src/stm32f3xx_hal_timebase_TIM.c ****    
  95:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  96:Src/stm32f3xx_hal_timebase_TIM.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  89              		.loc 1 96 0
  90 004e FB6A     		ldr	r3, [r7, #44]
  91 0050 134A     		ldr	r2, .L5+4
  92 0052 A2FB0323 		umull	r2, r3, r2, r3
  93 0056 9B0C     		lsrs	r3, r3, #18
  94 0058 013B     		subs	r3, r3, #1
  95 005a BB62     		str	r3, [r7, #40]
  97:Src/stm32f3xx_hal_timebase_TIM.c ****   
  98:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Initialize TIM1 */
  99:Src/stm32f3xx_hal_timebase_TIM.c ****   htim1.Instance = TIM1;
  96              		.loc 1 99 0
  97 005c 114B     		ldr	r3, .L5+8
  98 005e 124A     		ldr	r2, .L5+12
  99 0060 1A60     		str	r2, [r3]
 100:Src/stm32f3xx_hal_timebase_TIM.c ****   
 101:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Initialize TIMx peripheral as follow:
 102:Src/stm32f3xx_hal_timebase_TIM.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
 103:Src/stm32f3xx_hal_timebase_TIM.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
 104:Src/stm32f3xx_hal_timebase_TIM.c ****   + ClockDivision = 0
 105:Src/stm32f3xx_hal_timebase_TIM.c ****   + Counter direction = Up
 106:Src/stm32f3xx_hal_timebase_TIM.c ****   */
 107:Src/stm32f3xx_hal_timebase_TIM.c ****   htim1.Init.Period = (1000000 / 1000) - 1;
 100              		.loc 1 107 0
 101 0062 104B     		ldr	r3, .L5+8
 102 0064 40F2E732 		movw	r2, #999
 103 0068 DA60     		str	r2, [r3, #12]
 108:Src/stm32f3xx_hal_timebase_TIM.c ****   htim1.Init.Prescaler = uwPrescalerValue;
 104              		.loc 1 108 0
 105 006a 0E4A     		ldr	r2, .L5+8
 106 006c BB6A     		ldr	r3, [r7, #40]
 107 006e 5360     		str	r3, [r2, #4]
 109:Src/stm32f3xx_hal_timebase_TIM.c ****   htim1.Init.ClockDivision = 0;
 108              		.loc 1 109 0
 109 0070 0C4B     		ldr	r3, .L5+8
 110 0072 0022     		movs	r2, #0
 111 0074 1A61     		str	r2, [r3, #16]
 110:Src/stm32f3xx_hal_timebase_TIM.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 112              		.loc 1 110 0
 113 0076 0B4B     		ldr	r3, .L5+8
 114 0078 0022     		movs	r2, #0
 115 007a 9A60     		str	r2, [r3, #8]
 111:Src/stm32f3xx_hal_timebase_TIM.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
 116              		.loc 1 111 0
 117 007c 0948     		ldr	r0, .L5+8
 118 007e FFF7FEFF 		bl	HAL_TIM_Base_Init
 119 0082 0346     		mov	r3, r0
 120 0084 002B     		cmp	r3, #0
ARM GAS  /tmp/ccEhRfS9.s 			page 5


 121 0086 04D1     		bne	.L2
 112:Src/stm32f3xx_hal_timebase_TIM.c ****   {
 113:Src/stm32f3xx_hal_timebase_TIM.c ****     /* Start the TIM time Base generation in interrupt mode */
 114:Src/stm32f3xx_hal_timebase_TIM.c ****     return HAL_TIM_Base_Start_IT(&htim1);
 122              		.loc 1 114 0
 123 0088 0648     		ldr	r0, .L5+8
 124 008a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 125 008e 0346     		mov	r3, r0
 126 0090 00E0     		b	.L4
 127              	.L2:
 115:Src/stm32f3xx_hal_timebase_TIM.c ****   }
 116:Src/stm32f3xx_hal_timebase_TIM.c ****   
 117:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Return function status */
 118:Src/stm32f3xx_hal_timebase_TIM.c ****   return HAL_ERROR;
 128              		.loc 1 118 0
 129 0092 0123     		movs	r3, #1
 130              	.L4:
 119:Src/stm32f3xx_hal_timebase_TIM.c **** }
 131              		.loc 1 119 0 discriminator 1
 132 0094 1846     		mov	r0, r3
 133 0096 3037     		adds	r7, r7, #48
 134              	.LCFI3:
 135              		.cfi_def_cfa_offset 8
 136 0098 BD46     		mov	sp, r7
 137              	.LCFI4:
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 009a 80BD     		pop	{r7, pc}
 141              	.L6:
 142              		.align	2
 143              	.L5:
 144 009c 00100240 		.word	1073876992
 145 00a0 83DE1B43 		.word	1125899907
 146 00a4 00000000 		.word	htim1
 147 00a8 002C0140 		.word	1073818624
 148              		.cfi_endproc
 149              	.LFE123:
 151              		.section	.text.HAL_SuspendTick,"ax",%progbits
 152              		.align	2
 153              		.global	HAL_SuspendTick
 154              		.thumb
 155              		.thumb_func
 157              	HAL_SuspendTick:
 158              	.LFB124:
 120:Src/stm32f3xx_hal_timebase_TIM.c **** 
 121:Src/stm32f3xx_hal_timebase_TIM.c **** /**
 122:Src/stm32f3xx_hal_timebase_TIM.c ****   * @brief  Suspend Tick increment.
 123:Src/stm32f3xx_hal_timebase_TIM.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
 124:Src/stm32f3xx_hal_timebase_TIM.c ****   * @param  None
 125:Src/stm32f3xx_hal_timebase_TIM.c ****   * @retval None
 126:Src/stm32f3xx_hal_timebase_TIM.c ****   */
 127:Src/stm32f3xx_hal_timebase_TIM.c **** void HAL_SuspendTick(void)
 128:Src/stm32f3xx_hal_timebase_TIM.c **** {
 159              		.loc 1 128 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccEhRfS9.s 			page 6


 163              		@ link register save eliminated.
 164 0000 80B4     		push	{r7}
 165              	.LCFI5:
 166              		.cfi_def_cfa_offset 4
 167              		.cfi_offset 7, -4
 168 0002 00AF     		add	r7, sp, #0
 169              	.LCFI6:
 170              		.cfi_def_cfa_register 7
 129:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Disable TIM1 update Interrupt */
 130:Src/stm32f3xx_hal_timebase_TIM.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);                                                  
 171              		.loc 1 130 0
 172 0004 054B     		ldr	r3, .L8
 173 0006 1B68     		ldr	r3, [r3]
 174 0008 044A     		ldr	r2, .L8
 175 000a 1268     		ldr	r2, [r2]
 176 000c D268     		ldr	r2, [r2, #12]
 177 000e 22F00102 		bic	r2, r2, #1
 178 0012 DA60     		str	r2, [r3, #12]
 131:Src/stm32f3xx_hal_timebase_TIM.c **** }
 179              		.loc 1 131 0
 180 0014 BD46     		mov	sp, r7
 181              	.LCFI7:
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 0016 5DF8047B 		ldr	r7, [sp], #4
 185              	.LCFI8:
 186              		.cfi_restore 7
 187              		.cfi_def_cfa_offset 0
 188 001a 7047     		bx	lr
 189              	.L9:
 190              		.align	2
 191              	.L8:
 192 001c 00000000 		.word	htim1
 193              		.cfi_endproc
 194              	.LFE124:
 196              		.section	.text.HAL_ResumeTick,"ax",%progbits
 197              		.align	2
 198              		.global	HAL_ResumeTick
 199              		.thumb
 200              		.thumb_func
 202              	HAL_ResumeTick:
 203              	.LFB125:
 132:Src/stm32f3xx_hal_timebase_TIM.c **** 
 133:Src/stm32f3xx_hal_timebase_TIM.c **** /**
 134:Src/stm32f3xx_hal_timebase_TIM.c ****   * @brief  Resume Tick increment.
 135:Src/stm32f3xx_hal_timebase_TIM.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 136:Src/stm32f3xx_hal_timebase_TIM.c ****   * @param  None
 137:Src/stm32f3xx_hal_timebase_TIM.c ****   * @retval None
 138:Src/stm32f3xx_hal_timebase_TIM.c ****   */
 139:Src/stm32f3xx_hal_timebase_TIM.c **** void HAL_ResumeTick(void)
 140:Src/stm32f3xx_hal_timebase_TIM.c **** {
 204              		.loc 1 140 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccEhRfS9.s 			page 7


 210              	.LCFI9:
 211              		.cfi_def_cfa_offset 4
 212              		.cfi_offset 7, -4
 213 0002 00AF     		add	r7, sp, #0
 214              	.LCFI10:
 215              		.cfi_def_cfa_register 7
 141:Src/stm32f3xx_hal_timebase_TIM.c ****   /* Enable TIM1 Update interrupt */
 142:Src/stm32f3xx_hal_timebase_TIM.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 216              		.loc 1 142 0
 217 0004 054B     		ldr	r3, .L11
 218 0006 1B68     		ldr	r3, [r3]
 219 0008 044A     		ldr	r2, .L11
 220 000a 1268     		ldr	r2, [r2]
 221 000c D268     		ldr	r2, [r2, #12]
 222 000e 42F00102 		orr	r2, r2, #1
 223 0012 DA60     		str	r2, [r3, #12]
 143:Src/stm32f3xx_hal_timebase_TIM.c **** }
 224              		.loc 1 143 0
 225 0014 BD46     		mov	sp, r7
 226              	.LCFI11:
 227              		.cfi_def_cfa_register 13
 228              		@ sp needed
 229 0016 5DF8047B 		ldr	r7, [sp], #4
 230              	.LCFI12:
 231              		.cfi_restore 7
 232              		.cfi_def_cfa_offset 0
 233 001a 7047     		bx	lr
 234              	.L12:
 235              		.align	2
 236              	.L11:
 237 001c 00000000 		.word	htim1
 238              		.cfi_endproc
 239              	.LFE125:
 241              		.text
 242              	.Letext0:
 243              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 244              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 245              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 246              		.file 5 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 247              		.file 6 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 248              		.file 7 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 249              		.file 8 "../../Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 250              		.file 9 "../../Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccEhRfS9.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_timebase_TIM.c
                            *COM*:0000000000000040 htim1
     /tmp/ccEhRfS9.s:26     .bss.uwIncrementState:0000000000000000 uwIncrementState
     /tmp/ccEhRfS9.s:23     .bss.uwIncrementState:0000000000000000 $d
     /tmp/ccEhRfS9.s:29     .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccEhRfS9.s:34     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccEhRfS9.s:144    .text.HAL_InitTick:000000000000009c $d
     /tmp/ccEhRfS9.s:152    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccEhRfS9.s:157    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccEhRfS9.s:192    .text.HAL_SuspendTick:000000000000001c $d
     /tmp/ccEhRfS9.s:197    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccEhRfS9.s:202    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccEhRfS9.s:237    .text.HAL_ResumeTick:000000000000001c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK2Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
